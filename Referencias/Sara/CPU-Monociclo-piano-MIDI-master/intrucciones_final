OPERACIONES DE LA CPU MONOCICLO:
ALU         → <registrodestino:4><registro_op:4><registro_op:4><opcode:4>xx0xxx
CARGA       → <registro:4><valor_cte:8><opcode:4>xx1000      #valor_cte = inmediato
SALTO ABS   → <direccion_a_saltar:10><opcode:6>001001
SALTO COND(==0) → <direccion_a_saltar:10><opcode:6>001010
SALTO COND(!=0) → <direccion_a_saltar:10><opcode:6>001011

SALIDA MEM PRG      → <inmediato:8><puerto:2><libre:2><opcode:4>xx1100
SALIDA REGISTRO     → <libre:4><reg_origen:4><puerto:2><opcode:6>001110 //las direcciones de reg. entran en RA2
ENTRADA A REGISTRO  → <reg_destino:4><libre:4><puerto:2><opcode:6>011110    //
FIN - <opcode:6>111111
 

// CONTADOR DE UNOS CON CONVERSION 7-SEG

0001000000011000    // 0.) LOAD 1 en R1
0100000000001000    // 1.) LOAD 0 en R4
0011000000011110    // 2.) Entrada del Puerto 0 a R3
0101001100010100    // 3.) R3 & R1 → R5 ; valor & 1 y guardamos el resultado
0100010101000010    // 4.) R5 + R4 → R4
0011000000110111    // 5.) SHIFT R3 → R3
0110000000110011    // 6.) R3 - R0 → R6
0000000011001011    // 7.) if Z != 0 JUMP to 3.) ; salto condicional
                    // case0(0) 
1001000000001000    // 8.) LOAD 0 → R9
1000010010010011    // 9.) SUB R4 <contador> - 0 (r9) → R8
0000001111001011    // 10.) if Z != 0 JUMP to case2 (15)
1100000010001100    // 11.) else Salida de 1000000 <0 en 7-seg> por el Puerto 2
0000001101001001    // 12.) NOP
1000000011001100    // 13.) Salida de 0000000 <8 en 7-seg> por puerto 3
0000000000001001    // 14.) Salto Absoluto a 0
                    // case1(1) 
1000000000011000    // 15.) LOAD 1 → R8
1000010010000011    // 16.) SUB R4 <contador> - 1 → R8
0000010110001011    // 17.) if Z != 0 JUMP to case3 (22)
1111100110001100    // 18.)else Salida de 1111001 <1 en 7-seg> por el Puerto 2
0000010100001001    // 19.)	
1111100011001100    // 20.)Salida de 1111000 <7 en 7-seg> por puerto 3
0000000000001001    // 21.) Salto Absoluto a 0
                    // case2(2) 
1000000000101000    // 22.) LOAD 2 → R8
1000010010000011    // 23.) SUB R4 <contador> - 2 → R8
0000011101001011    // 24.) if Z != 0 JUMP to case4 (29)
1010010010001100    // 25.) else Salida de 0100100 <2 en 7-seg> por el Puerto 2
0000011011001001		     // 26.)
1000001011001100    // 27.) Salida de 0000010 <6 en 7-seg> por puerto 3
0000000000001001    // 28.) Salto Absoluto a 0
                    // case3(3) 
1000000000111000    // 29.) LOAD 3 → R8
1000010010000011    // 30.) SUB R4 <contador> - 3 → R8
0000100100001011    // 31.) if Z != 0 JUMP to case5 (36)
1011000010001100    // 32.) else Salida de 0110000 <3 en 7-seg> por el Puerto 2
0001000100010010    // 33.)
1001001011001100    // 34.) Salida de 0010010 <5 en 7-seg> por puerto 3
0000000000001001    // 35.) Salto Absoluto a 0
                    // case4(4) 
1000000001001000    // 36.) LOAD 4 → R8
1000010010000011    // 37.) SUB R4 <contador> - 4 → R8
0000101011001011    // 38.) if Z != 0 JUMP to case6 (43)
1001100110001100    // 39.) else Salida de 0011001 <4 en 7-seg> por el Puerto 2
0000101001001001    // 40.) 
1001100111001100    // 41.) Salida de 0011001 <4 en 7-seg> por puerto 3
0000000000001001    // 42.) Salto Absoluto a 0
                    // case5(5) 
1000000001011000    // 43.) LOAD 5 → R8
1000010010000011    // 44.) SUB R4 <contador> - 5 → R8
0000110010001011    // 45.) if Z != 0 JUMP to case7 (50)
1001001010001100    // 46.) else Salida de 0010010 <5 en 7-seg> por el Puerto 2
0000110000001001    // 47.) 
1011000011001100    // 48.) Salida de 0110000 <3 en 7-seg> por puerto 3
0000000000001001    // 49.) Salto Absoluto a 0
                    // case6(6) 
1000000001101000    // 50.) LOAD 6 → R8
1000010010000011    // 51.) SUB R4 <contador> - 6 → R8
0000111001001011    // 52.) if Z != 0 JUMP to case8 (57)
1000001010001100    // 53.) else Salida de 0000010 <6 en 7-seg> por el Puerto 2
0000110111001001    // 54.) 
1010010011001100    // 55.) Salida de 0100100 <2 en 7-seg> por puerto 3
0000000000001001    // 56.) Salto Absoluto a 0
                    // case7(7) 
1000000001111000    // 57.) LOAD 7 → R8
1000010010000011    // 58.) SUB R4 <contador> - 7 → R8
0001000000001011    // 59.) if Z != 0 JUMP to case9 (64)
1111100010001100    // 60.) else Salida de 1111000 <7 en 7-seg> por el Puerto 2
0000111110001001    // 61.) 
1111100111001100    // 62.) Salida de 1111001 <1 en 7-seg> por puerto 3
0000000000001001    // 63.) Salto Absoluto a 0
                    // case8(8) 
1000000010001000    // 64.) LOAD 8 → R8
1000010010000011    // 65.) SUB R4 <contador> - 8 → R8
0000000000001011    // 66.) if Z != 0 JUMP to (0)
1000000010001100    // 67.) else Salida de 0000000 <8 en 7-seg> por el Puerto 2
0001000101001001    // 68.) 
1100000011001100    // 69.) Salida de 1000000 <0 en 7-seg> por puerto 3
0000000000001001    // 70.) Salto Absoluto a 0
