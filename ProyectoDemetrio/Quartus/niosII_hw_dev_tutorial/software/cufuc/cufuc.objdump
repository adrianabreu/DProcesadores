
cufuc.elf:     file format elf32-littlenios2
cufuc.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x01000194

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x01000000 align 2**12
         filesz 0x00000194 memsz 0x00000194 flags r-x
    LOAD off    0x00002194 vaddr 0x01000194 paddr 0x01000194 align 2**12
         filesz 0x00013988 memsz 0x00013988 flags r-x
    LOAD off    0x00015b1c vaddr 0x01013b1c paddr 0x010145e0 align 2**12
         filesz 0x00000ac4 memsz 0x00000ac4 flags rw-
    LOAD off    0x000170a4 vaddr 0x010150a4 paddr 0x010150a4 align 2**12
         filesz 0x00000000 memsz 0x00000264 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000194  00000020  01000000  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0001310c  01000194  01000194  00002194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000087c  010132a0  010132a0  000152a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00000ac4  01013b1c  010145e0  00015b1c  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000264  010150a4  010150a4  000170a4  2**2
                  ALLOC, SMALL_DATA
  6 .comment      00000026  00000000  00000000  000165e0  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 000010f8  00000000  00000000  00016608  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 0000197c  00000000  00000000  00017700  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00034579  00000000  00000000  0001907c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000af30  00000000  00000000  0004d5f5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0001c63d  00000000  00000000  00058525  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000021cc  00000000  00000000  00074b64  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00002e62  00000000  00000000  00076d30  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    000126b1  00000000  00000000  00079b92  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000020  00000000  00000000  0008c244  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000ba0  00000000  00000000  0008c268  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0009083d  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  00090840  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00090843  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00090844  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  00090845  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  00090849  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0009084d  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  00090851  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  0009085a  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  00090863  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000012  00000000  00000000  0009086c  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000023  00000000  00000000  0009087e  2**0
                  CONTENTS, READONLY
 29 .jdi          000055f2  00000000  00000000  000908a1  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     00045535  00000000  00000000  00095e93  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
01000194 l    d  .text	00000000 .text
010132a0 l    d  .rodata	00000000 .rodata
01013b1c l    d  .rwdata	00000000 .rwdata
010150a4 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
010001cc l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
01000f58 l     F .text	0000007c udivmodsi4
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 calloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
010016b8 l     F .text	00000058 std
010017c4 l     F .text	00000008 __fp_lock
010017cc l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fscanf.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 impure.c
01013b1c l     O .rwdata	00000400 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
010037d4 l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 sscanf.c
01003860 l     F .text	00000008 eofread
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
01003c24 l     F .text	00000058 __sprint_r
0101354a l     O .rodata	00000010 blanks.3452
0101353a l     O .rodata	00000010 zeroes.3453
00000000 l    df *ABS*	00000000 vfscanf.c
01013562 l     O .rodata	00000022 basefix.3357
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
010074a0 l     F .text	00000004 register_fini
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
01013685 l     O .rodata	00000180 _ctype_b
00000000 l    df *ABS*	00000000 dtoa.c
010076c4 l     F .text	00000244 quorem
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 iswspace.c
00000000 l    df *ABS*	00000000 locale.c
0101456c l     O .rwdata	00000004 charset
01013828 l     O .rodata	00000030 lconv
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbrtowc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
01013970 l     O .rodata	0000000c p05.2458
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_isinfd.c
00000000 l    df *ABS*	00000000 s_isnand.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strtod.c
0100b170 l     F .text	00000048 match
01014344 l     O .rwdata	00000014 fpi.1950
0101398c l     O .rodata	00000028 tinytens
01014330 l     O .rwdata	00000014 fpinan.1986
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 strtoll_r.c
00000000 l    df *ABS*	00000000 strtoul.c
00000000 l    df *ABS*	00000000 strtoull_r.c
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
0100d638 l     F .text	00000024 htinit
0100d6c4 l     F .text	000000b0 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
0100df70 l     F .text	0000004c L_shift
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
0100f200 l     F .text	00000410 _fpadd_parts
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 alt_close.c
01010db8 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
01010e18 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
01010e44 l     F .text	00000040 alt_sim_halt
00000000 l    df *ABS*	00000000 alt_fstat.c
01010f7c l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
010110a0 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
01011180 l     F .text	0000006c alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
010112e0 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_open.c
010113dc l     F .text	000000f8 alt_file_locked
01011660 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_read.c
010117e4 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
01014588 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
01011a9c l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
01014500 l     O .rwdata	0000002c jtag_uart
0101452c l     O .rwdata	00000028 altera_hostfs
01011ba4 l     F .text	00000038 alt_dev_reg
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
01011e34 l     F .text	00000070 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_avalon_timer_ts.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_vars.c
00000000 l    df *ABS*	00000000 altera_hostfs.c
0101458c l     O .rwdata	00000004 hcinfo.2234
01014598 l     O .rwdata	00000004 hcinfo.2276
010145a4 l     O .rwdata	00000004 hcinfo.2289
010145b0 l     O .rwdata	00000004 hcinfo.2311
010145bc l     O .rwdata	00000004 hcinfo.2333
010145c8 l     O .rwdata	00000004 hcinfo.2368
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
01012814 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_fs_reg.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
01012e84 l     F .text	000000d8 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 memcmp.c
01009bbc g     F .text	00000094 _mprec_log10
01009ca8 g     F .text	00000088 __any_on
010093f8 g     F .text	00000070 _isatty_r
01013948 g     O .rodata	00000028 __mprec_tinytens
01011340 g     F .text	0000005c alt_main
0100355c g     F .text	000000a0 _puts_r
01015208 g     O .bss	00000100 alt_irq
01009558 g     F .text	00000078 _lseek_r
01000998 g     F .text	00000170 rellenar_filtro
010145e0 g       *ABS*	00000000 __flash_rwdata_start
01008ebc g     F .text	000000a0 __sflags
0100fd20 g     F .text	00000088 __eqdf2
01015308 g       *ABS*	00000000 __alt_heap_start
010034e4 g     F .text	00000044 printf
01000618 g     F .text	00000338 pgmwrite
00100000 g       *ABS*	00000000 __alt_mem_sram
0100397c g     F .text	00000068 __sseek
01001720 g     F .text	000000a4 __sinit
010094b8 g     F .text	00000084 _setlocale_r
01001820 g     F .text	0000009c __sfmoreglue
0100d61c g     F .text	0000001c ungetc
010113bc g     F .text	00000020 __malloc_unlock
010121a4 g     F .text	00000154 alt_hostfs_open
0100b1b8 g     F .text	000015cc _strtod_r
010150d0 g     O .bss	00000004 altera_avalon_timer_ts_freq
010096d0 g     F .text	000000e0 memmove
01001810 g     F .text	00000010 _cleanup
01009d30 g     F .text	000000bc _Balloc
0100fe30 g     F .text	00000088 __gtdf2
00000000  w      *UND*	00000000 __errno
00000000 g     F .entry	0000001c __reset
01000000 g       *ABS*	00000000 __flash_exceptions_start
01002674 g     F .text	00000074 _fstat_r
010150a4 g     O .bss	00000004 errno
010071ec g     F .text	00000024 __svfscanf
01010618 g     F .text	0000002c __make_fp
010150c4 g     O .bss	00000004 alt_argv
0101c554 g       *ABS*	00000000 _gp
01000b08 g     F .text	00000150 valornewpixel
010021d0 g     F .text	00000044 fscanf
01001694 g     F .text	00000024 fgets
01000c58 g     F .text	000000cc aplicarfiltro
01014380 g     O .rwdata	00000180 alt_fd_list
0101248c g     F .text	000000a0 alt_hostfs_seek
01012874 g     F .text	00000094 alt_find_dev
01003334 g     F .text	000000a0 memcpy
0100dfbc g     F .text	00000248 __hexnan
01000950 g     F .text	00000048 pos
01001804 g     F .text	0000000c _cleanup_r
01010050 g     F .text	000000f8 __floatsidf
01012a28 g     F .text	00000090 alt_fs_reg
01012f5c g     F .text	00000078 alt_io_redirect
0100ff40 g     F .text	00000088 __ltdf2
010035fc g     F .text	00000014 puts
01009650 g     F .text	00000040 mbrtowc
01007210 g     F .text	00000068 _vfscanf_r
01009b0c g     F .text	000000b0 __ratio
01011c8c g     F .text	00000104 altera_avalon_jtag_uart_read
01002afc g     F .text	00000014 malloc
01003528 g     F .text	00000034 _printf_r
01001094 g     F .text	00000008 __udivsi3
01010fdc g     F .text	000000c4 isatty
01009468 g     F .text	0000002c iswspace
01013858 g     O .rodata	000000c8 __mprec_tens
01009494 g     F .text	00000008 __locale_charset
0100e328 g     F .text	000000a4 __fixunsdfsi
01013198 g     F .text	00000090 alt_icache_flush
010150a8 g     O .bss	00000004 __malloc_top_pad
0100d090 g     F .text	00000024 strtoul
01014568 g     O .rwdata	00000004 __mb_cur_max
0100949c g     F .text	0000000c _localeconv_r
0100d0b4 g     F .text	000002f0 _strtoull_r
0100a494 g     F .text	0000003c __i2b
01008f5c g     F .text	0000049c __sfvwrite_r
010037f0 g     F .text	00000070 _sbrk_r
0101234c g     F .text	000000a0 alt_hostfs_read
0100a83c g     F .text	00000078 _read_r
01014324 g     O .rwdata	0000000c __lc_ctype
01014580 g     O .rwdata	00000004 alt_max_fd
01010958 g     F .text	00000138 __unpack_d
010011f8 g     F .text	00000110 _fclose_r
01001518 g     F .text	00000034 fflush
010150ac g     O .bss	00000004 __malloc_max_sbrked_mem
0100f690 g     F .text	00000074 __adddf3
0100f098 g     F .text	00000078 __nesf2
010099ec g     F .text	00000120 __b2d
0100ea38 g     F .text	00000660 __umoddi3
010111ec g     F .text	000000f4 lseek
01014558 g     O .rwdata	00000004 _global_impure_ptr
0100a8b4 g     F .text	000005f4 _realloc_r
01015308 g       *ABS*	00000000 __bss_end
01012d8c g     F .text	000000f8 alt_iic_isr_register
0101306c g     F .text	0000010c alt_tick
01015108 g     O .bss	00000100 __hexdig
0100e3cc g     F .text	0000066c __udivdi3
01013920 g     O .rodata	00000028 __mprec_bigtens
0100a71c g     F .text	00000120 __s2b
01010294 g     F .text	00000194 __floatunsidf
0100990c g     F .text	00000060 __mcmp
01014564 g     O .rwdata	00000004 __ctype_ptr
010017ec g     F .text	00000018 __fp_lock_all
01012d44 g     F .text	00000048 alt_ic_irq_enabled
01012fd4 g     F .text	00000098 alt_alarm_stop
0100cb14 g     F .text	00000024 strtol
010150d4 g     O .bss	00000004 alt_irq_active
010122f8 g     F .text	00000054 alt_hostfs_close
00000000 g       *ABS*	00000000 __alt_mem_onchip_mem
000000ec g     F .exceptions	000000c8 alt_irq_handler
01014358 g     O .rwdata	00000028 alt_dev_null
010104a8 g     F .text	000000c8 __unpack_f
01012744 g     F .text	0000001c alt_dcache_flush_all
010097d8 g     F .text	00000070 __hi0bits
01010148 g     F .text	000000d8 __fixdfsi
010010dc g     F .text	0000001c calloc
0100c8a8 g     F .text	0000001c strtod
010145e0 g       *ABS*	00000000 __ram_rwdata_end
01014578 g     O .rwdata	00000008 alt_dev_list
01011978 g     F .text	00000124 write
0101217c g     F .text	00000028 alt_timestamp_freq
0100f110 g     F .text	00000078 __gtsf2
01013b1c g       *ABS*	00000000 __ram_rodata_end
01010ea4 g     F .text	000000d8 fstat
01001abc g     F .text	0000002c fprintf
0100ffc8 g     F .text	00000088 __ledf2
0100a5fc g     F .text	00000120 __pow5mult
010150b4 g     O .bss	00000004 __nlocale_changed
0100109c g     F .text	00000008 __umodsi3
01015308 g       *ABS*	00000000 end
01010b58 g     F .text	00000160 __pack_f
01002650 g     F .text	00000024 fseek
01800000 g       *ABS*	00000000 __alt_stack_pointer
01011ea4 g     F .text	00000090 alt_avalon_timer_sc_init
01010428 g     F .text	00000080 __clzsi2
01011d90 g     F .text	000000a4 altera_avalon_jtag_uart_write
01001710 g     F .text	00000004 __sfp_lock_acquire
01003250 g     F .text	000000e4 memchr
01000d24 g     F .text	000001ac func1
01003c7c g     F .text	00001ec4 ___vfprintf_internal_r
0100b054 g     F .text	00000060 _sprintf_r
01001e94 g     F .text	00000314 _free_r
010074a4 g     F .text	000001b0 __call_exitprocs
010150b8 g     O .bss	00000004 __mlocale_changed
01014560 g     O .rwdata	00000004 __malloc_sbrk_base
01000194 g     F .text	0000003c _start
010150d8 g     O .bss	00000004 _alt_tick_rate
0100cb38 g     F .text	00000318 _strtoll_r
0100a0f4 g     F .text	0000014c __lshift
010150dc g     O .bss	00000004 _alt_nticks
010116c0 g     F .text	00000124 read
01011b30 g     F .text	00000074 alt_sys_init
0100346c g     F .text	00000078 _open_r
01003b34 g     F .text	000000f0 strncmp
0100a240 g     F .text	00000254 __multiply
010010a4 g     F .text	00000038 __mulsi3
01013b1c g       *ABS*	00000000 __ram_rwdata_start
010132a0 g       *ABS*	00000000 __ram_rodata_start
010150e0 g     O .bss	00000028 __malloc_current_mallinfo
01009dec g     F .text	0000017c __d2b
01011bdc g     F .text	00000058 altera_avalon_jtag_uart_read_fd
0100ce50 g     F .text	00000240 _strtoul_r
01012ab8 g     F .text	000000d0 alt_get_fd
01010a90 g     F .text	000000c8 __fpcmp_parts_d
01007654 g     F .text	00000070 _close_r
01013228 g     F .text	00000074 memcmp
01015308 g       *ABS*	00000000 __alt_stack_base
01002868 g     F .text	000000ac _fwrite_r
010038f0 g     F .text	00000084 sscanf
01007364 g     F .text	0000013c __swsetup_r
0100fac8 g     F .text	00000258 __divdf3
010018bc g     F .text	000000f0 __sfp
01009c50 g     F .text	00000058 __copybits
01013f1c g     O .rwdata	00000408 __malloc_av_
0100171c g     F .text	00000004 __sinit_lock_release
0100f704 g     F .text	000003c4 __muldf3
01003a60 g     F .text	00000060 __sread
01001d28 g     F .text	00000040 fread
01012908 g     F .text	00000120 alt_find_file
01012760 g     F .text	000000b4 alt_dev_llist_insert
0101139c g     F .text	00000020 __malloc_lock
01001ae8 g     F .text	00000034 _fprintf_r
010118bc g     F .text	000000bc sbrk
0100131c g     F .text	000001fc _fflush_r
010010f8 g     F .text	000000c8 _calloc_r
01001aa0 g     F .text	0000001c fopen
010150a4 g       *ABS*	00000000 __bss_start
010021a8 g     F .text	00000028 _fscanf_r
010033d4 g     F .text	00000098 memset
01000ed0 g     F .text	00000088 main
010150c8 g     O .bss	00000004 alt_envp
010150b0 g     O .bss	00000004 __malloc_max_total_mem
01011c34 g     F .text	00000058 altera_avalon_jtag_uart_write_fd
0100f188 g     F .text	00000078 __ltsf2
01001b1c g     F .text	0000020c _fread_r
010001d0 g     F .text	00000448 pgmread
01003974 g     F .text	00000008 __sclose
01800000 g       *ABS*	00000000 __alt_heap_limit
01001308 g     F .text	00000014 fclose
0100c8c4 g     F .text	00000250 _strtol_r
01010220 g     F .text	00000074 __truncdfsf2
01011f34 g     F .text	000000cc alt_timestamp_start
01007908 g     F .text	000015b4 _dtoa_r
01002b10 g     F .text	00000740 _malloc_r
01014584 g     O .rwdata	00000004 alt_errno
0100d3a4 g     F .text	000000dc __submore
010027b0 g     F .text	000000b8 _fwalk
0100154c g     F .text	00000148 _fgets_r
01009690 g     F .text	00000040 _mbtowc_r
01000fd4 g     F .text	00000060 __divsi3
010139d0 g     O .rodata	00000014 __thenan_df
01001d68 g     F .text	0000012c _malloc_trim_r
0100b0b4 g     F .text	000000bc strcmp
010132a0 g       *ABS*	00000000 __flash_rodata_start
0100fda8 g     F .text	00000088 __nedf2
01011afc g     F .text	00000034 alt_irq_init
01011844 g     F .text	00000078 alt_release_fd
0100afe0 g     F .text	00000074 sprintf
010139e4 g     O .rodata	00000100 __clz_tab
010150bc g     O .bss	00000004 _PathLocale
0100c784 g     F .text	00000124 strtof
010072ec g     F .text	00000078 _write_r
0100953c g     F .text	0000001c setlocale
0100afd8 g     F .text	00000008 nanf
01014554 g     O .rwdata	00000004 _impure_ptr
010150c0 g     O .bss	00000004 alt_argc
010095d0 g     F .text	00000080 _mbrtowc_r
010150cc g     O .bss	00000004 altera_avalon_timer_ts_base
01002214 g     F .text	0000043c _fseek_r
01003610 g     F .text	000001c4 __srefill_r
00000020 g       .exceptions	00000000 alt_irq_entry
0100996c g     F .text	00000080 __ulp
0100aea8 g     F .text	00000040 __isinfd
010017d4 g     F .text	00000018 __fp_unlock_all
01014570 g     O .rwdata	00000008 alt_fs_list
010123ec g     F .text	000000a0 alt_hostfs_write
00000020 g       *ABS*	00000000 __ram_exceptions_start
010094a8 g     F .text	00000010 localeconv
01012000 g     F .text	0000017c alt_timestamp
01012bb8 g     F .text	00000050 alt_ic_isr_register
01002914 g     F .text	00000040 fwrite
0100d65c g     F .text	00000068 __hexdig_init
01003868 g     F .text	00000088 _sscanf_r
010145e0 g       *ABS*	00000000 _edata
01015308 g       *ABS*	00000000 _end
000001b4 g       *ABS*	00000000 __ram_exceptions_end
01007278 g     F .text	00000074 vfscanf
01012ca4 g     F .text	000000a0 alt_ic_irq_disable
010039e4 g     F .text	0000007c __swrite
0101455c g     O .rwdata	00000004 __malloc_trim_threshold
01013178 g     F .text	00000020 altera_nios2_qsys_irq_init
010011c0 g     F .text	00000038 exit
010026e8 g     F .text	000000c8 _fwalk_reent
01009f68 g     F .text	0000018c __mdiff
01001034 g     F .text	00000060 __modsi3
01800000 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
01001714 g     F .text	00000004 __sfp_lock_release
01000000 g       *ABS*	00000000 __alt_mem_sdram
0100af18 g     F .text	000000c0 __sccl
01013584 g     O .rodata	00000101 _ctype_
01010570 g     F .text	000000a8 __fpcmp_parts_f
010019ac g     F .text	000000f4 _fopen_r
0100aee8 g     F .text	00000030 __isnand
01010e84 g     F .text	00000020 _exit
0100e204 g     F .text	00000124 __muldi3
01002954 g     F .text	00000194 __smakebuf_r
01003ac0 g     F .text	00000074 strlen
010114d4 g     F .text	0000018c open
0100feb8 g     F .text	00000088 __gedf2
0100d774 g     F .text	000007fc __gethex
01012b88 g     F .text	00000030 alt_icache_flush_all
010145d4 g     O .rwdata	00000004 alt_priority_mask
01012c08 g     F .text	0000009c alt_ic_irq_enable
01005b40 g     F .text	00000024 __vfprintf_internal
0100f610 g     F .text	00000080 __subdf3
01009848 g     F .text	000000c4 __lo0bits
01005b64 g     F .text	00001688 __svfscanf_r
010145d8 g     O .rwdata	00000008 alt_alarm_list
0100d480 g     F .text	0000019c _ungetc_r
01010cb8 g     F .text	00000100 close
01011100 g     F .text	00000080 alt_load
01010644 g     F .text	00000314 __pack_d
01002ae8 g     F .text	00000014 free
01001718 g     F .text	00000004 __sinit_lock_acquire
0100a4d0 g     F .text	0000012c __multadd
010097b0 g     F .text	00000028 _Bfree
0101252c g     F .text	00000218 alt_hostfs_fstat



Disassembly of section .entry:

00000000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && !defined(ALT_SIM_OPTIMIZE)
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   0:	00820014 	movui	r2,2048
#endif

0:
    initi r2
   4:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   8:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   c:	00bffd16 	blt	zero,r2,4 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  10:	00404034 	movhi	at,256
    ori r1, r1, %lo(_start)
  14:	08406514 	ori	at,at,404
    jmp r1
  18:	0800683a 	jmp	at
  1c:	00000000 	call	0 <__reset>

Disassembly of section .exceptions:

00000020 <alt_exception>:
         * Process an exception.  For all exceptions we must preserve all
         * caller saved registers on the stack (See the Nios2 ABI
         * documentation for details).
         */

        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76

#endif

#endif

        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        /*
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */

        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)

        rdctl r5, estatus
  44:	000b307a 	rdctl	r5,estatus

        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000ec0 	call	ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000306 	br	98 <alt_exception+0x78>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
  8c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
  94:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  98:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  9c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  c0:	d9c00817 	ldw	r7,32(sp)
#ifdef ALT_STACK_CHECK
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif
#endif

        ldw   r8,  36(sp)
  c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  e0:	dbc01017 	ldw	r15,64(sp)
#endif

        ldw   sp,  76(sp)

#else
        addi  sp, sp, 76
  e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  e8:	ef80083a 	eret

000000ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  ec:	defff904 	addi	sp,sp,-28
  f0:	dfc00615 	stw	ra,24(sp)
  f4:	df000515 	stw	fp,20(sp)
  f8:	df000504 	addi	fp,sp,20
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  fc:	0005313a 	rdctl	r2,ipending
 100:	e0bffc15 	stw	r2,-16(fp)

  return active;
 104:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 108:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
 10c:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 110:	00800044 	movi	r2,1
 114:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 118:	e0ffff17 	ldw	r3,-4(fp)
 11c:	e0bffe17 	ldw	r2,-8(fp)
 120:	1884703a 	and	r2,r3,r2
 124:	1005003a 	cmpeq	r2,r2,zero
 128:	1000161e 	bne	r2,zero,184 <alt_irq_handler+0x98>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 12c:	e0bffd17 	ldw	r2,-12(fp)
 130:	00c04074 	movhi	r3,257
 134:	18d48204 	addi	r3,r3,21000
 138:	100490fa 	slli	r2,r2,3
 13c:	10c5883a 	add	r2,r2,r3
 140:	11400017 	ldw	r5,0(r2)
 144:	e0bffd17 	ldw	r2,-12(fp)
 148:	00c04074 	movhi	r3,257
 14c:	18d48204 	addi	r3,r3,21000
 150:	100490fa 	slli	r2,r2,3
 154:	10c5883a 	add	r2,r2,r3
 158:	10800104 	addi	r2,r2,4
 15c:	11000017 	ldw	r4,0(r2)
 160:	283ee83a 	callr	r5
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 164:	0005313a 	rdctl	r2,ipending
 168:	e0bffb15 	stw	r2,-20(fp)

  return active;
 16c:	e0bffb17 	ldw	r2,-20(fp)
      mask <<= 1;
      i++;

    } while (1);

    active = alt_irq_pending ();
 170:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
 174:	e0bfff17 	ldw	r2,-4(fp)
 178:	1004c03a 	cmpne	r2,r2,zero
 17c:	103fe31e 	bne	r2,zero,10c <alt_irq_handler+0x20>
 180:	00000706 	br	1a0 <alt_irq_handler+0xb4>
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
 184:	e0bffe17 	ldw	r2,-8(fp)
 188:	1085883a 	add	r2,r2,r2
 18c:	e0bffe15 	stw	r2,-8(fp)
      i++;
 190:	e0bffd17 	ldw	r2,-12(fp)
 194:	10800044 	addi	r2,r2,1
 198:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 19c:	003fde06 	br	118 <alt_irq_handler+0x2c>
  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
}
 1a0:	e037883a 	mov	sp,fp
 1a4:	dfc00117 	ldw	ra,4(sp)
 1a8:	df000017 	ldw	fp,0(sp)
 1ac:	dec00204 	addi	sp,sp,8
 1b0:	f800283a 	ret

Disassembly of section .text:

01000194 <_start>:
#if (NIOS2_NUM_OF_SHADOW_REG_SETS == 0)    
    /*
     * Now that the caches are initialized, set up the stack pointer.
     * The value provided by the linker is assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 1000194:	06c06034 	movhi	sp,384
    ori sp, sp, %lo(__alt_stack_pointer)
 1000198:	dec00014 	ori	sp,sp,0

    /* Set up the global pointer. */
    movhi gp, %hi(_gp)
 100019c:	06804074 	movhi	gp,257
    ori gp, gp, %lo(_gp)
 10001a0:	d6b15514 	ori	gp,gp,50516
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 10001a4:	00804074 	movhi	r2,257
    ori r2, r2, %lo(__bss_start)
 10001a8:	10942914 	ori	r2,r2,20644

    movhi r3, %hi(__bss_end)
 10001ac:	00c04074 	movhi	r3,257
    ori r3, r3, %lo(__bss_end)
 10001b0:	18d4c214 	ori	r3,r3,21256

    beq r2, r3, 1f
 10001b4:	10c00326 	beq	r2,r3,10001c4 <_start+0x30>

0:
    stw zero, (r2)
 10001b8:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 10001bc:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 10001c0:	10fffd36 	bltu	r2,r3,10001b8 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 10001c4:	10111000 	call	1011100 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 10001c8:	10113400 	call	1011340 <alt_main>

010001cc <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 10001cc:	003fff06 	br	10001cc <alt_after_alt_main>

010001d0 <pgmread>:
#include <stdio.h>
#include <stdlib.h>
#include <stddef.h>
#define N 8
#define M 10
unsigned char** pgmread(char* filename, int* w, int* h){
 10001d0:	deffb004 	addi	sp,sp,-320
 10001d4:	dfc04f15 	stw	ra,316(sp)
 10001d8:	df004e15 	stw	fp,312(sp)
 10001dc:	dc004d15 	stw	r16,308(sp)
 10001e0:	df004d04 	addi	fp,sp,308
 10001e4:	e13ffc15 	stw	r4,-16(fp)
 10001e8:	e17ffd15 	stw	r5,-12(fp)
 10001ec:	e1bffe15 	stw	r6,-8(fp)
int binary;
int nread;
int i,j, int_tmp;
unsigned char** data;
unsigned char* bindata;
printf("Debug: Opening image:\n");
 10001f0:	01004074 	movhi	r4,257
 10001f4:	210ca804 	addi	r4,r4,12960
 10001f8:	10035fc0 	call	10035fc <puts>
if ((file = fopen("/mnt/host/inputImage.pgm", "r")) == NULL)
 10001fc:	01004074 	movhi	r4,257
 1000200:	210cae04 	addi	r4,r4,12984
 1000204:	01404074 	movhi	r5,257
 1000208:	294cb504 	addi	r5,r5,13012
 100020c:	1001aa00 	call	1001aa0 <fopen>
 1000210:	e0bfb915 	stw	r2,-284(fp)
 1000214:	e0bfb917 	ldw	r2,-284(fp)
 1000218:	1004c03a 	cmpne	r2,r2,zero
 100021c:	10000b1e 	bne	r2,zero,100024c <pgmread+0x7c>
{
printf("ERROR: file open failed\n");
 1000220:	01004074 	movhi	r4,257
 1000224:	210cb604 	addi	r4,r4,13016
 1000228:	10035fc0 	call	10035fc <puts>
*h = *w = 0;
 100022c:	e0bffd17 	ldw	r2,-12(fp)
 1000230:	10000015 	stw	zero,0(r2)
 1000234:	e0bffd17 	ldw	r2,-12(fp)
 1000238:	10c00017 	ldw	r3,0(r2)
 100023c:	e0bffe17 	ldw	r2,-8(fp)
 1000240:	10c00015 	stw	r3,0(r2)
return(NULL);
 1000244:	e03fff15 	stw	zero,-4(fp)
 1000248:	0000ec06 	br	10005fc <pgmread+0x42c>
} else {
printf("Debug: Image open successfully!\n");
 100024c:	01004074 	movhi	r4,257
 1000250:	210cbc04 	addi	r4,r4,13040
 1000254:	10035fc0 	call	10035fc <puts>
}
fgets(line, 256, file);
 1000258:	e13fba04 	addi	r4,fp,-280
 100025c:	01404004 	movi	r5,256
 1000260:	e1bfb917 	ldw	r6,-284(fp)
 1000264:	10016940 	call	1001694 <fgets>
if (strncmp(line,"P5", 2))
 1000268:	e13fba04 	addi	r4,fp,-280
 100026c:	01404074 	movhi	r5,257
 1000270:	294cc404 	addi	r5,r5,13072
 1000274:	01800084 	movi	r6,2
 1000278:	1003b340 	call	1003b34 <strncmp>
 100027c:	1005003a 	cmpeq	r2,r2,zero
 1000280:	1000141e 	bne	r2,zero,10002d4 <pgmread+0x104>
{
if (strncmp(line,"P2", 2))
 1000284:	e13fba04 	addi	r4,fp,-280
 1000288:	01404074 	movhi	r5,257
 100028c:	294cc504 	addi	r5,r5,13076
 1000290:	01800084 	movi	r6,2
 1000294:	1003b340 	call	1003b34 <strncmp>
 1000298:	1005003a 	cmpeq	r2,r2,zero
 100029c:	10000b1e 	bne	r2,zero,10002cc <pgmread+0xfc>
{
printf("pgm read: not a pgm file\n");
 10002a0:	01004074 	movhi	r4,257
 10002a4:	210cc604 	addi	r4,r4,13080
 10002a8:	10035fc0 	call	10035fc <puts>
*h = *w = 0;
 10002ac:	e0bffd17 	ldw	r2,-12(fp)
 10002b0:	10000015 	stw	zero,0(r2)
 10002b4:	e0bffd17 	ldw	r2,-12(fp)
 10002b8:	10c00017 	ldw	r3,0(r2)
 10002bc:	e0bffe17 	ldw	r2,-8(fp)
 10002c0:	10c00015 	stw	r3,0(r2)
return(NULL);
 10002c4:	e03fff15 	stw	zero,-4(fp)
 10002c8:	0000cc06 	br	10005fc <pgmread+0x42c>
}
else
binary = 0;
 10002cc:	e03fb815 	stw	zero,-288(fp)
 10002d0:	00000206 	br	10002dc <pgmread+0x10c>
}
else
binary = 1;
 10002d4:	00800044 	movi	r2,1
 10002d8:	e0bfb815 	stw	r2,-288(fp)
fgets(line, 256, file);
 10002dc:	e13fba04 	addi	r4,fp,-280
 10002e0:	01404004 	movi	r5,256
 10002e4:	e1bfb917 	ldw	r6,-284(fp)
 10002e8:	10016940 	call	1001694 <fgets>
while (line[0] == '#')
 10002ec:	00000406 	br	1000300 <pgmread+0x130>
fgets(line, 256, file);
 10002f0:	e13fba04 	addi	r4,fp,-280
 10002f4:	01404004 	movi	r5,256
 10002f8:	e1bfb917 	ldw	r6,-284(fp)
 10002fc:	10016940 	call	1001694 <fgets>
binary = 0;
}
else
binary = 1;
fgets(line, 256, file);
while (line[0] == '#')
 1000300:	e0bfba03 	ldbu	r2,-280(fp)
 1000304:	10803fcc 	andi	r2,r2,255
 1000308:	1080201c 	xori	r2,r2,128
 100030c:	10bfe004 	addi	r2,r2,-128
 1000310:	108008e0 	cmpeqi	r2,r2,35
 1000314:	103ff61e 	bne	r2,zero,10002f0 <pgmread+0x120>
fgets(line, 256, file);
sscanf(line,"%d", w);
 1000318:	e13fba04 	addi	r4,fp,-280
 100031c:	01404074 	movhi	r5,257
 1000320:	294ccd04 	addi	r5,r5,13108
 1000324:	e1bffd17 	ldw	r6,-12(fp)
 1000328:	10038f00 	call	10038f0 <sscanf>
fgets(line, 256, file);
 100032c:	e13fba04 	addi	r4,fp,-280
 1000330:	01404004 	movi	r5,256
 1000334:	e1bfb917 	ldw	r6,-284(fp)
 1000338:	10016940 	call	1001694 <fgets>
sscanf(line,"%d", h);
 100033c:	e13fba04 	addi	r4,fp,-280
 1000340:	01404074 	movhi	r5,257
 1000344:	294ccd04 	addi	r5,r5,13108
 1000348:	e1bffe17 	ldw	r6,-8(fp)
 100034c:	10038f00 	call	10038f0 <sscanf>
fgets(line, 256, file);
 1000350:	e13fba04 	addi	r4,fp,-280
 1000354:	01404004 	movi	r5,256
 1000358:	e1bfb917 	ldw	r6,-284(fp)
 100035c:	10016940 	call	1001694 <fgets>
sscanf(line, "%d", &maxval);
 1000360:	e13fba04 	addi	r4,fp,-280
 1000364:	e1bffa04 	addi	r6,fp,-24
 1000368:	01404074 	movhi	r5,257
 100036c:	294ccd04 	addi	r5,r5,13108
 1000370:	10038f00 	call	10038f0 <sscanf>
if ((data = (unsigned char**)calloc((*w), sizeof(unsigned char*))) == NULL)
 1000374:	e0bffd17 	ldw	r2,-12(fp)
 1000378:	10800017 	ldw	r2,0(r2)
 100037c:	1009883a 	mov	r4,r2
 1000380:	01400104 	movi	r5,4
 1000384:	10010dc0 	call	10010dc <calloc>
 1000388:	e0bfb415 	stw	r2,-304(fp)
 100038c:	e0bfb417 	ldw	r2,-304(fp)
 1000390:	1004c03a 	cmpne	r2,r2,zero
 1000394:	1000051e 	bne	r2,zero,10003ac <pgmread+0x1dc>
{
printf("Memory allocation error. Exit program\n");
 1000398:	01004074 	movhi	r4,257
 100039c:	210cce04 	addi	r4,r4,13112
 10003a0:	10035fc0 	call	10035fc <puts>
exit(1);
 10003a4:	01000044 	movi	r4,1
 10003a8:	10011c00 	call	10011c0 <exit>
}
for (j=0 ; j < (*w); j++)
 10003ac:	e03fb515 	stw	zero,-300(fp)
 10003b0:	00001706 	br	1000410 <pgmread+0x240>
if ((data[j] = (unsigned char*)calloc((*h), sizeof(unsigned char))) == NULL)
 10003b4:	e0bfb517 	ldw	r2,-300(fp)
 10003b8:	1085883a 	add	r2,r2,r2
 10003bc:	1085883a 	add	r2,r2,r2
 10003c0:	1007883a 	mov	r3,r2
 10003c4:	e0bfb417 	ldw	r2,-304(fp)
 10003c8:	18a1883a 	add	r16,r3,r2
 10003cc:	e0bffe17 	ldw	r2,-8(fp)
 10003d0:	10800017 	ldw	r2,0(r2)
 10003d4:	1009883a 	mov	r4,r2
 10003d8:	01400044 	movi	r5,1
 10003dc:	10010dc0 	call	10010dc <calloc>
 10003e0:	80800015 	stw	r2,0(r16)
 10003e4:	80800017 	ldw	r2,0(r16)
 10003e8:	1004c03a 	cmpne	r2,r2,zero
 10003ec:	1000051e 	bne	r2,zero,1000404 <pgmread+0x234>
{
printf("Memory allocation error. Exit program\n");
 10003f0:	01004074 	movhi	r4,257
 10003f4:	210cce04 	addi	r4,r4,13112
 10003f8:	10035fc0 	call	10035fc <puts>
exit(1);
 10003fc:	01000044 	movi	r4,1
 1000400:	10011c00 	call	10011c0 <exit>
if ((data = (unsigned char**)calloc((*w), sizeof(unsigned char*))) == NULL)
{
printf("Memory allocation error. Exit program\n");
exit(1);
}
for (j=0 ; j < (*w); j++)
 1000404:	e0bfb517 	ldw	r2,-300(fp)
 1000408:	10800044 	addi	r2,r2,1
 100040c:	e0bfb515 	stw	r2,-300(fp)
 1000410:	e0bffd17 	ldw	r2,-12(fp)
 1000414:	10c00017 	ldw	r3,0(r2)
 1000418:	e0bfb517 	ldw	r2,-300(fp)
 100041c:	10ffe516 	blt	r2,r3,10003b4 <pgmread+0x1e4>
if ((data[j] = (unsigned char*)calloc((*h), sizeof(unsigned char))) == NULL)
{
printf("Memory allocation error. Exit program\n");
exit(1);
}
if (binary)
 1000420:	e0bfb817 	ldw	r2,-288(fp)
 1000424:	1005003a 	cmpeq	r2,r2,zero
 1000428:	10004a1e 	bne	r2,zero,1000554 <pgmread+0x384>
{
if ((bindata = (unsigned char*)calloc((*w)*(*h), sizeof(unsigned char))) == NULL)
 100042c:	e0bffd17 	ldw	r2,-12(fp)
 1000430:	11000017 	ldw	r4,0(r2)
 1000434:	e0bffe17 	ldw	r2,-8(fp)
 1000438:	11400017 	ldw	r5,0(r2)
 100043c:	10010a40 	call	10010a4 <__mulsi3>
 1000440:	1009883a 	mov	r4,r2
 1000444:	01400044 	movi	r5,1
 1000448:	10010dc0 	call	10010dc <calloc>
 100044c:	e0bfb315 	stw	r2,-308(fp)
 1000450:	e0bfb317 	ldw	r2,-308(fp)
 1000454:	1004c03a 	cmpne	r2,r2,zero
 1000458:	1000051e 	bne	r2,zero,1000470 <pgmread+0x2a0>
{
printf("Memory allocation error on bindata. Exit program\n");
 100045c:	01004074 	movhi	r4,257
 1000460:	210cd804 	addi	r4,r4,13152
 1000464:	10035fc0 	call	10035fc <puts>
exit(1);
 1000468:	01000044 	movi	r4,1
 100046c:	10011c00 	call	10011c0 <exit>
}
printf("Reading %s as binary.\n", filename);
 1000470:	01004074 	movhi	r4,257
 1000474:	210ce504 	addi	r4,r4,13204
 1000478:	e17ffc17 	ldw	r5,-16(fp)
 100047c:	10034e40 	call	10034e4 <printf>
nread = fread((void*)bindata, sizeof(unsigned char), (*w)*(*h), file);
 1000480:	e0bffd17 	ldw	r2,-12(fp)
 1000484:	11000017 	ldw	r4,0(r2)
 1000488:	e0bffe17 	ldw	r2,-8(fp)
 100048c:	11400017 	ldw	r5,0(r2)
 1000490:	10010a40 	call	10010a4 <__mulsi3>
 1000494:	100d883a 	mov	r6,r2
 1000498:	e13fb317 	ldw	r4,-308(fp)
 100049c:	01400044 	movi	r5,1
 10004a0:	e1ffb917 	ldw	r7,-284(fp)
 10004a4:	1001d280 	call	1001d28 <fread>
 10004a8:	e0bfb715 	stw	r2,-292(fp)
for(i=0; i< (*w); i++)
 10004ac:	e03fb615 	stw	zero,-296(fp)
 10004b0:	00002106 	br	1000538 <pgmread+0x368>
for(j=0; j< (*h); j++)
 10004b4:	e03fb515 	stw	zero,-300(fp)
 10004b8:	00001806 	br	100051c <pgmread+0x34c>
data[i][j] = (unsigned char)bindata[(j*(*w))+i];
 10004bc:	e0bfb617 	ldw	r2,-296(fp)
 10004c0:	1085883a 	add	r2,r2,r2
 10004c4:	1085883a 	add	r2,r2,r2
 10004c8:	1007883a 	mov	r3,r2
 10004cc:	e0bfb417 	ldw	r2,-304(fp)
 10004d0:	1885883a 	add	r2,r3,r2
 10004d4:	10c00017 	ldw	r3,0(r2)
 10004d8:	e0bfb517 	ldw	r2,-300(fp)
 10004dc:	18a1883a 	add	r16,r3,r2
 10004e0:	e0bffd17 	ldw	r2,-12(fp)
 10004e4:	11000017 	ldw	r4,0(r2)
 10004e8:	e17fb517 	ldw	r5,-300(fp)
 10004ec:	10010a40 	call	10010a4 <__mulsi3>
 10004f0:	1007883a 	mov	r3,r2
 10004f4:	e0bfb617 	ldw	r2,-296(fp)
 10004f8:	1885883a 	add	r2,r3,r2
 10004fc:	1007883a 	mov	r3,r2
 1000500:	e0bfb317 	ldw	r2,-308(fp)
 1000504:	1885883a 	add	r2,r3,r2
 1000508:	10800003 	ldbu	r2,0(r2)
 100050c:	80800005 	stb	r2,0(r16)
exit(1);
}
printf("Reading %s as binary.\n", filename);
nread = fread((void*)bindata, sizeof(unsigned char), (*w)*(*h), file);
for(i=0; i< (*w); i++)
for(j=0; j< (*h); j++)
 1000510:	e0bfb517 	ldw	r2,-300(fp)
 1000514:	10800044 	addi	r2,r2,1
 1000518:	e0bfb515 	stw	r2,-300(fp)
 100051c:	e0bffe17 	ldw	r2,-8(fp)
 1000520:	10c00017 	ldw	r3,0(r2)
 1000524:	e0bfb517 	ldw	r2,-300(fp)
 1000528:	10ffe416 	blt	r2,r3,10004bc <pgmread+0x2ec>
printf("Memory allocation error on bindata. Exit program\n");
exit(1);
}
printf("Reading %s as binary.\n", filename);
nread = fread((void*)bindata, sizeof(unsigned char), (*w)*(*h), file);
for(i=0; i< (*w); i++)
 100052c:	e0bfb617 	ldw	r2,-296(fp)
 1000530:	10800044 	addi	r2,r2,1
 1000534:	e0bfb615 	stw	r2,-296(fp)
 1000538:	e0bffd17 	ldw	r2,-12(fp)
 100053c:	10c00017 	ldw	r3,0(r2)
 1000540:	e0bfb617 	ldw	r2,-296(fp)
 1000544:	10ffdb16 	blt	r2,r3,10004b4 <pgmread+0x2e4>
for(j=0; j< (*h); j++)
data[i][j] = (unsigned char)bindata[(j*(*w))+i];
free(bindata);
 1000548:	e13fb317 	ldw	r4,-308(fp)
 100054c:	1002ae80 	call	1002ae8 <free>
 1000550:	00002606 	br	10005ec <pgmread+0x41c>
}
else {
printf("Reading %s as ascii.\n", filename);
 1000554:	01004074 	movhi	r4,257
 1000558:	210ceb04 	addi	r4,r4,13228
 100055c:	e17ffc17 	ldw	r5,-16(fp)
 1000560:	10034e40 	call	10034e4 <printf>
for (i = 0; i < (*h); i++)
 1000564:	e03fb615 	stw	zero,-296(fp)
 1000568:	00001c06 	br	10005dc <pgmread+0x40c>
{
for (j = 0; j < (*w); j++)
 100056c:	e03fb515 	stw	zero,-300(fp)
 1000570:	00001306 	br	10005c0 <pgmread+0x3f0>
{
fscanf(file,"%d", &int_tmp);
 1000574:	e1bffb04 	addi	r6,fp,-20
 1000578:	e13fb917 	ldw	r4,-284(fp)
 100057c:	01404074 	movhi	r5,257
 1000580:	294ccd04 	addi	r5,r5,13108
 1000584:	10021d00 	call	10021d0 <fscanf>
data[j][i] = (unsigned char)int_tmp;
 1000588:	e0bfb517 	ldw	r2,-300(fp)
 100058c:	1085883a 	add	r2,r2,r2
 1000590:	1085883a 	add	r2,r2,r2
 1000594:	1007883a 	mov	r3,r2
 1000598:	e0bfb417 	ldw	r2,-304(fp)
 100059c:	1885883a 	add	r2,r3,r2
 10005a0:	10c00017 	ldw	r3,0(r2)
 10005a4:	e0bfb617 	ldw	r2,-296(fp)
 10005a8:	1887883a 	add	r3,r3,r2
 10005ac:	e0bffb17 	ldw	r2,-20(fp)
 10005b0:	18800005 	stb	r2,0(r3)
}
else {
printf("Reading %s as ascii.\n", filename);
for (i = 0; i < (*h); i++)
{
for (j = 0; j < (*w); j++)
 10005b4:	e0bfb517 	ldw	r2,-300(fp)
 10005b8:	10800044 	addi	r2,r2,1
 10005bc:	e0bfb515 	stw	r2,-300(fp)
 10005c0:	e0bffd17 	ldw	r2,-12(fp)
 10005c4:	10c00017 	ldw	r3,0(r2)
 10005c8:	e0bfb517 	ldw	r2,-300(fp)
 10005cc:	10ffe916 	blt	r2,r3,1000574 <pgmread+0x3a4>
data[i][j] = (unsigned char)bindata[(j*(*w))+i];
free(bindata);
}
else {
printf("Reading %s as ascii.\n", filename);
for (i = 0; i < (*h); i++)
 10005d0:	e0bfb617 	ldw	r2,-296(fp)
 10005d4:	10800044 	addi	r2,r2,1
 10005d8:	e0bfb615 	stw	r2,-296(fp)
 10005dc:	e0bffe17 	ldw	r2,-8(fp)
 10005e0:	10c00017 	ldw	r3,0(r2)
 10005e4:	e0bfb617 	ldw	r2,-296(fp)
 10005e8:	10ffe016 	blt	r2,r3,100056c <pgmread+0x39c>
fscanf(file,"%d", &int_tmp);
data[j][i] = (unsigned char)int_tmp;
}
}
}
fclose(file);
 10005ec:	e13fb917 	ldw	r4,-284(fp)
 10005f0:	10013080 	call	1001308 <fclose>
return(data);
 10005f4:	e0bfb417 	ldw	r2,-304(fp)
 10005f8:	e0bfff15 	stw	r2,-4(fp)
 10005fc:	e0bfff17 	ldw	r2,-4(fp)
}
 1000600:	e037883a 	mov	sp,fp
 1000604:	dfc00217 	ldw	ra,8(sp)
 1000608:	df000117 	ldw	fp,4(sp)
 100060c:	dc000017 	ldw	r16,0(sp)
 1000610:	dec00304 	addi	sp,sp,12
 1000614:	f800283a 	ret

01000618 <pgmwrite>:
int pgmwrite(char* filename, int w, int h, unsigned char** data,
char* comment_string, int binsave)
{
 1000618:	deffb104 	addi	sp,sp,-316
 100061c:	dfc04e15 	stw	ra,312(sp)
 1000620:	df004d15 	stw	fp,308(sp)
 1000624:	df004d04 	addi	fp,sp,308
 1000628:	e13ffb15 	stw	r4,-20(fp)
 100062c:	e17ffc15 	stw	r5,-16(fp)
 1000630:	e1bffd15 	stw	r6,-12(fp)
 1000634:	e1fffe15 	stw	r7,-8(fp)
int maxval;
int binary;
int nread;
int i,j, int_tmp;
unsigned char* temp;
if ((file = fopen("/mnt/host/output.pgm", "w")) == NULL)
 1000638:	01004074 	movhi	r4,257
 100063c:	210cf104 	addi	r4,r4,13252
 1000640:	01404074 	movhi	r5,257
 1000644:	294cf704 	addi	r5,r5,13276
 1000648:	1001aa00 	call	1001aa0 <fopen>
 100064c:	e0bfba15 	stw	r2,-280(fp)
 1000650:	e0bfba17 	ldw	r2,-280(fp)
 1000654:	1004c03a 	cmpne	r2,r2,zero
 1000658:	1000061e 	bne	r2,zero,1000674 <pgmwrite+0x5c>
{
printf("ERROR: file open failed\n");
 100065c:	01004074 	movhi	r4,257
 1000660:	210cb604 	addi	r4,r4,13016
 1000664:	10035fc0 	call	10035fc <puts>
return(-1);
 1000668:	00bfffc4 	movi	r2,-1
 100066c:	e0bfff15 	stw	r2,-4(fp)
 1000670:	0000b106 	br	1000938 <pgmwrite+0x320>
}
if (binsave == 1)
 1000674:	e0800317 	ldw	r2,12(fp)
 1000678:	10800058 	cmpnei	r2,r2,1
 100067c:	1000071e 	bne	r2,zero,100069c <pgmwrite+0x84>
fprintf(file,"P5\n");
 1000680:	01004074 	movhi	r4,257
 1000684:	210cf804 	addi	r4,r4,13280
 1000688:	01400044 	movi	r5,1
 100068c:	018000c4 	movi	r6,3
 1000690:	e1ffba17 	ldw	r7,-280(fp)
 1000694:	10029140 	call	1002914 <fwrite>
 1000698:	00000606 	br	10006b4 <pgmwrite+0x9c>
else
fprintf(file,"P2\n");
 100069c:	01004074 	movhi	r4,257
 10006a0:	210cf904 	addi	r4,r4,13284
 10006a4:	01400044 	movi	r5,1
 10006a8:	018000c4 	movi	r6,3
 10006ac:	e1ffba17 	ldw	r7,-280(fp)
 10006b0:	10029140 	call	1002914 <fwrite>
if (comment_string != NULL)
 10006b4:	e0800217 	ldw	r2,8(fp)
 10006b8:	1005003a 	cmpeq	r2,r2,zero
 10006bc:	1000051e 	bne	r2,zero,10006d4 <pgmwrite+0xbc>
fprintf(file,"# %s \n", comment_string);
 10006c0:	e13fba17 	ldw	r4,-280(fp)
 10006c4:	01404074 	movhi	r5,257
 10006c8:	294cfa04 	addi	r5,r5,13288
 10006cc:	e1800217 	ldw	r6,8(fp)
 10006d0:	1001abc0 	call	1001abc <fprintf>
fprintf(file,"%d %d \n", w, h);
 10006d4:	e13fba17 	ldw	r4,-280(fp)
 10006d8:	01404074 	movhi	r5,257
 10006dc:	294cfc04 	addi	r5,r5,13296
 10006e0:	e1bffc17 	ldw	r6,-16(fp)
 10006e4:	e1fffd17 	ldw	r7,-12(fp)
 10006e8:	1001abc0 	call	1001abc <fprintf>
maxval = 0;
 10006ec:	e03fb915 	stw	zero,-284(fp)
for (i = 0; i < w; i++)
 10006f0:	e03fb615 	stw	zero,-296(fp)
 10006f4:	00002406 	br	1000788 <pgmwrite+0x170>
for (j=0; j < h; j++)
 10006f8:	e03fb515 	stw	zero,-300(fp)
 10006fc:	00001c06 	br	1000770 <pgmwrite+0x158>
if ((int)data[i][j] > maxval)
 1000700:	e0bfb617 	ldw	r2,-296(fp)
 1000704:	1085883a 	add	r2,r2,r2
 1000708:	1085883a 	add	r2,r2,r2
 100070c:	1007883a 	mov	r3,r2
 1000710:	e0bffe17 	ldw	r2,-8(fp)
 1000714:	1885883a 	add	r2,r3,r2
 1000718:	10c00017 	ldw	r3,0(r2)
 100071c:	e0bfb517 	ldw	r2,-300(fp)
 1000720:	1885883a 	add	r2,r3,r2
 1000724:	10800003 	ldbu	r2,0(r2)
 1000728:	10c03fcc 	andi	r3,r2,255
 100072c:	e0bfb917 	ldw	r2,-284(fp)
 1000730:	10c00c0e 	bge	r2,r3,1000764 <pgmwrite+0x14c>
maxval = (int)data[i][j];
 1000734:	e0bfb617 	ldw	r2,-296(fp)
 1000738:	1085883a 	add	r2,r2,r2
 100073c:	1085883a 	add	r2,r2,r2
 1000740:	1007883a 	mov	r3,r2
 1000744:	e0bffe17 	ldw	r2,-8(fp)
 1000748:	1885883a 	add	r2,r3,r2
 100074c:	10c00017 	ldw	r3,0(r2)
 1000750:	e0bfb517 	ldw	r2,-300(fp)
 1000754:	1885883a 	add	r2,r3,r2
 1000758:	10800003 	ldbu	r2,0(r2)
 100075c:	10803fcc 	andi	r2,r2,255
 1000760:	e0bfb915 	stw	r2,-284(fp)
if (comment_string != NULL)
fprintf(file,"# %s \n", comment_string);
fprintf(file,"%d %d \n", w, h);
maxval = 0;
for (i = 0; i < w; i++)
for (j=0; j < h; j++)
 1000764:	e0bfb517 	ldw	r2,-300(fp)
 1000768:	10800044 	addi	r2,r2,1
 100076c:	e0bfb515 	stw	r2,-300(fp)
 1000770:	e0ffb517 	ldw	r3,-300(fp)
 1000774:	e0bffd17 	ldw	r2,-12(fp)
 1000778:	18bfe116 	blt	r3,r2,1000700 <pgmwrite+0xe8>
fprintf(file,"P2\n");
if (comment_string != NULL)
fprintf(file,"# %s \n", comment_string);
fprintf(file,"%d %d \n", w, h);
maxval = 0;
for (i = 0; i < w; i++)
 100077c:	e0bfb617 	ldw	r2,-296(fp)
 1000780:	10800044 	addi	r2,r2,1
 1000784:	e0bfb615 	stw	r2,-296(fp)
 1000788:	e0ffb617 	ldw	r3,-296(fp)
 100078c:	e0bffc17 	ldw	r2,-16(fp)
 1000790:	18bfd916 	blt	r3,r2,10006f8 <pgmwrite+0xe0>
for (j=0; j < h; j++)
if ((int)data[i][j] > maxval)
maxval = (int)data[i][j];
fprintf(file, "%d \n", maxval);
 1000794:	e13fba17 	ldw	r4,-280(fp)
 1000798:	01404074 	movhi	r5,257
 100079c:	294cfe04 	addi	r5,r5,13304
 10007a0:	e1bfb917 	ldw	r6,-284(fp)
 10007a4:	1001abc0 	call	1001abc <fprintf>
if (binsave == 1)
 10007a8:	e0800317 	ldw	r2,12(fp)
 10007ac:	10800058 	cmpnei	r2,r2,1
 10007b0:	10003b1e 	bne	r2,zero,10008a0 <pgmwrite+0x288>
{
temp = (unsigned char*)calloc(w*h, sizeof(unsigned char));
 10007b4:	e13ffc17 	ldw	r4,-16(fp)
 10007b8:	e17ffd17 	ldw	r5,-12(fp)
 10007bc:	10010a40 	call	10010a4 <__mulsi3>
 10007c0:	1009883a 	mov	r4,r2
 10007c4:	01400044 	movi	r5,1
 10007c8:	10010dc0 	call	10010dc <calloc>
 10007cc:	e0bfb315 	stw	r2,-308(fp)
for(i=0; i<w; i++)
 10007d0:	e03fb615 	stw	zero,-296(fp)
 10007d4:	00001f06 	br	1000854 <pgmwrite+0x23c>
for(j=0; j<h; j++)
 10007d8:	e03fb515 	stw	zero,-300(fp)
 10007dc:	00001706 	br	100083c <pgmwrite+0x224>
temp[(j*w)+i]= (unsigned char)data[i][j];
 10007e0:	e13fb517 	ldw	r4,-300(fp)
 10007e4:	e17ffc17 	ldw	r5,-16(fp)
 10007e8:	10010a40 	call	10010a4 <__mulsi3>
 10007ec:	1007883a 	mov	r3,r2
 10007f0:	e0bfb617 	ldw	r2,-296(fp)
 10007f4:	1885883a 	add	r2,r3,r2
 10007f8:	1007883a 	mov	r3,r2
 10007fc:	e0bfb317 	ldw	r2,-308(fp)
 1000800:	1889883a 	add	r4,r3,r2
 1000804:	e0bfb617 	ldw	r2,-296(fp)
 1000808:	1085883a 	add	r2,r2,r2
 100080c:	1085883a 	add	r2,r2,r2
 1000810:	1007883a 	mov	r3,r2
 1000814:	e0bffe17 	ldw	r2,-8(fp)
 1000818:	1885883a 	add	r2,r3,r2
 100081c:	10c00017 	ldw	r3,0(r2)
 1000820:	e0bfb517 	ldw	r2,-300(fp)
 1000824:	1885883a 	add	r2,r3,r2
 1000828:	10800003 	ldbu	r2,0(r2)
 100082c:	20800005 	stb	r2,0(r4)
fprintf(file, "%d \n", maxval);
if (binsave == 1)
{
temp = (unsigned char*)calloc(w*h, sizeof(unsigned char));
for(i=0; i<w; i++)
for(j=0; j<h; j++)
 1000830:	e0bfb517 	ldw	r2,-300(fp)
 1000834:	10800044 	addi	r2,r2,1
 1000838:	e0bfb515 	stw	r2,-300(fp)
 100083c:	e0ffb517 	ldw	r3,-300(fp)
 1000840:	e0bffd17 	ldw	r2,-12(fp)
 1000844:	18bfe616 	blt	r3,r2,10007e0 <pgmwrite+0x1c8>
maxval = (int)data[i][j];
fprintf(file, "%d \n", maxval);
if (binsave == 1)
{
temp = (unsigned char*)calloc(w*h, sizeof(unsigned char));
for(i=0; i<w; i++)
 1000848:	e0bfb617 	ldw	r2,-296(fp)
 100084c:	10800044 	addi	r2,r2,1
 1000850:	e0bfb615 	stw	r2,-296(fp)
 1000854:	e0ffb617 	ldw	r3,-296(fp)
 1000858:	e0bffc17 	ldw	r2,-16(fp)
 100085c:	18bfde16 	blt	r3,r2,10007d8 <pgmwrite+0x1c0>
for(j=0; j<h; j++)
temp[(j*w)+i]= (unsigned char)data[i][j];
nread = fwrite((void*)temp, sizeof(unsigned char), (w)*(h), file);
 1000860:	e13ffc17 	ldw	r4,-16(fp)
 1000864:	e17ffd17 	ldw	r5,-12(fp)
 1000868:	10010a40 	call	10010a4 <__mulsi3>
 100086c:	100d883a 	mov	r6,r2
 1000870:	e13fb317 	ldw	r4,-308(fp)
 1000874:	01400044 	movi	r5,1
 1000878:	e1ffba17 	ldw	r7,-280(fp)
 100087c:	10029140 	call	1002914 <fwrite>
 1000880:	e0bfb715 	stw	r2,-292(fp)
printf("Writing to %s as binary.\n", filename);
 1000884:	01004074 	movhi	r4,257
 1000888:	210d0004 	addi	r4,r4,13312
 100088c:	e17ffb17 	ldw	r5,-20(fp)
 1000890:	10034e40 	call	10034e4 <printf>
free(temp);
 1000894:	e13fb317 	ldw	r4,-308(fp)
 1000898:	1002ae80 	call	1002ae8 <free>
 100089c:	00002306 	br	100092c <pgmwrite+0x314>
}else{
printf("Writing to %s as ascii.\n", filename);
 10008a0:	01004074 	movhi	r4,257
 10008a4:	210d0704 	addi	r4,r4,13340
 10008a8:	e17ffb17 	ldw	r5,-20(fp)
 10008ac:	10034e40 	call	10034e4 <printf>
for(i=0; i<h; i++)
 10008b0:	e03fb615 	stw	zero,-296(fp)
 10008b4:	00001a06 	br	1000920 <pgmwrite+0x308>
for(j=0; j<w; j++)
 10008b8:	e03fb515 	stw	zero,-300(fp)
 10008bc:	00001206 	br	1000908 <pgmwrite+0x2f0>
fprintf(file,"%d ", (int)data[j][i]);
 10008c0:	e0bfb517 	ldw	r2,-300(fp)
 10008c4:	1085883a 	add	r2,r2,r2
 10008c8:	1085883a 	add	r2,r2,r2
 10008cc:	1007883a 	mov	r3,r2
 10008d0:	e0bffe17 	ldw	r2,-8(fp)
 10008d4:	1885883a 	add	r2,r3,r2
 10008d8:	10c00017 	ldw	r3,0(r2)
 10008dc:	e0bfb617 	ldw	r2,-296(fp)
 10008e0:	1885883a 	add	r2,r3,r2
 10008e4:	10800003 	ldbu	r2,0(r2)
 10008e8:	11803fcc 	andi	r6,r2,255
 10008ec:	e13fba17 	ldw	r4,-280(fp)
 10008f0:	01404074 	movhi	r5,257
 10008f4:	294d0e04 	addi	r5,r5,13368
 10008f8:	1001abc0 	call	1001abc <fprintf>
printf("Writing to %s as binary.\n", filename);
free(temp);
}else{
printf("Writing to %s as ascii.\n", filename);
for(i=0; i<h; i++)
for(j=0; j<w; j++)
 10008fc:	e0bfb517 	ldw	r2,-300(fp)
 1000900:	10800044 	addi	r2,r2,1
 1000904:	e0bfb515 	stw	r2,-300(fp)
 1000908:	e0ffb517 	ldw	r3,-300(fp)
 100090c:	e0bffc17 	ldw	r2,-16(fp)
 1000910:	18bfeb16 	blt	r3,r2,10008c0 <pgmwrite+0x2a8>
nread = fwrite((void*)temp, sizeof(unsigned char), (w)*(h), file);
printf("Writing to %s as binary.\n", filename);
free(temp);
}else{
printf("Writing to %s as ascii.\n", filename);
for(i=0; i<h; i++)
 1000914:	e0bfb617 	ldw	r2,-296(fp)
 1000918:	10800044 	addi	r2,r2,1
 100091c:	e0bfb615 	stw	r2,-296(fp)
 1000920:	e0ffb617 	ldw	r3,-296(fp)
 1000924:	e0bffd17 	ldw	r2,-12(fp)
 1000928:	18bfe316 	blt	r3,r2,10008b8 <pgmwrite+0x2a0>
for(j=0; j<w; j++)
fprintf(file,"%d ", (int)data[j][i]);
}
fclose(file);
 100092c:	e13fba17 	ldw	r4,-280(fp)
 1000930:	10013080 	call	1001308 <fclose>
return(0);
 1000934:	e03fff15 	stw	zero,-4(fp)
 1000938:	e0bfff17 	ldw	r2,-4(fp)
}
 100093c:	e037883a 	mov	sp,fp
 1000940:	dfc00117 	ldw	ra,4(sp)
 1000944:	df000017 	ldw	fp,0(sp)
 1000948:	dec00204 	addi	sp,sp,8
 100094c:	f800283a 	ret

01000950 <pos>:
int pos(int fila,int columna, int ancho){
 1000950:	defffb04 	addi	sp,sp,-20
 1000954:	dfc00415 	stw	ra,16(sp)
 1000958:	df000315 	stw	fp,12(sp)
 100095c:	df000304 	addi	fp,sp,12
 1000960:	e13ffd15 	stw	r4,-12(fp)
 1000964:	e17ffe15 	stw	r5,-8(fp)
 1000968:	e1bfff15 	stw	r6,-4(fp)
return fila*ancho+columna;
 100096c:	e13ffd17 	ldw	r4,-12(fp)
 1000970:	e17fff17 	ldw	r5,-4(fp)
 1000974:	10010a40 	call	10010a4 <__mulsi3>
 1000978:	1007883a 	mov	r3,r2
 100097c:	e0bffe17 	ldw	r2,-8(fp)
 1000980:	1885883a 	add	r2,r3,r2
}
 1000984:	e037883a 	mov	sp,fp
 1000988:	dfc00117 	ldw	ra,4(sp)
 100098c:	df000017 	ldw	fp,0(sp)
 1000990:	dec00204 	addi	sp,sp,8
 1000994:	f800283a 	ret

01000998 <rellenar_filtro>:
void rellenar_filtro(int* matfiltro,int tam, int modo){
 1000998:	defff904 	addi	sp,sp,-28
 100099c:	dfc00615 	stw	ra,24(sp)
 10009a0:	df000515 	stw	fp,20(sp)
 10009a4:	df000504 	addi	fp,sp,20
 10009a8:	e13ffd15 	stw	r4,-12(fp)
 10009ac:	e17ffe15 	stw	r5,-8(fp)
 10009b0:	e1bfff15 	stw	r6,-4(fp)
int i,j;
if(modo==0){
 10009b4:	e0bfff17 	ldw	r2,-4(fp)
 10009b8:	1004c03a 	cmpne	r2,r2,zero
 10009bc:	1000321e 	bne	r2,zero,1000a88 <rellenar_filtro+0xf0>
for(i=0;i<tam;i++){
 10009c0:	e03ffc15 	stw	zero,-16(fp)
 10009c4:	00002c06 	br	1000a78 <rellenar_filtro+0xe0>
for(j=0;j<tam;j++){
 10009c8:	e03ffb15 	stw	zero,-20(fp)
 10009cc:	00002406 	br	1000a60 <rellenar_filtro+0xc8>
if((i==j) && (j==(tam/2)))
 10009d0:	e0fffc17 	ldw	r3,-16(fp)
 10009d4:	e0bffb17 	ldw	r2,-20(fp)
 10009d8:	1880131e 	bne	r3,r2,1000a28 <rellenar_filtro+0x90>
 10009dc:	e0fffe17 	ldw	r3,-8(fp)
 10009e0:	1804d7fa 	srli	r2,r3,31
 10009e4:	10c5883a 	add	r2,r2,r3
 10009e8:	1005d07a 	srai	r2,r2,1
 10009ec:	1007883a 	mov	r3,r2
 10009f0:	e0bffb17 	ldw	r2,-20(fp)
 10009f4:	18800c1e 	bne	r3,r2,1000a28 <rellenar_filtro+0x90>
matfiltro[pos(i,j,tam)]=2;
 10009f8:	e13ffc17 	ldw	r4,-16(fp)
 10009fc:	e17ffb17 	ldw	r5,-20(fp)
 1000a00:	e1bffe17 	ldw	r6,-8(fp)
 1000a04:	10009500 	call	1000950 <pos>
 1000a08:	1085883a 	add	r2,r2,r2
 1000a0c:	1085883a 	add	r2,r2,r2
 1000a10:	1007883a 	mov	r3,r2
 1000a14:	e0bffd17 	ldw	r2,-12(fp)
 1000a18:	1887883a 	add	r3,r3,r2
 1000a1c:	00800084 	movi	r2,2
 1000a20:	18800015 	stw	r2,0(r3)
void rellenar_filtro(int* matfiltro,int tam, int modo){
int i,j;
if(modo==0){
for(i=0;i<tam;i++){
for(j=0;j<tam;j++){
if((i==j) && (j==(tam/2)))
 1000a24:	00000b06 	br	1000a54 <rellenar_filtro+0xbc>
matfiltro[pos(i,j,tam)]=2;
else
matfiltro[pos(i,j,tam)]=1;
 1000a28:	e13ffc17 	ldw	r4,-16(fp)
 1000a2c:	e17ffb17 	ldw	r5,-20(fp)
 1000a30:	e1bffe17 	ldw	r6,-8(fp)
 1000a34:	10009500 	call	1000950 <pos>
 1000a38:	1085883a 	add	r2,r2,r2
 1000a3c:	1085883a 	add	r2,r2,r2
 1000a40:	1007883a 	mov	r3,r2
 1000a44:	e0bffd17 	ldw	r2,-12(fp)
 1000a48:	1887883a 	add	r3,r3,r2
 1000a4c:	00800044 	movi	r2,1
 1000a50:	18800015 	stw	r2,0(r3)
}
void rellenar_filtro(int* matfiltro,int tam, int modo){
int i,j;
if(modo==0){
for(i=0;i<tam;i++){
for(j=0;j<tam;j++){
 1000a54:	e0bffb17 	ldw	r2,-20(fp)
 1000a58:	10800044 	addi	r2,r2,1
 1000a5c:	e0bffb15 	stw	r2,-20(fp)
 1000a60:	e0fffb17 	ldw	r3,-20(fp)
 1000a64:	e0bffe17 	ldw	r2,-8(fp)
 1000a68:	18bfd916 	blt	r3,r2,10009d0 <rellenar_filtro+0x38>
return fila*ancho+columna;
}
void rellenar_filtro(int* matfiltro,int tam, int modo){
int i,j;
if(modo==0){
for(i=0;i<tam;i++){
 1000a6c:	e0bffc17 	ldw	r2,-16(fp)
 1000a70:	10800044 	addi	r2,r2,1
 1000a74:	e0bffc15 	stw	r2,-16(fp)
 1000a78:	e0fffc17 	ldw	r3,-16(fp)
 1000a7c:	e0bffe17 	ldw	r2,-8(fp)
 1000a80:	18bfd116 	blt	r3,r2,10009c8 <rellenar_filtro+0x30>
 1000a84:	00001b06 	br	1000af4 <rellenar_filtro+0x15c>
matfiltro[pos(i,j,tam)]=1;
}
}
}
else{
for(i=0;i<tam;i++){
 1000a88:	e03ffc15 	stw	zero,-16(fp)
 1000a8c:	00001606 	br	1000ae8 <rellenar_filtro+0x150>
for(j=0;j<tam;j++){
 1000a90:	e03ffb15 	stw	zero,-20(fp)
 1000a94:	00000e06 	br	1000ad0 <rellenar_filtro+0x138>
matfiltro[pos(i,j,tam)]=1;
 1000a98:	e13ffc17 	ldw	r4,-16(fp)
 1000a9c:	e17ffb17 	ldw	r5,-20(fp)
 1000aa0:	e1bffe17 	ldw	r6,-8(fp)
 1000aa4:	10009500 	call	1000950 <pos>
 1000aa8:	1085883a 	add	r2,r2,r2
 1000aac:	1085883a 	add	r2,r2,r2
 1000ab0:	1007883a 	mov	r3,r2
 1000ab4:	e0bffd17 	ldw	r2,-12(fp)
 1000ab8:	1887883a 	add	r3,r3,r2
 1000abc:	00800044 	movi	r2,1
 1000ac0:	18800015 	stw	r2,0(r3)
}
}
}
else{
for(i=0;i<tam;i++){
for(j=0;j<tam;j++){
 1000ac4:	e0bffb17 	ldw	r2,-20(fp)
 1000ac8:	10800044 	addi	r2,r2,1
 1000acc:	e0bffb15 	stw	r2,-20(fp)
 1000ad0:	e0fffb17 	ldw	r3,-20(fp)
 1000ad4:	e0bffe17 	ldw	r2,-8(fp)
 1000ad8:	18bfef16 	blt	r3,r2,1000a98 <rellenar_filtro+0x100>
matfiltro[pos(i,j,tam)]=1;
}
}
}
else{
for(i=0;i<tam;i++){
 1000adc:	e0bffc17 	ldw	r2,-16(fp)
 1000ae0:	10800044 	addi	r2,r2,1
 1000ae4:	e0bffc15 	stw	r2,-16(fp)
 1000ae8:	e0fffc17 	ldw	r3,-16(fp)
 1000aec:	e0bffe17 	ldw	r2,-8(fp)
 1000af0:	18bfe716 	blt	r3,r2,1000a90 <rellenar_filtro+0xf8>
for(j=0;j<tam;j++){
matfiltro[pos(i,j,tam)]=1;
}
}
}
}
 1000af4:	e037883a 	mov	sp,fp
 1000af8:	dfc00117 	ldw	ra,4(sp)
 1000afc:	df000017 	ldw	fp,0(sp)
 1000b00:	dec00204 	addi	sp,sp,8
 1000b04:	f800283a 	ret

01000b08 <valornewpixel>:
unsigned char valornewpixel(unsigned char** matriz,int* matfiltro, int tamfiltro, int pivotei, int pivotej){
 1000b08:	defff304 	addi	sp,sp,-52
 1000b0c:	dfc00c15 	stw	ra,48(sp)
 1000b10:	df000b15 	stw	fp,44(sp)
 1000b14:	dc000a15 	stw	r16,40(sp)
 1000b18:	df000a04 	addi	fp,sp,40
 1000b1c:	e13ffc15 	stw	r4,-16(fp)
 1000b20:	e17ffd15 	stw	r5,-12(fp)
 1000b24:	e1bffe15 	stw	r6,-8(fp)
 1000b28:	e1ffff15 	stw	r7,-4(fp)
int i,j,k,l;
unsigned char devolver;
int valor=0;
 1000b2c:	e03ff615 	stw	zero,-40(fp)
for( i=pivotei,k=0;k<tamfiltro;i++,k++){
 1000b30:	e0bfff17 	ldw	r2,-4(fp)
 1000b34:	e0bffb15 	stw	r2,-20(fp)
 1000b38:	e03ff915 	stw	zero,-28(fp)
 1000b3c:	00002e06 	br	1000bf8 <valornewpixel+0xf0>
for(j=pivotej,l=0;l<tamfiltro;j++,l++){
 1000b40:	e0800317 	ldw	r2,12(fp)
 1000b44:	e0bffa15 	stw	r2,-24(fp)
 1000b48:	e03ff815 	stw	zero,-32(fp)
 1000b4c:	00002106 	br	1000bd4 <valornewpixel+0xcc>
valor+=(((int)matriz[i][j])*matfiltro[pos(k,l,tamfiltro)]);
 1000b50:	e0bffb17 	ldw	r2,-20(fp)
 1000b54:	1085883a 	add	r2,r2,r2
 1000b58:	1085883a 	add	r2,r2,r2
 1000b5c:	1007883a 	mov	r3,r2
 1000b60:	e0bffc17 	ldw	r2,-16(fp)
 1000b64:	1885883a 	add	r2,r3,r2
 1000b68:	10c00017 	ldw	r3,0(r2)
 1000b6c:	e0bffa17 	ldw	r2,-24(fp)
 1000b70:	1885883a 	add	r2,r3,r2
 1000b74:	10800003 	ldbu	r2,0(r2)
 1000b78:	14003fcc 	andi	r16,r2,255
 1000b7c:	e13ff917 	ldw	r4,-28(fp)
 1000b80:	e17ff817 	ldw	r5,-32(fp)
 1000b84:	e1bffe17 	ldw	r6,-8(fp)
 1000b88:	10009500 	call	1000950 <pos>
 1000b8c:	1085883a 	add	r2,r2,r2
 1000b90:	1085883a 	add	r2,r2,r2
 1000b94:	1007883a 	mov	r3,r2
 1000b98:	e0bffd17 	ldw	r2,-12(fp)
 1000b9c:	1885883a 	add	r2,r3,r2
 1000ba0:	11400017 	ldw	r5,0(r2)
 1000ba4:	8009883a 	mov	r4,r16
 1000ba8:	10010a40 	call	10010a4 <__mulsi3>
 1000bac:	1007883a 	mov	r3,r2
 1000bb0:	e0bff617 	ldw	r2,-40(fp)
 1000bb4:	10c5883a 	add	r2,r2,r3
 1000bb8:	e0bff615 	stw	r2,-40(fp)
unsigned char valornewpixel(unsigned char** matriz,int* matfiltro, int tamfiltro, int pivotei, int pivotej){
int i,j,k,l;
unsigned char devolver;
int valor=0;
for( i=pivotei,k=0;k<tamfiltro;i++,k++){
for(j=pivotej,l=0;l<tamfiltro;j++,l++){
 1000bbc:	e0bffa17 	ldw	r2,-24(fp)
 1000bc0:	10800044 	addi	r2,r2,1
 1000bc4:	e0bffa15 	stw	r2,-24(fp)
 1000bc8:	e0bff817 	ldw	r2,-32(fp)
 1000bcc:	10800044 	addi	r2,r2,1
 1000bd0:	e0bff815 	stw	r2,-32(fp)
 1000bd4:	e0fff817 	ldw	r3,-32(fp)
 1000bd8:	e0bffe17 	ldw	r2,-8(fp)
 1000bdc:	18bfdc16 	blt	r3,r2,1000b50 <valornewpixel+0x48>
}
unsigned char valornewpixel(unsigned char** matriz,int* matfiltro, int tamfiltro, int pivotei, int pivotej){
int i,j,k,l;
unsigned char devolver;
int valor=0;
for( i=pivotei,k=0;k<tamfiltro;i++,k++){
 1000be0:	e0bffb17 	ldw	r2,-20(fp)
 1000be4:	10800044 	addi	r2,r2,1
 1000be8:	e0bffb15 	stw	r2,-20(fp)
 1000bec:	e0bff917 	ldw	r2,-28(fp)
 1000bf0:	10800044 	addi	r2,r2,1
 1000bf4:	e0bff915 	stw	r2,-28(fp)
 1000bf8:	e0fff917 	ldw	r3,-28(fp)
 1000bfc:	e0bffe17 	ldw	r2,-8(fp)
 1000c00:	18bfcf16 	blt	r3,r2,1000b40 <valornewpixel+0x38>
for(j=pivotej,l=0;l<tamfiltro;j++,l++){
valor+=(((int)matriz[i][j])*matfiltro[pos(k,l,tamfiltro)]);
}
}
valor=(valor/(tamfiltro*tamfiltro));
 1000c04:	e13ffe17 	ldw	r4,-8(fp)
 1000c08:	e17ffe17 	ldw	r5,-8(fp)
 1000c0c:	10010a40 	call	10010a4 <__mulsi3>
 1000c10:	100b883a 	mov	r5,r2
 1000c14:	e13ff617 	ldw	r4,-40(fp)
 1000c18:	1000fd40 	call	1000fd4 <__divsi3>
 1000c1c:	e0bff615 	stw	r2,-40(fp)
if(valor>255)
 1000c20:	e0bff617 	ldw	r2,-40(fp)
 1000c24:	10804010 	cmplti	r2,r2,256
 1000c28:	1000021e 	bne	r2,zero,1000c34 <valornewpixel+0x12c>
valor=255;
 1000c2c:	00803fc4 	movi	r2,255
 1000c30:	e0bff615 	stw	r2,-40(fp)
devolver=(unsigned char)valor;
 1000c34:	e0bff617 	ldw	r2,-40(fp)
 1000c38:	e0bff705 	stb	r2,-36(fp)
return devolver;
 1000c3c:	e0bff703 	ldbu	r2,-36(fp)
}
 1000c40:	e037883a 	mov	sp,fp
 1000c44:	dfc00217 	ldw	ra,8(sp)
 1000c48:	df000117 	ldw	fp,4(sp)
 1000c4c:	dc000017 	ldw	r16,0(sp)
 1000c50:	dec00304 	addi	sp,sp,12
 1000c54:	f800283a 	ret

01000c58 <aplicarfiltro>:
void aplicarfiltro(unsigned char** matriz, int* matfiltro, unsigned char ** newmatriz, int filasmat, int columnasmat,int tamfiltro){
 1000c58:	defff604 	addi	sp,sp,-40
 1000c5c:	dfc00915 	stw	ra,36(sp)
 1000c60:	df000815 	stw	fp,32(sp)
 1000c64:	dc000715 	stw	r16,28(sp)
 1000c68:	df000704 	addi	fp,sp,28
 1000c6c:	e13ffc15 	stw	r4,-16(fp)
 1000c70:	e17ffd15 	stw	r5,-12(fp)
 1000c74:	e1bffe15 	stw	r6,-8(fp)
 1000c78:	e1ffff15 	stw	r7,-4(fp)
printf("Estoy en aplicarfiltro \n");
 1000c7c:	01004074 	movhi	r4,257
 1000c80:	210d0f04 	addi	r4,r4,13372
 1000c84:	10035fc0 	call	10035fc <puts>
int i,j;
for (i=0;i<filasmat;i++){
 1000c88:	e03ffb15 	stw	zero,-20(fp)
 1000c8c:	00001c06 	br	1000d00 <aplicarfiltro+0xa8>
for(j=0;j<columnasmat;j++){
 1000c90:	e03ffa15 	stw	zero,-24(fp)
 1000c94:	00001406 	br	1000ce8 <aplicarfiltro+0x90>
newmatriz[i][j]=valornewpixel(matriz,matfiltro,tamfiltro,i,j);
 1000c98:	e0bffb17 	ldw	r2,-20(fp)
 1000c9c:	1085883a 	add	r2,r2,r2
 1000ca0:	1085883a 	add	r2,r2,r2
 1000ca4:	1007883a 	mov	r3,r2
 1000ca8:	e0bffe17 	ldw	r2,-8(fp)
 1000cac:	1885883a 	add	r2,r3,r2
 1000cb0:	10c00017 	ldw	r3,0(r2)
 1000cb4:	e0bffa17 	ldw	r2,-24(fp)
 1000cb8:	18a1883a 	add	r16,r3,r2
 1000cbc:	e0bffa17 	ldw	r2,-24(fp)
 1000cc0:	d8800015 	stw	r2,0(sp)
 1000cc4:	e13ffc17 	ldw	r4,-16(fp)
 1000cc8:	e17ffd17 	ldw	r5,-12(fp)
 1000ccc:	e1800417 	ldw	r6,16(fp)
 1000cd0:	e1fffb17 	ldw	r7,-20(fp)
 1000cd4:	1000b080 	call	1000b08 <valornewpixel>
 1000cd8:	80800005 	stb	r2,0(r16)
}
void aplicarfiltro(unsigned char** matriz, int* matfiltro, unsigned char ** newmatriz, int filasmat, int columnasmat,int tamfiltro){
printf("Estoy en aplicarfiltro \n");
int i,j;
for (i=0;i<filasmat;i++){
for(j=0;j<columnasmat;j++){
 1000cdc:	e0bffa17 	ldw	r2,-24(fp)
 1000ce0:	10800044 	addi	r2,r2,1
 1000ce4:	e0bffa15 	stw	r2,-24(fp)
 1000ce8:	e0fffa17 	ldw	r3,-24(fp)
 1000cec:	e0800317 	ldw	r2,12(fp)
 1000cf0:	18bfe916 	blt	r3,r2,1000c98 <aplicarfiltro+0x40>
return devolver;
}
void aplicarfiltro(unsigned char** matriz, int* matfiltro, unsigned char ** newmatriz, int filasmat, int columnasmat,int tamfiltro){
printf("Estoy en aplicarfiltro \n");
int i,j;
for (i=0;i<filasmat;i++){
 1000cf4:	e0bffb17 	ldw	r2,-20(fp)
 1000cf8:	10800044 	addi	r2,r2,1
 1000cfc:	e0bffb15 	stw	r2,-20(fp)
 1000d00:	e0fffb17 	ldw	r3,-20(fp)
 1000d04:	e0bfff17 	ldw	r2,-4(fp)
 1000d08:	18bfe116 	blt	r3,r2,1000c90 <aplicarfiltro+0x38>
for(j=0;j<columnasmat;j++){
newmatriz[i][j]=valornewpixel(matriz,matfiltro,tamfiltro,i,j);
}
}
}
 1000d0c:	e037883a 	mov	sp,fp
 1000d10:	dfc00217 	ldw	ra,8(sp)
 1000d14:	df000117 	ldw	fp,4(sp)
 1000d18:	dc000017 	ldw	r16,0(sp)
 1000d1c:	dec00304 	addi	sp,sp,12
 1000d20:	f800283a 	ret

01000d24 <func1>:
void func1(){
 1000d24:	deffd204 	addi	sp,sp,-184
 1000d28:	dfc02d15 	stw	ra,180(sp)
 1000d2c:	df002c15 	stw	fp,176(sp)
 1000d30:	dc002b15 	stw	r16,172(sp)
 1000d34:	df002b04 	addi	fp,sp,172
int tamfiltro=5,modo=0,w,h,j;
 1000d38:	00800144 	movi	r2,5
 1000d3c:	e0bfdd15 	stw	r2,-140(fp)
 1000d40:	e03fdc15 	stw	zero,-144(fp)
unsigned char** matriz;
unsigned char** newmatriz;
int filtro[24];
char filename[15]="inputImage.pgm";
 1000d44:	00c04074 	movhi	r3,257
 1000d48:	18cd1e04 	addi	r3,r3,13432
 1000d4c:	18800017 	ldw	r2,0(r3)
 1000d50:	e0bff815 	stw	r2,-32(fp)
 1000d54:	18800117 	ldw	r2,4(r3)
 1000d58:	e0bff915 	stw	r2,-28(fp)
 1000d5c:	18800217 	ldw	r2,8(r3)
 1000d60:	e0bffa15 	stw	r2,-24(fp)
 1000d64:	1880030b 	ldhu	r2,12(r3)
 1000d68:	e0bffb0d 	sth	r2,-20(fp)
 1000d6c:	18800383 	ldbu	r2,14(r3)
 1000d70:	e0bffb85 	stb	r2,-18(fp)
char outname[16]="outputImage.pgm";
 1000d74:	00804074 	movhi	r2,257
 1000d78:	108d2204 	addi	r2,r2,13448
 1000d7c:	e13ffbc4 	addi	r4,fp,-17
 1000d80:	100b883a 	mov	r5,r2
 1000d84:	01800404 	movi	r6,16
 1000d88:	10033340 	call	1003334 <memcpy>
int ow,oh;
matriz=pgmread(filename,&h,&w);
 1000d8c:	e13ff804 	addi	r4,fp,-32
 1000d90:	e17fdf04 	addi	r5,fp,-132
 1000d94:	e1bfde04 	addi	r6,fp,-136
 1000d98:	10001d00 	call	10001d0 <pgmread>
 1000d9c:	e0bfda15 	stw	r2,-152(fp)
if (tamfiltro > 0){
 1000da0:	e0bfdd17 	ldw	r2,-140(fp)
 1000da4:	10800050 	cmplti	r2,r2,1
 1000da8:	1000431e 	bne	r2,zero,1000eb8 <func1+0x194>
rellenar_filtro(filtro,tamfiltro,modo);
 1000dac:	e13fe004 	addi	r4,fp,-128
 1000db0:	e17fdd17 	ldw	r5,-140(fp)
 1000db4:	e1bfdc17 	ldw	r6,-144(fp)
 1000db8:	10009980 	call	1000998 <rellenar_filtro>
ow=w-(tamfiltro-1);
 1000dbc:	e0ffde17 	ldw	r3,-136(fp)
 1000dc0:	e0bfdd17 	ldw	r2,-140(fp)
 1000dc4:	1885c83a 	sub	r2,r3,r2
 1000dc8:	10800044 	addi	r2,r2,1
 1000dcc:	e0bfd815 	stw	r2,-160(fp)
oh=h-(tamfiltro-1);
 1000dd0:	e0ffdf17 	ldw	r3,-132(fp)
 1000dd4:	e0bfdd17 	ldw	r2,-140(fp)
 1000dd8:	1885c83a 	sub	r2,r3,r2
 1000ddc:	10800044 	addi	r2,r2,1
 1000de0:	e0bfd715 	stw	r2,-164(fp)
newmatriz = calloc(ow, sizeof(unsigned char*));
 1000de4:	e13fd817 	ldw	r4,-160(fp)
 1000de8:	01400104 	movi	r5,4
 1000dec:	10010dc0 	call	10010dc <calloc>
 1000df0:	e0bfd915 	stw	r2,-156(fp)
for (j=0;j<ow;j++){
 1000df4:	e03fdb15 	stw	zero,-148(fp)
 1000df8:	00001506 	br	1000e50 <func1+0x12c>
if (( newmatriz[j] = calloc(oh, sizeof(unsigned char))) == NULL){
 1000dfc:	e0bfdb17 	ldw	r2,-148(fp)
 1000e00:	1085883a 	add	r2,r2,r2
 1000e04:	1085883a 	add	r2,r2,r2
 1000e08:	1007883a 	mov	r3,r2
 1000e0c:	e0bfd917 	ldw	r2,-156(fp)
 1000e10:	18a1883a 	add	r16,r3,r2
 1000e14:	e13fd717 	ldw	r4,-164(fp)
 1000e18:	01400044 	movi	r5,1
 1000e1c:	10010dc0 	call	10010dc <calloc>
 1000e20:	80800015 	stw	r2,0(r16)
 1000e24:	80800017 	ldw	r2,0(r16)
 1000e28:	1004c03a 	cmpne	r2,r2,zero
 1000e2c:	1000051e 	bne	r2,zero,1000e44 <func1+0x120>
printf("Memory allocation error. Exit program\n");
 1000e30:	01004074 	movhi	r4,257
 1000e34:	210cce04 	addi	r4,r4,13112
 1000e38:	10035fc0 	call	10035fc <puts>
exit(1);
 1000e3c:	01000044 	movi	r4,1
 1000e40:	10011c00 	call	10011c0 <exit>
if (tamfiltro > 0){
rellenar_filtro(filtro,tamfiltro,modo);
ow=w-(tamfiltro-1);
oh=h-(tamfiltro-1);
newmatriz = calloc(ow, sizeof(unsigned char*));
for (j=0;j<ow;j++){
 1000e44:	e0bfdb17 	ldw	r2,-148(fp)
 1000e48:	10800044 	addi	r2,r2,1
 1000e4c:	e0bfdb15 	stw	r2,-148(fp)
 1000e50:	e0ffdb17 	ldw	r3,-148(fp)
 1000e54:	e0bfd817 	ldw	r2,-160(fp)
 1000e58:	18bfe816 	blt	r3,r2,1000dfc <func1+0xd8>
if (( newmatriz[j] = calloc(oh, sizeof(unsigned char))) == NULL){
printf("Memory allocation error. Exit program\n");
exit(1);
}
}
printf("I ended creating the row %d \n", j);
 1000e5c:	01004074 	movhi	r4,257
 1000e60:	210d1504 	addi	r4,r4,13396
 1000e64:	e17fdb17 	ldw	r5,-148(fp)
 1000e68:	10034e40 	call	10034e4 <printf>
aplicarfiltro(matriz,filtro,newmatriz,ow,oh,tamfiltro);
 1000e6c:	e17fe004 	addi	r5,fp,-128
 1000e70:	e0bfd717 	ldw	r2,-164(fp)
 1000e74:	d8800015 	stw	r2,0(sp)
 1000e78:	e0bfdd17 	ldw	r2,-140(fp)
 1000e7c:	d8800115 	stw	r2,4(sp)
 1000e80:	e13fda17 	ldw	r4,-152(fp)
 1000e84:	e1bfd917 	ldw	r6,-156(fp)
 1000e88:	e1ffd817 	ldw	r7,-160(fp)
 1000e8c:	1000c580 	call	1000c58 <aplicarfiltro>
pgmwrite(outname,ow,oh,newmatriz,"",1);
 1000e90:	e13ffbc4 	addi	r4,fp,-17
 1000e94:	00804074 	movhi	r2,257
 1000e98:	108d1d04 	addi	r2,r2,13428
 1000e9c:	d8800015 	stw	r2,0(sp)
 1000ea0:	00800044 	movi	r2,1
 1000ea4:	d8800115 	stw	r2,4(sp)
 1000ea8:	e17fd817 	ldw	r5,-160(fp)
 1000eac:	e1bfd717 	ldw	r6,-164(fp)
 1000eb0:	e1ffd917 	ldw	r7,-156(fp)
 1000eb4:	10006180 	call	1000618 <pgmwrite>
}
}
 1000eb8:	e037883a 	mov	sp,fp
 1000ebc:	dfc00217 	ldw	ra,8(sp)
 1000ec0:	df000117 	ldw	fp,4(sp)
 1000ec4:	dc000017 	ldw	r16,0(sp)
 1000ec8:	dec00304 	addi	sp,sp,12
 1000ecc:	f800283a 	ret

01000ed0 <main>:
int main(void){
 1000ed0:	defffa04 	addi	sp,sp,-24
 1000ed4:	dfc00515 	stw	ra,20(sp)
 1000ed8:	df000415 	stw	fp,16(sp)
 1000edc:	df000404 	addi	fp,sp,16
//func1();
//Comment top and uncomment this from altera
alt_u32 time1;
alt_u32 time2;
alt_u32 time3;
if (alt_timestamp_start() < 0)
 1000ee0:	1011f340 	call	1011f34 <alt_timestamp_start>
 1000ee4:	1004403a 	cmpge	r2,r2,zero
 1000ee8:	1000041e 	bne	r2,zero,1000efc <main+0x2c>
{
printf ("No timestamp device available\n");
 1000eec:	01004074 	movhi	r4,257
 1000ef0:	210d2604 	addi	r4,r4,13464
 1000ef4:	10035fc0 	call	10035fc <puts>
printf ("Number of ticks per second = %u\n",
(unsigned int)alt_timestamp_freq());
}*/
return 0;
}
}
 1000ef8:	00001106 	br	1000f40 <main+0x70>
{
printf ("No timestamp device available\n");
}
else
{
time1 = alt_timestamp();
 1000efc:	10120000 	call	1012000 <alt_timestamp>
 1000f00:	1009883a 	mov	r4,r2
 1000f04:	180b883a 	mov	r5,r3
 1000f08:	e13ffe15 	stw	r4,-8(fp)
func1(); //first function to monitor
 1000f0c:	1000d240 	call	1000d24 <func1>
time2 = alt_timestamp();
 1000f10:	10120000 	call	1012000 <alt_timestamp>
 1000f14:	1009883a 	mov	r4,r2
 1000f18:	180b883a 	mov	r5,r3
 1000f1c:	e13ffd15 	stw	r4,-12(fp)
//func2(); /* second function to monitor */
//time3 = alt_timestamp();
printf ("time in func1 = %u ticks\n", (unsigned int) (time2 - time1));
 1000f20:	e0fffd17 	ldw	r3,-12(fp)
 1000f24:	e0bffe17 	ldw	r2,-8(fp)
 1000f28:	188bc83a 	sub	r5,r3,r2
 1000f2c:	01004074 	movhi	r4,257
 1000f30:	210d2e04 	addi	r4,r4,13496
 1000f34:	10034e40 	call	10034e4 <printf>
/*printf ("time in func2 = %u ticks\n",
(unsigned int) (time3 - time2));
printf ("Number of ticks per second = %u\n",
(unsigned int)alt_timestamp_freq());
}*/
return 0;
 1000f38:	0005883a 	mov	r2,zero
 1000f3c:	e0bfff15 	stw	r2,-4(fp)
}
}
 1000f40:	e0bfff17 	ldw	r2,-4(fp)
 1000f44:	e037883a 	mov	sp,fp
 1000f48:	dfc00117 	ldw	ra,4(sp)
 1000f4c:	df000017 	ldw	fp,0(sp)
 1000f50:	dec00204 	addi	sp,sp,8
 1000f54:	f800283a 	ret

01000f58 <udivmodsi4>:
 1000f58:	29001b2e 	bgeu	r5,r4,1000fc8 <udivmodsi4+0x70>
 1000f5c:	28001a16 	blt	r5,zero,1000fc8 <udivmodsi4+0x70>
 1000f60:	00800044 	movi	r2,1
 1000f64:	0007883a 	mov	r3,zero
 1000f68:	01c007c4 	movi	r7,31
 1000f6c:	00000306 	br	1000f7c <udivmodsi4+0x24>
 1000f70:	19c01326 	beq	r3,r7,1000fc0 <udivmodsi4+0x68>
 1000f74:	18c00044 	addi	r3,r3,1
 1000f78:	28000416 	blt	r5,zero,1000f8c <udivmodsi4+0x34>
 1000f7c:	294b883a 	add	r5,r5,r5
 1000f80:	1085883a 	add	r2,r2,r2
 1000f84:	293ffa36 	bltu	r5,r4,1000f70 <udivmodsi4+0x18>
 1000f88:	10000d26 	beq	r2,zero,1000fc0 <udivmodsi4+0x68>
 1000f8c:	0007883a 	mov	r3,zero
 1000f90:	21400236 	bltu	r4,r5,1000f9c <udivmodsi4+0x44>
 1000f94:	2149c83a 	sub	r4,r4,r5
 1000f98:	1886b03a 	or	r3,r3,r2
 1000f9c:	1004d07a 	srli	r2,r2,1
 1000fa0:	280ad07a 	srli	r5,r5,1
 1000fa4:	103ffa1e 	bne	r2,zero,1000f90 <udivmodsi4+0x38>
 1000fa8:	30000226 	beq	r6,zero,1000fb4 <udivmodsi4+0x5c>
 1000fac:	2005883a 	mov	r2,r4
 1000fb0:	f800283a 	ret
 1000fb4:	1809883a 	mov	r4,r3
 1000fb8:	2005883a 	mov	r2,r4
 1000fbc:	f800283a 	ret
 1000fc0:	0007883a 	mov	r3,zero
 1000fc4:	003ff806 	br	1000fa8 <udivmodsi4+0x50>
 1000fc8:	00800044 	movi	r2,1
 1000fcc:	0007883a 	mov	r3,zero
 1000fd0:	003fef06 	br	1000f90 <udivmodsi4+0x38>

01000fd4 <__divsi3>:
 1000fd4:	defffe04 	addi	sp,sp,-8
 1000fd8:	dc000015 	stw	r16,0(sp)
 1000fdc:	dfc00115 	stw	ra,4(sp)
 1000fe0:	0021883a 	mov	r16,zero
 1000fe4:	20000c16 	blt	r4,zero,1001018 <__divsi3+0x44>
 1000fe8:	000d883a 	mov	r6,zero
 1000fec:	28000e16 	blt	r5,zero,1001028 <__divsi3+0x54>
 1000ff0:	1000f580 	call	1000f58 <udivmodsi4>
 1000ff4:	1007883a 	mov	r3,r2
 1000ff8:	8005003a 	cmpeq	r2,r16,zero
 1000ffc:	1000011e 	bne	r2,zero,1001004 <__divsi3+0x30>
 1001000:	00c7c83a 	sub	r3,zero,r3
 1001004:	1805883a 	mov	r2,r3
 1001008:	dfc00117 	ldw	ra,4(sp)
 100100c:	dc000017 	ldw	r16,0(sp)
 1001010:	dec00204 	addi	sp,sp,8
 1001014:	f800283a 	ret
 1001018:	0109c83a 	sub	r4,zero,r4
 100101c:	04000044 	movi	r16,1
 1001020:	000d883a 	mov	r6,zero
 1001024:	283ff20e 	bge	r5,zero,1000ff0 <__divsi3+0x1c>
 1001028:	014bc83a 	sub	r5,zero,r5
 100102c:	8021003a 	cmpeq	r16,r16,zero
 1001030:	003fef06 	br	1000ff0 <__divsi3+0x1c>

01001034 <__modsi3>:
 1001034:	deffff04 	addi	sp,sp,-4
 1001038:	dfc00015 	stw	ra,0(sp)
 100103c:	01800044 	movi	r6,1
 1001040:	2807883a 	mov	r3,r5
 1001044:	20000416 	blt	r4,zero,1001058 <__modsi3+0x24>
 1001048:	28000c16 	blt	r5,zero,100107c <__modsi3+0x48>
 100104c:	dfc00017 	ldw	ra,0(sp)
 1001050:	dec00104 	addi	sp,sp,4
 1001054:	1000f581 	jmpi	1000f58 <udivmodsi4>
 1001058:	0109c83a 	sub	r4,zero,r4
 100105c:	28000b16 	blt	r5,zero,100108c <__modsi3+0x58>
 1001060:	180b883a 	mov	r5,r3
 1001064:	01800044 	movi	r6,1
 1001068:	1000f580 	call	1000f58 <udivmodsi4>
 100106c:	0085c83a 	sub	r2,zero,r2
 1001070:	dfc00017 	ldw	ra,0(sp)
 1001074:	dec00104 	addi	sp,sp,4
 1001078:	f800283a 	ret
 100107c:	014bc83a 	sub	r5,zero,r5
 1001080:	dfc00017 	ldw	ra,0(sp)
 1001084:	dec00104 	addi	sp,sp,4
 1001088:	1000f581 	jmpi	1000f58 <udivmodsi4>
 100108c:	0147c83a 	sub	r3,zero,r5
 1001090:	003ff306 	br	1001060 <__modsi3+0x2c>

01001094 <__udivsi3>:
 1001094:	000d883a 	mov	r6,zero
 1001098:	1000f581 	jmpi	1000f58 <udivmodsi4>

0100109c <__umodsi3>:
 100109c:	01800044 	movi	r6,1
 10010a0:	1000f581 	jmpi	1000f58 <udivmodsi4>

010010a4 <__mulsi3>:
 10010a4:	20000a26 	beq	r4,zero,10010d0 <__mulsi3+0x2c>
 10010a8:	0007883a 	mov	r3,zero
 10010ac:	2080004c 	andi	r2,r4,1
 10010b0:	1005003a 	cmpeq	r2,r2,zero
 10010b4:	2008d07a 	srli	r4,r4,1
 10010b8:	1000011e 	bne	r2,zero,10010c0 <__mulsi3+0x1c>
 10010bc:	1947883a 	add	r3,r3,r5
 10010c0:	294b883a 	add	r5,r5,r5
 10010c4:	203ff91e 	bne	r4,zero,10010ac <__mulsi3+0x8>
 10010c8:	1805883a 	mov	r2,r3
 10010cc:	f800283a 	ret
 10010d0:	0007883a 	mov	r3,zero
 10010d4:	1805883a 	mov	r2,r3
 10010d8:	f800283a 	ret

010010dc <calloc>:
 10010dc:	01804074 	movhi	r6,257
 10010e0:	31915504 	addi	r6,r6,17748
 10010e4:	2007883a 	mov	r3,r4
 10010e8:	31000017 	ldw	r4,0(r6)
 10010ec:	280d883a 	mov	r6,r5
 10010f0:	180b883a 	mov	r5,r3
 10010f4:	10010f81 	jmpi	10010f8 <_calloc_r>

010010f8 <_calloc_r>:
 10010f8:	defffe04 	addi	sp,sp,-8
 10010fc:	dc400015 	stw	r17,0(sp)
 1001100:	2023883a 	mov	r17,r4
 1001104:	2809883a 	mov	r4,r5
 1001108:	300b883a 	mov	r5,r6
 100110c:	dfc00115 	stw	ra,4(sp)
 1001110:	10010a40 	call	10010a4 <__mulsi3>
 1001114:	100b883a 	mov	r5,r2
 1001118:	8809883a 	mov	r4,r17
 100111c:	1002b100 	call	1002b10 <_malloc_r>
 1001120:	1023883a 	mov	r17,r2
 1001124:	01c00904 	movi	r7,36
 1001128:	10000d26 	beq	r2,zero,1001160 <_calloc_r+0x68>
 100112c:	10ffff17 	ldw	r3,-4(r2)
 1001130:	1009883a 	mov	r4,r2
 1001134:	00bfff04 	movi	r2,-4
 1001138:	1886703a 	and	r3,r3,r2
 100113c:	1887883a 	add	r3,r3,r2
 1001140:	180d883a 	mov	r6,r3
 1001144:	000b883a 	mov	r5,zero
 1001148:	38c01736 	bltu	r7,r3,10011a8 <_calloc_r+0xb0>
 100114c:	008004c4 	movi	r2,19
 1001150:	10c00836 	bltu	r2,r3,1001174 <_calloc_r+0x7c>
 1001154:	20000215 	stw	zero,8(r4)
 1001158:	20000015 	stw	zero,0(r4)
 100115c:	20000115 	stw	zero,4(r4)
 1001160:	8805883a 	mov	r2,r17
 1001164:	dfc00117 	ldw	ra,4(sp)
 1001168:	dc400017 	ldw	r17,0(sp)
 100116c:	dec00204 	addi	sp,sp,8
 1001170:	f800283a 	ret
 1001174:	008006c4 	movi	r2,27
 1001178:	88000015 	stw	zero,0(r17)
 100117c:	88000115 	stw	zero,4(r17)
 1001180:	89000204 	addi	r4,r17,8
 1001184:	10fff32e 	bgeu	r2,r3,1001154 <_calloc_r+0x5c>
 1001188:	88000215 	stw	zero,8(r17)
 100118c:	88000315 	stw	zero,12(r17)
 1001190:	89000404 	addi	r4,r17,16
 1001194:	19ffef1e 	bne	r3,r7,1001154 <_calloc_r+0x5c>
 1001198:	89000604 	addi	r4,r17,24
 100119c:	88000415 	stw	zero,16(r17)
 10011a0:	88000515 	stw	zero,20(r17)
 10011a4:	003feb06 	br	1001154 <_calloc_r+0x5c>
 10011a8:	10033d40 	call	10033d4 <memset>
 10011ac:	8805883a 	mov	r2,r17
 10011b0:	dfc00117 	ldw	ra,4(sp)
 10011b4:	dc400017 	ldw	r17,0(sp)
 10011b8:	dec00204 	addi	sp,sp,8
 10011bc:	f800283a 	ret

010011c0 <exit>:
 10011c0:	defffe04 	addi	sp,sp,-8
 10011c4:	000b883a 	mov	r5,zero
 10011c8:	dc000015 	stw	r16,0(sp)
 10011cc:	dfc00115 	stw	ra,4(sp)
 10011d0:	2021883a 	mov	r16,r4
 10011d4:	10074a40 	call	10074a4 <__call_exitprocs>
 10011d8:	00804074 	movhi	r2,257
 10011dc:	10915604 	addi	r2,r2,17752
 10011e0:	11000017 	ldw	r4,0(r2)
 10011e4:	20800f17 	ldw	r2,60(r4)
 10011e8:	10000126 	beq	r2,zero,10011f0 <exit+0x30>
 10011ec:	103ee83a 	callr	r2
 10011f0:	8009883a 	mov	r4,r16
 10011f4:	1010e840 	call	1010e84 <_exit>

010011f8 <_fclose_r>:
 10011f8:	defffc04 	addi	sp,sp,-16
 10011fc:	dc400115 	stw	r17,4(sp)
 1001200:	dc000015 	stw	r16,0(sp)
 1001204:	dfc00315 	stw	ra,12(sp)
 1001208:	dc800215 	stw	r18,8(sp)
 100120c:	2821883a 	mov	r16,r5
 1001210:	2023883a 	mov	r17,r4
 1001214:	28002926 	beq	r5,zero,10012bc <_fclose_r+0xc4>
 1001218:	10017100 	call	1001710 <__sfp_lock_acquire>
 100121c:	88000226 	beq	r17,zero,1001228 <_fclose_r+0x30>
 1001220:	88800e17 	ldw	r2,56(r17)
 1001224:	10002d26 	beq	r2,zero,10012dc <_fclose_r+0xe4>
 1001228:	8080030f 	ldh	r2,12(r16)
 100122c:	10002226 	beq	r2,zero,10012b8 <_fclose_r+0xc0>
 1001230:	8809883a 	mov	r4,r17
 1001234:	800b883a 	mov	r5,r16
 1001238:	100131c0 	call	100131c <_fflush_r>
 100123c:	1025883a 	mov	r18,r2
 1001240:	80800b17 	ldw	r2,44(r16)
 1001244:	10000426 	beq	r2,zero,1001258 <_fclose_r+0x60>
 1001248:	81400717 	ldw	r5,28(r16)
 100124c:	8809883a 	mov	r4,r17
 1001250:	103ee83a 	callr	r2
 1001254:	10002a16 	blt	r2,zero,1001300 <_fclose_r+0x108>
 1001258:	8080030b 	ldhu	r2,12(r16)
 100125c:	1080200c 	andi	r2,r2,128
 1001260:	1000231e 	bne	r2,zero,10012f0 <_fclose_r+0xf8>
 1001264:	81400c17 	ldw	r5,48(r16)
 1001268:	28000526 	beq	r5,zero,1001280 <_fclose_r+0x88>
 100126c:	80801004 	addi	r2,r16,64
 1001270:	28800226 	beq	r5,r2,100127c <_fclose_r+0x84>
 1001274:	8809883a 	mov	r4,r17
 1001278:	1001e940 	call	1001e94 <_free_r>
 100127c:	80000c15 	stw	zero,48(r16)
 1001280:	81401117 	ldw	r5,68(r16)
 1001284:	28000326 	beq	r5,zero,1001294 <_fclose_r+0x9c>
 1001288:	8809883a 	mov	r4,r17
 100128c:	1001e940 	call	1001e94 <_free_r>
 1001290:	80001115 	stw	zero,68(r16)
 1001294:	8000030d 	sth	zero,12(r16)
 1001298:	10017140 	call	1001714 <__sfp_lock_release>
 100129c:	9005883a 	mov	r2,r18
 10012a0:	dfc00317 	ldw	ra,12(sp)
 10012a4:	dc800217 	ldw	r18,8(sp)
 10012a8:	dc400117 	ldw	r17,4(sp)
 10012ac:	dc000017 	ldw	r16,0(sp)
 10012b0:	dec00404 	addi	sp,sp,16
 10012b4:	f800283a 	ret
 10012b8:	10017140 	call	1001714 <__sfp_lock_release>
 10012bc:	0025883a 	mov	r18,zero
 10012c0:	9005883a 	mov	r2,r18
 10012c4:	dfc00317 	ldw	ra,12(sp)
 10012c8:	dc800217 	ldw	r18,8(sp)
 10012cc:	dc400117 	ldw	r17,4(sp)
 10012d0:	dc000017 	ldw	r16,0(sp)
 10012d4:	dec00404 	addi	sp,sp,16
 10012d8:	f800283a 	ret
 10012dc:	8809883a 	mov	r4,r17
 10012e0:	10017200 	call	1001720 <__sinit>
 10012e4:	8080030f 	ldh	r2,12(r16)
 10012e8:	103fd11e 	bne	r2,zero,1001230 <_fclose_r+0x38>
 10012ec:	003ff206 	br	10012b8 <_fclose_r+0xc0>
 10012f0:	81400417 	ldw	r5,16(r16)
 10012f4:	8809883a 	mov	r4,r17
 10012f8:	1001e940 	call	1001e94 <_free_r>
 10012fc:	003fd906 	br	1001264 <_fclose_r+0x6c>
 1001300:	04bfffc4 	movi	r18,-1
 1001304:	003fd406 	br	1001258 <_fclose_r+0x60>

01001308 <fclose>:
 1001308:	00804074 	movhi	r2,257
 100130c:	10915504 	addi	r2,r2,17748
 1001310:	200b883a 	mov	r5,r4
 1001314:	11000017 	ldw	r4,0(r2)
 1001318:	10011f81 	jmpi	10011f8 <_fclose_r>

0100131c <_fflush_r>:
 100131c:	defffb04 	addi	sp,sp,-20
 1001320:	dcc00315 	stw	r19,12(sp)
 1001324:	dc800215 	stw	r18,8(sp)
 1001328:	dfc00415 	stw	ra,16(sp)
 100132c:	dc400115 	stw	r17,4(sp)
 1001330:	dc000015 	stw	r16,0(sp)
 1001334:	2027883a 	mov	r19,r4
 1001338:	2825883a 	mov	r18,r5
 100133c:	20000226 	beq	r4,zero,1001348 <_fflush_r+0x2c>
 1001340:	20800e17 	ldw	r2,56(r4)
 1001344:	10005626 	beq	r2,zero,10014a0 <_fflush_r+0x184>
 1001348:	9100030b 	ldhu	r4,12(r18)
 100134c:	20ffffcc 	andi	r3,r4,65535
 1001350:	18e0001c 	xori	r3,r3,32768
 1001354:	18e00004 	addi	r3,r3,-32768
 1001358:	1880020c 	andi	r2,r3,8
 100135c:	1000261e 	bne	r2,zero,10013f8 <_fflush_r+0xdc>
 1001360:	90c00117 	ldw	r3,4(r18)
 1001364:	20820014 	ori	r2,r4,2048
 1001368:	9080030d 	sth	r2,12(r18)
 100136c:	1009883a 	mov	r4,r2
 1001370:	00c0400e 	bge	zero,r3,1001474 <_fflush_r+0x158>
 1001374:	92000a17 	ldw	r8,40(r18)
 1001378:	40004026 	beq	r8,zero,100147c <_fflush_r+0x160>
 100137c:	2084000c 	andi	r2,r4,4096
 1001380:	10005326 	beq	r2,zero,10014d0 <_fflush_r+0x1b4>
 1001384:	94001417 	ldw	r16,80(r18)
 1001388:	9080030b 	ldhu	r2,12(r18)
 100138c:	1080010c 	andi	r2,r2,4
 1001390:	1000481e 	bne	r2,zero,10014b4 <_fflush_r+0x198>
 1001394:	91400717 	ldw	r5,28(r18)
 1001398:	9809883a 	mov	r4,r19
 100139c:	800d883a 	mov	r6,r16
 10013a0:	000f883a 	mov	r7,zero
 10013a4:	403ee83a 	callr	r8
 10013a8:	8080261e 	bne	r16,r2,1001444 <_fflush_r+0x128>
 10013ac:	9080030b 	ldhu	r2,12(r18)
 10013b0:	91000417 	ldw	r4,16(r18)
 10013b4:	90000115 	stw	zero,4(r18)
 10013b8:	10bdffcc 	andi	r2,r2,63487
 10013bc:	10ffffcc 	andi	r3,r2,65535
 10013c0:	18c4000c 	andi	r3,r3,4096
 10013c4:	9080030d 	sth	r2,12(r18)
 10013c8:	91000015 	stw	r4,0(r18)
 10013cc:	18002b26 	beq	r3,zero,100147c <_fflush_r+0x160>
 10013d0:	0007883a 	mov	r3,zero
 10013d4:	1805883a 	mov	r2,r3
 10013d8:	94001415 	stw	r16,80(r18)
 10013dc:	dfc00417 	ldw	ra,16(sp)
 10013e0:	dcc00317 	ldw	r19,12(sp)
 10013e4:	dc800217 	ldw	r18,8(sp)
 10013e8:	dc400117 	ldw	r17,4(sp)
 10013ec:	dc000017 	ldw	r16,0(sp)
 10013f0:	dec00504 	addi	sp,sp,20
 10013f4:	f800283a 	ret
 10013f8:	94400417 	ldw	r17,16(r18)
 10013fc:	88001f26 	beq	r17,zero,100147c <_fflush_r+0x160>
 1001400:	90800017 	ldw	r2,0(r18)
 1001404:	18c000cc 	andi	r3,r3,3
 1001408:	94400015 	stw	r17,0(r18)
 100140c:	1461c83a 	sub	r16,r2,r17
 1001410:	18002526 	beq	r3,zero,10014a8 <_fflush_r+0x18c>
 1001414:	0005883a 	mov	r2,zero
 1001418:	90800215 	stw	r2,8(r18)
 100141c:	0400170e 	bge	zero,r16,100147c <_fflush_r+0x160>
 1001420:	90c00917 	ldw	r3,36(r18)
 1001424:	91400717 	ldw	r5,28(r18)
 1001428:	880d883a 	mov	r6,r17
 100142c:	800f883a 	mov	r7,r16
 1001430:	9809883a 	mov	r4,r19
 1001434:	183ee83a 	callr	r3
 1001438:	88a3883a 	add	r17,r17,r2
 100143c:	80a1c83a 	sub	r16,r16,r2
 1001440:	00bff616 	blt	zero,r2,100141c <_fflush_r+0x100>
 1001444:	9080030b 	ldhu	r2,12(r18)
 1001448:	00ffffc4 	movi	r3,-1
 100144c:	10801014 	ori	r2,r2,64
 1001450:	9080030d 	sth	r2,12(r18)
 1001454:	1805883a 	mov	r2,r3
 1001458:	dfc00417 	ldw	ra,16(sp)
 100145c:	dcc00317 	ldw	r19,12(sp)
 1001460:	dc800217 	ldw	r18,8(sp)
 1001464:	dc400117 	ldw	r17,4(sp)
 1001468:	dc000017 	ldw	r16,0(sp)
 100146c:	dec00504 	addi	sp,sp,20
 1001470:	f800283a 	ret
 1001474:	90800f17 	ldw	r2,60(r18)
 1001478:	00bfbe16 	blt	zero,r2,1001374 <_fflush_r+0x58>
 100147c:	0007883a 	mov	r3,zero
 1001480:	1805883a 	mov	r2,r3
 1001484:	dfc00417 	ldw	ra,16(sp)
 1001488:	dcc00317 	ldw	r19,12(sp)
 100148c:	dc800217 	ldw	r18,8(sp)
 1001490:	dc400117 	ldw	r17,4(sp)
 1001494:	dc000017 	ldw	r16,0(sp)
 1001498:	dec00504 	addi	sp,sp,20
 100149c:	f800283a 	ret
 10014a0:	10017200 	call	1001720 <__sinit>
 10014a4:	003fa806 	br	1001348 <_fflush_r+0x2c>
 10014a8:	90800517 	ldw	r2,20(r18)
 10014ac:	90800215 	stw	r2,8(r18)
 10014b0:	003fda06 	br	100141c <_fflush_r+0x100>
 10014b4:	90800117 	ldw	r2,4(r18)
 10014b8:	90c00c17 	ldw	r3,48(r18)
 10014bc:	80a1c83a 	sub	r16,r16,r2
 10014c0:	183fb426 	beq	r3,zero,1001394 <_fflush_r+0x78>
 10014c4:	90800f17 	ldw	r2,60(r18)
 10014c8:	80a1c83a 	sub	r16,r16,r2
 10014cc:	003fb106 	br	1001394 <_fflush_r+0x78>
 10014d0:	91400717 	ldw	r5,28(r18)
 10014d4:	9809883a 	mov	r4,r19
 10014d8:	000d883a 	mov	r6,zero
 10014dc:	01c00044 	movi	r7,1
 10014e0:	403ee83a 	callr	r8
 10014e4:	1021883a 	mov	r16,r2
 10014e8:	00bfffc4 	movi	r2,-1
 10014ec:	80800226 	beq	r16,r2,10014f8 <_fflush_r+0x1dc>
 10014f0:	92000a17 	ldw	r8,40(r18)
 10014f4:	003fa406 	br	1001388 <_fflush_r+0x6c>
 10014f8:	98c00017 	ldw	r3,0(r19)
 10014fc:	00800744 	movi	r2,29
 1001500:	18bfde26 	beq	r3,r2,100147c <_fflush_r+0x160>
 1001504:	9080030b 	ldhu	r2,12(r18)
 1001508:	8007883a 	mov	r3,r16
 100150c:	10801014 	ori	r2,r2,64
 1001510:	9080030d 	sth	r2,12(r18)
 1001514:	003fcf06 	br	1001454 <_fflush_r+0x138>

01001518 <fflush>:
 1001518:	01404034 	movhi	r5,256
 100151c:	2944c704 	addi	r5,r5,4892
 1001520:	2007883a 	mov	r3,r4
 1001524:	20000526 	beq	r4,zero,100153c <fflush+0x24>
 1001528:	00804074 	movhi	r2,257
 100152c:	10915504 	addi	r2,r2,17748
 1001530:	11000017 	ldw	r4,0(r2)
 1001534:	180b883a 	mov	r5,r3
 1001538:	100131c1 	jmpi	100131c <_fflush_r>
 100153c:	00804074 	movhi	r2,257
 1001540:	10915604 	addi	r2,r2,17752
 1001544:	11000017 	ldw	r4,0(r2)
 1001548:	10026e81 	jmpi	10026e8 <_fwalk_reent>

0100154c <_fgets_r>:
 100154c:	defff804 	addi	sp,sp,-32
 1001550:	00800044 	movi	r2,1
 1001554:	dd800615 	stw	r22,24(sp)
 1001558:	dd400515 	stw	r21,20(sp)
 100155c:	dc400115 	stw	r17,4(sp)
 1001560:	dc000015 	stw	r16,0(sp)
 1001564:	dfc00715 	stw	ra,28(sp)
 1001568:	dd000415 	stw	r20,16(sp)
 100156c:	dcc00315 	stw	r19,12(sp)
 1001570:	dc800215 	stw	r18,8(sp)
 1001574:	3021883a 	mov	r16,r6
 1001578:	282d883a 	mov	r22,r5
 100157c:	3823883a 	mov	r17,r7
 1001580:	202b883a 	mov	r21,r4
 1001584:	1180410e 	bge	r2,r6,100168c <_fgets_r+0x140>
 1001588:	20000226 	beq	r4,zero,1001594 <_fgets_r+0x48>
 100158c:	20800e17 	ldw	r2,56(r4)
 1001590:	10002e26 	beq	r2,zero,100164c <_fgets_r+0x100>
 1001594:	853fffc4 	addi	r20,r16,-1
 1001598:	b027883a 	mov	r19,r22
 100159c:	88800117 	ldw	r2,4(r17)
 10015a0:	a809883a 	mov	r4,r21
 10015a4:	880b883a 	mov	r5,r17
 10015a8:	100d883a 	mov	r6,r2
 10015ac:	1000031e 	bne	r2,zero,10015bc <_fgets_r+0x70>
 10015b0:	10036100 	call	1003610 <__srefill_r>
 10015b4:	1000341e 	bne	r2,zero,1001688 <_fgets_r+0x13c>
 10015b8:	89800117 	ldw	r6,4(r17)
 10015bc:	01400284 	movi	r5,10
 10015c0:	3021883a 	mov	r16,r6
 10015c4:	8c800017 	ldw	r18,0(r17)
 10015c8:	a180012e 	bgeu	r20,r6,10015d0 <_fgets_r+0x84>
 10015cc:	a021883a 	mov	r16,r20
 10015d0:	9009883a 	mov	r4,r18
 10015d4:	800d883a 	mov	r6,r16
 10015d8:	10032500 	call	1003250 <memchr>
 10015dc:	1007883a 	mov	r3,r2
 10015e0:	900b883a 	mov	r5,r18
 10015e4:	9809883a 	mov	r4,r19
 10015e8:	800d883a 	mov	r6,r16
 10015ec:	1000191e 	bne	r2,zero,1001654 <_fgets_r+0x108>
 10015f0:	88800117 	ldw	r2,4(r17)
 10015f4:	88c00017 	ldw	r3,0(r17)
 10015f8:	9c27883a 	add	r19,r19,r16
 10015fc:	1405c83a 	sub	r2,r2,r16
 1001600:	1c07883a 	add	r3,r3,r16
 1001604:	88c00015 	stw	r3,0(r17)
 1001608:	88800115 	stw	r2,4(r17)
 100160c:	10033340 	call	1003334 <memcpy>
 1001610:	a407c83a 	sub	r3,r20,r16
 1001614:	1829883a 	mov	r20,r3
 1001618:	183fe01e 	bne	r3,zero,100159c <_fgets_r+0x50>
 100161c:	98000005 	stb	zero,0(r19)
 1001620:	b005883a 	mov	r2,r22
 1001624:	dfc00717 	ldw	ra,28(sp)
 1001628:	dd800617 	ldw	r22,24(sp)
 100162c:	dd400517 	ldw	r21,20(sp)
 1001630:	dd000417 	ldw	r20,16(sp)
 1001634:	dcc00317 	ldw	r19,12(sp)
 1001638:	dc800217 	ldw	r18,8(sp)
 100163c:	dc400117 	ldw	r17,4(sp)
 1001640:	dc000017 	ldw	r16,0(sp)
 1001644:	dec00804 	addi	sp,sp,32
 1001648:	f800283a 	ret
 100164c:	10017200 	call	1001720 <__sinit>
 1001650:	003fd006 	br	1001594 <_fgets_r+0x48>
 1001654:	88800117 	ldw	r2,4(r17)
 1001658:	18c00044 	addi	r3,r3,1
 100165c:	1ca1c83a 	sub	r16,r3,r18
 1001660:	1405c83a 	sub	r2,r2,r16
 1001664:	800d883a 	mov	r6,r16
 1001668:	88c00015 	stw	r3,0(r17)
 100166c:	88800115 	stw	r2,4(r17)
 1001670:	900b883a 	mov	r5,r18
 1001674:	9809883a 	mov	r4,r19
 1001678:	10033340 	call	1003334 <memcpy>
 100167c:	9c21883a 	add	r16,r19,r16
 1001680:	80000005 	stb	zero,0(r16)
 1001684:	003fe606 	br	1001620 <_fgets_r+0xd4>
 1001688:	9dbfe41e 	bne	r19,r22,100161c <_fgets_r+0xd0>
 100168c:	002d883a 	mov	r22,zero
 1001690:	003fe306 	br	1001620 <_fgets_r+0xd4>

01001694 <fgets>:
 1001694:	00804074 	movhi	r2,257
 1001698:	10915504 	addi	r2,r2,17748
 100169c:	2013883a 	mov	r9,r4
 10016a0:	11000017 	ldw	r4,0(r2)
 10016a4:	2805883a 	mov	r2,r5
 10016a8:	300f883a 	mov	r7,r6
 10016ac:	480b883a 	mov	r5,r9
 10016b0:	100d883a 	mov	r6,r2
 10016b4:	100154c1 	jmpi	100154c <_fgets_r>

010016b8 <std>:
 10016b8:	00804034 	movhi	r2,256
 10016bc:	108e5d04 	addi	r2,r2,14708
 10016c0:	20800b15 	stw	r2,44(r4)
 10016c4:	00804034 	movhi	r2,256
 10016c8:	108e9804 	addi	r2,r2,14944
 10016cc:	20800815 	stw	r2,32(r4)
 10016d0:	00c04034 	movhi	r3,256
 10016d4:	18ce7904 	addi	r3,r3,14820
 10016d8:	00804034 	movhi	r2,256
 10016dc:	108e5f04 	addi	r2,r2,14716
 10016e0:	2140030d 	sth	r5,12(r4)
 10016e4:	2180038d 	sth	r6,14(r4)
 10016e8:	20c00915 	stw	r3,36(r4)
 10016ec:	20800a15 	stw	r2,40(r4)
 10016f0:	20000015 	stw	zero,0(r4)
 10016f4:	20000115 	stw	zero,4(r4)
 10016f8:	20000215 	stw	zero,8(r4)
 10016fc:	20000415 	stw	zero,16(r4)
 1001700:	20000515 	stw	zero,20(r4)
 1001704:	20000615 	stw	zero,24(r4)
 1001708:	21000715 	stw	r4,28(r4)
 100170c:	f800283a 	ret

01001710 <__sfp_lock_acquire>:
 1001710:	f800283a 	ret

01001714 <__sfp_lock_release>:
 1001714:	f800283a 	ret

01001718 <__sinit_lock_acquire>:
 1001718:	f800283a 	ret

0100171c <__sinit_lock_release>:
 100171c:	f800283a 	ret

01001720 <__sinit>:
 1001720:	20800e17 	ldw	r2,56(r4)
 1001724:	defffd04 	addi	sp,sp,-12
 1001728:	dc400115 	stw	r17,4(sp)
 100172c:	dc000015 	stw	r16,0(sp)
 1001730:	dfc00215 	stw	ra,8(sp)
 1001734:	04400044 	movi	r17,1
 1001738:	01400104 	movi	r5,4
 100173c:	000d883a 	mov	r6,zero
 1001740:	2021883a 	mov	r16,r4
 1001744:	2200bb04 	addi	r8,r4,748
 1001748:	200f883a 	mov	r7,r4
 100174c:	10000526 	beq	r2,zero,1001764 <__sinit+0x44>
 1001750:	dfc00217 	ldw	ra,8(sp)
 1001754:	dc400117 	ldw	r17,4(sp)
 1001758:	dc000017 	ldw	r16,0(sp)
 100175c:	dec00304 	addi	sp,sp,12
 1001760:	f800283a 	ret
 1001764:	21000117 	ldw	r4,4(r4)
 1001768:	00804034 	movhi	r2,256
 100176c:	10860104 	addi	r2,r2,6148
 1001770:	00c000c4 	movi	r3,3
 1001774:	80800f15 	stw	r2,60(r16)
 1001778:	80c0b915 	stw	r3,740(r16)
 100177c:	8200ba15 	stw	r8,744(r16)
 1001780:	84400e15 	stw	r17,56(r16)
 1001784:	8000b815 	stw	zero,736(r16)
 1001788:	10016b80 	call	10016b8 <std>
 100178c:	81000217 	ldw	r4,8(r16)
 1001790:	880d883a 	mov	r6,r17
 1001794:	800f883a 	mov	r7,r16
 1001798:	01400284 	movi	r5,10
 100179c:	10016b80 	call	10016b8 <std>
 10017a0:	81000317 	ldw	r4,12(r16)
 10017a4:	800f883a 	mov	r7,r16
 10017a8:	01400484 	movi	r5,18
 10017ac:	01800084 	movi	r6,2
 10017b0:	dfc00217 	ldw	ra,8(sp)
 10017b4:	dc400117 	ldw	r17,4(sp)
 10017b8:	dc000017 	ldw	r16,0(sp)
 10017bc:	dec00304 	addi	sp,sp,12
 10017c0:	10016b81 	jmpi	10016b8 <std>

010017c4 <__fp_lock>:
 10017c4:	0005883a 	mov	r2,zero
 10017c8:	f800283a 	ret

010017cc <__fp_unlock>:
 10017cc:	0005883a 	mov	r2,zero
 10017d0:	f800283a 	ret

010017d4 <__fp_unlock_all>:
 10017d4:	00804074 	movhi	r2,257
 10017d8:	10915504 	addi	r2,r2,17748
 10017dc:	11000017 	ldw	r4,0(r2)
 10017e0:	01404034 	movhi	r5,256
 10017e4:	2945f304 	addi	r5,r5,6092
 10017e8:	10027b01 	jmpi	10027b0 <_fwalk>

010017ec <__fp_lock_all>:
 10017ec:	00804074 	movhi	r2,257
 10017f0:	10915504 	addi	r2,r2,17748
 10017f4:	11000017 	ldw	r4,0(r2)
 10017f8:	01404034 	movhi	r5,256
 10017fc:	2945f104 	addi	r5,r5,6084
 1001800:	10027b01 	jmpi	10027b0 <_fwalk>

01001804 <_cleanup_r>:
 1001804:	01404034 	movhi	r5,256
 1001808:	2944c204 	addi	r5,r5,4872
 100180c:	10027b01 	jmpi	10027b0 <_fwalk>

01001810 <_cleanup>:
 1001810:	00804074 	movhi	r2,257
 1001814:	10915604 	addi	r2,r2,17752
 1001818:	11000017 	ldw	r4,0(r2)
 100181c:	10018041 	jmpi	1001804 <_cleanup_r>

01001820 <__sfmoreglue>:
 1001820:	defffc04 	addi	sp,sp,-16
 1001824:	dc000015 	stw	r16,0(sp)
 1001828:	2821883a 	mov	r16,r5
 100182c:	dc400115 	stw	r17,4(sp)
 1001830:	01401704 	movi	r5,92
 1001834:	2023883a 	mov	r17,r4
 1001838:	8009883a 	mov	r4,r16
 100183c:	dfc00315 	stw	ra,12(sp)
 1001840:	dcc00215 	stw	r19,8(sp)
 1001844:	10010a40 	call	10010a4 <__mulsi3>
 1001848:	11400304 	addi	r5,r2,12
 100184c:	8809883a 	mov	r4,r17
 1001850:	1027883a 	mov	r19,r2
 1001854:	1002b100 	call	1002b10 <_malloc_r>
 1001858:	10c00304 	addi	r3,r2,12
 100185c:	1023883a 	mov	r17,r2
 1001860:	1809883a 	mov	r4,r3
 1001864:	980d883a 	mov	r6,r19
 1001868:	000b883a 	mov	r5,zero
 100186c:	10000b26 	beq	r2,zero,100189c <__sfmoreglue+0x7c>
 1001870:	14000115 	stw	r16,4(r2)
 1001874:	10c00215 	stw	r3,8(r2)
 1001878:	10000015 	stw	zero,0(r2)
 100187c:	10033d40 	call	10033d4 <memset>
 1001880:	8805883a 	mov	r2,r17
 1001884:	dfc00317 	ldw	ra,12(sp)
 1001888:	dcc00217 	ldw	r19,8(sp)
 100188c:	dc400117 	ldw	r17,4(sp)
 1001890:	dc000017 	ldw	r16,0(sp)
 1001894:	dec00404 	addi	sp,sp,16
 1001898:	f800283a 	ret
 100189c:	0023883a 	mov	r17,zero
 10018a0:	8805883a 	mov	r2,r17
 10018a4:	dfc00317 	ldw	ra,12(sp)
 10018a8:	dcc00217 	ldw	r19,8(sp)
 10018ac:	dc400117 	ldw	r17,4(sp)
 10018b0:	dc000017 	ldw	r16,0(sp)
 10018b4:	dec00404 	addi	sp,sp,16
 10018b8:	f800283a 	ret

010018bc <__sfp>:
 10018bc:	defffd04 	addi	sp,sp,-12
 10018c0:	00804074 	movhi	r2,257
 10018c4:	10915604 	addi	r2,r2,17752
 10018c8:	dc000015 	stw	r16,0(sp)
 10018cc:	14000017 	ldw	r16,0(r2)
 10018d0:	dc400115 	stw	r17,4(sp)
 10018d4:	dfc00215 	stw	ra,8(sp)
 10018d8:	80800e17 	ldw	r2,56(r16)
 10018dc:	2023883a 	mov	r17,r4
 10018e0:	10002626 	beq	r2,zero,100197c <__sfp+0xc0>
 10018e4:	8400b804 	addi	r16,r16,736
 10018e8:	80800117 	ldw	r2,4(r16)
 10018ec:	81000217 	ldw	r4,8(r16)
 10018f0:	10ffffc4 	addi	r3,r2,-1
 10018f4:	18000916 	blt	r3,zero,100191c <__sfp+0x60>
 10018f8:	2080030f 	ldh	r2,12(r4)
 10018fc:	10000b26 	beq	r2,zero,100192c <__sfp+0x70>
 1001900:	017fffc4 	movi	r5,-1
 1001904:	00000206 	br	1001910 <__sfp+0x54>
 1001908:	2080030f 	ldh	r2,12(r4)
 100190c:	10000726 	beq	r2,zero,100192c <__sfp+0x70>
 1001910:	18ffffc4 	addi	r3,r3,-1
 1001914:	21001704 	addi	r4,r4,92
 1001918:	197ffb1e 	bne	r3,r5,1001908 <__sfp+0x4c>
 100191c:	80800017 	ldw	r2,0(r16)
 1001920:	10001926 	beq	r2,zero,1001988 <__sfp+0xcc>
 1001924:	1021883a 	mov	r16,r2
 1001928:	003fef06 	br	10018e8 <__sfp+0x2c>
 100192c:	00bfffc4 	movi	r2,-1
 1001930:	00c00044 	movi	r3,1
 1001934:	2080038d 	sth	r2,14(r4)
 1001938:	20c0030d 	sth	r3,12(r4)
 100193c:	20000015 	stw	zero,0(r4)
 1001940:	20000215 	stw	zero,8(r4)
 1001944:	20000115 	stw	zero,4(r4)
 1001948:	20000415 	stw	zero,16(r4)
 100194c:	20000515 	stw	zero,20(r4)
 1001950:	20000615 	stw	zero,24(r4)
 1001954:	20000c15 	stw	zero,48(r4)
 1001958:	20000d15 	stw	zero,52(r4)
 100195c:	20001115 	stw	zero,68(r4)
 1001960:	20001215 	stw	zero,72(r4)
 1001964:	2005883a 	mov	r2,r4
 1001968:	dfc00217 	ldw	ra,8(sp)
 100196c:	dc400117 	ldw	r17,4(sp)
 1001970:	dc000017 	ldw	r16,0(sp)
 1001974:	dec00304 	addi	sp,sp,12
 1001978:	f800283a 	ret
 100197c:	8009883a 	mov	r4,r16
 1001980:	10017200 	call	1001720 <__sinit>
 1001984:	003fd706 	br	10018e4 <__sfp+0x28>
 1001988:	8809883a 	mov	r4,r17
 100198c:	01400104 	movi	r5,4
 1001990:	10018200 	call	1001820 <__sfmoreglue>
 1001994:	80800015 	stw	r2,0(r16)
 1001998:	103fe21e 	bne	r2,zero,1001924 <__sfp+0x68>
 100199c:	00800304 	movi	r2,12
 10019a0:	0009883a 	mov	r4,zero
 10019a4:	88800015 	stw	r2,0(r17)
 10019a8:	003fee06 	br	1001964 <__sfp+0xa8>

010019ac <_fopen_r>:
 10019ac:	defffa04 	addi	sp,sp,-24
 10019b0:	dcc00415 	stw	r19,16(sp)
 10019b4:	2827883a 	mov	r19,r5
 10019b8:	300b883a 	mov	r5,r6
 10019bc:	d80d883a 	mov	r6,sp
 10019c0:	dc800315 	stw	r18,12(sp)
 10019c4:	dc400215 	stw	r17,8(sp)
 10019c8:	dc000115 	stw	r16,4(sp)
 10019cc:	dfc00515 	stw	ra,20(sp)
 10019d0:	2021883a 	mov	r16,r4
 10019d4:	1008ebc0 	call	1008ebc <__sflags>
 10019d8:	1025883a 	mov	r18,r2
 10019dc:	8009883a 	mov	r4,r16
 10019e0:	0023883a 	mov	r17,zero
 10019e4:	1000081e 	bne	r2,zero,1001a08 <_fopen_r+0x5c>
 10019e8:	8805883a 	mov	r2,r17
 10019ec:	dfc00517 	ldw	ra,20(sp)
 10019f0:	dcc00417 	ldw	r19,16(sp)
 10019f4:	dc800317 	ldw	r18,12(sp)
 10019f8:	dc400217 	ldw	r17,8(sp)
 10019fc:	dc000117 	ldw	r16,4(sp)
 1001a00:	dec00604 	addi	sp,sp,24
 1001a04:	f800283a 	ret
 1001a08:	10018bc0 	call	10018bc <__sfp>
 1001a0c:	1023883a 	mov	r17,r2
 1001a10:	980b883a 	mov	r5,r19
 1001a14:	8009883a 	mov	r4,r16
 1001a18:	01c06d84 	movi	r7,438
 1001a1c:	103ff226 	beq	r2,zero,10019e8 <_fopen_r+0x3c>
 1001a20:	d9800017 	ldw	r6,0(sp)
 1001a24:	100346c0 	call	100346c <_open_r>
 1001a28:	10001816 	blt	r2,zero,1001a8c <_fopen_r+0xe0>
 1001a2c:	00c04034 	movhi	r3,256
 1001a30:	18ce7904 	addi	r3,r3,14820
 1001a34:	923fffcc 	andi	r8,r18,65535
 1001a38:	8880038d 	sth	r2,14(r17)
 1001a3c:	00804034 	movhi	r2,256
 1001a40:	108e9804 	addi	r2,r2,14944
 1001a44:	88800815 	stw	r2,32(r17)
 1001a48:	88c00915 	stw	r3,36(r17)
 1001a4c:	00804034 	movhi	r2,256
 1001a50:	108e5f04 	addi	r2,r2,14716
 1001a54:	00c04034 	movhi	r3,256
 1001a58:	18ce5d04 	addi	r3,r3,14708
 1001a5c:	4200400c 	andi	r8,r8,256
 1001a60:	8c80030d 	sth	r18,12(r17)
 1001a64:	8009883a 	mov	r4,r16
 1001a68:	880b883a 	mov	r5,r17
 1001a6c:	000d883a 	mov	r6,zero
 1001a70:	01c00084 	movi	r7,2
 1001a74:	88800a15 	stw	r2,40(r17)
 1001a78:	88c00b15 	stw	r3,44(r17)
 1001a7c:	8c400715 	stw	r17,28(r17)
 1001a80:	403fd926 	beq	r8,zero,10019e8 <_fopen_r+0x3c>
 1001a84:	10022140 	call	1002214 <_fseek_r>
 1001a88:	003fd706 	br	10019e8 <_fopen_r+0x3c>
 1001a8c:	10017100 	call	1001710 <__sfp_lock_acquire>
 1001a90:	8800030d 	sth	zero,12(r17)
 1001a94:	10017140 	call	1001714 <__sfp_lock_release>
 1001a98:	0023883a 	mov	r17,zero
 1001a9c:	003fd206 	br	10019e8 <_fopen_r+0x3c>

01001aa0 <fopen>:
 1001aa0:	01804074 	movhi	r6,257
 1001aa4:	31915504 	addi	r6,r6,17748
 1001aa8:	2007883a 	mov	r3,r4
 1001aac:	31000017 	ldw	r4,0(r6)
 1001ab0:	280d883a 	mov	r6,r5
 1001ab4:	180b883a 	mov	r5,r3
 1001ab8:	10019ac1 	jmpi	10019ac <_fopen_r>

01001abc <fprintf>:
 1001abc:	defffc04 	addi	sp,sp,-16
 1001ac0:	dfc00115 	stw	ra,4(sp)
 1001ac4:	d9800215 	stw	r6,8(sp)
 1001ac8:	d9c00315 	stw	r7,12(sp)
 1001acc:	d8800204 	addi	r2,sp,8
 1001ad0:	100d883a 	mov	r6,r2
 1001ad4:	d8800015 	stw	r2,0(sp)
 1001ad8:	1005b400 	call	1005b40 <__vfprintf_internal>
 1001adc:	dfc00117 	ldw	ra,4(sp)
 1001ae0:	dec00404 	addi	sp,sp,16
 1001ae4:	f800283a 	ret

01001ae8 <_fprintf_r>:
 1001ae8:	defffd04 	addi	sp,sp,-12
 1001aec:	2807883a 	mov	r3,r5
 1001af0:	dfc00115 	stw	ra,4(sp)
 1001af4:	d9c00215 	stw	r7,8(sp)
 1001af8:	d8800204 	addi	r2,sp,8
 1001afc:	300b883a 	mov	r5,r6
 1001b00:	1809883a 	mov	r4,r3
 1001b04:	100d883a 	mov	r6,r2
 1001b08:	d8800015 	stw	r2,0(sp)
 1001b0c:	1005b400 	call	1005b40 <__vfprintf_internal>
 1001b10:	dfc00117 	ldw	ra,4(sp)
 1001b14:	dec00304 	addi	sp,sp,12
 1001b18:	f800283a 	ret

01001b1c <_fread_r>:
 1001b1c:	defff504 	addi	sp,sp,-44
 1001b20:	dd800715 	stw	r22,28(sp)
 1001b24:	dc000115 	stw	r16,4(sp)
 1001b28:	202d883a 	mov	r22,r4
 1001b2c:	2821883a 	mov	r16,r5
 1001b30:	3809883a 	mov	r4,r7
 1001b34:	300b883a 	mov	r5,r6
 1001b38:	df000915 	stw	fp,36(sp)
 1001b3c:	ddc00815 	stw	r23,32(sp)
 1001b40:	dcc00415 	stw	r19,16(sp)
 1001b44:	dfc00a15 	stw	ra,40(sp)
 1001b48:	dd400615 	stw	r21,24(sp)
 1001b4c:	dd000515 	stw	r20,20(sp)
 1001b50:	dc800315 	stw	r18,12(sp)
 1001b54:	dc400215 	stw	r17,8(sp)
 1001b58:	d9800015 	stw	r6,0(sp)
 1001b5c:	3839883a 	mov	fp,r7
 1001b60:	10010a40 	call	10010a4 <__mulsi3>
 1001b64:	102f883a 	mov	r23,r2
 1001b68:	dcc00b17 	ldw	r19,44(sp)
 1001b6c:	10005926 	beq	r2,zero,1001cd4 <_fread_r+0x1b8>
 1001b70:	b0000226 	beq	r22,zero,1001b7c <_fread_r+0x60>
 1001b74:	b0800e17 	ldw	r2,56(r22)
 1001b78:	10005826 	beq	r2,zero,1001cdc <_fread_r+0x1c0>
 1001b7c:	9c400117 	ldw	r17,4(r19)
 1001b80:	88005a16 	blt	r17,zero,1001cec <_fread_r+0x1d0>
 1001b84:	9880030b 	ldhu	r2,12(r19)
 1001b88:	8029883a 	mov	r20,r16
 1001b8c:	1080008c 	andi	r2,r2,2
 1001b90:	1000221e 	bne	r2,zero,1001c1c <_fread_r+0x100>
 1001b94:	b825883a 	mov	r18,r23
 1001b98:	00000106 	br	1001ba0 <_fread_r+0x84>
 1001b9c:	9c400117 	ldw	r17,4(r19)
 1001ba0:	a009883a 	mov	r4,r20
 1001ba4:	880d883a 	mov	r6,r17
 1001ba8:	8c80552e 	bgeu	r17,r18,1001d00 <_fread_r+0x1e4>
 1001bac:	99400017 	ldw	r5,0(r19)
 1001bb0:	a469883a 	add	r20,r20,r17
 1001bb4:	9465c83a 	sub	r18,r18,r17
 1001bb8:	10033340 	call	1003334 <memcpy>
 1001bbc:	98800017 	ldw	r2,0(r19)
 1001bc0:	b009883a 	mov	r4,r22
 1001bc4:	980b883a 	mov	r5,r19
 1001bc8:	1461883a 	add	r16,r2,r17
 1001bcc:	9c000015 	stw	r16,0(r19)
 1001bd0:	10036100 	call	1003610 <__srefill_r>
 1001bd4:	103ff126 	beq	r2,zero,1001b9c <_fread_r+0x80>
 1001bd8:	d9400017 	ldw	r5,0(sp)
 1001bdc:	bc89c83a 	sub	r4,r23,r18
 1001be0:	10010940 	call	1001094 <__udivsi3>
 1001be4:	1039883a 	mov	fp,r2
 1001be8:	e005883a 	mov	r2,fp
 1001bec:	dfc00a17 	ldw	ra,40(sp)
 1001bf0:	df000917 	ldw	fp,36(sp)
 1001bf4:	ddc00817 	ldw	r23,32(sp)
 1001bf8:	dd800717 	ldw	r22,28(sp)
 1001bfc:	dd400617 	ldw	r21,24(sp)
 1001c00:	dd000517 	ldw	r20,20(sp)
 1001c04:	dcc00417 	ldw	r19,16(sp)
 1001c08:	dc800317 	ldw	r18,12(sp)
 1001c0c:	dc400217 	ldw	r17,8(sp)
 1001c10:	dc000117 	ldw	r16,4(sp)
 1001c14:	dec00b04 	addi	sp,sp,44
 1001c18:	f800283a 	ret
 1001c1c:	b825883a 	mov	r18,r23
 1001c20:	8dc03536 	bltu	r17,r23,1001cf8 <_fread_r+0x1dc>
 1001c24:	99400017 	ldw	r5,0(r19)
 1001c28:	a009883a 	mov	r4,r20
 1001c2c:	900d883a 	mov	r6,r18
 1001c30:	10033340 	call	1003334 <memcpy>
 1001c34:	9c000017 	ldw	r16,0(r19)
 1001c38:	98800117 	ldw	r2,4(r19)
 1001c3c:	99400c17 	ldw	r5,48(r19)
 1001c40:	84a1883a 	add	r16,r16,r18
 1001c44:	14a3c83a 	sub	r17,r2,r18
 1001c48:	a4ab883a 	add	r21,r20,r18
 1001c4c:	9c400115 	stw	r17,4(r19)
 1001c50:	9c000015 	stw	r16,0(r19)
 1001c54:	bca9c83a 	sub	r20,r23,r18
 1001c58:	28000826 	beq	r5,zero,1001c7c <_fread_r+0x160>
 1001c5c:	a03fe226 	beq	r20,zero,1001be8 <_fread_r+0xcc>
 1001c60:	98801004 	addi	r2,r19,64
 1001c64:	28800326 	beq	r5,r2,1001c74 <_fread_r+0x158>
 1001c68:	b009883a 	mov	r4,r22
 1001c6c:	1001e940 	call	1001e94 <_free_r>
 1001c70:	9c000017 	ldw	r16,0(r19)
 1001c74:	98000c15 	stw	zero,48(r19)
 1001c78:	00000106 	br	1001c80 <_fread_r+0x164>
 1001c7c:	a03fda26 	beq	r20,zero,1001be8 <_fread_r+0xcc>
 1001c80:	9c800417 	ldw	r18,16(r19)
 1001c84:	9c400517 	ldw	r17,20(r19)
 1001c88:	9d400015 	stw	r21,0(r19)
 1001c8c:	9d400415 	stw	r21,16(r19)
 1001c90:	9d000515 	stw	r20,20(r19)
 1001c94:	b009883a 	mov	r4,r22
 1001c98:	980b883a 	mov	r5,r19
 1001c9c:	10036100 	call	1003610 <__srefill_r>
 1001ca0:	98c00117 	ldw	r3,4(r19)
 1001ca4:	9c800415 	stw	r18,16(r19)
 1001ca8:	9c400515 	stw	r17,20(r19)
 1001cac:	a8eb883a 	add	r21,r21,r3
 1001cb0:	9c000015 	stw	r16,0(r19)
 1001cb4:	a0e9c83a 	sub	r20,r20,r3
 1001cb8:	98000115 	stw	zero,4(r19)
 1001cbc:	103fef26 	beq	r2,zero,1001c7c <_fread_r+0x160>
 1001cc0:	d9400017 	ldw	r5,0(sp)
 1001cc4:	bd09c83a 	sub	r4,r23,r20
 1001cc8:	10010940 	call	1001094 <__udivsi3>
 1001ccc:	1039883a 	mov	fp,r2
 1001cd0:	003fc506 	br	1001be8 <_fread_r+0xcc>
 1001cd4:	0039883a 	mov	fp,zero
 1001cd8:	003fc306 	br	1001be8 <_fread_r+0xcc>
 1001cdc:	b009883a 	mov	r4,r22
 1001ce0:	10017200 	call	1001720 <__sinit>
 1001ce4:	9c400117 	ldw	r17,4(r19)
 1001ce8:	883fa60e 	bge	r17,zero,1001b84 <_fread_r+0x68>
 1001cec:	0023883a 	mov	r17,zero
 1001cf0:	98000115 	stw	zero,4(r19)
 1001cf4:	003fa306 	br	1001b84 <_fread_r+0x68>
 1001cf8:	8825883a 	mov	r18,r17
 1001cfc:	003fc906 	br	1001c24 <_fread_r+0x108>
 1001d00:	99400017 	ldw	r5,0(r19)
 1001d04:	900d883a 	mov	r6,r18
 1001d08:	10033340 	call	1003334 <memcpy>
 1001d0c:	98c00117 	ldw	r3,4(r19)
 1001d10:	98800017 	ldw	r2,0(r19)
 1001d14:	1c87c83a 	sub	r3,r3,r18
 1001d18:	1485883a 	add	r2,r2,r18
 1001d1c:	98800015 	stw	r2,0(r19)
 1001d20:	98c00115 	stw	r3,4(r19)
 1001d24:	003fb006 	br	1001be8 <_fread_r+0xcc>

01001d28 <fread>:
 1001d28:	00804074 	movhi	r2,257
 1001d2c:	10915504 	addi	r2,r2,17748
 1001d30:	2017883a 	mov	r11,r4
 1001d34:	11000017 	ldw	r4,0(r2)
 1001d38:	defffe04 	addi	sp,sp,-8
 1001d3c:	3013883a 	mov	r9,r6
 1001d40:	2805883a 	mov	r2,r5
 1001d44:	d9c00015 	stw	r7,0(sp)
 1001d48:	580b883a 	mov	r5,r11
 1001d4c:	100d883a 	mov	r6,r2
 1001d50:	480f883a 	mov	r7,r9
 1001d54:	dfc00115 	stw	ra,4(sp)
 1001d58:	1001b1c0 	call	1001b1c <_fread_r>
 1001d5c:	dfc00117 	ldw	ra,4(sp)
 1001d60:	dec00204 	addi	sp,sp,8
 1001d64:	f800283a 	ret

01001d68 <_malloc_trim_r>:
 1001d68:	defffb04 	addi	sp,sp,-20
 1001d6c:	dcc00315 	stw	r19,12(sp)
 1001d70:	04c04074 	movhi	r19,257
 1001d74:	9ccfc704 	addi	r19,r19,16156
 1001d78:	dc800215 	stw	r18,8(sp)
 1001d7c:	dc400115 	stw	r17,4(sp)
 1001d80:	dc000015 	stw	r16,0(sp)
 1001d84:	2823883a 	mov	r17,r5
 1001d88:	2025883a 	mov	r18,r4
 1001d8c:	dfc00415 	stw	ra,16(sp)
 1001d90:	101139c0 	call	101139c <__malloc_lock>
 1001d94:	98800217 	ldw	r2,8(r19)
 1001d98:	9009883a 	mov	r4,r18
 1001d9c:	000b883a 	mov	r5,zero
 1001da0:	10c00117 	ldw	r3,4(r2)
 1001da4:	00bfff04 	movi	r2,-4
 1001da8:	18a0703a 	and	r16,r3,r2
 1001dac:	8463c83a 	sub	r17,r16,r17
 1001db0:	8c43fbc4 	addi	r17,r17,4079
 1001db4:	8822d33a 	srli	r17,r17,12
 1001db8:	0083ffc4 	movi	r2,4095
 1001dbc:	8c7fffc4 	addi	r17,r17,-1
 1001dc0:	8822933a 	slli	r17,r17,12
 1001dc4:	1440060e 	bge	r2,r17,1001de0 <_malloc_trim_r+0x78>
 1001dc8:	10037f00 	call	10037f0 <_sbrk_r>
 1001dcc:	98c00217 	ldw	r3,8(r19)
 1001dd0:	9009883a 	mov	r4,r18
 1001dd4:	044bc83a 	sub	r5,zero,r17
 1001dd8:	80c7883a 	add	r3,r16,r3
 1001ddc:	10c00926 	beq	r2,r3,1001e04 <_malloc_trim_r+0x9c>
 1001de0:	10113bc0 	call	10113bc <__malloc_unlock>
 1001de4:	0005883a 	mov	r2,zero
 1001de8:	dfc00417 	ldw	ra,16(sp)
 1001dec:	dcc00317 	ldw	r19,12(sp)
 1001df0:	dc800217 	ldw	r18,8(sp)
 1001df4:	dc400117 	ldw	r17,4(sp)
 1001df8:	dc000017 	ldw	r16,0(sp)
 1001dfc:	dec00504 	addi	sp,sp,20
 1001e00:	f800283a 	ret
 1001e04:	9009883a 	mov	r4,r18
 1001e08:	10037f00 	call	10037f0 <_sbrk_r>
 1001e0c:	844dc83a 	sub	r6,r16,r17
 1001e10:	00ffffc4 	movi	r3,-1
 1001e14:	9009883a 	mov	r4,r18
 1001e18:	000b883a 	mov	r5,zero
 1001e1c:	01c04074 	movhi	r7,257
 1001e20:	39d43804 	addi	r7,r7,20704
 1001e24:	31800054 	ori	r6,r6,1
 1001e28:	10c00926 	beq	r2,r3,1001e50 <_malloc_trim_r+0xe8>
 1001e2c:	38800017 	ldw	r2,0(r7)
 1001e30:	98c00217 	ldw	r3,8(r19)
 1001e34:	9009883a 	mov	r4,r18
 1001e38:	1445c83a 	sub	r2,r2,r17
 1001e3c:	38800015 	stw	r2,0(r7)
 1001e40:	19800115 	stw	r6,4(r3)
 1001e44:	10113bc0 	call	10113bc <__malloc_unlock>
 1001e48:	00800044 	movi	r2,1
 1001e4c:	003fe606 	br	1001de8 <_malloc_trim_r+0x80>
 1001e50:	10037f00 	call	10037f0 <_sbrk_r>
 1001e54:	99800217 	ldw	r6,8(r19)
 1001e58:	100f883a 	mov	r7,r2
 1001e5c:	9009883a 	mov	r4,r18
 1001e60:	1187c83a 	sub	r3,r2,r6
 1001e64:	008003c4 	movi	r2,15
 1001e68:	19400054 	ori	r5,r3,1
 1001e6c:	10ffdc0e 	bge	r2,r3,1001de0 <_malloc_trim_r+0x78>
 1001e70:	00804074 	movhi	r2,257
 1001e74:	10915804 	addi	r2,r2,17760
 1001e78:	10c00017 	ldw	r3,0(r2)
 1001e7c:	00804074 	movhi	r2,257
 1001e80:	10943804 	addi	r2,r2,20704
 1001e84:	31400115 	stw	r5,4(r6)
 1001e88:	38c7c83a 	sub	r3,r7,r3
 1001e8c:	10c00015 	stw	r3,0(r2)
 1001e90:	003fd306 	br	1001de0 <_malloc_trim_r+0x78>

01001e94 <_free_r>:
 1001e94:	defffd04 	addi	sp,sp,-12
 1001e98:	dc400115 	stw	r17,4(sp)
 1001e9c:	dc000015 	stw	r16,0(sp)
 1001ea0:	dfc00215 	stw	ra,8(sp)
 1001ea4:	2821883a 	mov	r16,r5
 1001ea8:	2023883a 	mov	r17,r4
 1001eac:	28005a26 	beq	r5,zero,1002018 <_free_r+0x184>
 1001eb0:	101139c0 	call	101139c <__malloc_lock>
 1001eb4:	823ffe04 	addi	r8,r16,-8
 1001eb8:	41400117 	ldw	r5,4(r8)
 1001ebc:	00bfff84 	movi	r2,-2
 1001ec0:	02804074 	movhi	r10,257
 1001ec4:	528fc704 	addi	r10,r10,16156
 1001ec8:	288e703a 	and	r7,r5,r2
 1001ecc:	41cd883a 	add	r6,r8,r7
 1001ed0:	30c00117 	ldw	r3,4(r6)
 1001ed4:	51000217 	ldw	r4,8(r10)
 1001ed8:	00bfff04 	movi	r2,-4
 1001edc:	1892703a 	and	r9,r3,r2
 1001ee0:	5017883a 	mov	r11,r10
 1001ee4:	31006726 	beq	r6,r4,1002084 <_free_r+0x1f0>
 1001ee8:	2880004c 	andi	r2,r5,1
 1001eec:	1005003a 	cmpeq	r2,r2,zero
 1001ef0:	32400115 	stw	r9,4(r6)
 1001ef4:	10001a1e 	bne	r2,zero,1001f60 <_free_r+0xcc>
 1001ef8:	000b883a 	mov	r5,zero
 1001efc:	3247883a 	add	r3,r6,r9
 1001f00:	18800117 	ldw	r2,4(r3)
 1001f04:	1080004c 	andi	r2,r2,1
 1001f08:	1000231e 	bne	r2,zero,1001f98 <_free_r+0x104>
 1001f0c:	280ac03a 	cmpne	r5,r5,zero
 1001f10:	3a4f883a 	add	r7,r7,r9
 1001f14:	2800451e 	bne	r5,zero,100202c <_free_r+0x198>
 1001f18:	31000217 	ldw	r4,8(r6)
 1001f1c:	00804074 	movhi	r2,257
 1001f20:	108fc904 	addi	r2,r2,16164
 1001f24:	20807b26 	beq	r4,r2,1002114 <_free_r+0x280>
 1001f28:	30800317 	ldw	r2,12(r6)
 1001f2c:	3a07883a 	add	r3,r7,r8
 1001f30:	19c00015 	stw	r7,0(r3)
 1001f34:	11000215 	stw	r4,8(r2)
 1001f38:	20800315 	stw	r2,12(r4)
 1001f3c:	38800054 	ori	r2,r7,1
 1001f40:	40800115 	stw	r2,4(r8)
 1001f44:	28001a26 	beq	r5,zero,1001fb0 <_free_r+0x11c>
 1001f48:	8809883a 	mov	r4,r17
 1001f4c:	dfc00217 	ldw	ra,8(sp)
 1001f50:	dc400117 	ldw	r17,4(sp)
 1001f54:	dc000017 	ldw	r16,0(sp)
 1001f58:	dec00304 	addi	sp,sp,12
 1001f5c:	10113bc1 	jmpi	10113bc <__malloc_unlock>
 1001f60:	80bffe17 	ldw	r2,-8(r16)
 1001f64:	50c00204 	addi	r3,r10,8
 1001f68:	4091c83a 	sub	r8,r8,r2
 1001f6c:	41000217 	ldw	r4,8(r8)
 1001f70:	388f883a 	add	r7,r7,r2
 1001f74:	20c06126 	beq	r4,r3,10020fc <_free_r+0x268>
 1001f78:	40800317 	ldw	r2,12(r8)
 1001f7c:	3247883a 	add	r3,r6,r9
 1001f80:	000b883a 	mov	r5,zero
 1001f84:	11000215 	stw	r4,8(r2)
 1001f88:	20800315 	stw	r2,12(r4)
 1001f8c:	18800117 	ldw	r2,4(r3)
 1001f90:	1080004c 	andi	r2,r2,1
 1001f94:	103fdd26 	beq	r2,zero,1001f0c <_free_r+0x78>
 1001f98:	38800054 	ori	r2,r7,1
 1001f9c:	3a07883a 	add	r3,r7,r8
 1001fa0:	280ac03a 	cmpne	r5,r5,zero
 1001fa4:	40800115 	stw	r2,4(r8)
 1001fa8:	19c00015 	stw	r7,0(r3)
 1001fac:	283fe61e 	bne	r5,zero,1001f48 <_free_r+0xb4>
 1001fb0:	00807fc4 	movi	r2,511
 1001fb4:	11c01f2e 	bgeu	r2,r7,1002034 <_free_r+0x1a0>
 1001fb8:	3806d27a 	srli	r3,r7,9
 1001fbc:	1800481e 	bne	r3,zero,10020e0 <_free_r+0x24c>
 1001fc0:	3804d0fa 	srli	r2,r7,3
 1001fc4:	100690fa 	slli	r3,r2,3
 1001fc8:	1acd883a 	add	r6,r3,r11
 1001fcc:	31400217 	ldw	r5,8(r6)
 1001fd0:	31405926 	beq	r6,r5,1002138 <_free_r+0x2a4>
 1001fd4:	28800117 	ldw	r2,4(r5)
 1001fd8:	00ffff04 	movi	r3,-4
 1001fdc:	10c4703a 	and	r2,r2,r3
 1001fe0:	3880022e 	bgeu	r7,r2,1001fec <_free_r+0x158>
 1001fe4:	29400217 	ldw	r5,8(r5)
 1001fe8:	317ffa1e 	bne	r6,r5,1001fd4 <_free_r+0x140>
 1001fec:	29800317 	ldw	r6,12(r5)
 1001ff0:	41800315 	stw	r6,12(r8)
 1001ff4:	41400215 	stw	r5,8(r8)
 1001ff8:	8809883a 	mov	r4,r17
 1001ffc:	2a000315 	stw	r8,12(r5)
 1002000:	32000215 	stw	r8,8(r6)
 1002004:	dfc00217 	ldw	ra,8(sp)
 1002008:	dc400117 	ldw	r17,4(sp)
 100200c:	dc000017 	ldw	r16,0(sp)
 1002010:	dec00304 	addi	sp,sp,12
 1002014:	10113bc1 	jmpi	10113bc <__malloc_unlock>
 1002018:	dfc00217 	ldw	ra,8(sp)
 100201c:	dc400117 	ldw	r17,4(sp)
 1002020:	dc000017 	ldw	r16,0(sp)
 1002024:	dec00304 	addi	sp,sp,12
 1002028:	f800283a 	ret
 100202c:	31000217 	ldw	r4,8(r6)
 1002030:	003fbd06 	br	1001f28 <_free_r+0x94>
 1002034:	3806d0fa 	srli	r3,r7,3
 1002038:	00800044 	movi	r2,1
 100203c:	51400117 	ldw	r5,4(r10)
 1002040:	180890fa 	slli	r4,r3,3
 1002044:	1807d0ba 	srai	r3,r3,2
 1002048:	22c9883a 	add	r4,r4,r11
 100204c:	21800217 	ldw	r6,8(r4)
 1002050:	10c4983a 	sll	r2,r2,r3
 1002054:	41000315 	stw	r4,12(r8)
 1002058:	41800215 	stw	r6,8(r8)
 100205c:	288ab03a 	or	r5,r5,r2
 1002060:	22000215 	stw	r8,8(r4)
 1002064:	8809883a 	mov	r4,r17
 1002068:	51400115 	stw	r5,4(r10)
 100206c:	32000315 	stw	r8,12(r6)
 1002070:	dfc00217 	ldw	ra,8(sp)
 1002074:	dc400117 	ldw	r17,4(sp)
 1002078:	dc000017 	ldw	r16,0(sp)
 100207c:	dec00304 	addi	sp,sp,12
 1002080:	10113bc1 	jmpi	10113bc <__malloc_unlock>
 1002084:	2880004c 	andi	r2,r5,1
 1002088:	3a4d883a 	add	r6,r7,r9
 100208c:	1000071e 	bne	r2,zero,10020ac <_free_r+0x218>
 1002090:	80bffe17 	ldw	r2,-8(r16)
 1002094:	4091c83a 	sub	r8,r8,r2
 1002098:	41000317 	ldw	r4,12(r8)
 100209c:	40c00217 	ldw	r3,8(r8)
 10020a0:	308d883a 	add	r6,r6,r2
 10020a4:	20c00215 	stw	r3,8(r4)
 10020a8:	19000315 	stw	r4,12(r3)
 10020ac:	00804074 	movhi	r2,257
 10020b0:	10915704 	addi	r2,r2,17756
 10020b4:	11000017 	ldw	r4,0(r2)
 10020b8:	30c00054 	ori	r3,r6,1
 10020bc:	52000215 	stw	r8,8(r10)
 10020c0:	40c00115 	stw	r3,4(r8)
 10020c4:	313fa036 	bltu	r6,r4,1001f48 <_free_r+0xb4>
 10020c8:	00804074 	movhi	r2,257
 10020cc:	10942a04 	addi	r2,r2,20648
 10020d0:	11400017 	ldw	r5,0(r2)
 10020d4:	8809883a 	mov	r4,r17
 10020d8:	1001d680 	call	1001d68 <_malloc_trim_r>
 10020dc:	003f9a06 	br	1001f48 <_free_r+0xb4>
 10020e0:	00800104 	movi	r2,4
 10020e4:	10c0072e 	bgeu	r2,r3,1002104 <_free_r+0x270>
 10020e8:	00800504 	movi	r2,20
 10020ec:	10c01936 	bltu	r2,r3,1002154 <_free_r+0x2c0>
 10020f0:	188016c4 	addi	r2,r3,91
 10020f4:	100690fa 	slli	r3,r2,3
 10020f8:	003fb306 	br	1001fc8 <_free_r+0x134>
 10020fc:	01400044 	movi	r5,1
 1002100:	003f7e06 	br	1001efc <_free_r+0x68>
 1002104:	3804d1ba 	srli	r2,r7,6
 1002108:	10800e04 	addi	r2,r2,56
 100210c:	100690fa 	slli	r3,r2,3
 1002110:	003fad06 	br	1001fc8 <_free_r+0x134>
 1002114:	22000315 	stw	r8,12(r4)
 1002118:	22000215 	stw	r8,8(r4)
 100211c:	3a05883a 	add	r2,r7,r8
 1002120:	38c00054 	ori	r3,r7,1
 1002124:	11c00015 	stw	r7,0(r2)
 1002128:	41000215 	stw	r4,8(r8)
 100212c:	40c00115 	stw	r3,4(r8)
 1002130:	41000315 	stw	r4,12(r8)
 1002134:	003f8406 	br	1001f48 <_free_r+0xb4>
 1002138:	1005d0ba 	srai	r2,r2,2
 100213c:	00c00044 	movi	r3,1
 1002140:	51000117 	ldw	r4,4(r10)
 1002144:	1886983a 	sll	r3,r3,r2
 1002148:	20c8b03a 	or	r4,r4,r3
 100214c:	51000115 	stw	r4,4(r10)
 1002150:	003fa706 	br	1001ff0 <_free_r+0x15c>
 1002154:	00801504 	movi	r2,84
 1002158:	10c00436 	bltu	r2,r3,100216c <_free_r+0x2d8>
 100215c:	3804d33a 	srli	r2,r7,12
 1002160:	10801b84 	addi	r2,r2,110
 1002164:	100690fa 	slli	r3,r2,3
 1002168:	003f9706 	br	1001fc8 <_free_r+0x134>
 100216c:	00805504 	movi	r2,340
 1002170:	10c00436 	bltu	r2,r3,1002184 <_free_r+0x2f0>
 1002174:	3804d3fa 	srli	r2,r7,15
 1002178:	10801dc4 	addi	r2,r2,119
 100217c:	100690fa 	slli	r3,r2,3
 1002180:	003f9106 	br	1001fc8 <_free_r+0x134>
 1002184:	00815504 	movi	r2,1364
 1002188:	10c0032e 	bgeu	r2,r3,1002198 <_free_r+0x304>
 100218c:	00801f84 	movi	r2,126
 1002190:	00c0fc04 	movi	r3,1008
 1002194:	003f8c06 	br	1001fc8 <_free_r+0x134>
 1002198:	3804d4ba 	srli	r2,r7,18
 100219c:	10801f04 	addi	r2,r2,124
 10021a0:	100690fa 	slli	r3,r2,3
 10021a4:	003f8806 	br	1001fc8 <_free_r+0x134>

010021a8 <_fscanf_r>:
 10021a8:	defffd04 	addi	sp,sp,-12
 10021ac:	dfc00115 	stw	ra,4(sp)
 10021b0:	d9c00215 	stw	r7,8(sp)
 10021b4:	d8800204 	addi	r2,sp,8
 10021b8:	100f883a 	mov	r7,r2
 10021bc:	d8800015 	stw	r2,0(sp)
 10021c0:	1005b640 	call	1005b64 <__svfscanf_r>
 10021c4:	dfc00117 	ldw	ra,4(sp)
 10021c8:	dec00304 	addi	sp,sp,12
 10021cc:	f800283a 	ret

010021d0 <fscanf>:
 10021d0:	defffc04 	addi	sp,sp,-16
 10021d4:	2007883a 	mov	r3,r4
 10021d8:	dfc00115 	stw	ra,4(sp)
 10021dc:	d9800215 	stw	r6,8(sp)
 10021e0:	d9c00315 	stw	r7,12(sp)
 10021e4:	01804074 	movhi	r6,257
 10021e8:	31915504 	addi	r6,r6,17748
 10021ec:	31000017 	ldw	r4,0(r6)
 10021f0:	d8800204 	addi	r2,sp,8
 10021f4:	280d883a 	mov	r6,r5
 10021f8:	100f883a 	mov	r7,r2
 10021fc:	180b883a 	mov	r5,r3
 1002200:	d8800015 	stw	r2,0(sp)
 1002204:	1005b640 	call	1005b64 <__svfscanf_r>
 1002208:	dfc00117 	ldw	ra,4(sp)
 100220c:	dec00404 	addi	sp,sp,16
 1002210:	f800283a 	ret

01002214 <_fseek_r>:
 1002214:	deffe804 	addi	sp,sp,-96
 1002218:	dd801515 	stw	r22,84(sp)
 100221c:	dcc01215 	stw	r19,72(sp)
 1002220:	dc801115 	stw	r18,68(sp)
 1002224:	dc000f15 	stw	r16,60(sp)
 1002228:	dfc01715 	stw	ra,92(sp)
 100222c:	ddc01615 	stw	r23,88(sp)
 1002230:	dd401415 	stw	r21,80(sp)
 1002234:	dd001315 	stw	r20,76(sp)
 1002238:	dc401015 	stw	r17,64(sp)
 100223c:	2025883a 	mov	r18,r4
 1002240:	2821883a 	mov	r16,r5
 1002244:	302d883a 	mov	r22,r6
 1002248:	3827883a 	mov	r19,r7
 100224c:	20000226 	beq	r4,zero,1002258 <_fseek_r+0x44>
 1002250:	20800e17 	ldw	r2,56(r4)
 1002254:	10007826 	beq	r2,zero,1002438 <_fseek_r+0x224>
 1002258:	8080030b 	ldhu	r2,12(r16)
 100225c:	00c04204 	movi	r3,264
 1002260:	1080420c 	andi	r2,r2,264
 1002264:	10c07926 	beq	r2,r3,100244c <_fseek_r+0x238>
 1002268:	85400a17 	ldw	r21,40(r16)
 100226c:	a800ea26 	beq	r21,zero,1002618 <_fseek_r+0x404>
 1002270:	00800044 	movi	r2,1
 1002274:	98805f26 	beq	r19,r2,10023f4 <_fseek_r+0x1e0>
 1002278:	00800084 	movi	r2,2
 100227c:	98801026 	beq	r19,r2,10022c0 <_fseek_r+0xac>
 1002280:	98000f26 	beq	r19,zero,10022c0 <_fseek_r+0xac>
 1002284:	00800584 	movi	r2,22
 1002288:	013fffc4 	movi	r4,-1
 100228c:	90800015 	stw	r2,0(r18)
 1002290:	2005883a 	mov	r2,r4
 1002294:	dfc01717 	ldw	ra,92(sp)
 1002298:	ddc01617 	ldw	r23,88(sp)
 100229c:	dd801517 	ldw	r22,84(sp)
 10022a0:	dd401417 	ldw	r21,80(sp)
 10022a4:	dd001317 	ldw	r20,76(sp)
 10022a8:	dcc01217 	ldw	r19,72(sp)
 10022ac:	dc801117 	ldw	r18,68(sp)
 10022b0:	dc401017 	ldw	r17,64(sp)
 10022b4:	dc000f17 	ldw	r16,60(sp)
 10022b8:	dec01804 	addi	sp,sp,96
 10022bc:	f800283a 	ret
 10022c0:	81800417 	ldw	r6,16(r16)
 10022c4:	0023883a 	mov	r17,zero
 10022c8:	002f883a 	mov	r23,zero
 10022cc:	3000a626 	beq	r6,zero,1002568 <_fseek_r+0x354>
 10022d0:	8100030b 	ldhu	r4,12(r16)
 10022d4:	2082068c 	andi	r2,r4,2074
 10022d8:	1000081e 	bne	r2,zero,10022fc <_fseek_r+0xe8>
 10022dc:	2081000c 	andi	r2,r4,1024
 10022e0:	10001b1e 	bne	r2,zero,1002350 <_fseek_r+0x13c>
 10022e4:	00804034 	movhi	r2,256
 10022e8:	108e5f04 	addi	r2,r2,14716
 10022ec:	a8800926 	beq	r21,r2,1002314 <_fseek_r+0x100>
 10022f0:	8080030b 	ldhu	r2,12(r16)
 10022f4:	10820014 	ori	r2,r2,2048
 10022f8:	8080030d 	sth	r2,12(r16)
 10022fc:	9009883a 	mov	r4,r18
 1002300:	800b883a 	mov	r5,r16
 1002304:	100131c0 	call	100131c <_fflush_r>
 1002308:	1000a326 	beq	r2,zero,1002598 <_fseek_r+0x384>
 100230c:	013fffc4 	movi	r4,-1
 1002310:	003fdf06 	br	1002290 <_fseek_r+0x7c>
 1002314:	8140038f 	ldh	r5,14(r16)
 1002318:	283ff516 	blt	r5,zero,10022f0 <_fseek_r+0xdc>
 100231c:	9009883a 	mov	r4,r18
 1002320:	d80d883a 	mov	r6,sp
 1002324:	10026740 	call	1002674 <_fstat_r>
 1002328:	103ff11e 	bne	r2,zero,10022f0 <_fseek_r+0xdc>
 100232c:	d8800117 	ldw	r2,4(sp)
 1002330:	00e00014 	movui	r3,32768
 1002334:	10bc000c 	andi	r2,r2,61440
 1002338:	10ffed1e 	bne	r2,r3,10022f0 <_fseek_r+0xdc>
 100233c:	80c0030b 	ldhu	r3,12(r16)
 1002340:	00810004 	movi	r2,1024
 1002344:	80801315 	stw	r2,76(r16)
 1002348:	1886b03a 	or	r3,r3,r2
 100234c:	80c0030d 	sth	r3,12(r16)
 1002350:	9800701e 	bne	r19,zero,1002514 <_fseek_r+0x300>
 1002354:	b029883a 	mov	r20,r22
 1002358:	b804c03a 	cmpne	r2,r23,zero
 100235c:	10003f1e 	bne	r2,zero,100245c <_fseek_r+0x248>
 1002360:	8100030b 	ldhu	r4,12(r16)
 1002364:	2084000c 	andi	r2,r4,4096
 1002368:	1000a126 	beq	r2,zero,10025f0 <_fseek_r+0x3dc>
 100236c:	81801417 	ldw	r6,80(r16)
 1002370:	80c00117 	ldw	r3,4(r16)
 1002374:	81400c17 	ldw	r5,48(r16)
 1002378:	30e3c83a 	sub	r17,r6,r3
 100237c:	28008026 	beq	r5,zero,1002580 <_fseek_r+0x36c>
 1002380:	81c00f17 	ldw	r7,60(r16)
 1002384:	89e3c83a 	sub	r17,r17,r7
 1002388:	80800e17 	ldw	r2,56(r16)
 100238c:	81800417 	ldw	r6,16(r16)
 1002390:	88c7883a 	add	r3,r17,r3
 1002394:	1185c83a 	sub	r2,r2,r6
 1002398:	11cf883a 	add	r7,r2,r7
 100239c:	1887c83a 	sub	r3,r3,r2
 10023a0:	2088000c 	andi	r2,r4,8192
 10023a4:	10003e1e 	bne	r2,zero,10024a0 <_fseek_r+0x28c>
 10023a8:	a0c03d16 	blt	r20,r3,10024a0 <_fseek_r+0x28c>
 10023ac:	38c5883a 	add	r2,r7,r3
 10023b0:	a0803b2e 	bgeu	r20,r2,10024a0 <_fseek_r+0x28c>
 10023b4:	a0c5c83a 	sub	r2,r20,r3
 10023b8:	3887c83a 	sub	r3,r7,r2
 10023bc:	3085883a 	add	r2,r6,r2
 10023c0:	80800015 	stw	r2,0(r16)
 10023c4:	80c00115 	stw	r3,4(r16)
 10023c8:	28000526 	beq	r5,zero,10023e0 <_fseek_r+0x1cc>
 10023cc:	80801004 	addi	r2,r16,64
 10023d0:	28800226 	beq	r5,r2,10023dc <_fseek_r+0x1c8>
 10023d4:	9009883a 	mov	r4,r18
 10023d8:	1001e940 	call	1001e94 <_free_r>
 10023dc:	80000c15 	stw	zero,48(r16)
 10023e0:	8080030b 	ldhu	r2,12(r16)
 10023e4:	0009883a 	mov	r4,zero
 10023e8:	10bff7cc 	andi	r2,r2,65503
 10023ec:	8080030d 	sth	r2,12(r16)
 10023f0:	003fa706 	br	1002290 <_fseek_r+0x7c>
 10023f4:	9009883a 	mov	r4,r18
 10023f8:	800b883a 	mov	r5,r16
 10023fc:	100131c0 	call	100131c <_fflush_r>
 1002400:	8100030b 	ldhu	r4,12(r16)
 1002404:	2084000c 	andi	r2,r4,4096
 1002408:	10008726 	beq	r2,zero,1002628 <_fseek_r+0x414>
 100240c:	84401417 	ldw	r17,80(r16)
 1002410:	2080010c 	andi	r2,r4,4
 1002414:	1000171e 	bne	r2,zero,1002474 <_fseek_r+0x260>
 1002418:	2080020c 	andi	r2,r4,8
 100241c:	10003b26 	beq	r2,zero,100250c <_fseek_r+0x2f8>
 1002420:	80800017 	ldw	r2,0(r16)
 1002424:	10003926 	beq	r2,zero,100250c <_fseek_r+0x2f8>
 1002428:	81800417 	ldw	r6,16(r16)
 100242c:	1185c83a 	sub	r2,r2,r6
 1002430:	88a3883a 	add	r17,r17,r2
 1002434:	00001606 	br	1002490 <_fseek_r+0x27c>
 1002438:	10017200 	call	1001720 <__sinit>
 100243c:	8080030b 	ldhu	r2,12(r16)
 1002440:	00c04204 	movi	r3,264
 1002444:	1080420c 	andi	r2,r2,264
 1002448:	10ff871e 	bne	r2,r3,1002268 <_fseek_r+0x54>
 100244c:	9009883a 	mov	r4,r18
 1002450:	800b883a 	mov	r5,r16
 1002454:	100131c0 	call	100131c <_fflush_r>
 1002458:	003f8306 	br	1002268 <_fseek_r+0x54>
 100245c:	81400c17 	ldw	r5,48(r16)
 1002460:	28004526 	beq	r5,zero,1002578 <_fseek_r+0x364>
 1002464:	8100030b 	ldhu	r4,12(r16)
 1002468:	80c00117 	ldw	r3,4(r16)
 100246c:	81c00f17 	ldw	r7,60(r16)
 1002470:	003fc506 	br	1002388 <_fseek_r+0x174>
 1002474:	80c00117 	ldw	r3,4(r16)
 1002478:	80800c17 	ldw	r2,48(r16)
 100247c:	88e3c83a 	sub	r17,r17,r3
 1002480:	10002226 	beq	r2,zero,100250c <_fseek_r+0x2f8>
 1002484:	81c00f17 	ldw	r7,60(r16)
 1002488:	81800417 	ldw	r6,16(r16)
 100248c:	89e3c83a 	sub	r17,r17,r7
 1002490:	b46d883a 	add	r22,r22,r17
 1002494:	0027883a 	mov	r19,zero
 1002498:	05c00044 	movi	r23,1
 100249c:	003f8b06 	br	10022cc <_fseek_r+0xb8>
 10024a0:	80801317 	ldw	r2,76(r16)
 10024a4:	81400717 	ldw	r5,28(r16)
 10024a8:	9009883a 	mov	r4,r18
 10024ac:	0085c83a 	sub	r2,zero,r2
 10024b0:	a0a2703a 	and	r17,r20,r2
 10024b4:	880d883a 	mov	r6,r17
 10024b8:	000f883a 	mov	r7,zero
 10024bc:	a83ee83a 	callr	r21
 10024c0:	00ffffc4 	movi	r3,-1
 10024c4:	10ff8d26 	beq	r2,r3,10022fc <_fseek_r+0xe8>
 10024c8:	80800417 	ldw	r2,16(r16)
 10024cc:	81400c17 	ldw	r5,48(r16)
 10024d0:	80000115 	stw	zero,4(r16)
 10024d4:	80800015 	stw	r2,0(r16)
 10024d8:	28000526 	beq	r5,zero,10024f0 <_fseek_r+0x2dc>
 10024dc:	80801004 	addi	r2,r16,64
 10024e0:	28800226 	beq	r5,r2,10024ec <_fseek_r+0x2d8>
 10024e4:	9009883a 	mov	r4,r18
 10024e8:	1001e940 	call	1001e94 <_free_r>
 10024ec:	80000c15 	stw	zero,48(r16)
 10024f0:	8080030b 	ldhu	r2,12(r16)
 10024f4:	a463c83a 	sub	r17,r20,r17
 10024f8:	10bff7cc 	andi	r2,r2,65503
 10024fc:	8080030d 	sth	r2,12(r16)
 1002500:	88000c1e 	bne	r17,zero,1002534 <_fseek_r+0x320>
 1002504:	0009883a 	mov	r4,zero
 1002508:	003f6106 	br	1002290 <_fseek_r+0x7c>
 100250c:	81800417 	ldw	r6,16(r16)
 1002510:	003fdf06 	br	1002490 <_fseek_r+0x27c>
 1002514:	8140038f 	ldh	r5,14(r16)
 1002518:	9009883a 	mov	r4,r18
 100251c:	d80d883a 	mov	r6,sp
 1002520:	10026740 	call	1002674 <_fstat_r>
 1002524:	103f751e 	bne	r2,zero,10022fc <_fseek_r+0xe8>
 1002528:	d8800417 	ldw	r2,16(sp)
 100252c:	b0a9883a 	add	r20,r22,r2
 1002530:	003f8906 	br	1002358 <_fseek_r+0x144>
 1002534:	9009883a 	mov	r4,r18
 1002538:	800b883a 	mov	r5,r16
 100253c:	10036100 	call	1003610 <__srefill_r>
 1002540:	103f6e1e 	bne	r2,zero,10022fc <_fseek_r+0xe8>
 1002544:	80c00117 	ldw	r3,4(r16)
 1002548:	1c7f6c36 	bltu	r3,r17,10022fc <_fseek_r+0xe8>
 100254c:	80800017 	ldw	r2,0(r16)
 1002550:	1c47c83a 	sub	r3,r3,r17
 1002554:	0009883a 	mov	r4,zero
 1002558:	1445883a 	add	r2,r2,r17
 100255c:	80c00115 	stw	r3,4(r16)
 1002560:	80800015 	stw	r2,0(r16)
 1002564:	003f4a06 	br	1002290 <_fseek_r+0x7c>
 1002568:	9009883a 	mov	r4,r18
 100256c:	800b883a 	mov	r5,r16
 1002570:	10029540 	call	1002954 <__smakebuf_r>
 1002574:	003f5606 	br	10022d0 <_fseek_r+0xbc>
 1002578:	8100030b 	ldhu	r4,12(r16)
 100257c:	80c00117 	ldw	r3,4(r16)
 1002580:	80800017 	ldw	r2,0(r16)
 1002584:	81800417 	ldw	r6,16(r16)
 1002588:	1185c83a 	sub	r2,r2,r6
 100258c:	10cf883a 	add	r7,r2,r3
 1002590:	8887c83a 	sub	r3,r17,r2
 1002594:	003f8206 	br	10023a0 <_fseek_r+0x18c>
 1002598:	81400717 	ldw	r5,28(r16)
 100259c:	b00d883a 	mov	r6,r22
 10025a0:	980f883a 	mov	r7,r19
 10025a4:	9009883a 	mov	r4,r18
 10025a8:	a83ee83a 	callr	r21
 10025ac:	00ffffc4 	movi	r3,-1
 10025b0:	10ff5626 	beq	r2,r3,100230c <_fseek_r+0xf8>
 10025b4:	81400c17 	ldw	r5,48(r16)
 10025b8:	28000526 	beq	r5,zero,10025d0 <_fseek_r+0x3bc>
 10025bc:	80801004 	addi	r2,r16,64
 10025c0:	28800226 	beq	r5,r2,10025cc <_fseek_r+0x3b8>
 10025c4:	9009883a 	mov	r4,r18
 10025c8:	1001e940 	call	1001e94 <_free_r>
 10025cc:	80000c15 	stw	zero,48(r16)
 10025d0:	8080030b 	ldhu	r2,12(r16)
 10025d4:	80c00417 	ldw	r3,16(r16)
 10025d8:	0009883a 	mov	r4,zero
 10025dc:	10bdf7cc 	andi	r2,r2,63455
 10025e0:	8080030d 	sth	r2,12(r16)
 10025e4:	80c00015 	stw	r3,0(r16)
 10025e8:	80000115 	stw	zero,4(r16)
 10025ec:	003f2806 	br	1002290 <_fseek_r+0x7c>
 10025f0:	81400717 	ldw	r5,28(r16)
 10025f4:	000d883a 	mov	r6,zero
 10025f8:	9009883a 	mov	r4,r18
 10025fc:	01c00044 	movi	r7,1
 1002600:	a83ee83a 	callr	r21
 1002604:	100d883a 	mov	r6,r2
 1002608:	00bfffc4 	movi	r2,-1
 100260c:	30bf3b26 	beq	r6,r2,10022fc <_fseek_r+0xe8>
 1002610:	8100030b 	ldhu	r4,12(r16)
 1002614:	003f5606 	br	1002370 <_fseek_r+0x15c>
 1002618:	00800744 	movi	r2,29
 100261c:	013fffc4 	movi	r4,-1
 1002620:	90800015 	stw	r2,0(r18)
 1002624:	003f1a06 	br	1002290 <_fseek_r+0x7c>
 1002628:	81400717 	ldw	r5,28(r16)
 100262c:	980f883a 	mov	r7,r19
 1002630:	9009883a 	mov	r4,r18
 1002634:	000d883a 	mov	r6,zero
 1002638:	a83ee83a 	callr	r21
 100263c:	1023883a 	mov	r17,r2
 1002640:	00bfffc4 	movi	r2,-1
 1002644:	88bf3126 	beq	r17,r2,100230c <_fseek_r+0xf8>
 1002648:	8100030b 	ldhu	r4,12(r16)
 100264c:	003f7006 	br	1002410 <_fseek_r+0x1fc>

01002650 <fseek>:
 1002650:	00804074 	movhi	r2,257
 1002654:	10915504 	addi	r2,r2,17748
 1002658:	2013883a 	mov	r9,r4
 100265c:	11000017 	ldw	r4,0(r2)
 1002660:	2805883a 	mov	r2,r5
 1002664:	300f883a 	mov	r7,r6
 1002668:	480b883a 	mov	r5,r9
 100266c:	100d883a 	mov	r6,r2
 1002670:	10022141 	jmpi	1002214 <_fseek_r>

01002674 <_fstat_r>:
 1002674:	defffd04 	addi	sp,sp,-12
 1002678:	dc000015 	stw	r16,0(sp)
 100267c:	04004074 	movhi	r16,257
 1002680:	84142904 	addi	r16,r16,20644
 1002684:	dc400115 	stw	r17,4(sp)
 1002688:	80000015 	stw	zero,0(r16)
 100268c:	2023883a 	mov	r17,r4
 1002690:	2809883a 	mov	r4,r5
 1002694:	300b883a 	mov	r5,r6
 1002698:	dfc00215 	stw	ra,8(sp)
 100269c:	1010ea40 	call	1010ea4 <fstat>
 10026a0:	1007883a 	mov	r3,r2
 10026a4:	00bfffc4 	movi	r2,-1
 10026a8:	18800626 	beq	r3,r2,10026c4 <_fstat_r+0x50>
 10026ac:	1805883a 	mov	r2,r3
 10026b0:	dfc00217 	ldw	ra,8(sp)
 10026b4:	dc400117 	ldw	r17,4(sp)
 10026b8:	dc000017 	ldw	r16,0(sp)
 10026bc:	dec00304 	addi	sp,sp,12
 10026c0:	f800283a 	ret
 10026c4:	80800017 	ldw	r2,0(r16)
 10026c8:	103ff826 	beq	r2,zero,10026ac <_fstat_r+0x38>
 10026cc:	88800015 	stw	r2,0(r17)
 10026d0:	1805883a 	mov	r2,r3
 10026d4:	dfc00217 	ldw	ra,8(sp)
 10026d8:	dc400117 	ldw	r17,4(sp)
 10026dc:	dc000017 	ldw	r16,0(sp)
 10026e0:	dec00304 	addi	sp,sp,12
 10026e4:	f800283a 	ret

010026e8 <_fwalk_reent>:
 10026e8:	defff704 	addi	sp,sp,-36
 10026ec:	dcc00315 	stw	r19,12(sp)
 10026f0:	24c0b804 	addi	r19,r4,736
 10026f4:	dd800615 	stw	r22,24(sp)
 10026f8:	dd400515 	stw	r21,20(sp)
 10026fc:	dfc00815 	stw	ra,32(sp)
 1002700:	ddc00715 	stw	r23,28(sp)
 1002704:	dd000415 	stw	r20,16(sp)
 1002708:	dc800215 	stw	r18,8(sp)
 100270c:	dc400115 	stw	r17,4(sp)
 1002710:	dc000015 	stw	r16,0(sp)
 1002714:	202b883a 	mov	r21,r4
 1002718:	282d883a 	mov	r22,r5
 100271c:	10017100 	call	1001710 <__sfp_lock_acquire>
 1002720:	98002126 	beq	r19,zero,10027a8 <_fwalk_reent+0xc0>
 1002724:	002f883a 	mov	r23,zero
 1002728:	9c800117 	ldw	r18,4(r19)
 100272c:	9c000217 	ldw	r16,8(r19)
 1002730:	90bfffc4 	addi	r2,r18,-1
 1002734:	10000d16 	blt	r2,zero,100276c <_fwalk_reent+0x84>
 1002738:	0023883a 	mov	r17,zero
 100273c:	053fffc4 	movi	r20,-1
 1002740:	8080030f 	ldh	r2,12(r16)
 1002744:	8c400044 	addi	r17,r17,1
 1002748:	10000626 	beq	r2,zero,1002764 <_fwalk_reent+0x7c>
 100274c:	8080038f 	ldh	r2,14(r16)
 1002750:	800b883a 	mov	r5,r16
 1002754:	a809883a 	mov	r4,r21
 1002758:	15000226 	beq	r2,r20,1002764 <_fwalk_reent+0x7c>
 100275c:	b03ee83a 	callr	r22
 1002760:	b8aeb03a 	or	r23,r23,r2
 1002764:	84001704 	addi	r16,r16,92
 1002768:	947ff51e 	bne	r18,r17,1002740 <_fwalk_reent+0x58>
 100276c:	9cc00017 	ldw	r19,0(r19)
 1002770:	983fed1e 	bne	r19,zero,1002728 <_fwalk_reent+0x40>
 1002774:	10017140 	call	1001714 <__sfp_lock_release>
 1002778:	b805883a 	mov	r2,r23
 100277c:	dfc00817 	ldw	ra,32(sp)
 1002780:	ddc00717 	ldw	r23,28(sp)
 1002784:	dd800617 	ldw	r22,24(sp)
 1002788:	dd400517 	ldw	r21,20(sp)
 100278c:	dd000417 	ldw	r20,16(sp)
 1002790:	dcc00317 	ldw	r19,12(sp)
 1002794:	dc800217 	ldw	r18,8(sp)
 1002798:	dc400117 	ldw	r17,4(sp)
 100279c:	dc000017 	ldw	r16,0(sp)
 10027a0:	dec00904 	addi	sp,sp,36
 10027a4:	f800283a 	ret
 10027a8:	002f883a 	mov	r23,zero
 10027ac:	003ff106 	br	1002774 <_fwalk_reent+0x8c>

010027b0 <_fwalk>:
 10027b0:	defff804 	addi	sp,sp,-32
 10027b4:	dcc00315 	stw	r19,12(sp)
 10027b8:	24c0b804 	addi	r19,r4,736
 10027bc:	dd400515 	stw	r21,20(sp)
 10027c0:	dfc00715 	stw	ra,28(sp)
 10027c4:	dd800615 	stw	r22,24(sp)
 10027c8:	dd000415 	stw	r20,16(sp)
 10027cc:	dc800215 	stw	r18,8(sp)
 10027d0:	dc400115 	stw	r17,4(sp)
 10027d4:	dc000015 	stw	r16,0(sp)
 10027d8:	282b883a 	mov	r21,r5
 10027dc:	10017100 	call	1001710 <__sfp_lock_acquire>
 10027e0:	98001f26 	beq	r19,zero,1002860 <_fwalk+0xb0>
 10027e4:	002d883a 	mov	r22,zero
 10027e8:	9c800117 	ldw	r18,4(r19)
 10027ec:	9c000217 	ldw	r16,8(r19)
 10027f0:	90bfffc4 	addi	r2,r18,-1
 10027f4:	10000c16 	blt	r2,zero,1002828 <_fwalk+0x78>
 10027f8:	0023883a 	mov	r17,zero
 10027fc:	053fffc4 	movi	r20,-1
 1002800:	8080030f 	ldh	r2,12(r16)
 1002804:	8c400044 	addi	r17,r17,1
 1002808:	10000526 	beq	r2,zero,1002820 <_fwalk+0x70>
 100280c:	8080038f 	ldh	r2,14(r16)
 1002810:	8009883a 	mov	r4,r16
 1002814:	15000226 	beq	r2,r20,1002820 <_fwalk+0x70>
 1002818:	a83ee83a 	callr	r21
 100281c:	b0acb03a 	or	r22,r22,r2
 1002820:	84001704 	addi	r16,r16,92
 1002824:	947ff61e 	bne	r18,r17,1002800 <_fwalk+0x50>
 1002828:	9cc00017 	ldw	r19,0(r19)
 100282c:	983fee1e 	bne	r19,zero,10027e8 <_fwalk+0x38>
 1002830:	10017140 	call	1001714 <__sfp_lock_release>
 1002834:	b005883a 	mov	r2,r22
 1002838:	dfc00717 	ldw	ra,28(sp)
 100283c:	dd800617 	ldw	r22,24(sp)
 1002840:	dd400517 	ldw	r21,20(sp)
 1002844:	dd000417 	ldw	r20,16(sp)
 1002848:	dcc00317 	ldw	r19,12(sp)
 100284c:	dc800217 	ldw	r18,8(sp)
 1002850:	dc400117 	ldw	r17,4(sp)
 1002854:	dc000017 	ldw	r16,0(sp)
 1002858:	dec00804 	addi	sp,sp,32
 100285c:	f800283a 	ret
 1002860:	002d883a 	mov	r22,zero
 1002864:	003ff206 	br	1002830 <_fwalk+0x80>

01002868 <_fwrite_r>:
 1002868:	defff604 	addi	sp,sp,-40
 100286c:	dc000515 	stw	r16,20(sp)
 1002870:	d9400015 	stw	r5,0(sp)
 1002874:	2021883a 	mov	r16,r4
 1002878:	300b883a 	mov	r5,r6
 100287c:	3809883a 	mov	r4,r7
 1002880:	dcc00815 	stw	r19,32(sp)
 1002884:	dc800715 	stw	r18,28(sp)
 1002888:	dc400615 	stw	r17,24(sp)
 100288c:	dfc00915 	stw	ra,36(sp)
 1002890:	3825883a 	mov	r18,r7
 1002894:	3027883a 	mov	r19,r6
 1002898:	10010a40 	call	10010a4 <__mulsi3>
 100289c:	1023883a 	mov	r17,r2
 10028a0:	00800044 	movi	r2,1
 10028a4:	d8800315 	stw	r2,12(sp)
 10028a8:	dc400115 	stw	r17,4(sp)
 10028ac:	dc400415 	stw	r17,16(sp)
 10028b0:	dec00215 	stw	sp,8(sp)
 10028b4:	80000326 	beq	r16,zero,10028c4 <_fwrite_r+0x5c>
 10028b8:	80800e17 	ldw	r2,56(r16)
 10028bc:	8009883a 	mov	r4,r16
 10028c0:	10001226 	beq	r2,zero,100290c <_fwrite_r+0xa4>
 10028c4:	d9400a17 	ldw	r5,40(sp)
 10028c8:	8009883a 	mov	r4,r16
 10028cc:	d9800204 	addi	r6,sp,8
 10028d0:	1008f5c0 	call	1008f5c <__sfvwrite_r>
 10028d4:	980b883a 	mov	r5,r19
 10028d8:	10000426 	beq	r2,zero,10028ec <_fwrite_r+0x84>
 10028dc:	d9000417 	ldw	r4,16(sp)
 10028e0:	8909c83a 	sub	r4,r17,r4
 10028e4:	10010940 	call	1001094 <__udivsi3>
 10028e8:	1025883a 	mov	r18,r2
 10028ec:	9005883a 	mov	r2,r18
 10028f0:	dfc00917 	ldw	ra,36(sp)
 10028f4:	dcc00817 	ldw	r19,32(sp)
 10028f8:	dc800717 	ldw	r18,28(sp)
 10028fc:	dc400617 	ldw	r17,24(sp)
 1002900:	dc000517 	ldw	r16,20(sp)
 1002904:	dec00a04 	addi	sp,sp,40
 1002908:	f800283a 	ret
 100290c:	10017200 	call	1001720 <__sinit>
 1002910:	003fec06 	br	10028c4 <_fwrite_r+0x5c>

01002914 <fwrite>:
 1002914:	00804074 	movhi	r2,257
 1002918:	10915504 	addi	r2,r2,17748
 100291c:	2017883a 	mov	r11,r4
 1002920:	11000017 	ldw	r4,0(r2)
 1002924:	defffe04 	addi	sp,sp,-8
 1002928:	3013883a 	mov	r9,r6
 100292c:	2805883a 	mov	r2,r5
 1002930:	d9c00015 	stw	r7,0(sp)
 1002934:	580b883a 	mov	r5,r11
 1002938:	100d883a 	mov	r6,r2
 100293c:	480f883a 	mov	r7,r9
 1002940:	dfc00115 	stw	ra,4(sp)
 1002944:	10028680 	call	1002868 <_fwrite_r>
 1002948:	dfc00117 	ldw	ra,4(sp)
 100294c:	dec00204 	addi	sp,sp,8
 1002950:	f800283a 	ret

01002954 <__smakebuf_r>:
 1002954:	2880030b 	ldhu	r2,12(r5)
 1002958:	deffed04 	addi	sp,sp,-76
 100295c:	dc401015 	stw	r17,64(sp)
 1002960:	1080008c 	andi	r2,r2,2
 1002964:	dc000f15 	stw	r16,60(sp)
 1002968:	dfc01215 	stw	ra,72(sp)
 100296c:	dc801115 	stw	r18,68(sp)
 1002970:	2821883a 	mov	r16,r5
 1002974:	2023883a 	mov	r17,r4
 1002978:	10000b26 	beq	r2,zero,10029a8 <__smakebuf_r+0x54>
 100297c:	28c010c4 	addi	r3,r5,67
 1002980:	00800044 	movi	r2,1
 1002984:	28800515 	stw	r2,20(r5)
 1002988:	28c00415 	stw	r3,16(r5)
 100298c:	28c00015 	stw	r3,0(r5)
 1002990:	dfc01217 	ldw	ra,72(sp)
 1002994:	dc801117 	ldw	r18,68(sp)
 1002998:	dc401017 	ldw	r17,64(sp)
 100299c:	dc000f17 	ldw	r16,60(sp)
 10029a0:	dec01304 	addi	sp,sp,76
 10029a4:	f800283a 	ret
 10029a8:	2940038f 	ldh	r5,14(r5)
 10029ac:	28002116 	blt	r5,zero,1002a34 <__smakebuf_r+0xe0>
 10029b0:	d80d883a 	mov	r6,sp
 10029b4:	10026740 	call	1002674 <_fstat_r>
 10029b8:	10001e16 	blt	r2,zero,1002a34 <__smakebuf_r+0xe0>
 10029bc:	d8800117 	ldw	r2,4(sp)
 10029c0:	00e00014 	movui	r3,32768
 10029c4:	113c000c 	andi	r4,r2,61440
 10029c8:	20c03126 	beq	r4,r3,1002a90 <__smakebuf_r+0x13c>
 10029cc:	8080030b 	ldhu	r2,12(r16)
 10029d0:	00c80004 	movi	r3,8192
 10029d4:	10820014 	ori	r2,r2,2048
 10029d8:	8080030d 	sth	r2,12(r16)
 10029dc:	20c01e26 	beq	r4,r3,1002a58 <__smakebuf_r+0x104>
 10029e0:	04810004 	movi	r18,1024
 10029e4:	8809883a 	mov	r4,r17
 10029e8:	900b883a 	mov	r5,r18
 10029ec:	1002b100 	call	1002b10 <_malloc_r>
 10029f0:	1009883a 	mov	r4,r2
 10029f4:	10003126 	beq	r2,zero,1002abc <__smakebuf_r+0x168>
 10029f8:	80c0030b 	ldhu	r3,12(r16)
 10029fc:	00804034 	movhi	r2,256
 1002a00:	10860104 	addi	r2,r2,6148
 1002a04:	88800f15 	stw	r2,60(r17)
 1002a08:	18c02014 	ori	r3,r3,128
 1002a0c:	84800515 	stw	r18,20(r16)
 1002a10:	80c0030d 	sth	r3,12(r16)
 1002a14:	81000415 	stw	r4,16(r16)
 1002a18:	81000015 	stw	r4,0(r16)
 1002a1c:	dfc01217 	ldw	ra,72(sp)
 1002a20:	dc801117 	ldw	r18,68(sp)
 1002a24:	dc401017 	ldw	r17,64(sp)
 1002a28:	dc000f17 	ldw	r16,60(sp)
 1002a2c:	dec01304 	addi	sp,sp,76
 1002a30:	f800283a 	ret
 1002a34:	80c0030b 	ldhu	r3,12(r16)
 1002a38:	1880200c 	andi	r2,r3,128
 1002a3c:	10000426 	beq	r2,zero,1002a50 <__smakebuf_r+0xfc>
 1002a40:	04801004 	movi	r18,64
 1002a44:	18820014 	ori	r2,r3,2048
 1002a48:	8080030d 	sth	r2,12(r16)
 1002a4c:	003fe506 	br	10029e4 <__smakebuf_r+0x90>
 1002a50:	04810004 	movi	r18,1024
 1002a54:	003ffb06 	br	1002a44 <__smakebuf_r+0xf0>
 1002a58:	8140038f 	ldh	r5,14(r16)
 1002a5c:	8809883a 	mov	r4,r17
 1002a60:	10093f80 	call	10093f8 <_isatty_r>
 1002a64:	103fde26 	beq	r2,zero,10029e0 <__smakebuf_r+0x8c>
 1002a68:	8080030b 	ldhu	r2,12(r16)
 1002a6c:	80c010c4 	addi	r3,r16,67
 1002a70:	04810004 	movi	r18,1024
 1002a74:	10800054 	ori	r2,r2,1
 1002a78:	8080030d 	sth	r2,12(r16)
 1002a7c:	00800044 	movi	r2,1
 1002a80:	80c00415 	stw	r3,16(r16)
 1002a84:	80800515 	stw	r2,20(r16)
 1002a88:	80c00015 	stw	r3,0(r16)
 1002a8c:	003fd506 	br	10029e4 <__smakebuf_r+0x90>
 1002a90:	80c00a17 	ldw	r3,40(r16)
 1002a94:	00804034 	movhi	r2,256
 1002a98:	108e5f04 	addi	r2,r2,14716
 1002a9c:	18bfcb1e 	bne	r3,r2,10029cc <__smakebuf_r+0x78>
 1002aa0:	8080030b 	ldhu	r2,12(r16)
 1002aa4:	00c10004 	movi	r3,1024
 1002aa8:	1825883a 	mov	r18,r3
 1002aac:	10c4b03a 	or	r2,r2,r3
 1002ab0:	8080030d 	sth	r2,12(r16)
 1002ab4:	80c01315 	stw	r3,76(r16)
 1002ab8:	003fca06 	br	10029e4 <__smakebuf_r+0x90>
 1002abc:	8100030b 	ldhu	r4,12(r16)
 1002ac0:	2080800c 	andi	r2,r4,512
 1002ac4:	103fb21e 	bne	r2,zero,1002990 <__smakebuf_r+0x3c>
 1002ac8:	80c010c4 	addi	r3,r16,67
 1002acc:	21000094 	ori	r4,r4,2
 1002ad0:	00800044 	movi	r2,1
 1002ad4:	80800515 	stw	r2,20(r16)
 1002ad8:	8100030d 	sth	r4,12(r16)
 1002adc:	80c00415 	stw	r3,16(r16)
 1002ae0:	80c00015 	stw	r3,0(r16)
 1002ae4:	003faa06 	br	1002990 <__smakebuf_r+0x3c>

01002ae8 <free>:
 1002ae8:	00804074 	movhi	r2,257
 1002aec:	10915504 	addi	r2,r2,17748
 1002af0:	200b883a 	mov	r5,r4
 1002af4:	11000017 	ldw	r4,0(r2)
 1002af8:	1001e941 	jmpi	1001e94 <_free_r>

01002afc <malloc>:
 1002afc:	00804074 	movhi	r2,257
 1002b00:	10915504 	addi	r2,r2,17748
 1002b04:	200b883a 	mov	r5,r4
 1002b08:	11000017 	ldw	r4,0(r2)
 1002b0c:	1002b101 	jmpi	1002b10 <_malloc_r>

01002b10 <_malloc_r>:
 1002b10:	defff604 	addi	sp,sp,-40
 1002b14:	28c002c4 	addi	r3,r5,11
 1002b18:	00800584 	movi	r2,22
 1002b1c:	dc800215 	stw	r18,8(sp)
 1002b20:	dfc00915 	stw	ra,36(sp)
 1002b24:	df000815 	stw	fp,32(sp)
 1002b28:	ddc00715 	stw	r23,28(sp)
 1002b2c:	dd800615 	stw	r22,24(sp)
 1002b30:	dd400515 	stw	r21,20(sp)
 1002b34:	dd000415 	stw	r20,16(sp)
 1002b38:	dcc00315 	stw	r19,12(sp)
 1002b3c:	dc400115 	stw	r17,4(sp)
 1002b40:	dc000015 	stw	r16,0(sp)
 1002b44:	2025883a 	mov	r18,r4
 1002b48:	10c01236 	bltu	r2,r3,1002b94 <_malloc_r+0x84>
 1002b4c:	04400404 	movi	r17,16
 1002b50:	8940142e 	bgeu	r17,r5,1002ba4 <_malloc_r+0x94>
 1002b54:	00800304 	movi	r2,12
 1002b58:	0007883a 	mov	r3,zero
 1002b5c:	90800015 	stw	r2,0(r18)
 1002b60:	1805883a 	mov	r2,r3
 1002b64:	dfc00917 	ldw	ra,36(sp)
 1002b68:	df000817 	ldw	fp,32(sp)
 1002b6c:	ddc00717 	ldw	r23,28(sp)
 1002b70:	dd800617 	ldw	r22,24(sp)
 1002b74:	dd400517 	ldw	r21,20(sp)
 1002b78:	dd000417 	ldw	r20,16(sp)
 1002b7c:	dcc00317 	ldw	r19,12(sp)
 1002b80:	dc800217 	ldw	r18,8(sp)
 1002b84:	dc400117 	ldw	r17,4(sp)
 1002b88:	dc000017 	ldw	r16,0(sp)
 1002b8c:	dec00a04 	addi	sp,sp,40
 1002b90:	f800283a 	ret
 1002b94:	00bffe04 	movi	r2,-8
 1002b98:	18a2703a 	and	r17,r3,r2
 1002b9c:	883fed16 	blt	r17,zero,1002b54 <_malloc_r+0x44>
 1002ba0:	897fec36 	bltu	r17,r5,1002b54 <_malloc_r+0x44>
 1002ba4:	9009883a 	mov	r4,r18
 1002ba8:	101139c0 	call	101139c <__malloc_lock>
 1002bac:	00807dc4 	movi	r2,503
 1002bb0:	14402b2e 	bgeu	r2,r17,1002c60 <_malloc_r+0x150>
 1002bb4:	8806d27a 	srli	r3,r17,9
 1002bb8:	18003f1e 	bne	r3,zero,1002cb8 <_malloc_r+0x1a8>
 1002bbc:	880cd0fa 	srli	r6,r17,3
 1002bc0:	300490fa 	slli	r2,r6,3
 1002bc4:	02c04074 	movhi	r11,257
 1002bc8:	5acfc704 	addi	r11,r11,16156
 1002bcc:	12cb883a 	add	r5,r2,r11
 1002bd0:	2c000317 	ldw	r16,12(r5)
 1002bd4:	580f883a 	mov	r7,r11
 1002bd8:	2c00041e 	bne	r5,r16,1002bec <_malloc_r+0xdc>
 1002bdc:	00000a06 	br	1002c08 <_malloc_r+0xf8>
 1002be0:	1800860e 	bge	r3,zero,1002dfc <_malloc_r+0x2ec>
 1002be4:	84000317 	ldw	r16,12(r16)
 1002be8:	2c000726 	beq	r5,r16,1002c08 <_malloc_r+0xf8>
 1002bec:	80800117 	ldw	r2,4(r16)
 1002bf0:	00ffff04 	movi	r3,-4
 1002bf4:	10c8703a 	and	r4,r2,r3
 1002bf8:	2447c83a 	sub	r3,r4,r17
 1002bfc:	008003c4 	movi	r2,15
 1002c00:	10fff70e 	bge	r2,r3,1002be0 <_malloc_r+0xd0>
 1002c04:	31bfffc4 	addi	r6,r6,-1
 1002c08:	32400044 	addi	r9,r6,1
 1002c0c:	02804074 	movhi	r10,257
 1002c10:	528fc904 	addi	r10,r10,16164
 1002c14:	54000217 	ldw	r16,8(r10)
 1002c18:	8280a026 	beq	r16,r10,1002e9c <_malloc_r+0x38c>
 1002c1c:	80800117 	ldw	r2,4(r16)
 1002c20:	00ffff04 	movi	r3,-4
 1002c24:	10ca703a 	and	r5,r2,r3
 1002c28:	2c4dc83a 	sub	r6,r5,r17
 1002c2c:	008003c4 	movi	r2,15
 1002c30:	11808316 	blt	r2,r6,1002e40 <_malloc_r+0x330>
 1002c34:	52800315 	stw	r10,12(r10)
 1002c38:	52800215 	stw	r10,8(r10)
 1002c3c:	30002916 	blt	r6,zero,1002ce4 <_malloc_r+0x1d4>
 1002c40:	8147883a 	add	r3,r16,r5
 1002c44:	18800117 	ldw	r2,4(r3)
 1002c48:	9009883a 	mov	r4,r18
 1002c4c:	10800054 	ori	r2,r2,1
 1002c50:	18800115 	stw	r2,4(r3)
 1002c54:	10113bc0 	call	10113bc <__malloc_unlock>
 1002c58:	80c00204 	addi	r3,r16,8
 1002c5c:	003fc006 	br	1002b60 <_malloc_r+0x50>
 1002c60:	02c04074 	movhi	r11,257
 1002c64:	5acfc704 	addi	r11,r11,16156
 1002c68:	8ac5883a 	add	r2,r17,r11
 1002c6c:	14000317 	ldw	r16,12(r2)
 1002c70:	580f883a 	mov	r7,r11
 1002c74:	8806d0fa 	srli	r3,r17,3
 1002c78:	14006c26 	beq	r2,r16,1002e2c <_malloc_r+0x31c>
 1002c7c:	80c00117 	ldw	r3,4(r16)
 1002c80:	00bfff04 	movi	r2,-4
 1002c84:	81800317 	ldw	r6,12(r16)
 1002c88:	1886703a 	and	r3,r3,r2
 1002c8c:	80c7883a 	add	r3,r16,r3
 1002c90:	18800117 	ldw	r2,4(r3)
 1002c94:	81400217 	ldw	r5,8(r16)
 1002c98:	9009883a 	mov	r4,r18
 1002c9c:	10800054 	ori	r2,r2,1
 1002ca0:	18800115 	stw	r2,4(r3)
 1002ca4:	31400215 	stw	r5,8(r6)
 1002ca8:	29800315 	stw	r6,12(r5)
 1002cac:	10113bc0 	call	10113bc <__malloc_unlock>
 1002cb0:	80c00204 	addi	r3,r16,8
 1002cb4:	003faa06 	br	1002b60 <_malloc_r+0x50>
 1002cb8:	00800104 	movi	r2,4
 1002cbc:	10c0052e 	bgeu	r2,r3,1002cd4 <_malloc_r+0x1c4>
 1002cc0:	00800504 	movi	r2,20
 1002cc4:	10c07836 	bltu	r2,r3,1002ea8 <_malloc_r+0x398>
 1002cc8:	198016c4 	addi	r6,r3,91
 1002ccc:	300490fa 	slli	r2,r6,3
 1002cd0:	003fbc06 	br	1002bc4 <_malloc_r+0xb4>
 1002cd4:	8804d1ba 	srli	r2,r17,6
 1002cd8:	11800e04 	addi	r6,r2,56
 1002cdc:	300490fa 	slli	r2,r6,3
 1002ce0:	003fb806 	br	1002bc4 <_malloc_r+0xb4>
 1002ce4:	00807fc4 	movi	r2,511
 1002ce8:	1140bb36 	bltu	r2,r5,1002fd8 <_malloc_r+0x4c8>
 1002cec:	2806d0fa 	srli	r3,r5,3
 1002cf0:	573ffe04 	addi	fp,r10,-8
 1002cf4:	00800044 	movi	r2,1
 1002cf8:	180890fa 	slli	r4,r3,3
 1002cfc:	1807d0ba 	srai	r3,r3,2
 1002d00:	e1c00117 	ldw	r7,4(fp)
 1002d04:	5909883a 	add	r4,r11,r4
 1002d08:	21400217 	ldw	r5,8(r4)
 1002d0c:	10c4983a 	sll	r2,r2,r3
 1002d10:	81000315 	stw	r4,12(r16)
 1002d14:	81400215 	stw	r5,8(r16)
 1002d18:	388eb03a 	or	r7,r7,r2
 1002d1c:	2c000315 	stw	r16,12(r5)
 1002d20:	24000215 	stw	r16,8(r4)
 1002d24:	e1c00115 	stw	r7,4(fp)
 1002d28:	4807883a 	mov	r3,r9
 1002d2c:	4800cd16 	blt	r9,zero,1003064 <_malloc_r+0x554>
 1002d30:	1807d0ba 	srai	r3,r3,2
 1002d34:	00800044 	movi	r2,1
 1002d38:	10c8983a 	sll	r4,r2,r3
 1002d3c:	39004436 	bltu	r7,r4,1002e50 <_malloc_r+0x340>
 1002d40:	21c4703a 	and	r2,r4,r7
 1002d44:	10000a1e 	bne	r2,zero,1002d70 <_malloc_r+0x260>
 1002d48:	2109883a 	add	r4,r4,r4
 1002d4c:	00bfff04 	movi	r2,-4
 1002d50:	4884703a 	and	r2,r9,r2
 1002d54:	3906703a 	and	r3,r7,r4
 1002d58:	12400104 	addi	r9,r2,4
 1002d5c:	1800041e 	bne	r3,zero,1002d70 <_malloc_r+0x260>
 1002d60:	2109883a 	add	r4,r4,r4
 1002d64:	3904703a 	and	r2,r7,r4
 1002d68:	4a400104 	addi	r9,r9,4
 1002d6c:	103ffc26 	beq	r2,zero,1002d60 <_malloc_r+0x250>
 1002d70:	480490fa 	slli	r2,r9,3
 1002d74:	4819883a 	mov	r12,r9
 1002d78:	023fff04 	movi	r8,-4
 1002d7c:	589b883a 	add	r13,r11,r2
 1002d80:	6807883a 	mov	r3,r13
 1002d84:	014003c4 	movi	r5,15
 1002d88:	1c000317 	ldw	r16,12(r3)
 1002d8c:	1c00041e 	bne	r3,r16,1002da0 <_malloc_r+0x290>
 1002d90:	0000a706 	br	1003030 <_malloc_r+0x520>
 1002d94:	3000ab0e 	bge	r6,zero,1003044 <_malloc_r+0x534>
 1002d98:	84000317 	ldw	r16,12(r16)
 1002d9c:	1c00a426 	beq	r3,r16,1003030 <_malloc_r+0x520>
 1002da0:	80800117 	ldw	r2,4(r16)
 1002da4:	1204703a 	and	r2,r2,r8
 1002da8:	144dc83a 	sub	r6,r2,r17
 1002dac:	29bff90e 	bge	r5,r6,1002d94 <_malloc_r+0x284>
 1002db0:	81000317 	ldw	r4,12(r16)
 1002db4:	80c00217 	ldw	r3,8(r16)
 1002db8:	89400054 	ori	r5,r17,1
 1002dbc:	8445883a 	add	r2,r16,r17
 1002dc0:	20c00215 	stw	r3,8(r4)
 1002dc4:	19000315 	stw	r4,12(r3)
 1002dc8:	81400115 	stw	r5,4(r16)
 1002dcc:	1187883a 	add	r3,r2,r6
 1002dd0:	31000054 	ori	r4,r6,1
 1002dd4:	50800315 	stw	r2,12(r10)
 1002dd8:	50800215 	stw	r2,8(r10)
 1002ddc:	19800015 	stw	r6,0(r3)
 1002de0:	11000115 	stw	r4,4(r2)
 1002de4:	12800215 	stw	r10,8(r2)
 1002de8:	12800315 	stw	r10,12(r2)
 1002dec:	9009883a 	mov	r4,r18
 1002df0:	10113bc0 	call	10113bc <__malloc_unlock>
 1002df4:	80c00204 	addi	r3,r16,8
 1002df8:	003f5906 	br	1002b60 <_malloc_r+0x50>
 1002dfc:	8109883a 	add	r4,r16,r4
 1002e00:	20800117 	ldw	r2,4(r4)
 1002e04:	80c00217 	ldw	r3,8(r16)
 1002e08:	81400317 	ldw	r5,12(r16)
 1002e0c:	10800054 	ori	r2,r2,1
 1002e10:	20800115 	stw	r2,4(r4)
 1002e14:	28c00215 	stw	r3,8(r5)
 1002e18:	19400315 	stw	r5,12(r3)
 1002e1c:	9009883a 	mov	r4,r18
 1002e20:	10113bc0 	call	10113bc <__malloc_unlock>
 1002e24:	80c00204 	addi	r3,r16,8
 1002e28:	003f4d06 	br	1002b60 <_malloc_r+0x50>
 1002e2c:	80800204 	addi	r2,r16,8
 1002e30:	14000317 	ldw	r16,12(r2)
 1002e34:	143f911e 	bne	r2,r16,1002c7c <_malloc_r+0x16c>
 1002e38:	1a400084 	addi	r9,r3,2
 1002e3c:	003f7306 	br	1002c0c <_malloc_r+0xfc>
 1002e40:	88c00054 	ori	r3,r17,1
 1002e44:	8445883a 	add	r2,r16,r17
 1002e48:	80c00115 	stw	r3,4(r16)
 1002e4c:	003fdf06 	br	1002dcc <_malloc_r+0x2bc>
 1002e50:	e4000217 	ldw	r16,8(fp)
 1002e54:	00bfff04 	movi	r2,-4
 1002e58:	80c00117 	ldw	r3,4(r16)
 1002e5c:	802d883a 	mov	r22,r16
 1002e60:	18aa703a 	and	r21,r3,r2
 1002e64:	ac401636 	bltu	r21,r17,1002ec0 <_malloc_r+0x3b0>
 1002e68:	ac49c83a 	sub	r4,r21,r17
 1002e6c:	008003c4 	movi	r2,15
 1002e70:	1100130e 	bge	r2,r4,1002ec0 <_malloc_r+0x3b0>
 1002e74:	88800054 	ori	r2,r17,1
 1002e78:	8447883a 	add	r3,r16,r17
 1002e7c:	80800115 	stw	r2,4(r16)
 1002e80:	20800054 	ori	r2,r4,1
 1002e84:	18800115 	stw	r2,4(r3)
 1002e88:	e0c00215 	stw	r3,8(fp)
 1002e8c:	9009883a 	mov	r4,r18
 1002e90:	10113bc0 	call	10113bc <__malloc_unlock>
 1002e94:	80c00204 	addi	r3,r16,8
 1002e98:	003f3106 	br	1002b60 <_malloc_r+0x50>
 1002e9c:	39c00117 	ldw	r7,4(r7)
 1002ea0:	573ffe04 	addi	fp,r10,-8
 1002ea4:	003fa006 	br	1002d28 <_malloc_r+0x218>
 1002ea8:	00801504 	movi	r2,84
 1002eac:	10c06736 	bltu	r2,r3,100304c <_malloc_r+0x53c>
 1002eb0:	8804d33a 	srli	r2,r17,12
 1002eb4:	11801b84 	addi	r6,r2,110
 1002eb8:	300490fa 	slli	r2,r6,3
 1002ebc:	003f4106 	br	1002bc4 <_malloc_r+0xb4>
 1002ec0:	d0a2d517 	ldw	r2,-29868(gp)
 1002ec4:	d0e00317 	ldw	r3,-32756(gp)
 1002ec8:	053fffc4 	movi	r20,-1
 1002ecc:	10800404 	addi	r2,r2,16
 1002ed0:	88a7883a 	add	r19,r17,r2
 1002ed4:	1d000326 	beq	r3,r20,1002ee4 <_malloc_r+0x3d4>
 1002ed8:	98c3ffc4 	addi	r3,r19,4095
 1002edc:	00bc0004 	movi	r2,-4096
 1002ee0:	18a6703a 	and	r19,r3,r2
 1002ee4:	9009883a 	mov	r4,r18
 1002ee8:	980b883a 	mov	r5,r19
 1002eec:	10037f00 	call	10037f0 <_sbrk_r>
 1002ef0:	1009883a 	mov	r4,r2
 1002ef4:	15000426 	beq	r2,r20,1002f08 <_malloc_r+0x3f8>
 1002ef8:	854b883a 	add	r5,r16,r21
 1002efc:	1029883a 	mov	r20,r2
 1002f00:	11405a2e 	bgeu	r2,r5,100306c <_malloc_r+0x55c>
 1002f04:	87000c26 	beq	r16,fp,1002f38 <_malloc_r+0x428>
 1002f08:	e4000217 	ldw	r16,8(fp)
 1002f0c:	80c00117 	ldw	r3,4(r16)
 1002f10:	00bfff04 	movi	r2,-4
 1002f14:	1884703a 	and	r2,r3,r2
 1002f18:	14400336 	bltu	r2,r17,1002f28 <_malloc_r+0x418>
 1002f1c:	1449c83a 	sub	r4,r2,r17
 1002f20:	008003c4 	movi	r2,15
 1002f24:	113fd316 	blt	r2,r4,1002e74 <_malloc_r+0x364>
 1002f28:	9009883a 	mov	r4,r18
 1002f2c:	10113bc0 	call	10113bc <__malloc_unlock>
 1002f30:	0007883a 	mov	r3,zero
 1002f34:	003f0a06 	br	1002b60 <_malloc_r+0x50>
 1002f38:	05c04074 	movhi	r23,257
 1002f3c:	bdd43804 	addi	r23,r23,20704
 1002f40:	b8800017 	ldw	r2,0(r23)
 1002f44:	988d883a 	add	r6,r19,r2
 1002f48:	b9800015 	stw	r6,0(r23)
 1002f4c:	d0e00317 	ldw	r3,-32756(gp)
 1002f50:	00bfffc4 	movi	r2,-1
 1002f54:	18808e26 	beq	r3,r2,1003190 <_malloc_r+0x680>
 1002f58:	2145c83a 	sub	r2,r4,r5
 1002f5c:	3085883a 	add	r2,r6,r2
 1002f60:	b8800015 	stw	r2,0(r23)
 1002f64:	20c001cc 	andi	r3,r4,7
 1002f68:	18005f1e 	bne	r3,zero,10030e8 <_malloc_r+0x5d8>
 1002f6c:	000b883a 	mov	r5,zero
 1002f70:	a4c5883a 	add	r2,r20,r19
 1002f74:	1083ffcc 	andi	r2,r2,4095
 1002f78:	00c40004 	movi	r3,4096
 1002f7c:	1887c83a 	sub	r3,r3,r2
 1002f80:	28e7883a 	add	r19,r5,r3
 1002f84:	9009883a 	mov	r4,r18
 1002f88:	980b883a 	mov	r5,r19
 1002f8c:	10037f00 	call	10037f0 <_sbrk_r>
 1002f90:	1007883a 	mov	r3,r2
 1002f94:	00bfffc4 	movi	r2,-1
 1002f98:	18807a26 	beq	r3,r2,1003184 <_malloc_r+0x674>
 1002f9c:	1d05c83a 	sub	r2,r3,r20
 1002fa0:	9885883a 	add	r2,r19,r2
 1002fa4:	10c00054 	ori	r3,r2,1
 1002fa8:	b8800017 	ldw	r2,0(r23)
 1002fac:	a021883a 	mov	r16,r20
 1002fb0:	a0c00115 	stw	r3,4(r20)
 1002fb4:	9885883a 	add	r2,r19,r2
 1002fb8:	b8800015 	stw	r2,0(r23)
 1002fbc:	e5000215 	stw	r20,8(fp)
 1002fc0:	b7003626 	beq	r22,fp,100309c <_malloc_r+0x58c>
 1002fc4:	018003c4 	movi	r6,15
 1002fc8:	35404b36 	bltu	r6,r21,10030f8 <_malloc_r+0x5e8>
 1002fcc:	00800044 	movi	r2,1
 1002fd0:	a0800115 	stw	r2,4(r20)
 1002fd4:	003fcd06 	br	1002f0c <_malloc_r+0x3fc>
 1002fd8:	2808d27a 	srli	r4,r5,9
 1002fdc:	2000371e 	bne	r4,zero,10030bc <_malloc_r+0x5ac>
 1002fe0:	2808d0fa 	srli	r4,r5,3
 1002fe4:	200690fa 	slli	r3,r4,3
 1002fe8:	1ad1883a 	add	r8,r3,r11
 1002fec:	41800217 	ldw	r6,8(r8)
 1002ff0:	41805b26 	beq	r8,r6,1003160 <_malloc_r+0x650>
 1002ff4:	30800117 	ldw	r2,4(r6)
 1002ff8:	00ffff04 	movi	r3,-4
 1002ffc:	10c4703a 	and	r2,r2,r3
 1003000:	2880022e 	bgeu	r5,r2,100300c <_malloc_r+0x4fc>
 1003004:	31800217 	ldw	r6,8(r6)
 1003008:	41bffa1e 	bne	r8,r6,1002ff4 <_malloc_r+0x4e4>
 100300c:	32000317 	ldw	r8,12(r6)
 1003010:	39c00117 	ldw	r7,4(r7)
 1003014:	82000315 	stw	r8,12(r16)
 1003018:	81800215 	stw	r6,8(r16)
 100301c:	07004074 	movhi	fp,257
 1003020:	e70fc704 	addi	fp,fp,16156
 1003024:	34000315 	stw	r16,12(r6)
 1003028:	44000215 	stw	r16,8(r8)
 100302c:	003f3e06 	br	1002d28 <_malloc_r+0x218>
 1003030:	63000044 	addi	r12,r12,1
 1003034:	608000cc 	andi	r2,r12,3
 1003038:	10005d26 	beq	r2,zero,10031b0 <_malloc_r+0x6a0>
 100303c:	18c00204 	addi	r3,r3,8
 1003040:	003f5106 	br	1002d88 <_malloc_r+0x278>
 1003044:	8089883a 	add	r4,r16,r2
 1003048:	003f6d06 	br	1002e00 <_malloc_r+0x2f0>
 100304c:	00805504 	movi	r2,340
 1003050:	10c02036 	bltu	r2,r3,10030d4 <_malloc_r+0x5c4>
 1003054:	8804d3fa 	srli	r2,r17,15
 1003058:	11801dc4 	addi	r6,r2,119
 100305c:	300490fa 	slli	r2,r6,3
 1003060:	003ed806 	br	1002bc4 <_malloc_r+0xb4>
 1003064:	48c000c4 	addi	r3,r9,3
 1003068:	003f3106 	br	1002d30 <_malloc_r+0x220>
 100306c:	05c04074 	movhi	r23,257
 1003070:	bdd43804 	addi	r23,r23,20704
 1003074:	b8800017 	ldw	r2,0(r23)
 1003078:	988d883a 	add	r6,r19,r2
 100307c:	b9800015 	stw	r6,0(r23)
 1003080:	293fb21e 	bne	r5,r4,1002f4c <_malloc_r+0x43c>
 1003084:	2083ffcc 	andi	r2,r4,4095
 1003088:	103fb01e 	bne	r2,zero,1002f4c <_malloc_r+0x43c>
 100308c:	e4000217 	ldw	r16,8(fp)
 1003090:	9d45883a 	add	r2,r19,r21
 1003094:	10800054 	ori	r2,r2,1
 1003098:	80800115 	stw	r2,4(r16)
 100309c:	b8c00017 	ldw	r3,0(r23)
 10030a0:	d0a2d617 	ldw	r2,-29864(gp)
 10030a4:	10c0012e 	bgeu	r2,r3,10030ac <_malloc_r+0x59c>
 10030a8:	d0e2d615 	stw	r3,-29864(gp)
 10030ac:	d0a2d717 	ldw	r2,-29860(gp)
 10030b0:	10ff962e 	bgeu	r2,r3,1002f0c <_malloc_r+0x3fc>
 10030b4:	d0e2d715 	stw	r3,-29860(gp)
 10030b8:	003f9406 	br	1002f0c <_malloc_r+0x3fc>
 10030bc:	00800104 	movi	r2,4
 10030c0:	11001e36 	bltu	r2,r4,100313c <_malloc_r+0x62c>
 10030c4:	2804d1ba 	srli	r2,r5,6
 10030c8:	11000e04 	addi	r4,r2,56
 10030cc:	200690fa 	slli	r3,r4,3
 10030d0:	003fc506 	br	1002fe8 <_malloc_r+0x4d8>
 10030d4:	00815504 	movi	r2,1364
 10030d8:	10c01d2e 	bgeu	r2,r3,1003150 <_malloc_r+0x640>
 10030dc:	01801f84 	movi	r6,126
 10030e0:	0080fc04 	movi	r2,1008
 10030e4:	003eb706 	br	1002bc4 <_malloc_r+0xb4>
 10030e8:	00800204 	movi	r2,8
 10030ec:	10cbc83a 	sub	r5,r2,r3
 10030f0:	2169883a 	add	r20,r4,r5
 10030f4:	003f9e06 	br	1002f70 <_malloc_r+0x460>
 10030f8:	00bffe04 	movi	r2,-8
 10030fc:	a93ffd04 	addi	r4,r21,-12
 1003100:	2088703a 	and	r4,r4,r2
 1003104:	b10b883a 	add	r5,r22,r4
 1003108:	00c00144 	movi	r3,5
 100310c:	28c00215 	stw	r3,8(r5)
 1003110:	28c00115 	stw	r3,4(r5)
 1003114:	b0800117 	ldw	r2,4(r22)
 1003118:	1080004c 	andi	r2,r2,1
 100311c:	2084b03a 	or	r2,r4,r2
 1003120:	b0800115 	stw	r2,4(r22)
 1003124:	313fdd2e 	bgeu	r6,r4,100309c <_malloc_r+0x58c>
 1003128:	b1400204 	addi	r5,r22,8
 100312c:	9009883a 	mov	r4,r18
 1003130:	1001e940 	call	1001e94 <_free_r>
 1003134:	e4000217 	ldw	r16,8(fp)
 1003138:	003fd806 	br	100309c <_malloc_r+0x58c>
 100313c:	00800504 	movi	r2,20
 1003140:	11001536 	bltu	r2,r4,1003198 <_malloc_r+0x688>
 1003144:	210016c4 	addi	r4,r4,91
 1003148:	200690fa 	slli	r3,r4,3
 100314c:	003fa606 	br	1002fe8 <_malloc_r+0x4d8>
 1003150:	8804d4ba 	srli	r2,r17,18
 1003154:	11801f04 	addi	r6,r2,124
 1003158:	300490fa 	slli	r2,r6,3
 100315c:	003e9906 	br	1002bc4 <_malloc_r+0xb4>
 1003160:	2009d0ba 	srai	r4,r4,2
 1003164:	01404074 	movhi	r5,257
 1003168:	294fc704 	addi	r5,r5,16156
 100316c:	00c00044 	movi	r3,1
 1003170:	28800117 	ldw	r2,4(r5)
 1003174:	1906983a 	sll	r3,r3,r4
 1003178:	10c4b03a 	or	r2,r2,r3
 100317c:	28800115 	stw	r2,4(r5)
 1003180:	003fa306 	br	1003010 <_malloc_r+0x500>
 1003184:	0027883a 	mov	r19,zero
 1003188:	00c00044 	movi	r3,1
 100318c:	003f8606 	br	1002fa8 <_malloc_r+0x498>
 1003190:	d1200315 	stw	r4,-32756(gp)
 1003194:	003f7306 	br	1002f64 <_malloc_r+0x454>
 1003198:	00801504 	movi	r2,84
 100319c:	11001936 	bltu	r2,r4,1003204 <_malloc_r+0x6f4>
 10031a0:	2804d33a 	srli	r2,r5,12
 10031a4:	11001b84 	addi	r4,r2,110
 10031a8:	200690fa 	slli	r3,r4,3
 10031ac:	003f8e06 	br	1002fe8 <_malloc_r+0x4d8>
 10031b0:	480b883a 	mov	r5,r9
 10031b4:	6807883a 	mov	r3,r13
 10031b8:	288000cc 	andi	r2,r5,3
 10031bc:	18fffe04 	addi	r3,r3,-8
 10031c0:	297fffc4 	addi	r5,r5,-1
 10031c4:	10001526 	beq	r2,zero,100321c <_malloc_r+0x70c>
 10031c8:	18800217 	ldw	r2,8(r3)
 10031cc:	10fffa26 	beq	r2,r3,10031b8 <_malloc_r+0x6a8>
 10031d0:	2109883a 	add	r4,r4,r4
 10031d4:	393f1e36 	bltu	r7,r4,1002e50 <_malloc_r+0x340>
 10031d8:	203f1d26 	beq	r4,zero,1002e50 <_malloc_r+0x340>
 10031dc:	21c4703a 	and	r2,r4,r7
 10031e0:	10000226 	beq	r2,zero,10031ec <_malloc_r+0x6dc>
 10031e4:	6013883a 	mov	r9,r12
 10031e8:	003ee106 	br	1002d70 <_malloc_r+0x260>
 10031ec:	2109883a 	add	r4,r4,r4
 10031f0:	3904703a 	and	r2,r7,r4
 10031f4:	63000104 	addi	r12,r12,4
 10031f8:	103ffc26 	beq	r2,zero,10031ec <_malloc_r+0x6dc>
 10031fc:	6013883a 	mov	r9,r12
 1003200:	003edb06 	br	1002d70 <_malloc_r+0x260>
 1003204:	00805504 	movi	r2,340
 1003208:	11000836 	bltu	r2,r4,100322c <_malloc_r+0x71c>
 100320c:	2804d3fa 	srli	r2,r5,15
 1003210:	11001dc4 	addi	r4,r2,119
 1003214:	200690fa 	slli	r3,r4,3
 1003218:	003f7306 	br	1002fe8 <_malloc_r+0x4d8>
 100321c:	0104303a 	nor	r2,zero,r4
 1003220:	388e703a 	and	r7,r7,r2
 1003224:	e1c00115 	stw	r7,4(fp)
 1003228:	003fe906 	br	10031d0 <_malloc_r+0x6c0>
 100322c:	00815504 	movi	r2,1364
 1003230:	1100032e 	bgeu	r2,r4,1003240 <_malloc_r+0x730>
 1003234:	01001f84 	movi	r4,126
 1003238:	00c0fc04 	movi	r3,1008
 100323c:	003f6a06 	br	1002fe8 <_malloc_r+0x4d8>
 1003240:	2804d4ba 	srli	r2,r5,18
 1003244:	11001f04 	addi	r4,r2,124
 1003248:	200690fa 	slli	r3,r4,3
 100324c:	003f6606 	br	1002fe8 <_malloc_r+0x4d8>

01003250 <memchr>:
 1003250:	008000c4 	movi	r2,3
 1003254:	29403fcc 	andi	r5,r5,255
 1003258:	2007883a 	mov	r3,r4
 100325c:	1180022e 	bgeu	r2,r6,1003268 <memchr+0x18>
 1003260:	2084703a 	and	r2,r4,r2
 1003264:	10000b26 	beq	r2,zero,1003294 <memchr+0x44>
 1003268:	313fffc4 	addi	r4,r6,-1
 100326c:	3000051e 	bne	r6,zero,1003284 <memchr+0x34>
 1003270:	00002c06 	br	1003324 <memchr+0xd4>
 1003274:	213fffc4 	addi	r4,r4,-1
 1003278:	00bfffc4 	movi	r2,-1
 100327c:	18c00044 	addi	r3,r3,1
 1003280:	20802826 	beq	r4,r2,1003324 <memchr+0xd4>
 1003284:	18800003 	ldbu	r2,0(r3)
 1003288:	28bffa1e 	bne	r5,r2,1003274 <memchr+0x24>
 100328c:	1805883a 	mov	r2,r3
 1003290:	f800283a 	ret
 1003294:	0011883a 	mov	r8,zero
 1003298:	0007883a 	mov	r3,zero
 100329c:	01c00104 	movi	r7,4
 10032a0:	4004923a 	slli	r2,r8,8
 10032a4:	18c00044 	addi	r3,r3,1
 10032a8:	1151883a 	add	r8,r2,r5
 10032ac:	19fffc1e 	bne	r3,r7,10032a0 <memchr+0x50>
 10032b0:	02bfbff4 	movhi	r10,65279
 10032b4:	52bfbfc4 	addi	r10,r10,-257
 10032b8:	02602074 	movhi	r9,32897
 10032bc:	4a602004 	addi	r9,r9,-32640
 10032c0:	02c000c4 	movi	r11,3
 10032c4:	20800017 	ldw	r2,0(r4)
 10032c8:	31bfff04 	addi	r6,r6,-4
 10032cc:	200f883a 	mov	r7,r4
 10032d0:	1204f03a 	xor	r2,r2,r8
 10032d4:	1287883a 	add	r3,r2,r10
 10032d8:	1a46703a 	and	r3,r3,r9
 10032dc:	0084303a 	nor	r2,zero,r2
 10032e0:	10c4703a 	and	r2,r2,r3
 10032e4:	10000b26 	beq	r2,zero,1003314 <memchr+0xc4>
 10032e8:	20800003 	ldbu	r2,0(r4)
 10032ec:	28800f26 	beq	r5,r2,100332c <memchr+0xdc>
 10032f0:	20800043 	ldbu	r2,1(r4)
 10032f4:	21c00044 	addi	r7,r4,1
 10032f8:	28800c26 	beq	r5,r2,100332c <memchr+0xdc>
 10032fc:	20800083 	ldbu	r2,2(r4)
 1003300:	21c00084 	addi	r7,r4,2
 1003304:	28800926 	beq	r5,r2,100332c <memchr+0xdc>
 1003308:	208000c3 	ldbu	r2,3(r4)
 100330c:	21c000c4 	addi	r7,r4,3
 1003310:	28800626 	beq	r5,r2,100332c <memchr+0xdc>
 1003314:	21000104 	addi	r4,r4,4
 1003318:	59bfea36 	bltu	r11,r6,10032c4 <memchr+0x74>
 100331c:	2007883a 	mov	r3,r4
 1003320:	003fd106 	br	1003268 <memchr+0x18>
 1003324:	0005883a 	mov	r2,zero
 1003328:	f800283a 	ret
 100332c:	3805883a 	mov	r2,r7
 1003330:	f800283a 	ret

01003334 <memcpy>:
 1003334:	01c003c4 	movi	r7,15
 1003338:	2007883a 	mov	r3,r4
 100333c:	3980032e 	bgeu	r7,r6,100334c <memcpy+0x18>
 1003340:	2904b03a 	or	r2,r5,r4
 1003344:	108000cc 	andi	r2,r2,3
 1003348:	10000926 	beq	r2,zero,1003370 <memcpy+0x3c>
 100334c:	30000626 	beq	r6,zero,1003368 <memcpy+0x34>
 1003350:	30cd883a 	add	r6,r6,r3
 1003354:	28800003 	ldbu	r2,0(r5)
 1003358:	29400044 	addi	r5,r5,1
 100335c:	18800005 	stb	r2,0(r3)
 1003360:	18c00044 	addi	r3,r3,1
 1003364:	30fffb1e 	bne	r6,r3,1003354 <memcpy+0x20>
 1003368:	2005883a 	mov	r2,r4
 100336c:	f800283a 	ret
 1003370:	3811883a 	mov	r8,r7
 1003374:	200f883a 	mov	r7,r4
 1003378:	28c00017 	ldw	r3,0(r5)
 100337c:	31bffc04 	addi	r6,r6,-16
 1003380:	38c00015 	stw	r3,0(r7)
 1003384:	28800117 	ldw	r2,4(r5)
 1003388:	38800115 	stw	r2,4(r7)
 100338c:	28c00217 	ldw	r3,8(r5)
 1003390:	38c00215 	stw	r3,8(r7)
 1003394:	28800317 	ldw	r2,12(r5)
 1003398:	29400404 	addi	r5,r5,16
 100339c:	38800315 	stw	r2,12(r7)
 10033a0:	39c00404 	addi	r7,r7,16
 10033a4:	41bff436 	bltu	r8,r6,1003378 <memcpy+0x44>
 10033a8:	008000c4 	movi	r2,3
 10033ac:	1180072e 	bgeu	r2,r6,10033cc <memcpy+0x98>
 10033b0:	1007883a 	mov	r3,r2
 10033b4:	28800017 	ldw	r2,0(r5)
 10033b8:	31bfff04 	addi	r6,r6,-4
 10033bc:	29400104 	addi	r5,r5,4
 10033c0:	38800015 	stw	r2,0(r7)
 10033c4:	39c00104 	addi	r7,r7,4
 10033c8:	19bffa36 	bltu	r3,r6,10033b4 <memcpy+0x80>
 10033cc:	3807883a 	mov	r3,r7
 10033d0:	003fde06 	br	100334c <memcpy+0x18>

010033d4 <memset>:
 10033d4:	008000c4 	movi	r2,3
 10033d8:	29403fcc 	andi	r5,r5,255
 10033dc:	2007883a 	mov	r3,r4
 10033e0:	1180022e 	bgeu	r2,r6,10033ec <memset+0x18>
 10033e4:	2084703a 	and	r2,r4,r2
 10033e8:	10000826 	beq	r2,zero,100340c <memset+0x38>
 10033ec:	30000526 	beq	r6,zero,1003404 <memset+0x30>
 10033f0:	2805883a 	mov	r2,r5
 10033f4:	30cd883a 	add	r6,r6,r3
 10033f8:	18800005 	stb	r2,0(r3)
 10033fc:	18c00044 	addi	r3,r3,1
 1003400:	19bffd1e 	bne	r3,r6,10033f8 <memset+0x24>
 1003404:	2005883a 	mov	r2,r4
 1003408:	f800283a 	ret
 100340c:	2804923a 	slli	r2,r5,8
 1003410:	020003c4 	movi	r8,15
 1003414:	200f883a 	mov	r7,r4
 1003418:	2884b03a 	or	r2,r5,r2
 100341c:	1006943a 	slli	r3,r2,16
 1003420:	10c6b03a 	or	r3,r2,r3
 1003424:	41800a2e 	bgeu	r8,r6,1003450 <memset+0x7c>
 1003428:	4005883a 	mov	r2,r8
 100342c:	31bffc04 	addi	r6,r6,-16
 1003430:	38c00015 	stw	r3,0(r7)
 1003434:	38c00115 	stw	r3,4(r7)
 1003438:	38c00215 	stw	r3,8(r7)
 100343c:	38c00315 	stw	r3,12(r7)
 1003440:	39c00404 	addi	r7,r7,16
 1003444:	11bff936 	bltu	r2,r6,100342c <memset+0x58>
 1003448:	008000c4 	movi	r2,3
 100344c:	1180052e 	bgeu	r2,r6,1003464 <memset+0x90>
 1003450:	31bfff04 	addi	r6,r6,-4
 1003454:	008000c4 	movi	r2,3
 1003458:	38c00015 	stw	r3,0(r7)
 100345c:	39c00104 	addi	r7,r7,4
 1003460:	11bffb36 	bltu	r2,r6,1003450 <memset+0x7c>
 1003464:	3807883a 	mov	r3,r7
 1003468:	003fe006 	br	10033ec <memset+0x18>

0100346c <_open_r>:
 100346c:	defffd04 	addi	sp,sp,-12
 1003470:	dc000015 	stw	r16,0(sp)
 1003474:	04004074 	movhi	r16,257
 1003478:	84142904 	addi	r16,r16,20644
 100347c:	dc400115 	stw	r17,4(sp)
 1003480:	80000015 	stw	zero,0(r16)
 1003484:	2023883a 	mov	r17,r4
 1003488:	2809883a 	mov	r4,r5
 100348c:	300b883a 	mov	r5,r6
 1003490:	380d883a 	mov	r6,r7
 1003494:	dfc00215 	stw	ra,8(sp)
 1003498:	10114d40 	call	10114d4 <open>
 100349c:	1007883a 	mov	r3,r2
 10034a0:	00bfffc4 	movi	r2,-1
 10034a4:	18800626 	beq	r3,r2,10034c0 <_open_r+0x54>
 10034a8:	1805883a 	mov	r2,r3
 10034ac:	dfc00217 	ldw	ra,8(sp)
 10034b0:	dc400117 	ldw	r17,4(sp)
 10034b4:	dc000017 	ldw	r16,0(sp)
 10034b8:	dec00304 	addi	sp,sp,12
 10034bc:	f800283a 	ret
 10034c0:	80800017 	ldw	r2,0(r16)
 10034c4:	103ff826 	beq	r2,zero,10034a8 <_open_r+0x3c>
 10034c8:	88800015 	stw	r2,0(r17)
 10034cc:	1805883a 	mov	r2,r3
 10034d0:	dfc00217 	ldw	ra,8(sp)
 10034d4:	dc400117 	ldw	r17,4(sp)
 10034d8:	dc000017 	ldw	r16,0(sp)
 10034dc:	dec00304 	addi	sp,sp,12
 10034e0:	f800283a 	ret

010034e4 <printf>:
 10034e4:	defffb04 	addi	sp,sp,-20
 10034e8:	dfc00115 	stw	ra,4(sp)
 10034ec:	d9400215 	stw	r5,8(sp)
 10034f0:	d9800315 	stw	r6,12(sp)
 10034f4:	d9c00415 	stw	r7,16(sp)
 10034f8:	00804074 	movhi	r2,257
 10034fc:	10915504 	addi	r2,r2,17748
 1003500:	10c00017 	ldw	r3,0(r2)
 1003504:	200b883a 	mov	r5,r4
 1003508:	d8800204 	addi	r2,sp,8
 100350c:	19000217 	ldw	r4,8(r3)
 1003510:	100d883a 	mov	r6,r2
 1003514:	d8800015 	stw	r2,0(sp)
 1003518:	1005b400 	call	1005b40 <__vfprintf_internal>
 100351c:	dfc00117 	ldw	ra,4(sp)
 1003520:	dec00504 	addi	sp,sp,20
 1003524:	f800283a 	ret

01003528 <_printf_r>:
 1003528:	defffc04 	addi	sp,sp,-16
 100352c:	dfc00115 	stw	ra,4(sp)
 1003530:	d9800215 	stw	r6,8(sp)
 1003534:	d9c00315 	stw	r7,12(sp)
 1003538:	280d883a 	mov	r6,r5
 100353c:	21400217 	ldw	r5,8(r4)
 1003540:	d8c00204 	addi	r3,sp,8
 1003544:	180f883a 	mov	r7,r3
 1003548:	d8c00015 	stw	r3,0(sp)
 100354c:	1003c7c0 	call	1003c7c <___vfprintf_internal_r>
 1003550:	dfc00117 	ldw	ra,4(sp)
 1003554:	dec00404 	addi	sp,sp,16
 1003558:	f800283a 	ret

0100355c <_puts_r>:
 100355c:	defff604 	addi	sp,sp,-40
 1003560:	dc400715 	stw	r17,28(sp)
 1003564:	2023883a 	mov	r17,r4
 1003568:	2809883a 	mov	r4,r5
 100356c:	dfc00915 	stw	ra,36(sp)
 1003570:	dcc00815 	stw	r19,32(sp)
 1003574:	2827883a 	mov	r19,r5
 1003578:	1003ac00 	call	1003ac0 <strlen>
 100357c:	89400217 	ldw	r5,8(r17)
 1003580:	00c04074 	movhi	r3,257
 1003584:	18cd3604 	addi	r3,r3,13528
 1003588:	01c00044 	movi	r7,1
 100358c:	12000044 	addi	r8,r2,1
 1003590:	d8c00515 	stw	r3,20(sp)
 1003594:	d9c00615 	stw	r7,24(sp)
 1003598:	d8c00304 	addi	r3,sp,12
 100359c:	01c00084 	movi	r7,2
 10035a0:	8809883a 	mov	r4,r17
 10035a4:	d80d883a 	mov	r6,sp
 10035a8:	d8c00015 	stw	r3,0(sp)
 10035ac:	dcc00315 	stw	r19,12(sp)
 10035b0:	da000215 	stw	r8,8(sp)
 10035b4:	d9c00115 	stw	r7,4(sp)
 10035b8:	d8800415 	stw	r2,16(sp)
 10035bc:	1008f5c0 	call	1008f5c <__sfvwrite_r>
 10035c0:	00ffffc4 	movi	r3,-1
 10035c4:	10000626 	beq	r2,zero,10035e0 <_puts_r+0x84>
 10035c8:	1805883a 	mov	r2,r3
 10035cc:	dfc00917 	ldw	ra,36(sp)
 10035d0:	dcc00817 	ldw	r19,32(sp)
 10035d4:	dc400717 	ldw	r17,28(sp)
 10035d8:	dec00a04 	addi	sp,sp,40
 10035dc:	f800283a 	ret
 10035e0:	00c00284 	movi	r3,10
 10035e4:	1805883a 	mov	r2,r3
 10035e8:	dfc00917 	ldw	ra,36(sp)
 10035ec:	dcc00817 	ldw	r19,32(sp)
 10035f0:	dc400717 	ldw	r17,28(sp)
 10035f4:	dec00a04 	addi	sp,sp,40
 10035f8:	f800283a 	ret

010035fc <puts>:
 10035fc:	00804074 	movhi	r2,257
 1003600:	10915504 	addi	r2,r2,17748
 1003604:	200b883a 	mov	r5,r4
 1003608:	11000017 	ldw	r4,0(r2)
 100360c:	100355c1 	jmpi	100355c <_puts_r>

01003610 <__srefill_r>:
 1003610:	defffd04 	addi	sp,sp,-12
 1003614:	dc400115 	stw	r17,4(sp)
 1003618:	dc000015 	stw	r16,0(sp)
 100361c:	dfc00215 	stw	ra,8(sp)
 1003620:	2023883a 	mov	r17,r4
 1003624:	2821883a 	mov	r16,r5
 1003628:	20000226 	beq	r4,zero,1003634 <__srefill_r+0x24>
 100362c:	20800e17 	ldw	r2,56(r4)
 1003630:	10004126 	beq	r2,zero,1003738 <__srefill_r+0x128>
 1003634:	80c0030b 	ldhu	r3,12(r16)
 1003638:	80000115 	stw	zero,4(r16)
 100363c:	1880080c 	andi	r2,r3,32
 1003640:	1000361e 	bne	r2,zero,100371c <__srefill_r+0x10c>
 1003644:	1880010c 	andi	r2,r3,4
 1003648:	1000211e 	bne	r2,zero,10036d0 <__srefill_r+0xc0>
 100364c:	1880040c 	andi	r2,r3,16
 1003650:	10005026 	beq	r2,zero,1003794 <__srefill_r+0x184>
 1003654:	1880020c 	andi	r2,r3,8
 1003658:	1000541e 	bne	r2,zero,10037ac <__srefill_r+0x19c>
 100365c:	8080030b 	ldhu	r2,12(r16)
 1003660:	10800114 	ori	r2,r2,4
 1003664:	8080030d 	sth	r2,12(r16)
 1003668:	80800417 	ldw	r2,16(r16)
 100366c:	10004526 	beq	r2,zero,1003784 <__srefill_r+0x174>
 1003670:	8080030b 	ldhu	r2,12(r16)
 1003674:	108000cc 	andi	r2,r2,3
 1003678:	1000361e 	bne	r2,zero,1003754 <__srefill_r+0x144>
 100367c:	81800417 	ldw	r6,16(r16)
 1003680:	80c00817 	ldw	r3,32(r16)
 1003684:	81400717 	ldw	r5,28(r16)
 1003688:	81c00517 	ldw	r7,20(r16)
 100368c:	8809883a 	mov	r4,r17
 1003690:	81800015 	stw	r6,0(r16)
 1003694:	183ee83a 	callr	r3
 1003698:	80c0030b 	ldhu	r3,12(r16)
 100369c:	1009883a 	mov	r4,r2
 10036a0:	80800115 	stw	r2,4(r16)
 10036a4:	00b7ffc4 	movi	r2,-8193
 10036a8:	1884703a 	and	r2,r3,r2
 10036ac:	8080030d 	sth	r2,12(r16)
 10036b0:	0100230e 	bge	zero,r4,1003740 <__srefill_r+0x130>
 10036b4:	0009883a 	mov	r4,zero
 10036b8:	2005883a 	mov	r2,r4
 10036bc:	dfc00217 	ldw	ra,8(sp)
 10036c0:	dc400117 	ldw	r17,4(sp)
 10036c4:	dc000017 	ldw	r16,0(sp)
 10036c8:	dec00304 	addi	sp,sp,12
 10036cc:	f800283a 	ret
 10036d0:	81400c17 	ldw	r5,48(r16)
 10036d4:	283fe426 	beq	r5,zero,1003668 <__srefill_r+0x58>
 10036d8:	80801004 	addi	r2,r16,64
 10036dc:	28800226 	beq	r5,r2,10036e8 <__srefill_r+0xd8>
 10036e0:	8809883a 	mov	r4,r17
 10036e4:	1001e940 	call	1001e94 <_free_r>
 10036e8:	80800f17 	ldw	r2,60(r16)
 10036ec:	80000c15 	stw	zero,48(r16)
 10036f0:	80800115 	stw	r2,4(r16)
 10036f4:	103fdc26 	beq	r2,zero,1003668 <__srefill_r+0x58>
 10036f8:	80800e17 	ldw	r2,56(r16)
 10036fc:	0009883a 	mov	r4,zero
 1003700:	80800015 	stw	r2,0(r16)
 1003704:	2005883a 	mov	r2,r4
 1003708:	dfc00217 	ldw	ra,8(sp)
 100370c:	dc400117 	ldw	r17,4(sp)
 1003710:	dc000017 	ldw	r16,0(sp)
 1003714:	dec00304 	addi	sp,sp,12
 1003718:	f800283a 	ret
 100371c:	013fffc4 	movi	r4,-1
 1003720:	2005883a 	mov	r2,r4
 1003724:	dfc00217 	ldw	ra,8(sp)
 1003728:	dc400117 	ldw	r17,4(sp)
 100372c:	dc000017 	ldw	r16,0(sp)
 1003730:	dec00304 	addi	sp,sp,12
 1003734:	f800283a 	ret
 1003738:	10017200 	call	1001720 <__sinit>
 100373c:	003fbd06 	br	1003634 <__srefill_r+0x24>
 1003740:	20000b1e 	bne	r4,zero,1003770 <__srefill_r+0x160>
 1003744:	10800814 	ori	r2,r2,32
 1003748:	013fffc4 	movi	r4,-1
 100374c:	8080030d 	sth	r2,12(r16)
 1003750:	003fd906 	br	10036b8 <__srefill_r+0xa8>
 1003754:	00804074 	movhi	r2,257
 1003758:	10915604 	addi	r2,r2,17752
 100375c:	11000017 	ldw	r4,0(r2)
 1003760:	01404034 	movhi	r5,256
 1003764:	294df504 	addi	r5,r5,14292
 1003768:	10027b00 	call	10027b0 <_fwalk>
 100376c:	003fc306 	br	100367c <__srefill_r+0x6c>
 1003770:	10801014 	ori	r2,r2,64
 1003774:	013fffc4 	movi	r4,-1
 1003778:	8080030d 	sth	r2,12(r16)
 100377c:	80000115 	stw	zero,4(r16)
 1003780:	003fcd06 	br	10036b8 <__srefill_r+0xa8>
 1003784:	8809883a 	mov	r4,r17
 1003788:	800b883a 	mov	r5,r16
 100378c:	10029540 	call	1002954 <__smakebuf_r>
 1003790:	003fb706 	br	1003670 <__srefill_r+0x60>
 1003794:	18c01014 	ori	r3,r3,64
 1003798:	00800244 	movi	r2,9
 100379c:	013fffc4 	movi	r4,-1
 10037a0:	88800015 	stw	r2,0(r17)
 10037a4:	80c0030d 	sth	r3,12(r16)
 10037a8:	003fc306 	br	10036b8 <__srefill_r+0xa8>
 10037ac:	8809883a 	mov	r4,r17
 10037b0:	800b883a 	mov	r5,r16
 10037b4:	100131c0 	call	100131c <_fflush_r>
 10037b8:	103fd81e 	bne	r2,zero,100371c <__srefill_r+0x10c>
 10037bc:	8080030b 	ldhu	r2,12(r16)
 10037c0:	80000215 	stw	zero,8(r16)
 10037c4:	80000615 	stw	zero,24(r16)
 10037c8:	10bffdcc 	andi	r2,r2,65527
 10037cc:	8080030d 	sth	r2,12(r16)
 10037d0:	003fa206 	br	100365c <__srefill_r+0x4c>

010037d4 <lflush>:
 10037d4:	20c0030b 	ldhu	r3,12(r4)
 10037d8:	01400244 	movi	r5,9
 10037dc:	0005883a 	mov	r2,zero
 10037e0:	18c0024c 	andi	r3,r3,9
 10037e4:	19400126 	beq	r3,r5,10037ec <lflush+0x18>
 10037e8:	f800283a 	ret
 10037ec:	10015181 	jmpi	1001518 <fflush>

010037f0 <_sbrk_r>:
 10037f0:	defffd04 	addi	sp,sp,-12
 10037f4:	dc000015 	stw	r16,0(sp)
 10037f8:	04004074 	movhi	r16,257
 10037fc:	84142904 	addi	r16,r16,20644
 1003800:	dc400115 	stw	r17,4(sp)
 1003804:	80000015 	stw	zero,0(r16)
 1003808:	2023883a 	mov	r17,r4
 100380c:	2809883a 	mov	r4,r5
 1003810:	dfc00215 	stw	ra,8(sp)
 1003814:	10118bc0 	call	10118bc <sbrk>
 1003818:	1007883a 	mov	r3,r2
 100381c:	00bfffc4 	movi	r2,-1
 1003820:	18800626 	beq	r3,r2,100383c <_sbrk_r+0x4c>
 1003824:	1805883a 	mov	r2,r3
 1003828:	dfc00217 	ldw	ra,8(sp)
 100382c:	dc400117 	ldw	r17,4(sp)
 1003830:	dc000017 	ldw	r16,0(sp)
 1003834:	dec00304 	addi	sp,sp,12
 1003838:	f800283a 	ret
 100383c:	80800017 	ldw	r2,0(r16)
 1003840:	103ff826 	beq	r2,zero,1003824 <_sbrk_r+0x34>
 1003844:	88800015 	stw	r2,0(r17)
 1003848:	1805883a 	mov	r2,r3
 100384c:	dfc00217 	ldw	ra,8(sp)
 1003850:	dc400117 	ldw	r17,4(sp)
 1003854:	dc000017 	ldw	r16,0(sp)
 1003858:	dec00304 	addi	sp,sp,12
 100385c:	f800283a 	ret

01003860 <eofread>:
 1003860:	0005883a 	mov	r2,zero
 1003864:	f800283a 	ret

01003868 <_sscanf_r>:
 1003868:	deffe404 	addi	sp,sp,-112
 100386c:	dcc01915 	stw	r19,100(sp)
 1003870:	2027883a 	mov	r19,r4
 1003874:	dfc01a15 	stw	ra,104(sp)
 1003878:	dc401815 	stw	r17,96(sp)
 100387c:	d9c01b15 	stw	r7,108(sp)
 1003880:	00808104 	movi	r2,516
 1003884:	2809883a 	mov	r4,r5
 1003888:	3023883a 	mov	r17,r6
 100388c:	d9400115 	stw	r5,4(sp)
 1003890:	d9400515 	stw	r5,20(sp)
 1003894:	d880040d 	sth	r2,16(sp)
 1003898:	1003ac00 	call	1003ac0 <strlen>
 100389c:	d8c01b04 	addi	r3,sp,108
 10038a0:	d8c00015 	stw	r3,0(sp)
 10038a4:	180f883a 	mov	r7,r3
 10038a8:	023fffc4 	movi	r8,-1
 10038ac:	00c04034 	movhi	r3,256
 10038b0:	18ce1804 	addi	r3,r3,14432
 10038b4:	9809883a 	mov	r4,r19
 10038b8:	880d883a 	mov	r6,r17
 10038bc:	d9400104 	addi	r5,sp,4
 10038c0:	d8800615 	stw	r2,24(sp)
 10038c4:	d8c00915 	stw	r3,36(sp)
 10038c8:	da00048d 	sth	r8,18(sp)
 10038cc:	d8800215 	stw	r2,8(sp)
 10038d0:	d8000d15 	stw	zero,52(sp)
 10038d4:	d8001215 	stw	zero,72(sp)
 10038d8:	1005b640 	call	1005b64 <__svfscanf_r>
 10038dc:	dfc01a17 	ldw	ra,104(sp)
 10038e0:	dcc01917 	ldw	r19,100(sp)
 10038e4:	dc401817 	ldw	r17,96(sp)
 10038e8:	dec01c04 	addi	sp,sp,112
 10038ec:	f800283a 	ret

010038f0 <sscanf>:
 10038f0:	deffe404 	addi	sp,sp,-112
 10038f4:	dfc01915 	stw	ra,100(sp)
 10038f8:	dc401815 	stw	r17,96(sp)
 10038fc:	d9801a15 	stw	r6,104(sp)
 1003900:	d9c01b15 	stw	r7,108(sp)
 1003904:	00808104 	movi	r2,516
 1003908:	2823883a 	mov	r17,r5
 100390c:	d9000515 	stw	r4,20(sp)
 1003910:	d9000115 	stw	r4,4(sp)
 1003914:	d880040d 	sth	r2,16(sp)
 1003918:	1003ac00 	call	1003ac0 <strlen>
 100391c:	d8c01a04 	addi	r3,sp,104
 1003920:	d8c00015 	stw	r3,0(sp)
 1003924:	00c04074 	movhi	r3,257
 1003928:	18d15504 	addi	r3,r3,17748
 100392c:	19000017 	ldw	r4,0(r3)
 1003930:	d9c00017 	ldw	r7,0(sp)
 1003934:	00c04034 	movhi	r3,256
 1003938:	18ce1804 	addi	r3,r3,14432
 100393c:	023fffc4 	movi	r8,-1
 1003940:	880d883a 	mov	r6,r17
 1003944:	d9400104 	addi	r5,sp,4
 1003948:	d8800615 	stw	r2,24(sp)
 100394c:	d8c00915 	stw	r3,36(sp)
 1003950:	da00048d 	sth	r8,18(sp)
 1003954:	d8800215 	stw	r2,8(sp)
 1003958:	d8000d15 	stw	zero,52(sp)
 100395c:	d8001215 	stw	zero,72(sp)
 1003960:	1005b640 	call	1005b64 <__svfscanf_r>
 1003964:	dfc01917 	ldw	ra,100(sp)
 1003968:	dc401817 	ldw	r17,96(sp)
 100396c:	dec01c04 	addi	sp,sp,112
 1003970:	f800283a 	ret

01003974 <__sclose>:
 1003974:	2940038f 	ldh	r5,14(r5)
 1003978:	10076541 	jmpi	1007654 <_close_r>

0100397c <__sseek>:
 100397c:	defffe04 	addi	sp,sp,-8
 1003980:	dc000015 	stw	r16,0(sp)
 1003984:	2821883a 	mov	r16,r5
 1003988:	2940038f 	ldh	r5,14(r5)
 100398c:	dfc00115 	stw	ra,4(sp)
 1003990:	10095580 	call	1009558 <_lseek_r>
 1003994:	1007883a 	mov	r3,r2
 1003998:	00bfffc4 	movi	r2,-1
 100399c:	18800926 	beq	r3,r2,10039c4 <__sseek+0x48>
 10039a0:	8080030b 	ldhu	r2,12(r16)
 10039a4:	80c01415 	stw	r3,80(r16)
 10039a8:	10840014 	ori	r2,r2,4096
 10039ac:	8080030d 	sth	r2,12(r16)
 10039b0:	1805883a 	mov	r2,r3
 10039b4:	dfc00117 	ldw	ra,4(sp)
 10039b8:	dc000017 	ldw	r16,0(sp)
 10039bc:	dec00204 	addi	sp,sp,8
 10039c0:	f800283a 	ret
 10039c4:	8080030b 	ldhu	r2,12(r16)
 10039c8:	10bbffcc 	andi	r2,r2,61439
 10039cc:	8080030d 	sth	r2,12(r16)
 10039d0:	1805883a 	mov	r2,r3
 10039d4:	dfc00117 	ldw	ra,4(sp)
 10039d8:	dc000017 	ldw	r16,0(sp)
 10039dc:	dec00204 	addi	sp,sp,8
 10039e0:	f800283a 	ret

010039e4 <__swrite>:
 10039e4:	2880030b 	ldhu	r2,12(r5)
 10039e8:	defffb04 	addi	sp,sp,-20
 10039ec:	dcc00315 	stw	r19,12(sp)
 10039f0:	1080400c 	andi	r2,r2,256
 10039f4:	dc800215 	stw	r18,8(sp)
 10039f8:	dc400115 	stw	r17,4(sp)
 10039fc:	dc000015 	stw	r16,0(sp)
 1003a00:	3027883a 	mov	r19,r6
 1003a04:	3825883a 	mov	r18,r7
 1003a08:	dfc00415 	stw	ra,16(sp)
 1003a0c:	2821883a 	mov	r16,r5
 1003a10:	000d883a 	mov	r6,zero
 1003a14:	01c00084 	movi	r7,2
 1003a18:	2023883a 	mov	r17,r4
 1003a1c:	10000226 	beq	r2,zero,1003a28 <__swrite+0x44>
 1003a20:	2940038f 	ldh	r5,14(r5)
 1003a24:	10095580 	call	1009558 <_lseek_r>
 1003a28:	8080030b 	ldhu	r2,12(r16)
 1003a2c:	8140038f 	ldh	r5,14(r16)
 1003a30:	8809883a 	mov	r4,r17
 1003a34:	10bbffcc 	andi	r2,r2,61439
 1003a38:	980d883a 	mov	r6,r19
 1003a3c:	900f883a 	mov	r7,r18
 1003a40:	8080030d 	sth	r2,12(r16)
 1003a44:	dfc00417 	ldw	ra,16(sp)
 1003a48:	dcc00317 	ldw	r19,12(sp)
 1003a4c:	dc800217 	ldw	r18,8(sp)
 1003a50:	dc400117 	ldw	r17,4(sp)
 1003a54:	dc000017 	ldw	r16,0(sp)
 1003a58:	dec00504 	addi	sp,sp,20
 1003a5c:	10072ec1 	jmpi	10072ec <_write_r>

01003a60 <__sread>:
 1003a60:	defffe04 	addi	sp,sp,-8
 1003a64:	dc000015 	stw	r16,0(sp)
 1003a68:	2821883a 	mov	r16,r5
 1003a6c:	2940038f 	ldh	r5,14(r5)
 1003a70:	dfc00115 	stw	ra,4(sp)
 1003a74:	100a83c0 	call	100a83c <_read_r>
 1003a78:	1007883a 	mov	r3,r2
 1003a7c:	10000816 	blt	r2,zero,1003aa0 <__sread+0x40>
 1003a80:	80801417 	ldw	r2,80(r16)
 1003a84:	10c5883a 	add	r2,r2,r3
 1003a88:	80801415 	stw	r2,80(r16)
 1003a8c:	1805883a 	mov	r2,r3
 1003a90:	dfc00117 	ldw	ra,4(sp)
 1003a94:	dc000017 	ldw	r16,0(sp)
 1003a98:	dec00204 	addi	sp,sp,8
 1003a9c:	f800283a 	ret
 1003aa0:	8080030b 	ldhu	r2,12(r16)
 1003aa4:	10bbffcc 	andi	r2,r2,61439
 1003aa8:	8080030d 	sth	r2,12(r16)
 1003aac:	1805883a 	mov	r2,r3
 1003ab0:	dfc00117 	ldw	ra,4(sp)
 1003ab4:	dc000017 	ldw	r16,0(sp)
 1003ab8:	dec00204 	addi	sp,sp,8
 1003abc:	f800283a 	ret

01003ac0 <strlen>:
 1003ac0:	208000cc 	andi	r2,r4,3
 1003ac4:	2011883a 	mov	r8,r4
 1003ac8:	1000161e 	bne	r2,zero,1003b24 <strlen+0x64>
 1003acc:	20c00017 	ldw	r3,0(r4)
 1003ad0:	017fbff4 	movhi	r5,65279
 1003ad4:	297fbfc4 	addi	r5,r5,-257
 1003ad8:	01e02074 	movhi	r7,32897
 1003adc:	39e02004 	addi	r7,r7,-32640
 1003ae0:	1945883a 	add	r2,r3,r5
 1003ae4:	11c4703a 	and	r2,r2,r7
 1003ae8:	00c6303a 	nor	r3,zero,r3
 1003aec:	1886703a 	and	r3,r3,r2
 1003af0:	18000c1e 	bne	r3,zero,1003b24 <strlen+0x64>
 1003af4:	280d883a 	mov	r6,r5
 1003af8:	380b883a 	mov	r5,r7
 1003afc:	21000104 	addi	r4,r4,4
 1003b00:	20800017 	ldw	r2,0(r4)
 1003b04:	1187883a 	add	r3,r2,r6
 1003b08:	1946703a 	and	r3,r3,r5
 1003b0c:	0084303a 	nor	r2,zero,r2
 1003b10:	10c4703a 	and	r2,r2,r3
 1003b14:	103ff926 	beq	r2,zero,1003afc <strlen+0x3c>
 1003b18:	20800007 	ldb	r2,0(r4)
 1003b1c:	10000326 	beq	r2,zero,1003b2c <strlen+0x6c>
 1003b20:	21000044 	addi	r4,r4,1
 1003b24:	20800007 	ldb	r2,0(r4)
 1003b28:	103ffd1e 	bne	r2,zero,1003b20 <strlen+0x60>
 1003b2c:	2205c83a 	sub	r2,r4,r8
 1003b30:	f800283a 	ret

01003b34 <strncmp>:
 1003b34:	30003926 	beq	r6,zero,1003c1c <strncmp+0xe8>
 1003b38:	2144b03a 	or	r2,r4,r5
 1003b3c:	108000cc 	andi	r2,r2,3
 1003b40:	028000c4 	movi	r10,3
 1003b44:	1000241e 	bne	r2,zero,1003bd8 <strncmp+0xa4>
 1003b48:	2011883a 	mov	r8,r4
 1003b4c:	280f883a 	mov	r7,r5
 1003b50:	51801f2e 	bgeu	r10,r6,1003bd0 <strncmp+0x9c>
 1003b54:	21000017 	ldw	r4,0(r4)
 1003b58:	28800017 	ldw	r2,0(r5)
 1003b5c:	20801c1e 	bne	r4,r2,1003bd0 <strncmp+0x9c>
 1003b60:	31bfff04 	addi	r6,r6,-4
 1003b64:	30002d26 	beq	r6,zero,1003c1c <strncmp+0xe8>
 1003b68:	027fbff4 	movhi	r9,65279
 1003b6c:	4a7fbfc4 	addi	r9,r9,-257
 1003b70:	2247883a 	add	r3,r4,r9
 1003b74:	01602074 	movhi	r5,32897
 1003b78:	29602004 	addi	r5,r5,-32640
 1003b7c:	1946703a 	and	r3,r3,r5
 1003b80:	0104303a 	nor	r2,zero,r4
 1003b84:	10c4703a 	and	r2,r2,r3
 1003b88:	1000241e 	bne	r2,zero,1003c1c <strncmp+0xe8>
 1003b8c:	5017883a 	mov	r11,r10
 1003b90:	4815883a 	mov	r10,r9
 1003b94:	2813883a 	mov	r9,r5
 1003b98:	00000a06 	br	1003bc4 <strncmp+0x90>
 1003b9c:	41000017 	ldw	r4,0(r8)
 1003ba0:	39400017 	ldw	r5,0(r7)
 1003ba4:	2285883a 	add	r2,r4,r10
 1003ba8:	1244703a 	and	r2,r2,r9
 1003bac:	0106303a 	nor	r3,zero,r4
 1003bb0:	1886703a 	and	r3,r3,r2
 1003bb4:	2140061e 	bne	r4,r5,1003bd0 <strncmp+0x9c>
 1003bb8:	31bfff04 	addi	r6,r6,-4
 1003bbc:	30001726 	beq	r6,zero,1003c1c <strncmp+0xe8>
 1003bc0:	1800161e 	bne	r3,zero,1003c1c <strncmp+0xe8>
 1003bc4:	42000104 	addi	r8,r8,4
 1003bc8:	39c00104 	addi	r7,r7,4
 1003bcc:	59bff336 	bltu	r11,r6,1003b9c <strncmp+0x68>
 1003bd0:	4009883a 	mov	r4,r8
 1003bd4:	380b883a 	mov	r5,r7
 1003bd8:	31bfffc4 	addi	r6,r6,-1
 1003bdc:	01ffffc4 	movi	r7,-1
 1003be0:	31c00a1e 	bne	r6,r7,1003c0c <strncmp+0xd8>
 1003be4:	20c00003 	ldbu	r3,0(r4)
 1003be8:	28800003 	ldbu	r2,0(r5)
 1003bec:	1885c83a 	sub	r2,r3,r2
 1003bf0:	f800283a 	ret
 1003bf4:	30000926 	beq	r6,zero,1003c1c <strncmp+0xe8>
 1003bf8:	18000826 	beq	r3,zero,1003c1c <strncmp+0xe8>
 1003bfc:	31bfffc4 	addi	r6,r6,-1
 1003c00:	21000044 	addi	r4,r4,1
 1003c04:	29400044 	addi	r5,r5,1
 1003c08:	31fff626 	beq	r6,r7,1003be4 <strncmp+0xb0>
 1003c0c:	20c00007 	ldb	r3,0(r4)
 1003c10:	28800007 	ldb	r2,0(r5)
 1003c14:	18bff726 	beq	r3,r2,1003bf4 <strncmp+0xc0>
 1003c18:	003ff206 	br	1003be4 <strncmp+0xb0>
 1003c1c:	0005883a 	mov	r2,zero
 1003c20:	f800283a 	ret

01003c24 <__sprint_r>:
 1003c24:	30800217 	ldw	r2,8(r6)
 1003c28:	defffe04 	addi	sp,sp,-8
 1003c2c:	dc000015 	stw	r16,0(sp)
 1003c30:	dfc00115 	stw	ra,4(sp)
 1003c34:	3021883a 	mov	r16,r6
 1003c38:	0007883a 	mov	r3,zero
 1003c3c:	1000061e 	bne	r2,zero,1003c58 <__sprint_r+0x34>
 1003c40:	1805883a 	mov	r2,r3
 1003c44:	30000115 	stw	zero,4(r6)
 1003c48:	dfc00117 	ldw	ra,4(sp)
 1003c4c:	dc000017 	ldw	r16,0(sp)
 1003c50:	dec00204 	addi	sp,sp,8
 1003c54:	f800283a 	ret
 1003c58:	1008f5c0 	call	1008f5c <__sfvwrite_r>
 1003c5c:	1007883a 	mov	r3,r2
 1003c60:	1805883a 	mov	r2,r3
 1003c64:	80000115 	stw	zero,4(r16)
 1003c68:	80000215 	stw	zero,8(r16)
 1003c6c:	dfc00117 	ldw	ra,4(sp)
 1003c70:	dc000017 	ldw	r16,0(sp)
 1003c74:	dec00204 	addi	sp,sp,8
 1003c78:	f800283a 	ret

01003c7c <___vfprintf_internal_r>:
 1003c7c:	defea404 	addi	sp,sp,-1392
 1003c80:	dd815815 	stw	r22,1376(sp)
 1003c84:	dc015215 	stw	r16,1352(sp)
 1003c88:	d9c15115 	stw	r7,1348(sp)
 1003c8c:	dfc15b15 	stw	ra,1388(sp)
 1003c90:	df015a15 	stw	fp,1384(sp)
 1003c94:	ddc15915 	stw	r23,1380(sp)
 1003c98:	dd415715 	stw	r21,1372(sp)
 1003c9c:	dd015615 	stw	r20,1368(sp)
 1003ca0:	dcc15515 	stw	r19,1364(sp)
 1003ca4:	dc815415 	stw	r18,1360(sp)
 1003ca8:	dc415315 	stw	r17,1356(sp)
 1003cac:	282d883a 	mov	r22,r5
 1003cb0:	3021883a 	mov	r16,r6
 1003cb4:	d9014f15 	stw	r4,1340(sp)
 1003cb8:	100949c0 	call	100949c <_localeconv_r>
 1003cbc:	10800017 	ldw	r2,0(r2)
 1003cc0:	d9c15117 	ldw	r7,1348(sp)
 1003cc4:	d8814915 	stw	r2,1316(sp)
 1003cc8:	d8814f17 	ldw	r2,1340(sp)
 1003ccc:	10000226 	beq	r2,zero,1003cd8 <___vfprintf_internal_r+0x5c>
 1003cd0:	10800e17 	ldw	r2,56(r2)
 1003cd4:	10020d26 	beq	r2,zero,100450c <___vfprintf_internal_r+0x890>
 1003cd8:	b080030b 	ldhu	r2,12(r22)
 1003cdc:	1080020c 	andi	r2,r2,8
 1003ce0:	10020e26 	beq	r2,zero,100451c <___vfprintf_internal_r+0x8a0>
 1003ce4:	b0800417 	ldw	r2,16(r22)
 1003ce8:	10020c26 	beq	r2,zero,100451c <___vfprintf_internal_r+0x8a0>
 1003cec:	b200030b 	ldhu	r8,12(r22)
 1003cf0:	00800284 	movi	r2,10
 1003cf4:	40c0068c 	andi	r3,r8,26
 1003cf8:	18802f1e 	bne	r3,r2,1003db8 <___vfprintf_internal_r+0x13c>
 1003cfc:	b080038f 	ldh	r2,14(r22)
 1003d00:	10002d16 	blt	r2,zero,1003db8 <___vfprintf_internal_r+0x13c>
 1003d04:	b240038b 	ldhu	r9,14(r22)
 1003d08:	b2800717 	ldw	r10,28(r22)
 1003d0c:	b2c00917 	ldw	r11,36(r22)
 1003d10:	d9014f17 	ldw	r4,1340(sp)
 1003d14:	dc402904 	addi	r17,sp,164
 1003d18:	d8804004 	addi	r2,sp,256
 1003d1c:	00c10004 	movi	r3,1024
 1003d20:	423fff4c 	andi	r8,r8,65533
 1003d24:	800d883a 	mov	r6,r16
 1003d28:	880b883a 	mov	r5,r17
 1003d2c:	da002c0d 	sth	r8,176(sp)
 1003d30:	da402c8d 	sth	r9,178(sp)
 1003d34:	da803015 	stw	r10,192(sp)
 1003d38:	dac03215 	stw	r11,200(sp)
 1003d3c:	d8802d15 	stw	r2,180(sp)
 1003d40:	d8c02e15 	stw	r3,184(sp)
 1003d44:	d8802915 	stw	r2,164(sp)
 1003d48:	d8c02b15 	stw	r3,172(sp)
 1003d4c:	d8002f15 	stw	zero,188(sp)
 1003d50:	1003c7c0 	call	1003c7c <___vfprintf_internal_r>
 1003d54:	d8814b15 	stw	r2,1324(sp)
 1003d58:	10000416 	blt	r2,zero,1003d6c <___vfprintf_internal_r+0xf0>
 1003d5c:	d9014f17 	ldw	r4,1340(sp)
 1003d60:	880b883a 	mov	r5,r17
 1003d64:	100131c0 	call	100131c <_fflush_r>
 1003d68:	1002321e 	bne	r2,zero,1004634 <___vfprintf_internal_r+0x9b8>
 1003d6c:	d8802c0b 	ldhu	r2,176(sp)
 1003d70:	1080100c 	andi	r2,r2,64
 1003d74:	10000326 	beq	r2,zero,1003d84 <___vfprintf_internal_r+0x108>
 1003d78:	b080030b 	ldhu	r2,12(r22)
 1003d7c:	10801014 	ori	r2,r2,64
 1003d80:	b080030d 	sth	r2,12(r22)
 1003d84:	d8814b17 	ldw	r2,1324(sp)
 1003d88:	dfc15b17 	ldw	ra,1388(sp)
 1003d8c:	df015a17 	ldw	fp,1384(sp)
 1003d90:	ddc15917 	ldw	r23,1380(sp)
 1003d94:	dd815817 	ldw	r22,1376(sp)
 1003d98:	dd415717 	ldw	r21,1372(sp)
 1003d9c:	dd015617 	ldw	r20,1368(sp)
 1003da0:	dcc15517 	ldw	r19,1364(sp)
 1003da4:	dc815417 	ldw	r18,1360(sp)
 1003da8:	dc415317 	ldw	r17,1356(sp)
 1003dac:	dc015217 	ldw	r16,1352(sp)
 1003db0:	dec15c04 	addi	sp,sp,1392
 1003db4:	f800283a 	ret
 1003db8:	0005883a 	mov	r2,zero
 1003dbc:	0007883a 	mov	r3,zero
 1003dc0:	dd401904 	addi	r21,sp,100
 1003dc4:	d8814215 	stw	r2,1288(sp)
 1003dc8:	802f883a 	mov	r23,r16
 1003dcc:	d8c14315 	stw	r3,1292(sp)
 1003dd0:	d8014b15 	stw	zero,1324(sp)
 1003dd4:	d8014815 	stw	zero,1312(sp)
 1003dd8:	d8014415 	stw	zero,1296(sp)
 1003ddc:	d8014715 	stw	zero,1308(sp)
 1003de0:	dd400c15 	stw	r21,48(sp)
 1003de4:	d8000e15 	stw	zero,56(sp)
 1003de8:	d8000d15 	stw	zero,52(sp)
 1003dec:	b8800007 	ldb	r2,0(r23)
 1003df0:	10001926 	beq	r2,zero,1003e58 <___vfprintf_internal_r+0x1dc>
 1003df4:	00c00944 	movi	r3,37
 1003df8:	10c01726 	beq	r2,r3,1003e58 <___vfprintf_internal_r+0x1dc>
 1003dfc:	b821883a 	mov	r16,r23
 1003e00:	00000106 	br	1003e08 <___vfprintf_internal_r+0x18c>
 1003e04:	10c00326 	beq	r2,r3,1003e14 <___vfprintf_internal_r+0x198>
 1003e08:	84000044 	addi	r16,r16,1
 1003e0c:	80800007 	ldb	r2,0(r16)
 1003e10:	103ffc1e 	bne	r2,zero,1003e04 <___vfprintf_internal_r+0x188>
 1003e14:	85e7c83a 	sub	r19,r16,r23
 1003e18:	98000e26 	beq	r19,zero,1003e54 <___vfprintf_internal_r+0x1d8>
 1003e1c:	dc800e17 	ldw	r18,56(sp)
 1003e20:	dc400d17 	ldw	r17,52(sp)
 1003e24:	008001c4 	movi	r2,7
 1003e28:	94e5883a 	add	r18,r18,r19
 1003e2c:	8c400044 	addi	r17,r17,1
 1003e30:	adc00015 	stw	r23,0(r21)
 1003e34:	dc800e15 	stw	r18,56(sp)
 1003e38:	acc00115 	stw	r19,4(r21)
 1003e3c:	dc400d15 	stw	r17,52(sp)
 1003e40:	14428b16 	blt	r2,r17,1004870 <___vfprintf_internal_r+0xbf4>
 1003e44:	ad400204 	addi	r21,r21,8
 1003e48:	d9014b17 	ldw	r4,1324(sp)
 1003e4c:	24c9883a 	add	r4,r4,r19
 1003e50:	d9014b15 	stw	r4,1324(sp)
 1003e54:	802f883a 	mov	r23,r16
 1003e58:	b8800007 	ldb	r2,0(r23)
 1003e5c:	10013c26 	beq	r2,zero,1004350 <___vfprintf_internal_r+0x6d4>
 1003e60:	bdc00044 	addi	r23,r23,1
 1003e64:	d8000405 	stb	zero,16(sp)
 1003e68:	b8c00007 	ldb	r3,0(r23)
 1003e6c:	04ffffc4 	movi	r19,-1
 1003e70:	d8014c15 	stw	zero,1328(sp)
 1003e74:	d8014a15 	stw	zero,1320(sp)
 1003e78:	d8c14d15 	stw	r3,1332(sp)
 1003e7c:	bdc00044 	addi	r23,r23,1
 1003e80:	d9414d17 	ldw	r5,1332(sp)
 1003e84:	00801604 	movi	r2,88
 1003e88:	28fff804 	addi	r3,r5,-32
 1003e8c:	10c06036 	bltu	r2,r3,1004010 <___vfprintf_internal_r+0x394>
 1003e90:	18c5883a 	add	r2,r3,r3
 1003e94:	1085883a 	add	r2,r2,r2
 1003e98:	00c04034 	movhi	r3,256
 1003e9c:	18cfab04 	addi	r3,r3,16044
 1003ea0:	10c5883a 	add	r2,r2,r3
 1003ea4:	11000017 	ldw	r4,0(r2)
 1003ea8:	2000683a 	jmp	r4
 1003eac:	01004e20 	cmpeqi	r4,zero,312
 1003eb0:	01004010 	cmplti	r4,zero,256
 1003eb4:	01004010 	cmplti	r4,zero,256
 1003eb8:	01004e0c 	andi	r4,zero,312
 1003ebc:	01004010 	cmplti	r4,zero,256
 1003ec0:	01004010 	cmplti	r4,zero,256
 1003ec4:	01004010 	cmplti	r4,zero,256
 1003ec8:	01004010 	cmplti	r4,zero,256
 1003ecc:	01004010 	cmplti	r4,zero,256
 1003ed0:	01004010 	cmplti	r4,zero,256
 1003ed4:	01004bec 	andhi	r4,zero,303
 1003ed8:	01004dfc 	xorhi	r4,zero,311
 1003edc:	01004010 	cmplti	r4,zero,256
 1003ee0:	01004c04 	movi	r4,304
 1003ee4:	01004ea4 	muli	r4,zero,314
 1003ee8:	01004010 	cmplti	r4,zero,256
 1003eec:	01004e90 	cmplti	r4,zero,314
 1003ef0:	01004e4c 	andi	r4,zero,313
 1003ef4:	01004e4c 	andi	r4,zero,313
 1003ef8:	01004e4c 	andi	r4,zero,313
 1003efc:	01004e4c 	andi	r4,zero,313
 1003f00:	01004e4c 	andi	r4,zero,313
 1003f04:	01004e4c 	andi	r4,zero,313
 1003f08:	01004e4c 	andi	r4,zero,313
 1003f0c:	01004e4c 	andi	r4,zero,313
 1003f10:	01004e4c 	andi	r4,zero,313
 1003f14:	01004010 	cmplti	r4,zero,256
 1003f18:	01004010 	cmplti	r4,zero,256
 1003f1c:	01004010 	cmplti	r4,zero,256
 1003f20:	01004010 	cmplti	r4,zero,256
 1003f24:	01004010 	cmplti	r4,zero,256
 1003f28:	01004010 	cmplti	r4,zero,256
 1003f2c:	01004010 	cmplti	r4,zero,256
 1003f30:	01004010 	cmplti	r4,zero,256
 1003f34:	01004010 	cmplti	r4,zero,256
 1003f38:	01004010 	cmplti	r4,zero,256
 1003f3c:	01004668 	cmpgeui	r4,zero,281
 1003f40:	01004cd4 	movui	r4,307
 1003f44:	01004010 	cmplti	r4,zero,256
 1003f48:	01004cd4 	movui	r4,307
 1003f4c:	01004010 	cmplti	r4,zero,256
 1003f50:	01004010 	cmplti	r4,zero,256
 1003f54:	01004010 	cmplti	r4,zero,256
 1003f58:	01004010 	cmplti	r4,zero,256
 1003f5c:	01004e38 	rdprs	r4,zero,312
 1003f60:	01004010 	cmplti	r4,zero,256
 1003f64:	01004010 	cmplti	r4,zero,256
 1003f68:	0100471c 	xori	r4,zero,284
 1003f6c:	01004010 	cmplti	r4,zero,256
 1003f70:	01004010 	cmplti	r4,zero,256
 1003f74:	01004010 	cmplti	r4,zero,256
 1003f78:	01004010 	cmplti	r4,zero,256
 1003f7c:	01004010 	cmplti	r4,zero,256
 1003f80:	01004768 	cmpgeui	r4,zero,285
 1003f84:	01004010 	cmplti	r4,zero,256
 1003f88:	01004010 	cmplti	r4,zero,256
 1003f8c:	01004d88 	cmpgei	r4,zero,310
 1003f90:	01004010 	cmplti	r4,zero,256
 1003f94:	01004010 	cmplti	r4,zero,256
 1003f98:	01004010 	cmplti	r4,zero,256
 1003f9c:	01004010 	cmplti	r4,zero,256
 1003fa0:	01004010 	cmplti	r4,zero,256
 1003fa4:	01004010 	cmplti	r4,zero,256
 1003fa8:	01004010 	cmplti	r4,zero,256
 1003fac:	01004010 	cmplti	r4,zero,256
 1003fb0:	01004010 	cmplti	r4,zero,256
 1003fb4:	01004010 	cmplti	r4,zero,256
 1003fb8:	01004d5c 	xori	r4,zero,309
 1003fbc:	01004674 	movhi	r4,281
 1003fc0:	01004cd4 	movui	r4,307
 1003fc4:	01004cd4 	movui	r4,307
 1003fc8:	01004cd4 	movui	r4,307
 1003fcc:	01004cc0 	call	1004cc <__alt_mem_sram+0x4cc>
 1003fd0:	01004674 	movhi	r4,281
 1003fd4:	01004010 	cmplti	r4,zero,256
 1003fd8:	01004010 	cmplti	r4,zero,256
 1003fdc:	01004c48 	cmpgei	r4,zero,305
 1003fe0:	01004010 	cmplti	r4,zero,256
 1003fe4:	01004c18 	cmpnei	r4,zero,304
 1003fe8:	01004728 	cmpgeui	r4,zero,284
 1003fec:	01004c78 	rdprs	r4,zero,305
 1003ff0:	01004c64 	muli	r4,zero,305
 1003ff4:	01004010 	cmplti	r4,zero,256
 1003ff8:	01004f0c 	andi	r4,zero,316
 1003ffc:	01004010 	cmplti	r4,zero,256
 1004000:	01004774 	movhi	r4,285
 1004004:	01004010 	cmplti	r4,zero,256
 1004008:	01004010 	cmplti	r4,zero,256
 100400c:	01004dec 	andhi	r4,zero,311
 1004010:	d9014d17 	ldw	r4,1332(sp)
 1004014:	2000ce26 	beq	r4,zero,1004350 <___vfprintf_internal_r+0x6d4>
 1004018:	01400044 	movi	r5,1
 100401c:	d9800f04 	addi	r6,sp,60
 1004020:	d9c14015 	stw	r7,1280(sp)
 1004024:	d9414515 	stw	r5,1300(sp)
 1004028:	d9814115 	stw	r6,1284(sp)
 100402c:	280f883a 	mov	r7,r5
 1004030:	d9000f05 	stb	r4,60(sp)
 1004034:	d8000405 	stb	zero,16(sp)
 1004038:	d8014615 	stw	zero,1304(sp)
 100403c:	d8c14c17 	ldw	r3,1328(sp)
 1004040:	1880008c 	andi	r2,r3,2
 1004044:	1005003a 	cmpeq	r2,r2,zero
 1004048:	d8815015 	stw	r2,1344(sp)
 100404c:	1000031e 	bne	r2,zero,100405c <___vfprintf_internal_r+0x3e0>
 1004050:	d9014517 	ldw	r4,1300(sp)
 1004054:	21000084 	addi	r4,r4,2
 1004058:	d9014515 	stw	r4,1300(sp)
 100405c:	d9414c17 	ldw	r5,1328(sp)
 1004060:	2940210c 	andi	r5,r5,132
 1004064:	d9414e15 	stw	r5,1336(sp)
 1004068:	28002d1e 	bne	r5,zero,1004120 <___vfprintf_internal_r+0x4a4>
 100406c:	d9814a17 	ldw	r6,1320(sp)
 1004070:	d8814517 	ldw	r2,1300(sp)
 1004074:	30a1c83a 	sub	r16,r6,r2
 1004078:	0400290e 	bge	zero,r16,1004120 <___vfprintf_internal_r+0x4a4>
 100407c:	00800404 	movi	r2,16
 1004080:	14045e0e 	bge	r2,r16,10051fc <___vfprintf_internal_r+0x1580>
 1004084:	dc800e17 	ldw	r18,56(sp)
 1004088:	dc400d17 	ldw	r17,52(sp)
 100408c:	1027883a 	mov	r19,r2
 1004090:	07004074 	movhi	fp,257
 1004094:	e70d5284 	addi	fp,fp,13642
 1004098:	050001c4 	movi	r20,7
 100409c:	00000306 	br	10040ac <___vfprintf_internal_r+0x430>
 10040a0:	843ffc04 	addi	r16,r16,-16
 10040a4:	ad400204 	addi	r21,r21,8
 10040a8:	9c00130e 	bge	r19,r16,10040f8 <___vfprintf_internal_r+0x47c>
 10040ac:	94800404 	addi	r18,r18,16
 10040b0:	8c400044 	addi	r17,r17,1
 10040b4:	af000015 	stw	fp,0(r21)
 10040b8:	acc00115 	stw	r19,4(r21)
 10040bc:	dc800e15 	stw	r18,56(sp)
 10040c0:	dc400d15 	stw	r17,52(sp)
 10040c4:	a47ff60e 	bge	r20,r17,10040a0 <___vfprintf_internal_r+0x424>
 10040c8:	d9014f17 	ldw	r4,1340(sp)
 10040cc:	b00b883a 	mov	r5,r22
 10040d0:	d9800c04 	addi	r6,sp,48
 10040d4:	d9c15115 	stw	r7,1348(sp)
 10040d8:	1003c240 	call	1003c24 <__sprint_r>
 10040dc:	d9c15117 	ldw	r7,1348(sp)
 10040e0:	10009e1e 	bne	r2,zero,100435c <___vfprintf_internal_r+0x6e0>
 10040e4:	843ffc04 	addi	r16,r16,-16
 10040e8:	dc800e17 	ldw	r18,56(sp)
 10040ec:	dc400d17 	ldw	r17,52(sp)
 10040f0:	dd401904 	addi	r21,sp,100
 10040f4:	9c3fed16 	blt	r19,r16,10040ac <___vfprintf_internal_r+0x430>
 10040f8:	9425883a 	add	r18,r18,r16
 10040fc:	8c400044 	addi	r17,r17,1
 1004100:	008001c4 	movi	r2,7
 1004104:	af000015 	stw	fp,0(r21)
 1004108:	ac000115 	stw	r16,4(r21)
 100410c:	dc800e15 	stw	r18,56(sp)
 1004110:	dc400d15 	stw	r17,52(sp)
 1004114:	1441f516 	blt	r2,r17,10048ec <___vfprintf_internal_r+0xc70>
 1004118:	ad400204 	addi	r21,r21,8
 100411c:	00000206 	br	1004128 <___vfprintf_internal_r+0x4ac>
 1004120:	dc800e17 	ldw	r18,56(sp)
 1004124:	dc400d17 	ldw	r17,52(sp)
 1004128:	d8800407 	ldb	r2,16(sp)
 100412c:	10000b26 	beq	r2,zero,100415c <___vfprintf_internal_r+0x4e0>
 1004130:	00800044 	movi	r2,1
 1004134:	94800044 	addi	r18,r18,1
 1004138:	8c400044 	addi	r17,r17,1
 100413c:	a8800115 	stw	r2,4(r21)
 1004140:	d8c00404 	addi	r3,sp,16
 1004144:	008001c4 	movi	r2,7
 1004148:	a8c00015 	stw	r3,0(r21)
 100414c:	dc800e15 	stw	r18,56(sp)
 1004150:	dc400d15 	stw	r17,52(sp)
 1004154:	1441da16 	blt	r2,r17,10048c0 <___vfprintf_internal_r+0xc44>
 1004158:	ad400204 	addi	r21,r21,8
 100415c:	d9015017 	ldw	r4,1344(sp)
 1004160:	20000b1e 	bne	r4,zero,1004190 <___vfprintf_internal_r+0x514>
 1004164:	d8800444 	addi	r2,sp,17
 1004168:	94800084 	addi	r18,r18,2
 100416c:	8c400044 	addi	r17,r17,1
 1004170:	a8800015 	stw	r2,0(r21)
 1004174:	00c00084 	movi	r3,2
 1004178:	008001c4 	movi	r2,7
 100417c:	a8c00115 	stw	r3,4(r21)
 1004180:	dc800e15 	stw	r18,56(sp)
 1004184:	dc400d15 	stw	r17,52(sp)
 1004188:	1441c216 	blt	r2,r17,1004894 <___vfprintf_internal_r+0xc18>
 100418c:	ad400204 	addi	r21,r21,8
 1004190:	d9414e17 	ldw	r5,1336(sp)
 1004194:	00802004 	movi	r2,128
 1004198:	2880b126 	beq	r5,r2,1004460 <___vfprintf_internal_r+0x7e4>
 100419c:	d8c14617 	ldw	r3,1304(sp)
 10041a0:	19e1c83a 	sub	r16,r3,r7
 10041a4:	0400260e 	bge	zero,r16,1004240 <___vfprintf_internal_r+0x5c4>
 10041a8:	00800404 	movi	r2,16
 10041ac:	1403cf0e 	bge	r2,r16,10050ec <___vfprintf_internal_r+0x1470>
 10041b0:	1027883a 	mov	r19,r2
 10041b4:	07004074 	movhi	fp,257
 10041b8:	e70d4e84 	addi	fp,fp,13626
 10041bc:	050001c4 	movi	r20,7
 10041c0:	00000306 	br	10041d0 <___vfprintf_internal_r+0x554>
 10041c4:	843ffc04 	addi	r16,r16,-16
 10041c8:	ad400204 	addi	r21,r21,8
 10041cc:	9c00130e 	bge	r19,r16,100421c <___vfprintf_internal_r+0x5a0>
 10041d0:	94800404 	addi	r18,r18,16
 10041d4:	8c400044 	addi	r17,r17,1
 10041d8:	af000015 	stw	fp,0(r21)
 10041dc:	acc00115 	stw	r19,4(r21)
 10041e0:	dc800e15 	stw	r18,56(sp)
 10041e4:	dc400d15 	stw	r17,52(sp)
 10041e8:	a47ff60e 	bge	r20,r17,10041c4 <___vfprintf_internal_r+0x548>
 10041ec:	d9014f17 	ldw	r4,1340(sp)
 10041f0:	b00b883a 	mov	r5,r22
 10041f4:	d9800c04 	addi	r6,sp,48
 10041f8:	d9c15115 	stw	r7,1348(sp)
 10041fc:	1003c240 	call	1003c24 <__sprint_r>
 1004200:	d9c15117 	ldw	r7,1348(sp)
 1004204:	1000551e 	bne	r2,zero,100435c <___vfprintf_internal_r+0x6e0>
 1004208:	843ffc04 	addi	r16,r16,-16
 100420c:	dc800e17 	ldw	r18,56(sp)
 1004210:	dc400d17 	ldw	r17,52(sp)
 1004214:	dd401904 	addi	r21,sp,100
 1004218:	9c3fed16 	blt	r19,r16,10041d0 <___vfprintf_internal_r+0x554>
 100421c:	9425883a 	add	r18,r18,r16
 1004220:	8c400044 	addi	r17,r17,1
 1004224:	008001c4 	movi	r2,7
 1004228:	af000015 	stw	fp,0(r21)
 100422c:	ac000115 	stw	r16,4(r21)
 1004230:	dc800e15 	stw	r18,56(sp)
 1004234:	dc400d15 	stw	r17,52(sp)
 1004238:	14418216 	blt	r2,r17,1004844 <___vfprintf_internal_r+0xbc8>
 100423c:	ad400204 	addi	r21,r21,8
 1004240:	d9014c17 	ldw	r4,1328(sp)
 1004244:	2080400c 	andi	r2,r4,256
 1004248:	10004a1e 	bne	r2,zero,1004374 <___vfprintf_internal_r+0x6f8>
 100424c:	d9414117 	ldw	r5,1284(sp)
 1004250:	91e5883a 	add	r18,r18,r7
 1004254:	8c400044 	addi	r17,r17,1
 1004258:	008001c4 	movi	r2,7
 100425c:	a9400015 	stw	r5,0(r21)
 1004260:	a9c00115 	stw	r7,4(r21)
 1004264:	dc800e15 	stw	r18,56(sp)
 1004268:	dc400d15 	stw	r17,52(sp)
 100426c:	14416716 	blt	r2,r17,100480c <___vfprintf_internal_r+0xb90>
 1004270:	a8c00204 	addi	r3,r21,8
 1004274:	d9814c17 	ldw	r6,1328(sp)
 1004278:	3080010c 	andi	r2,r6,4
 100427c:	10002826 	beq	r2,zero,1004320 <___vfprintf_internal_r+0x6a4>
 1004280:	d8814a17 	ldw	r2,1320(sp)
 1004284:	d9014517 	ldw	r4,1300(sp)
 1004288:	1121c83a 	sub	r16,r2,r4
 100428c:	0400240e 	bge	zero,r16,1004320 <___vfprintf_internal_r+0x6a4>
 1004290:	00800404 	movi	r2,16
 1004294:	1404550e 	bge	r2,r16,10053ec <___vfprintf_internal_r+0x1770>
 1004298:	dc400d17 	ldw	r17,52(sp)
 100429c:	1027883a 	mov	r19,r2
 10042a0:	07004074 	movhi	fp,257
 10042a4:	e70d5284 	addi	fp,fp,13642
 10042a8:	050001c4 	movi	r20,7
 10042ac:	00000306 	br	10042bc <___vfprintf_internal_r+0x640>
 10042b0:	843ffc04 	addi	r16,r16,-16
 10042b4:	18c00204 	addi	r3,r3,8
 10042b8:	9c00110e 	bge	r19,r16,1004300 <___vfprintf_internal_r+0x684>
 10042bc:	94800404 	addi	r18,r18,16
 10042c0:	8c400044 	addi	r17,r17,1
 10042c4:	1f000015 	stw	fp,0(r3)
 10042c8:	1cc00115 	stw	r19,4(r3)
 10042cc:	dc800e15 	stw	r18,56(sp)
 10042d0:	dc400d15 	stw	r17,52(sp)
 10042d4:	a47ff60e 	bge	r20,r17,10042b0 <___vfprintf_internal_r+0x634>
 10042d8:	d9014f17 	ldw	r4,1340(sp)
 10042dc:	b00b883a 	mov	r5,r22
 10042e0:	d9800c04 	addi	r6,sp,48
 10042e4:	1003c240 	call	1003c24 <__sprint_r>
 10042e8:	10001c1e 	bne	r2,zero,100435c <___vfprintf_internal_r+0x6e0>
 10042ec:	843ffc04 	addi	r16,r16,-16
 10042f0:	dc800e17 	ldw	r18,56(sp)
 10042f4:	dc400d17 	ldw	r17,52(sp)
 10042f8:	d8c01904 	addi	r3,sp,100
 10042fc:	9c3fef16 	blt	r19,r16,10042bc <___vfprintf_internal_r+0x640>
 1004300:	9425883a 	add	r18,r18,r16
 1004304:	8c400044 	addi	r17,r17,1
 1004308:	008001c4 	movi	r2,7
 100430c:	1f000015 	stw	fp,0(r3)
 1004310:	1c000115 	stw	r16,4(r3)
 1004314:	dc800e15 	stw	r18,56(sp)
 1004318:	dc400d15 	stw	r17,52(sp)
 100431c:	1440cb16 	blt	r2,r17,100464c <___vfprintf_internal_r+0x9d0>
 1004320:	d8814a17 	ldw	r2,1320(sp)
 1004324:	d9414517 	ldw	r5,1300(sp)
 1004328:	1140010e 	bge	r2,r5,1004330 <___vfprintf_internal_r+0x6b4>
 100432c:	2805883a 	mov	r2,r5
 1004330:	d9814b17 	ldw	r6,1324(sp)
 1004334:	308d883a 	add	r6,r6,r2
 1004338:	d9814b15 	stw	r6,1324(sp)
 100433c:	90013b1e 	bne	r18,zero,100482c <___vfprintf_internal_r+0xbb0>
 1004340:	d9c14017 	ldw	r7,1280(sp)
 1004344:	dd401904 	addi	r21,sp,100
 1004348:	d8000d15 	stw	zero,52(sp)
 100434c:	003ea706 	br	1003dec <___vfprintf_internal_r+0x170>
 1004350:	d8800e17 	ldw	r2,56(sp)
 1004354:	1005451e 	bne	r2,zero,100586c <___vfprintf_internal_r+0x1bf0>
 1004358:	d8000d15 	stw	zero,52(sp)
 100435c:	b080030b 	ldhu	r2,12(r22)
 1004360:	1080100c 	andi	r2,r2,64
 1004364:	103e8726 	beq	r2,zero,1003d84 <___vfprintf_internal_r+0x108>
 1004368:	00bfffc4 	movi	r2,-1
 100436c:	d8814b15 	stw	r2,1324(sp)
 1004370:	003e8406 	br	1003d84 <___vfprintf_internal_r+0x108>
 1004374:	d9814d17 	ldw	r6,1332(sp)
 1004378:	00801944 	movi	r2,101
 100437c:	11806e16 	blt	r2,r6,1004538 <___vfprintf_internal_r+0x8bc>
 1004380:	d9414717 	ldw	r5,1308(sp)
 1004384:	00c00044 	movi	r3,1
 1004388:	1943490e 	bge	r3,r5,10050b0 <___vfprintf_internal_r+0x1434>
 100438c:	d8814117 	ldw	r2,1284(sp)
 1004390:	94800044 	addi	r18,r18,1
 1004394:	8c400044 	addi	r17,r17,1
 1004398:	a8800015 	stw	r2,0(r21)
 100439c:	008001c4 	movi	r2,7
 10043a0:	a8c00115 	stw	r3,4(r21)
 10043a4:	dc800e15 	stw	r18,56(sp)
 10043a8:	dc400d15 	stw	r17,52(sp)
 10043ac:	1441ca16 	blt	r2,r17,1004ad8 <___vfprintf_internal_r+0xe5c>
 10043b0:	a8c00204 	addi	r3,r21,8
 10043b4:	d9014917 	ldw	r4,1316(sp)
 10043b8:	00800044 	movi	r2,1
 10043bc:	94800044 	addi	r18,r18,1
 10043c0:	8c400044 	addi	r17,r17,1
 10043c4:	18800115 	stw	r2,4(r3)
 10043c8:	008001c4 	movi	r2,7
 10043cc:	19000015 	stw	r4,0(r3)
 10043d0:	dc800e15 	stw	r18,56(sp)
 10043d4:	dc400d15 	stw	r17,52(sp)
 10043d8:	1441b616 	blt	r2,r17,1004ab4 <___vfprintf_internal_r+0xe38>
 10043dc:	1cc00204 	addi	r19,r3,8
 10043e0:	d9014217 	ldw	r4,1288(sp)
 10043e4:	d9414317 	ldw	r5,1292(sp)
 10043e8:	000d883a 	mov	r6,zero
 10043ec:	000f883a 	mov	r7,zero
 10043f0:	100fda80 	call	100fda8 <__nedf2>
 10043f4:	10017426 	beq	r2,zero,10049c8 <___vfprintf_internal_r+0xd4c>
 10043f8:	d9414717 	ldw	r5,1308(sp)
 10043fc:	d9814117 	ldw	r6,1284(sp)
 1004400:	8c400044 	addi	r17,r17,1
 1004404:	2c85883a 	add	r2,r5,r18
 1004408:	14bfffc4 	addi	r18,r2,-1
 100440c:	28bfffc4 	addi	r2,r5,-1
 1004410:	30c00044 	addi	r3,r6,1
 1004414:	98800115 	stw	r2,4(r19)
 1004418:	008001c4 	movi	r2,7
 100441c:	98c00015 	stw	r3,0(r19)
 1004420:	dc800e15 	stw	r18,56(sp)
 1004424:	dc400d15 	stw	r17,52(sp)
 1004428:	14418e16 	blt	r2,r17,1004a64 <___vfprintf_internal_r+0xde8>
 100442c:	9cc00204 	addi	r19,r19,8
 1004430:	d9414817 	ldw	r5,1312(sp)
 1004434:	d8800804 	addi	r2,sp,32
 1004438:	8c400044 	addi	r17,r17,1
 100443c:	9165883a 	add	r18,r18,r5
 1004440:	98800015 	stw	r2,0(r19)
 1004444:	008001c4 	movi	r2,7
 1004448:	99400115 	stw	r5,4(r19)
 100444c:	dc800e15 	stw	r18,56(sp)
 1004450:	dc400d15 	stw	r17,52(sp)
 1004454:	1440ed16 	blt	r2,r17,100480c <___vfprintf_internal_r+0xb90>
 1004458:	98c00204 	addi	r3,r19,8
 100445c:	003f8506 	br	1004274 <___vfprintf_internal_r+0x5f8>
 1004460:	d9814a17 	ldw	r6,1320(sp)
 1004464:	d8814517 	ldw	r2,1300(sp)
 1004468:	30a1c83a 	sub	r16,r6,r2
 100446c:	043f4b0e 	bge	zero,r16,100419c <___vfprintf_internal_r+0x520>
 1004470:	00800404 	movi	r2,16
 1004474:	14043a0e 	bge	r2,r16,1005560 <___vfprintf_internal_r+0x18e4>
 1004478:	1027883a 	mov	r19,r2
 100447c:	07004074 	movhi	fp,257
 1004480:	e70d4e84 	addi	fp,fp,13626
 1004484:	050001c4 	movi	r20,7
 1004488:	00000306 	br	1004498 <___vfprintf_internal_r+0x81c>
 100448c:	843ffc04 	addi	r16,r16,-16
 1004490:	ad400204 	addi	r21,r21,8
 1004494:	9c00130e 	bge	r19,r16,10044e4 <___vfprintf_internal_r+0x868>
 1004498:	94800404 	addi	r18,r18,16
 100449c:	8c400044 	addi	r17,r17,1
 10044a0:	af000015 	stw	fp,0(r21)
 10044a4:	acc00115 	stw	r19,4(r21)
 10044a8:	dc800e15 	stw	r18,56(sp)
 10044ac:	dc400d15 	stw	r17,52(sp)
 10044b0:	a47ff60e 	bge	r20,r17,100448c <___vfprintf_internal_r+0x810>
 10044b4:	d9014f17 	ldw	r4,1340(sp)
 10044b8:	b00b883a 	mov	r5,r22
 10044bc:	d9800c04 	addi	r6,sp,48
 10044c0:	d9c15115 	stw	r7,1348(sp)
 10044c4:	1003c240 	call	1003c24 <__sprint_r>
 10044c8:	d9c15117 	ldw	r7,1348(sp)
 10044cc:	103fa31e 	bne	r2,zero,100435c <___vfprintf_internal_r+0x6e0>
 10044d0:	843ffc04 	addi	r16,r16,-16
 10044d4:	dc800e17 	ldw	r18,56(sp)
 10044d8:	dc400d17 	ldw	r17,52(sp)
 10044dc:	dd401904 	addi	r21,sp,100
 10044e0:	9c3fed16 	blt	r19,r16,1004498 <___vfprintf_internal_r+0x81c>
 10044e4:	9425883a 	add	r18,r18,r16
 10044e8:	8c400044 	addi	r17,r17,1
 10044ec:	008001c4 	movi	r2,7
 10044f0:	af000015 	stw	fp,0(r21)
 10044f4:	ac000115 	stw	r16,4(r21)
 10044f8:	dc800e15 	stw	r18,56(sp)
 10044fc:	dc400d15 	stw	r17,52(sp)
 1004500:	14416116 	blt	r2,r17,1004a88 <___vfprintf_internal_r+0xe0c>
 1004504:	ad400204 	addi	r21,r21,8
 1004508:	003f2406 	br	100419c <___vfprintf_internal_r+0x520>
 100450c:	d9014f17 	ldw	r4,1340(sp)
 1004510:	10017200 	call	1001720 <__sinit>
 1004514:	d9c15117 	ldw	r7,1348(sp)
 1004518:	003def06 	br	1003cd8 <___vfprintf_internal_r+0x5c>
 100451c:	d9014f17 	ldw	r4,1340(sp)
 1004520:	b00b883a 	mov	r5,r22
 1004524:	d9c15115 	stw	r7,1348(sp)
 1004528:	10073640 	call	1007364 <__swsetup_r>
 100452c:	d9c15117 	ldw	r7,1348(sp)
 1004530:	103dee26 	beq	r2,zero,1003cec <___vfprintf_internal_r+0x70>
 1004534:	003f8c06 	br	1004368 <___vfprintf_internal_r+0x6ec>
 1004538:	d9014217 	ldw	r4,1288(sp)
 100453c:	d9414317 	ldw	r5,1292(sp)
 1004540:	000d883a 	mov	r6,zero
 1004544:	000f883a 	mov	r7,zero
 1004548:	100fd200 	call	100fd20 <__eqdf2>
 100454c:	1000f21e 	bne	r2,zero,1004918 <___vfprintf_internal_r+0xc9c>
 1004550:	00804074 	movhi	r2,257
 1004554:	108d4e04 	addi	r2,r2,13624
 1004558:	94800044 	addi	r18,r18,1
 100455c:	8c400044 	addi	r17,r17,1
 1004560:	a8800015 	stw	r2,0(r21)
 1004564:	00c00044 	movi	r3,1
 1004568:	008001c4 	movi	r2,7
 100456c:	a8c00115 	stw	r3,4(r21)
 1004570:	dc800e15 	stw	r18,56(sp)
 1004574:	dc400d15 	stw	r17,52(sp)
 1004578:	14430016 	blt	r2,r17,100517c <___vfprintf_internal_r+0x1500>
 100457c:	a8c00204 	addi	r3,r21,8
 1004580:	d8800517 	ldw	r2,20(sp)
 1004584:	d9014717 	ldw	r4,1308(sp)
 1004588:	11015c0e 	bge	r2,r4,1004afc <___vfprintf_internal_r+0xe80>
 100458c:	dc400d17 	ldw	r17,52(sp)
 1004590:	d9814917 	ldw	r6,1316(sp)
 1004594:	00800044 	movi	r2,1
 1004598:	94800044 	addi	r18,r18,1
 100459c:	8c400044 	addi	r17,r17,1
 10045a0:	18800115 	stw	r2,4(r3)
 10045a4:	008001c4 	movi	r2,7
 10045a8:	19800015 	stw	r6,0(r3)
 10045ac:	dc800e15 	stw	r18,56(sp)
 10045b0:	dc400d15 	stw	r17,52(sp)
 10045b4:	14431616 	blt	r2,r17,1005210 <___vfprintf_internal_r+0x1594>
 10045b8:	18c00204 	addi	r3,r3,8
 10045bc:	d8814717 	ldw	r2,1308(sp)
 10045c0:	143fffc4 	addi	r16,r2,-1
 10045c4:	043f2b0e 	bge	zero,r16,1004274 <___vfprintf_internal_r+0x5f8>
 10045c8:	00800404 	movi	r2,16
 10045cc:	1402a80e 	bge	r2,r16,1005070 <___vfprintf_internal_r+0x13f4>
 10045d0:	dc400d17 	ldw	r17,52(sp)
 10045d4:	1027883a 	mov	r19,r2
 10045d8:	07004074 	movhi	fp,257
 10045dc:	e70d4e84 	addi	fp,fp,13626
 10045e0:	050001c4 	movi	r20,7
 10045e4:	00000306 	br	10045f4 <___vfprintf_internal_r+0x978>
 10045e8:	18c00204 	addi	r3,r3,8
 10045ec:	843ffc04 	addi	r16,r16,-16
 10045f0:	9c02a20e 	bge	r19,r16,100507c <___vfprintf_internal_r+0x1400>
 10045f4:	94800404 	addi	r18,r18,16
 10045f8:	8c400044 	addi	r17,r17,1
 10045fc:	1f000015 	stw	fp,0(r3)
 1004600:	1cc00115 	stw	r19,4(r3)
 1004604:	dc800e15 	stw	r18,56(sp)
 1004608:	dc400d15 	stw	r17,52(sp)
 100460c:	a47ff60e 	bge	r20,r17,10045e8 <___vfprintf_internal_r+0x96c>
 1004610:	d9014f17 	ldw	r4,1340(sp)
 1004614:	b00b883a 	mov	r5,r22
 1004618:	d9800c04 	addi	r6,sp,48
 100461c:	1003c240 	call	1003c24 <__sprint_r>
 1004620:	103f4e1e 	bne	r2,zero,100435c <___vfprintf_internal_r+0x6e0>
 1004624:	dc800e17 	ldw	r18,56(sp)
 1004628:	dc400d17 	ldw	r17,52(sp)
 100462c:	d8c01904 	addi	r3,sp,100
 1004630:	003fee06 	br	10045ec <___vfprintf_internal_r+0x970>
 1004634:	d8802c0b 	ldhu	r2,176(sp)
 1004638:	00ffffc4 	movi	r3,-1
 100463c:	d8c14b15 	stw	r3,1324(sp)
 1004640:	1080100c 	andi	r2,r2,64
 1004644:	103dcc1e 	bne	r2,zero,1003d78 <___vfprintf_internal_r+0xfc>
 1004648:	003dce06 	br	1003d84 <___vfprintf_internal_r+0x108>
 100464c:	d9014f17 	ldw	r4,1340(sp)
 1004650:	b00b883a 	mov	r5,r22
 1004654:	d9800c04 	addi	r6,sp,48
 1004658:	1003c240 	call	1003c24 <__sprint_r>
 100465c:	103f3f1e 	bne	r2,zero,100435c <___vfprintf_internal_r+0x6e0>
 1004660:	dc800e17 	ldw	r18,56(sp)
 1004664:	003f2e06 	br	1004320 <___vfprintf_internal_r+0x6a4>
 1004668:	d9414c17 	ldw	r5,1328(sp)
 100466c:	29400414 	ori	r5,r5,16
 1004670:	d9414c15 	stw	r5,1328(sp)
 1004674:	d9814c17 	ldw	r6,1328(sp)
 1004678:	3080080c 	andi	r2,r6,32
 100467c:	10014f1e 	bne	r2,zero,1004bbc <___vfprintf_internal_r+0xf40>
 1004680:	d8c14c17 	ldw	r3,1328(sp)
 1004684:	1880040c 	andi	r2,r3,16
 1004688:	1002f01e 	bne	r2,zero,100524c <___vfprintf_internal_r+0x15d0>
 100468c:	d9014c17 	ldw	r4,1328(sp)
 1004690:	2080100c 	andi	r2,r4,64
 1004694:	1002ed26 	beq	r2,zero,100524c <___vfprintf_internal_r+0x15d0>
 1004698:	3880000f 	ldh	r2,0(r7)
 100469c:	39c00104 	addi	r7,r7,4
 10046a0:	d9c14015 	stw	r7,1280(sp)
 10046a4:	1023d7fa 	srai	r17,r2,31
 10046a8:	1021883a 	mov	r16,r2
 10046ac:	88037816 	blt	r17,zero,1005490 <___vfprintf_internal_r+0x1814>
 10046b0:	01000044 	movi	r4,1
 10046b4:	98000416 	blt	r19,zero,10046c8 <___vfprintf_internal_r+0xa4c>
 10046b8:	d8c14c17 	ldw	r3,1328(sp)
 10046bc:	00bfdfc4 	movi	r2,-129
 10046c0:	1886703a 	and	r3,r3,r2
 10046c4:	d8c14c15 	stw	r3,1328(sp)
 10046c8:	8444b03a 	or	r2,r16,r17
 10046cc:	10022c1e 	bne	r2,zero,1004f80 <___vfprintf_internal_r+0x1304>
 10046d0:	98022b1e 	bne	r19,zero,1004f80 <___vfprintf_internal_r+0x1304>
 10046d4:	20803fcc 	andi	r2,r4,255
 10046d8:	1002a126 	beq	r2,zero,1005160 <___vfprintf_internal_r+0x14e4>
 10046dc:	d8c01904 	addi	r3,sp,100
 10046e0:	dd000f04 	addi	r20,sp,60
 10046e4:	d8c14115 	stw	r3,1284(sp)
 10046e8:	d8c14117 	ldw	r3,1284(sp)
 10046ec:	dcc14515 	stw	r19,1300(sp)
 10046f0:	a0c5c83a 	sub	r2,r20,r3
 10046f4:	11c00a04 	addi	r7,r2,40
 10046f8:	99c0010e 	bge	r19,r7,1004700 <___vfprintf_internal_r+0xa84>
 10046fc:	d9c14515 	stw	r7,1300(sp)
 1004700:	dcc14615 	stw	r19,1304(sp)
 1004704:	d8800407 	ldb	r2,16(sp)
 1004708:	103e4c26 	beq	r2,zero,100403c <___vfprintf_internal_r+0x3c0>
 100470c:	d8814517 	ldw	r2,1300(sp)
 1004710:	10800044 	addi	r2,r2,1
 1004714:	d8814515 	stw	r2,1300(sp)
 1004718:	003e4806 	br	100403c <___vfprintf_internal_r+0x3c0>
 100471c:	d9814c17 	ldw	r6,1328(sp)
 1004720:	31800414 	ori	r6,r6,16
 1004724:	d9814c15 	stw	r6,1328(sp)
 1004728:	d8c14c17 	ldw	r3,1328(sp)
 100472c:	1880080c 	andi	r2,r3,32
 1004730:	1001271e 	bne	r2,zero,1004bd0 <___vfprintf_internal_r+0xf54>
 1004734:	d9414c17 	ldw	r5,1328(sp)
 1004738:	2880040c 	andi	r2,r5,16
 100473c:	1002bc1e 	bne	r2,zero,1005230 <___vfprintf_internal_r+0x15b4>
 1004740:	d9814c17 	ldw	r6,1328(sp)
 1004744:	3080100c 	andi	r2,r6,64
 1004748:	1002b926 	beq	r2,zero,1005230 <___vfprintf_internal_r+0x15b4>
 100474c:	3c00000b 	ldhu	r16,0(r7)
 1004750:	0009883a 	mov	r4,zero
 1004754:	39c00104 	addi	r7,r7,4
 1004758:	0023883a 	mov	r17,zero
 100475c:	d9c14015 	stw	r7,1280(sp)
 1004760:	d8000405 	stb	zero,16(sp)
 1004764:	003fd306 	br	10046b4 <___vfprintf_internal_r+0xa38>
 1004768:	d9014c17 	ldw	r4,1328(sp)
 100476c:	21000414 	ori	r4,r4,16
 1004770:	d9014c15 	stw	r4,1328(sp)
 1004774:	d9414c17 	ldw	r5,1328(sp)
 1004778:	2880080c 	andi	r2,r5,32
 100477c:	1001081e 	bne	r2,zero,1004ba0 <___vfprintf_internal_r+0xf24>
 1004780:	d8c14c17 	ldw	r3,1328(sp)
 1004784:	1880040c 	andi	r2,r3,16
 1004788:	1002b61e 	bne	r2,zero,1005264 <___vfprintf_internal_r+0x15e8>
 100478c:	d9014c17 	ldw	r4,1328(sp)
 1004790:	2080100c 	andi	r2,r4,64
 1004794:	1002b326 	beq	r2,zero,1005264 <___vfprintf_internal_r+0x15e8>
 1004798:	3c00000b 	ldhu	r16,0(r7)
 100479c:	01000044 	movi	r4,1
 10047a0:	39c00104 	addi	r7,r7,4
 10047a4:	0023883a 	mov	r17,zero
 10047a8:	d9c14015 	stw	r7,1280(sp)
 10047ac:	d8000405 	stb	zero,16(sp)
 10047b0:	003fc006 	br	10046b4 <___vfprintf_internal_r+0xa38>
 10047b4:	d9014f17 	ldw	r4,1340(sp)
 10047b8:	b00b883a 	mov	r5,r22
 10047bc:	d9800c04 	addi	r6,sp,48
 10047c0:	1003c240 	call	1003c24 <__sprint_r>
 10047c4:	103ee51e 	bne	r2,zero,100435c <___vfprintf_internal_r+0x6e0>
 10047c8:	dc800e17 	ldw	r18,56(sp)
 10047cc:	d8c01904 	addi	r3,sp,100
 10047d0:	d9814c17 	ldw	r6,1328(sp)
 10047d4:	3080004c 	andi	r2,r6,1
 10047d8:	1005003a 	cmpeq	r2,r2,zero
 10047dc:	103ea51e 	bne	r2,zero,1004274 <___vfprintf_internal_r+0x5f8>
 10047e0:	00800044 	movi	r2,1
 10047e4:	dc400d17 	ldw	r17,52(sp)
 10047e8:	18800115 	stw	r2,4(r3)
 10047ec:	d8814917 	ldw	r2,1316(sp)
 10047f0:	94800044 	addi	r18,r18,1
 10047f4:	8c400044 	addi	r17,r17,1
 10047f8:	18800015 	stw	r2,0(r3)
 10047fc:	008001c4 	movi	r2,7
 1004800:	dc800e15 	stw	r18,56(sp)
 1004804:	dc400d15 	stw	r17,52(sp)
 1004808:	1442240e 	bge	r2,r17,100509c <___vfprintf_internal_r+0x1420>
 100480c:	d9014f17 	ldw	r4,1340(sp)
 1004810:	b00b883a 	mov	r5,r22
 1004814:	d9800c04 	addi	r6,sp,48
 1004818:	1003c240 	call	1003c24 <__sprint_r>
 100481c:	103ecf1e 	bne	r2,zero,100435c <___vfprintf_internal_r+0x6e0>
 1004820:	dc800e17 	ldw	r18,56(sp)
 1004824:	d8c01904 	addi	r3,sp,100
 1004828:	003e9206 	br	1004274 <___vfprintf_internal_r+0x5f8>
 100482c:	d9014f17 	ldw	r4,1340(sp)
 1004830:	b00b883a 	mov	r5,r22
 1004834:	d9800c04 	addi	r6,sp,48
 1004838:	1003c240 	call	1003c24 <__sprint_r>
 100483c:	103ec026 	beq	r2,zero,1004340 <___vfprintf_internal_r+0x6c4>
 1004840:	003ec606 	br	100435c <___vfprintf_internal_r+0x6e0>
 1004844:	d9014f17 	ldw	r4,1340(sp)
 1004848:	b00b883a 	mov	r5,r22
 100484c:	d9800c04 	addi	r6,sp,48
 1004850:	d9c15115 	stw	r7,1348(sp)
 1004854:	1003c240 	call	1003c24 <__sprint_r>
 1004858:	d9c15117 	ldw	r7,1348(sp)
 100485c:	103ebf1e 	bne	r2,zero,100435c <___vfprintf_internal_r+0x6e0>
 1004860:	dc800e17 	ldw	r18,56(sp)
 1004864:	dc400d17 	ldw	r17,52(sp)
 1004868:	dd401904 	addi	r21,sp,100
 100486c:	003e7406 	br	1004240 <___vfprintf_internal_r+0x5c4>
 1004870:	d9014f17 	ldw	r4,1340(sp)
 1004874:	b00b883a 	mov	r5,r22
 1004878:	d9800c04 	addi	r6,sp,48
 100487c:	d9c15115 	stw	r7,1348(sp)
 1004880:	1003c240 	call	1003c24 <__sprint_r>
 1004884:	d9c15117 	ldw	r7,1348(sp)
 1004888:	103eb41e 	bne	r2,zero,100435c <___vfprintf_internal_r+0x6e0>
 100488c:	dd401904 	addi	r21,sp,100
 1004890:	003d6d06 	br	1003e48 <___vfprintf_internal_r+0x1cc>
 1004894:	d9014f17 	ldw	r4,1340(sp)
 1004898:	b00b883a 	mov	r5,r22
 100489c:	d9800c04 	addi	r6,sp,48
 10048a0:	d9c15115 	stw	r7,1348(sp)
 10048a4:	1003c240 	call	1003c24 <__sprint_r>
 10048a8:	d9c15117 	ldw	r7,1348(sp)
 10048ac:	103eab1e 	bne	r2,zero,100435c <___vfprintf_internal_r+0x6e0>
 10048b0:	dc800e17 	ldw	r18,56(sp)
 10048b4:	dc400d17 	ldw	r17,52(sp)
 10048b8:	dd401904 	addi	r21,sp,100
 10048bc:	003e3406 	br	1004190 <___vfprintf_internal_r+0x514>
 10048c0:	d9014f17 	ldw	r4,1340(sp)
 10048c4:	b00b883a 	mov	r5,r22
 10048c8:	d9800c04 	addi	r6,sp,48
 10048cc:	d9c15115 	stw	r7,1348(sp)
 10048d0:	1003c240 	call	1003c24 <__sprint_r>
 10048d4:	d9c15117 	ldw	r7,1348(sp)
 10048d8:	103ea01e 	bne	r2,zero,100435c <___vfprintf_internal_r+0x6e0>
 10048dc:	dc800e17 	ldw	r18,56(sp)
 10048e0:	dc400d17 	ldw	r17,52(sp)
 10048e4:	dd401904 	addi	r21,sp,100
 10048e8:	003e1c06 	br	100415c <___vfprintf_internal_r+0x4e0>
 10048ec:	d9014f17 	ldw	r4,1340(sp)
 10048f0:	b00b883a 	mov	r5,r22
 10048f4:	d9800c04 	addi	r6,sp,48
 10048f8:	d9c15115 	stw	r7,1348(sp)
 10048fc:	1003c240 	call	1003c24 <__sprint_r>
 1004900:	d9c15117 	ldw	r7,1348(sp)
 1004904:	103e951e 	bne	r2,zero,100435c <___vfprintf_internal_r+0x6e0>
 1004908:	dc800e17 	ldw	r18,56(sp)
 100490c:	dc400d17 	ldw	r17,52(sp)
 1004910:	dd401904 	addi	r21,sp,100
 1004914:	003e0406 	br	1004128 <___vfprintf_internal_r+0x4ac>
 1004918:	d9000517 	ldw	r4,20(sp)
 100491c:	0102580e 	bge	zero,r4,1005280 <___vfprintf_internal_r+0x1604>
 1004920:	d9814717 	ldw	r6,1308(sp)
 1004924:	21807a16 	blt	r4,r6,1004b10 <___vfprintf_internal_r+0xe94>
 1004928:	d8814117 	ldw	r2,1284(sp)
 100492c:	91a5883a 	add	r18,r18,r6
 1004930:	8c400044 	addi	r17,r17,1
 1004934:	a8800015 	stw	r2,0(r21)
 1004938:	008001c4 	movi	r2,7
 100493c:	a9800115 	stw	r6,4(r21)
 1004940:	dc800e15 	stw	r18,56(sp)
 1004944:	dc400d15 	stw	r17,52(sp)
 1004948:	1442fc16 	blt	r2,r17,100553c <___vfprintf_internal_r+0x18c0>
 100494c:	a8c00204 	addi	r3,r21,8
 1004950:	d9414717 	ldw	r5,1308(sp)
 1004954:	2161c83a 	sub	r16,r4,r5
 1004958:	043f9d0e 	bge	zero,r16,10047d0 <___vfprintf_internal_r+0xb54>
 100495c:	00800404 	movi	r2,16
 1004960:	1402190e 	bge	r2,r16,10051c8 <___vfprintf_internal_r+0x154c>
 1004964:	dc400d17 	ldw	r17,52(sp)
 1004968:	1027883a 	mov	r19,r2
 100496c:	07004074 	movhi	fp,257
 1004970:	e70d4e84 	addi	fp,fp,13626
 1004974:	050001c4 	movi	r20,7
 1004978:	00000306 	br	1004988 <___vfprintf_internal_r+0xd0c>
 100497c:	18c00204 	addi	r3,r3,8
 1004980:	843ffc04 	addi	r16,r16,-16
 1004984:	9c02130e 	bge	r19,r16,10051d4 <___vfprintf_internal_r+0x1558>
 1004988:	94800404 	addi	r18,r18,16
 100498c:	8c400044 	addi	r17,r17,1
 1004990:	1f000015 	stw	fp,0(r3)
 1004994:	1cc00115 	stw	r19,4(r3)
 1004998:	dc800e15 	stw	r18,56(sp)
 100499c:	dc400d15 	stw	r17,52(sp)
 10049a0:	a47ff60e 	bge	r20,r17,100497c <___vfprintf_internal_r+0xd00>
 10049a4:	d9014f17 	ldw	r4,1340(sp)
 10049a8:	b00b883a 	mov	r5,r22
 10049ac:	d9800c04 	addi	r6,sp,48
 10049b0:	1003c240 	call	1003c24 <__sprint_r>
 10049b4:	103e691e 	bne	r2,zero,100435c <___vfprintf_internal_r+0x6e0>
 10049b8:	dc800e17 	ldw	r18,56(sp)
 10049bc:	dc400d17 	ldw	r17,52(sp)
 10049c0:	d8c01904 	addi	r3,sp,100
 10049c4:	003fee06 	br	1004980 <___vfprintf_internal_r+0xd04>
 10049c8:	d8814717 	ldw	r2,1308(sp)
 10049cc:	143fffc4 	addi	r16,r2,-1
 10049d0:	043e970e 	bge	zero,r16,1004430 <___vfprintf_internal_r+0x7b4>
 10049d4:	00800404 	movi	r2,16
 10049d8:	1400180e 	bge	r2,r16,1004a3c <___vfprintf_internal_r+0xdc0>
 10049dc:	1029883a 	mov	r20,r2
 10049e0:	07004074 	movhi	fp,257
 10049e4:	e70d4e84 	addi	fp,fp,13626
 10049e8:	054001c4 	movi	r21,7
 10049ec:	00000306 	br	10049fc <___vfprintf_internal_r+0xd80>
 10049f0:	9cc00204 	addi	r19,r19,8
 10049f4:	843ffc04 	addi	r16,r16,-16
 10049f8:	a400120e 	bge	r20,r16,1004a44 <___vfprintf_internal_r+0xdc8>
 10049fc:	94800404 	addi	r18,r18,16
 1004a00:	8c400044 	addi	r17,r17,1
 1004a04:	9f000015 	stw	fp,0(r19)
 1004a08:	9d000115 	stw	r20,4(r19)
 1004a0c:	dc800e15 	stw	r18,56(sp)
 1004a10:	dc400d15 	stw	r17,52(sp)
 1004a14:	ac7ff60e 	bge	r21,r17,10049f0 <___vfprintf_internal_r+0xd74>
 1004a18:	d9014f17 	ldw	r4,1340(sp)
 1004a1c:	b00b883a 	mov	r5,r22
 1004a20:	d9800c04 	addi	r6,sp,48
 1004a24:	1003c240 	call	1003c24 <__sprint_r>
 1004a28:	103e4c1e 	bne	r2,zero,100435c <___vfprintf_internal_r+0x6e0>
 1004a2c:	dc800e17 	ldw	r18,56(sp)
 1004a30:	dc400d17 	ldw	r17,52(sp)
 1004a34:	dcc01904 	addi	r19,sp,100
 1004a38:	003fee06 	br	10049f4 <___vfprintf_internal_r+0xd78>
 1004a3c:	07004074 	movhi	fp,257
 1004a40:	e70d4e84 	addi	fp,fp,13626
 1004a44:	9425883a 	add	r18,r18,r16
 1004a48:	8c400044 	addi	r17,r17,1
 1004a4c:	008001c4 	movi	r2,7
 1004a50:	9f000015 	stw	fp,0(r19)
 1004a54:	9c000115 	stw	r16,4(r19)
 1004a58:	dc800e15 	stw	r18,56(sp)
 1004a5c:	dc400d15 	stw	r17,52(sp)
 1004a60:	147e720e 	bge	r2,r17,100442c <___vfprintf_internal_r+0x7b0>
 1004a64:	d9014f17 	ldw	r4,1340(sp)
 1004a68:	b00b883a 	mov	r5,r22
 1004a6c:	d9800c04 	addi	r6,sp,48
 1004a70:	1003c240 	call	1003c24 <__sprint_r>
 1004a74:	103e391e 	bne	r2,zero,100435c <___vfprintf_internal_r+0x6e0>
 1004a78:	dc800e17 	ldw	r18,56(sp)
 1004a7c:	dc400d17 	ldw	r17,52(sp)
 1004a80:	dcc01904 	addi	r19,sp,100
 1004a84:	003e6a06 	br	1004430 <___vfprintf_internal_r+0x7b4>
 1004a88:	d9014f17 	ldw	r4,1340(sp)
 1004a8c:	b00b883a 	mov	r5,r22
 1004a90:	d9800c04 	addi	r6,sp,48
 1004a94:	d9c15115 	stw	r7,1348(sp)
 1004a98:	1003c240 	call	1003c24 <__sprint_r>
 1004a9c:	d9c15117 	ldw	r7,1348(sp)
 1004aa0:	103e2e1e 	bne	r2,zero,100435c <___vfprintf_internal_r+0x6e0>
 1004aa4:	dc800e17 	ldw	r18,56(sp)
 1004aa8:	dc400d17 	ldw	r17,52(sp)
 1004aac:	dd401904 	addi	r21,sp,100
 1004ab0:	003dba06 	br	100419c <___vfprintf_internal_r+0x520>
 1004ab4:	d9014f17 	ldw	r4,1340(sp)
 1004ab8:	b00b883a 	mov	r5,r22
 1004abc:	d9800c04 	addi	r6,sp,48
 1004ac0:	1003c240 	call	1003c24 <__sprint_r>
 1004ac4:	103e251e 	bne	r2,zero,100435c <___vfprintf_internal_r+0x6e0>
 1004ac8:	dc800e17 	ldw	r18,56(sp)
 1004acc:	dc400d17 	ldw	r17,52(sp)
 1004ad0:	dcc01904 	addi	r19,sp,100
 1004ad4:	003e4206 	br	10043e0 <___vfprintf_internal_r+0x764>
 1004ad8:	d9014f17 	ldw	r4,1340(sp)
 1004adc:	b00b883a 	mov	r5,r22
 1004ae0:	d9800c04 	addi	r6,sp,48
 1004ae4:	1003c240 	call	1003c24 <__sprint_r>
 1004ae8:	103e1c1e 	bne	r2,zero,100435c <___vfprintf_internal_r+0x6e0>
 1004aec:	dc800e17 	ldw	r18,56(sp)
 1004af0:	dc400d17 	ldw	r17,52(sp)
 1004af4:	d8c01904 	addi	r3,sp,100
 1004af8:	003e2e06 	br	10043b4 <___vfprintf_internal_r+0x738>
 1004afc:	d9414c17 	ldw	r5,1328(sp)
 1004b00:	2880004c 	andi	r2,r5,1
 1004b04:	1005003a 	cmpeq	r2,r2,zero
 1004b08:	103dda1e 	bne	r2,zero,1004274 <___vfprintf_internal_r+0x5f8>
 1004b0c:	003e9f06 	br	100458c <___vfprintf_internal_r+0x910>
 1004b10:	d8c14117 	ldw	r3,1284(sp)
 1004b14:	9125883a 	add	r18,r18,r4
 1004b18:	8c400044 	addi	r17,r17,1
 1004b1c:	008001c4 	movi	r2,7
 1004b20:	a8c00015 	stw	r3,0(r21)
 1004b24:	a9000115 	stw	r4,4(r21)
 1004b28:	dc800e15 	stw	r18,56(sp)
 1004b2c:	dc400d15 	stw	r17,52(sp)
 1004b30:	14426c16 	blt	r2,r17,10054e4 <___vfprintf_internal_r+0x1868>
 1004b34:	a8c00204 	addi	r3,r21,8
 1004b38:	d9414917 	ldw	r5,1316(sp)
 1004b3c:	00800044 	movi	r2,1
 1004b40:	94800044 	addi	r18,r18,1
 1004b44:	8c400044 	addi	r17,r17,1
 1004b48:	18800115 	stw	r2,4(r3)
 1004b4c:	008001c4 	movi	r2,7
 1004b50:	19400015 	stw	r5,0(r3)
 1004b54:	dc800e15 	stw	r18,56(sp)
 1004b58:	dc400d15 	stw	r17,52(sp)
 1004b5c:	2021883a 	mov	r16,r4
 1004b60:	14425616 	blt	r2,r17,10054bc <___vfprintf_internal_r+0x1840>
 1004b64:	19400204 	addi	r5,r3,8
 1004b68:	d9814717 	ldw	r6,1308(sp)
 1004b6c:	8c400044 	addi	r17,r17,1
 1004b70:	dc400d15 	stw	r17,52(sp)
 1004b74:	3107c83a 	sub	r3,r6,r4
 1004b78:	d9014117 	ldw	r4,1284(sp)
 1004b7c:	90e5883a 	add	r18,r18,r3
 1004b80:	28c00115 	stw	r3,4(r5)
 1004b84:	8105883a 	add	r2,r16,r4
 1004b88:	28800015 	stw	r2,0(r5)
 1004b8c:	008001c4 	movi	r2,7
 1004b90:	dc800e15 	stw	r18,56(sp)
 1004b94:	147f1d16 	blt	r2,r17,100480c <___vfprintf_internal_r+0xb90>
 1004b98:	28c00204 	addi	r3,r5,8
 1004b9c:	003db506 	br	1004274 <___vfprintf_internal_r+0x5f8>
 1004ba0:	3c000017 	ldw	r16,0(r7)
 1004ba4:	3c400117 	ldw	r17,4(r7)
 1004ba8:	39800204 	addi	r6,r7,8
 1004bac:	01000044 	movi	r4,1
 1004bb0:	d9814015 	stw	r6,1280(sp)
 1004bb4:	d8000405 	stb	zero,16(sp)
 1004bb8:	003ebe06 	br	10046b4 <___vfprintf_internal_r+0xa38>
 1004bbc:	3c000017 	ldw	r16,0(r7)
 1004bc0:	3c400117 	ldw	r17,4(r7)
 1004bc4:	38800204 	addi	r2,r7,8
 1004bc8:	d8814015 	stw	r2,1280(sp)
 1004bcc:	003eb706 	br	10046ac <___vfprintf_internal_r+0xa30>
 1004bd0:	3c000017 	ldw	r16,0(r7)
 1004bd4:	3c400117 	ldw	r17,4(r7)
 1004bd8:	39000204 	addi	r4,r7,8
 1004bdc:	d9014015 	stw	r4,1280(sp)
 1004be0:	0009883a 	mov	r4,zero
 1004be4:	d8000405 	stb	zero,16(sp)
 1004be8:	003eb206 	br	10046b4 <___vfprintf_internal_r+0xa38>
 1004bec:	38c00017 	ldw	r3,0(r7)
 1004bf0:	39c00104 	addi	r7,r7,4
 1004bf4:	d8c14a15 	stw	r3,1320(sp)
 1004bf8:	1800d70e 	bge	r3,zero,1004f58 <___vfprintf_internal_r+0x12dc>
 1004bfc:	00c7c83a 	sub	r3,zero,r3
 1004c00:	d8c14a15 	stw	r3,1320(sp)
 1004c04:	d9014c17 	ldw	r4,1328(sp)
 1004c08:	b8c00007 	ldb	r3,0(r23)
 1004c0c:	21000114 	ori	r4,r4,4
 1004c10:	d9014c15 	stw	r4,1328(sp)
 1004c14:	003c9806 	br	1003e78 <___vfprintf_internal_r+0x1fc>
 1004c18:	d9814c17 	ldw	r6,1328(sp)
 1004c1c:	3080080c 	andi	r2,r6,32
 1004c20:	1001f626 	beq	r2,zero,10053fc <___vfprintf_internal_r+0x1780>
 1004c24:	d9014b17 	ldw	r4,1324(sp)
 1004c28:	38800017 	ldw	r2,0(r7)
 1004c2c:	39c00104 	addi	r7,r7,4
 1004c30:	d9c14015 	stw	r7,1280(sp)
 1004c34:	2007d7fa 	srai	r3,r4,31
 1004c38:	d9c14017 	ldw	r7,1280(sp)
 1004c3c:	11000015 	stw	r4,0(r2)
 1004c40:	10c00115 	stw	r3,4(r2)
 1004c44:	003c6906 	br	1003dec <___vfprintf_internal_r+0x170>
 1004c48:	b8c00007 	ldb	r3,0(r23)
 1004c4c:	00801b04 	movi	r2,108
 1004c50:	18825526 	beq	r3,r2,10055a8 <___vfprintf_internal_r+0x192c>
 1004c54:	d9414c17 	ldw	r5,1328(sp)
 1004c58:	29400414 	ori	r5,r5,16
 1004c5c:	d9414c15 	stw	r5,1328(sp)
 1004c60:	003c8506 	br	1003e78 <___vfprintf_internal_r+0x1fc>
 1004c64:	d9814c17 	ldw	r6,1328(sp)
 1004c68:	b8c00007 	ldb	r3,0(r23)
 1004c6c:	31800814 	ori	r6,r6,32
 1004c70:	d9814c15 	stw	r6,1328(sp)
 1004c74:	003c8006 	br	1003e78 <___vfprintf_internal_r+0x1fc>
 1004c78:	d8814c17 	ldw	r2,1328(sp)
 1004c7c:	3c000017 	ldw	r16,0(r7)
 1004c80:	00c01e04 	movi	r3,120
 1004c84:	10800094 	ori	r2,r2,2
 1004c88:	d8814c15 	stw	r2,1328(sp)
 1004c8c:	39c00104 	addi	r7,r7,4
 1004c90:	01404074 	movhi	r5,257
 1004c94:	294d3704 	addi	r5,r5,13532
 1004c98:	00800c04 	movi	r2,48
 1004c9c:	0023883a 	mov	r17,zero
 1004ca0:	01000084 	movi	r4,2
 1004ca4:	d9c14015 	stw	r7,1280(sp)
 1004ca8:	d8c14d15 	stw	r3,1332(sp)
 1004cac:	d9414415 	stw	r5,1296(sp)
 1004cb0:	d8800445 	stb	r2,17(sp)
 1004cb4:	d8c00485 	stb	r3,18(sp)
 1004cb8:	d8000405 	stb	zero,16(sp)
 1004cbc:	003e7d06 	br	10046b4 <___vfprintf_internal_r+0xa38>
 1004cc0:	d8814c17 	ldw	r2,1328(sp)
 1004cc4:	b8c00007 	ldb	r3,0(r23)
 1004cc8:	10801014 	ori	r2,r2,64
 1004ccc:	d8814c15 	stw	r2,1328(sp)
 1004cd0:	003c6906 	br	1003e78 <___vfprintf_internal_r+0x1fc>
 1004cd4:	d9414c17 	ldw	r5,1328(sp)
 1004cd8:	2880020c 	andi	r2,r5,8
 1004cdc:	1001e526 	beq	r2,zero,1005474 <___vfprintf_internal_r+0x17f8>
 1004ce0:	39800017 	ldw	r6,0(r7)
 1004ce4:	38800204 	addi	r2,r7,8
 1004ce8:	d8814015 	stw	r2,1280(sp)
 1004cec:	d9814215 	stw	r6,1288(sp)
 1004cf0:	39c00117 	ldw	r7,4(r7)
 1004cf4:	d9c14315 	stw	r7,1292(sp)
 1004cf8:	d9014217 	ldw	r4,1288(sp)
 1004cfc:	d9414317 	ldw	r5,1292(sp)
 1004d00:	100aea80 	call	100aea8 <__isinfd>
 1004d04:	10021d26 	beq	r2,zero,100557c <___vfprintf_internal_r+0x1900>
 1004d08:	d9014217 	ldw	r4,1288(sp)
 1004d0c:	d9414317 	ldw	r5,1292(sp)
 1004d10:	000d883a 	mov	r6,zero
 1004d14:	000f883a 	mov	r7,zero
 1004d18:	100ff400 	call	100ff40 <__ltdf2>
 1004d1c:	1002d016 	blt	r2,zero,1005860 <___vfprintf_internal_r+0x1be4>
 1004d20:	d9414d17 	ldw	r5,1332(sp)
 1004d24:	008011c4 	movi	r2,71
 1004d28:	11421016 	blt	r2,r5,100556c <___vfprintf_internal_r+0x18f0>
 1004d2c:	01804074 	movhi	r6,257
 1004d30:	318d3c04 	addi	r6,r6,13552
 1004d34:	d9814115 	stw	r6,1284(sp)
 1004d38:	d9014c17 	ldw	r4,1328(sp)
 1004d3c:	00c000c4 	movi	r3,3
 1004d40:	00bfdfc4 	movi	r2,-129
 1004d44:	2088703a 	and	r4,r4,r2
 1004d48:	180f883a 	mov	r7,r3
 1004d4c:	d8c14515 	stw	r3,1300(sp)
 1004d50:	d9014c15 	stw	r4,1328(sp)
 1004d54:	d8014615 	stw	zero,1304(sp)
 1004d58:	003e6a06 	br	1004704 <___vfprintf_internal_r+0xa88>
 1004d5c:	38800017 	ldw	r2,0(r7)
 1004d60:	00c00044 	movi	r3,1
 1004d64:	39c00104 	addi	r7,r7,4
 1004d68:	d9c14015 	stw	r7,1280(sp)
 1004d6c:	d9000f04 	addi	r4,sp,60
 1004d70:	180f883a 	mov	r7,r3
 1004d74:	d8c14515 	stw	r3,1300(sp)
 1004d78:	d9014115 	stw	r4,1284(sp)
 1004d7c:	d8800f05 	stb	r2,60(sp)
 1004d80:	d8000405 	stb	zero,16(sp)
 1004d84:	003cac06 	br	1004038 <___vfprintf_internal_r+0x3bc>
 1004d88:	01404074 	movhi	r5,257
 1004d8c:	294d4204 	addi	r5,r5,13576
 1004d90:	d9414415 	stw	r5,1296(sp)
 1004d94:	d9814c17 	ldw	r6,1328(sp)
 1004d98:	3080080c 	andi	r2,r6,32
 1004d9c:	1000ff26 	beq	r2,zero,100519c <___vfprintf_internal_r+0x1520>
 1004da0:	3c000017 	ldw	r16,0(r7)
 1004da4:	3c400117 	ldw	r17,4(r7)
 1004da8:	38800204 	addi	r2,r7,8
 1004dac:	d8814015 	stw	r2,1280(sp)
 1004db0:	d9414c17 	ldw	r5,1328(sp)
 1004db4:	2880004c 	andi	r2,r5,1
 1004db8:	1005003a 	cmpeq	r2,r2,zero
 1004dbc:	1000b91e 	bne	r2,zero,10050a4 <___vfprintf_internal_r+0x1428>
 1004dc0:	8444b03a 	or	r2,r16,r17
 1004dc4:	1000b726 	beq	r2,zero,10050a4 <___vfprintf_internal_r+0x1428>
 1004dc8:	d9814d17 	ldw	r6,1332(sp)
 1004dcc:	29400094 	ori	r5,r5,2
 1004dd0:	00800c04 	movi	r2,48
 1004dd4:	01000084 	movi	r4,2
 1004dd8:	d9414c15 	stw	r5,1328(sp)
 1004ddc:	d8800445 	stb	r2,17(sp)
 1004de0:	d9800485 	stb	r6,18(sp)
 1004de4:	d8000405 	stb	zero,16(sp)
 1004de8:	003e3206 	br	10046b4 <___vfprintf_internal_r+0xa38>
 1004dec:	01804074 	movhi	r6,257
 1004df0:	318d3704 	addi	r6,r6,13532
 1004df4:	d9814415 	stw	r6,1296(sp)
 1004df8:	003fe606 	br	1004d94 <___vfprintf_internal_r+0x1118>
 1004dfc:	00800ac4 	movi	r2,43
 1004e00:	d8800405 	stb	r2,16(sp)
 1004e04:	b8c00007 	ldb	r3,0(r23)
 1004e08:	003c1b06 	br	1003e78 <___vfprintf_internal_r+0x1fc>
 1004e0c:	d8814c17 	ldw	r2,1328(sp)
 1004e10:	b8c00007 	ldb	r3,0(r23)
 1004e14:	10800054 	ori	r2,r2,1
 1004e18:	d8814c15 	stw	r2,1328(sp)
 1004e1c:	003c1606 	br	1003e78 <___vfprintf_internal_r+0x1fc>
 1004e20:	d8800407 	ldb	r2,16(sp)
 1004e24:	10004c1e 	bne	r2,zero,1004f58 <___vfprintf_internal_r+0x12dc>
 1004e28:	00800804 	movi	r2,32
 1004e2c:	d8800405 	stb	r2,16(sp)
 1004e30:	b8c00007 	ldb	r3,0(r23)
 1004e34:	003c1006 	br	1003e78 <___vfprintf_internal_r+0x1fc>
 1004e38:	d9814c17 	ldw	r6,1328(sp)
 1004e3c:	b8c00007 	ldb	r3,0(r23)
 1004e40:	31800214 	ori	r6,r6,8
 1004e44:	d9814c15 	stw	r6,1328(sp)
 1004e48:	003c0b06 	br	1003e78 <___vfprintf_internal_r+0x1fc>
 1004e4c:	0009883a 	mov	r4,zero
 1004e50:	04000244 	movi	r16,9
 1004e54:	01400284 	movi	r5,10
 1004e58:	d9c15115 	stw	r7,1348(sp)
 1004e5c:	10010a40 	call	10010a4 <__mulsi3>
 1004e60:	b9000007 	ldb	r4,0(r23)
 1004e64:	d8c14d17 	ldw	r3,1332(sp)
 1004e68:	bdc00044 	addi	r23,r23,1
 1004e6c:	d9014d15 	stw	r4,1332(sp)
 1004e70:	d9414d17 	ldw	r5,1332(sp)
 1004e74:	1885883a 	add	r2,r3,r2
 1004e78:	113ff404 	addi	r4,r2,-48
 1004e7c:	28bff404 	addi	r2,r5,-48
 1004e80:	d9c15117 	ldw	r7,1348(sp)
 1004e84:	80bff32e 	bgeu	r16,r2,1004e54 <___vfprintf_internal_r+0x11d8>
 1004e88:	d9014a15 	stw	r4,1320(sp)
 1004e8c:	003bfc06 	br	1003e80 <___vfprintf_internal_r+0x204>
 1004e90:	d8814c17 	ldw	r2,1328(sp)
 1004e94:	b8c00007 	ldb	r3,0(r23)
 1004e98:	10802014 	ori	r2,r2,128
 1004e9c:	d8814c15 	stw	r2,1328(sp)
 1004ea0:	003bf506 	br	1003e78 <___vfprintf_internal_r+0x1fc>
 1004ea4:	b8c00007 	ldb	r3,0(r23)
 1004ea8:	00800a84 	movi	r2,42
 1004eac:	bdc00044 	addi	r23,r23,1
 1004eb0:	18831826 	beq	r3,r2,1005b14 <___vfprintf_internal_r+0x1e98>
 1004eb4:	d8c14d15 	stw	r3,1332(sp)
 1004eb8:	18bff404 	addi	r2,r3,-48
 1004ebc:	00c00244 	movi	r3,9
 1004ec0:	18827b36 	bltu	r3,r2,10058b0 <___vfprintf_internal_r+0x1c34>
 1004ec4:	1821883a 	mov	r16,r3
 1004ec8:	0009883a 	mov	r4,zero
 1004ecc:	01400284 	movi	r5,10
 1004ed0:	d9c15115 	stw	r7,1348(sp)
 1004ed4:	10010a40 	call	10010a4 <__mulsi3>
 1004ed8:	d9414d17 	ldw	r5,1332(sp)
 1004edc:	b9800007 	ldb	r6,0(r23)
 1004ee0:	d9c15117 	ldw	r7,1348(sp)
 1004ee4:	1145883a 	add	r2,r2,r5
 1004ee8:	113ff404 	addi	r4,r2,-48
 1004eec:	30bff404 	addi	r2,r6,-48
 1004ef0:	d9814d15 	stw	r6,1332(sp)
 1004ef4:	bdc00044 	addi	r23,r23,1
 1004ef8:	80bff42e 	bgeu	r16,r2,1004ecc <___vfprintf_internal_r+0x1250>
 1004efc:	2027883a 	mov	r19,r4
 1004f00:	203bdf0e 	bge	r4,zero,1003e80 <___vfprintf_internal_r+0x204>
 1004f04:	04ffffc4 	movi	r19,-1
 1004f08:	003bdd06 	br	1003e80 <___vfprintf_internal_r+0x204>
 1004f0c:	d8000405 	stb	zero,16(sp)
 1004f10:	39800017 	ldw	r6,0(r7)
 1004f14:	39c00104 	addi	r7,r7,4
 1004f18:	d9c14015 	stw	r7,1280(sp)
 1004f1c:	d9814115 	stw	r6,1284(sp)
 1004f20:	3001c926 	beq	r6,zero,1005648 <___vfprintf_internal_r+0x19cc>
 1004f24:	98000e16 	blt	r19,zero,1004f60 <___vfprintf_internal_r+0x12e4>
 1004f28:	d9014117 	ldw	r4,1284(sp)
 1004f2c:	000b883a 	mov	r5,zero
 1004f30:	980d883a 	mov	r6,r19
 1004f34:	10032500 	call	1003250 <memchr>
 1004f38:	10025926 	beq	r2,zero,10058a0 <___vfprintf_internal_r+0x1c24>
 1004f3c:	d8c14117 	ldw	r3,1284(sp)
 1004f40:	10cfc83a 	sub	r7,r2,r3
 1004f44:	99c19e16 	blt	r19,r7,10055c0 <___vfprintf_internal_r+0x1944>
 1004f48:	d9c14515 	stw	r7,1300(sp)
 1004f4c:	38000916 	blt	r7,zero,1004f74 <___vfprintf_internal_r+0x12f8>
 1004f50:	d8014615 	stw	zero,1304(sp)
 1004f54:	003deb06 	br	1004704 <___vfprintf_internal_r+0xa88>
 1004f58:	b8c00007 	ldb	r3,0(r23)
 1004f5c:	003bc606 	br	1003e78 <___vfprintf_internal_r+0x1fc>
 1004f60:	d9014117 	ldw	r4,1284(sp)
 1004f64:	1003ac00 	call	1003ac0 <strlen>
 1004f68:	d8814515 	stw	r2,1300(sp)
 1004f6c:	100f883a 	mov	r7,r2
 1004f70:	103ff70e 	bge	r2,zero,1004f50 <___vfprintf_internal_r+0x12d4>
 1004f74:	d8014515 	stw	zero,1300(sp)
 1004f78:	d8014615 	stw	zero,1304(sp)
 1004f7c:	003de106 	br	1004704 <___vfprintf_internal_r+0xa88>
 1004f80:	20c03fcc 	andi	r3,r4,255
 1004f84:	00800044 	movi	r2,1
 1004f88:	18802d26 	beq	r3,r2,1005040 <___vfprintf_internal_r+0x13c4>
 1004f8c:	18800e36 	bltu	r3,r2,1004fc8 <___vfprintf_internal_r+0x134c>
 1004f90:	00800084 	movi	r2,2
 1004f94:	1880fa26 	beq	r3,r2,1005380 <___vfprintf_internal_r+0x1704>
 1004f98:	01004074 	movhi	r4,257
 1004f9c:	210d4704 	addi	r4,r4,13596
 1004fa0:	1003ac00 	call	1003ac0 <strlen>
 1004fa4:	100f883a 	mov	r7,r2
 1004fa8:	dcc14515 	stw	r19,1300(sp)
 1004fac:	9880010e 	bge	r19,r2,1004fb4 <___vfprintf_internal_r+0x1338>
 1004fb0:	d8814515 	stw	r2,1300(sp)
 1004fb4:	00804074 	movhi	r2,257
 1004fb8:	108d4704 	addi	r2,r2,13596
 1004fbc:	dcc14615 	stw	r19,1304(sp)
 1004fc0:	d8814115 	stw	r2,1284(sp)
 1004fc4:	003dcf06 	br	1004704 <___vfprintf_internal_r+0xa88>
 1004fc8:	d9401904 	addi	r5,sp,100
 1004fcc:	dd000f04 	addi	r20,sp,60
 1004fd0:	d9414115 	stw	r5,1284(sp)
 1004fd4:	880a977a 	slli	r5,r17,29
 1004fd8:	d9814117 	ldw	r6,1284(sp)
 1004fdc:	8004d0fa 	srli	r2,r16,3
 1004fe0:	8806d0fa 	srli	r3,r17,3
 1004fe4:	810001cc 	andi	r4,r16,7
 1004fe8:	2884b03a 	or	r2,r5,r2
 1004fec:	31bfffc4 	addi	r6,r6,-1
 1004ff0:	21000c04 	addi	r4,r4,48
 1004ff4:	d9814115 	stw	r6,1284(sp)
 1004ff8:	10cab03a 	or	r5,r2,r3
 1004ffc:	31000005 	stb	r4,0(r6)
 1005000:	1021883a 	mov	r16,r2
 1005004:	1823883a 	mov	r17,r3
 1005008:	283ff21e 	bne	r5,zero,1004fd4 <___vfprintf_internal_r+0x1358>
 100500c:	d8c14c17 	ldw	r3,1328(sp)
 1005010:	1880004c 	andi	r2,r3,1
 1005014:	1005003a 	cmpeq	r2,r2,zero
 1005018:	103db31e 	bne	r2,zero,10046e8 <___vfprintf_internal_r+0xa6c>
 100501c:	20803fcc 	andi	r2,r4,255
 1005020:	1080201c 	xori	r2,r2,128
 1005024:	10bfe004 	addi	r2,r2,-128
 1005028:	00c00c04 	movi	r3,48
 100502c:	10fdae26 	beq	r2,r3,10046e8 <___vfprintf_internal_r+0xa6c>
 1005030:	31bfffc4 	addi	r6,r6,-1
 1005034:	d9814115 	stw	r6,1284(sp)
 1005038:	30c00005 	stb	r3,0(r6)
 100503c:	003daa06 	br	10046e8 <___vfprintf_internal_r+0xa6c>
 1005040:	88800068 	cmpgeui	r2,r17,1
 1005044:	10002c1e 	bne	r2,zero,10050f8 <___vfprintf_internal_r+0x147c>
 1005048:	8800021e 	bne	r17,zero,1005054 <___vfprintf_internal_r+0x13d8>
 100504c:	00800244 	movi	r2,9
 1005050:	14002936 	bltu	r2,r16,10050f8 <___vfprintf_internal_r+0x147c>
 1005054:	d90018c4 	addi	r4,sp,99
 1005058:	dd000f04 	addi	r20,sp,60
 100505c:	d9014115 	stw	r4,1284(sp)
 1005060:	d9014117 	ldw	r4,1284(sp)
 1005064:	80800c04 	addi	r2,r16,48
 1005068:	20800005 	stb	r2,0(r4)
 100506c:	003d9e06 	br	10046e8 <___vfprintf_internal_r+0xa6c>
 1005070:	dc400d17 	ldw	r17,52(sp)
 1005074:	07004074 	movhi	fp,257
 1005078:	e70d4e84 	addi	fp,fp,13626
 100507c:	9425883a 	add	r18,r18,r16
 1005080:	8c400044 	addi	r17,r17,1
 1005084:	008001c4 	movi	r2,7
 1005088:	1f000015 	stw	fp,0(r3)
 100508c:	1c000115 	stw	r16,4(r3)
 1005090:	dc800e15 	stw	r18,56(sp)
 1005094:	dc400d15 	stw	r17,52(sp)
 1005098:	147ddc16 	blt	r2,r17,100480c <___vfprintf_internal_r+0xb90>
 100509c:	18c00204 	addi	r3,r3,8
 10050a0:	003c7406 	br	1004274 <___vfprintf_internal_r+0x5f8>
 10050a4:	01000084 	movi	r4,2
 10050a8:	d8000405 	stb	zero,16(sp)
 10050ac:	003d8106 	br	10046b4 <___vfprintf_internal_r+0xa38>
 10050b0:	d9814c17 	ldw	r6,1328(sp)
 10050b4:	30c4703a 	and	r2,r6,r3
 10050b8:	1005003a 	cmpeq	r2,r2,zero
 10050bc:	103cb326 	beq	r2,zero,100438c <___vfprintf_internal_r+0x710>
 10050c0:	d9014117 	ldw	r4,1284(sp)
 10050c4:	94800044 	addi	r18,r18,1
 10050c8:	8c400044 	addi	r17,r17,1
 10050cc:	008001c4 	movi	r2,7
 10050d0:	a9000015 	stw	r4,0(r21)
 10050d4:	a8c00115 	stw	r3,4(r21)
 10050d8:	dc800e15 	stw	r18,56(sp)
 10050dc:	dc400d15 	stw	r17,52(sp)
 10050e0:	147e6016 	blt	r2,r17,1004a64 <___vfprintf_internal_r+0xde8>
 10050e4:	acc00204 	addi	r19,r21,8
 10050e8:	003cd106 	br	1004430 <___vfprintf_internal_r+0x7b4>
 10050ec:	07004074 	movhi	fp,257
 10050f0:	e70d4e84 	addi	fp,fp,13626
 10050f4:	003c4906 	br	100421c <___vfprintf_internal_r+0x5a0>
 10050f8:	dd000f04 	addi	r20,sp,60
 10050fc:	dc801904 	addi	r18,sp,100
 1005100:	8009883a 	mov	r4,r16
 1005104:	880b883a 	mov	r5,r17
 1005108:	01800284 	movi	r6,10
 100510c:	000f883a 	mov	r7,zero
 1005110:	100ea380 	call	100ea38 <__umoddi3>
 1005114:	12000c04 	addi	r8,r2,48
 1005118:	94bfffc4 	addi	r18,r18,-1
 100511c:	8009883a 	mov	r4,r16
 1005120:	880b883a 	mov	r5,r17
 1005124:	01800284 	movi	r6,10
 1005128:	000f883a 	mov	r7,zero
 100512c:	92000005 	stb	r8,0(r18)
 1005130:	100e3cc0 	call	100e3cc <__udivdi3>
 1005134:	1009883a 	mov	r4,r2
 1005138:	1021883a 	mov	r16,r2
 100513c:	18800068 	cmpgeui	r2,r3,1
 1005140:	1823883a 	mov	r17,r3
 1005144:	103fee1e 	bne	r2,zero,1005100 <___vfprintf_internal_r+0x1484>
 1005148:	1800021e 	bne	r3,zero,1005154 <___vfprintf_internal_r+0x14d8>
 100514c:	00800244 	movi	r2,9
 1005150:	113feb36 	bltu	r2,r4,1005100 <___vfprintf_internal_r+0x1484>
 1005154:	94bfffc4 	addi	r18,r18,-1
 1005158:	dc814115 	stw	r18,1284(sp)
 100515c:	003fc006 	br	1005060 <___vfprintf_internal_r+0x13e4>
 1005160:	d9014c17 	ldw	r4,1328(sp)
 1005164:	2080004c 	andi	r2,r4,1
 1005168:	10009a1e 	bne	r2,zero,10053d4 <___vfprintf_internal_r+0x1758>
 100516c:	d9401904 	addi	r5,sp,100
 1005170:	dd000f04 	addi	r20,sp,60
 1005174:	d9414115 	stw	r5,1284(sp)
 1005178:	003d5b06 	br	10046e8 <___vfprintf_internal_r+0xa6c>
 100517c:	d9014f17 	ldw	r4,1340(sp)
 1005180:	b00b883a 	mov	r5,r22
 1005184:	d9800c04 	addi	r6,sp,48
 1005188:	1003c240 	call	1003c24 <__sprint_r>
 100518c:	103c731e 	bne	r2,zero,100435c <___vfprintf_internal_r+0x6e0>
 1005190:	dc800e17 	ldw	r18,56(sp)
 1005194:	d8c01904 	addi	r3,sp,100
 1005198:	003cf906 	br	1004580 <___vfprintf_internal_r+0x904>
 100519c:	d8c14c17 	ldw	r3,1328(sp)
 10051a0:	1880040c 	andi	r2,r3,16
 10051a4:	1000711e 	bne	r2,zero,100536c <___vfprintf_internal_r+0x16f0>
 10051a8:	d9014c17 	ldw	r4,1328(sp)
 10051ac:	2080100c 	andi	r2,r4,64
 10051b0:	10006e26 	beq	r2,zero,100536c <___vfprintf_internal_r+0x16f0>
 10051b4:	3c00000b 	ldhu	r16,0(r7)
 10051b8:	0023883a 	mov	r17,zero
 10051bc:	39c00104 	addi	r7,r7,4
 10051c0:	d9c14015 	stw	r7,1280(sp)
 10051c4:	003efa06 	br	1004db0 <___vfprintf_internal_r+0x1134>
 10051c8:	dc400d17 	ldw	r17,52(sp)
 10051cc:	07004074 	movhi	fp,257
 10051d0:	e70d4e84 	addi	fp,fp,13626
 10051d4:	9425883a 	add	r18,r18,r16
 10051d8:	8c400044 	addi	r17,r17,1
 10051dc:	008001c4 	movi	r2,7
 10051e0:	1f000015 	stw	fp,0(r3)
 10051e4:	1c000115 	stw	r16,4(r3)
 10051e8:	dc800e15 	stw	r18,56(sp)
 10051ec:	dc400d15 	stw	r17,52(sp)
 10051f0:	147d7016 	blt	r2,r17,10047b4 <___vfprintf_internal_r+0xb38>
 10051f4:	18c00204 	addi	r3,r3,8
 10051f8:	003d7506 	br	10047d0 <___vfprintf_internal_r+0xb54>
 10051fc:	dc800e17 	ldw	r18,56(sp)
 1005200:	dc400d17 	ldw	r17,52(sp)
 1005204:	07004074 	movhi	fp,257
 1005208:	e70d5284 	addi	fp,fp,13642
 100520c:	003bba06 	br	10040f8 <___vfprintf_internal_r+0x47c>
 1005210:	d9014f17 	ldw	r4,1340(sp)
 1005214:	b00b883a 	mov	r5,r22
 1005218:	d9800c04 	addi	r6,sp,48
 100521c:	1003c240 	call	1003c24 <__sprint_r>
 1005220:	103c4e1e 	bne	r2,zero,100435c <___vfprintf_internal_r+0x6e0>
 1005224:	dc800e17 	ldw	r18,56(sp)
 1005228:	d8c01904 	addi	r3,sp,100
 100522c:	003ce306 	br	10045bc <___vfprintf_internal_r+0x940>
 1005230:	3c000017 	ldw	r16,0(r7)
 1005234:	0009883a 	mov	r4,zero
 1005238:	39c00104 	addi	r7,r7,4
 100523c:	0023883a 	mov	r17,zero
 1005240:	d9c14015 	stw	r7,1280(sp)
 1005244:	d8000405 	stb	zero,16(sp)
 1005248:	003d1a06 	br	10046b4 <___vfprintf_internal_r+0xa38>
 100524c:	38800017 	ldw	r2,0(r7)
 1005250:	39c00104 	addi	r7,r7,4
 1005254:	d9c14015 	stw	r7,1280(sp)
 1005258:	1023d7fa 	srai	r17,r2,31
 100525c:	1021883a 	mov	r16,r2
 1005260:	003d1206 	br	10046ac <___vfprintf_internal_r+0xa30>
 1005264:	3c000017 	ldw	r16,0(r7)
 1005268:	01000044 	movi	r4,1
 100526c:	39c00104 	addi	r7,r7,4
 1005270:	0023883a 	mov	r17,zero
 1005274:	d9c14015 	stw	r7,1280(sp)
 1005278:	d8000405 	stb	zero,16(sp)
 100527c:	003d0d06 	br	10046b4 <___vfprintf_internal_r+0xa38>
 1005280:	00804074 	movhi	r2,257
 1005284:	108d4e04 	addi	r2,r2,13624
 1005288:	94800044 	addi	r18,r18,1
 100528c:	8c400044 	addi	r17,r17,1
 1005290:	a8800015 	stw	r2,0(r21)
 1005294:	00c00044 	movi	r3,1
 1005298:	008001c4 	movi	r2,7
 100529c:	a8c00115 	stw	r3,4(r21)
 10052a0:	dc800e15 	stw	r18,56(sp)
 10052a4:	dc400d15 	stw	r17,52(sp)
 10052a8:	1440ca16 	blt	r2,r17,10055d4 <___vfprintf_internal_r+0x1958>
 10052ac:	a8c00204 	addi	r3,r21,8
 10052b0:	2000061e 	bne	r4,zero,10052cc <___vfprintf_internal_r+0x1650>
 10052b4:	d9414717 	ldw	r5,1308(sp)
 10052b8:	2800041e 	bne	r5,zero,10052cc <___vfprintf_internal_r+0x1650>
 10052bc:	d9814c17 	ldw	r6,1328(sp)
 10052c0:	3080004c 	andi	r2,r6,1
 10052c4:	1005003a 	cmpeq	r2,r2,zero
 10052c8:	103bea1e 	bne	r2,zero,1004274 <___vfprintf_internal_r+0x5f8>
 10052cc:	00800044 	movi	r2,1
 10052d0:	dc400d17 	ldw	r17,52(sp)
 10052d4:	18800115 	stw	r2,4(r3)
 10052d8:	d8814917 	ldw	r2,1316(sp)
 10052dc:	94800044 	addi	r18,r18,1
 10052e0:	8c400044 	addi	r17,r17,1
 10052e4:	18800015 	stw	r2,0(r3)
 10052e8:	008001c4 	movi	r2,7
 10052ec:	dc800e15 	stw	r18,56(sp)
 10052f0:	dc400d15 	stw	r17,52(sp)
 10052f4:	1440ca16 	blt	r2,r17,1005620 <___vfprintf_internal_r+0x19a4>
 10052f8:	18c00204 	addi	r3,r3,8
 10052fc:	0121c83a 	sub	r16,zero,r4
 1005300:	0400500e 	bge	zero,r16,1005444 <___vfprintf_internal_r+0x17c8>
 1005304:	00800404 	movi	r2,16
 1005308:	1400800e 	bge	r2,r16,100550c <___vfprintf_internal_r+0x1890>
 100530c:	1027883a 	mov	r19,r2
 1005310:	07004074 	movhi	fp,257
 1005314:	e70d4e84 	addi	fp,fp,13626
 1005318:	050001c4 	movi	r20,7
 100531c:	00000306 	br	100532c <___vfprintf_internal_r+0x16b0>
 1005320:	18c00204 	addi	r3,r3,8
 1005324:	843ffc04 	addi	r16,r16,-16
 1005328:	9c007a0e 	bge	r19,r16,1005514 <___vfprintf_internal_r+0x1898>
 100532c:	94800404 	addi	r18,r18,16
 1005330:	8c400044 	addi	r17,r17,1
 1005334:	1f000015 	stw	fp,0(r3)
 1005338:	1cc00115 	stw	r19,4(r3)
 100533c:	dc800e15 	stw	r18,56(sp)
 1005340:	dc400d15 	stw	r17,52(sp)
 1005344:	a47ff60e 	bge	r20,r17,1005320 <___vfprintf_internal_r+0x16a4>
 1005348:	d9014f17 	ldw	r4,1340(sp)
 100534c:	b00b883a 	mov	r5,r22
 1005350:	d9800c04 	addi	r6,sp,48
 1005354:	1003c240 	call	1003c24 <__sprint_r>
 1005358:	103c001e 	bne	r2,zero,100435c <___vfprintf_internal_r+0x6e0>
 100535c:	dc800e17 	ldw	r18,56(sp)
 1005360:	dc400d17 	ldw	r17,52(sp)
 1005364:	d8c01904 	addi	r3,sp,100
 1005368:	003fee06 	br	1005324 <___vfprintf_internal_r+0x16a8>
 100536c:	3c000017 	ldw	r16,0(r7)
 1005370:	0023883a 	mov	r17,zero
 1005374:	39c00104 	addi	r7,r7,4
 1005378:	d9c14015 	stw	r7,1280(sp)
 100537c:	003e8c06 	br	1004db0 <___vfprintf_internal_r+0x1134>
 1005380:	d9401904 	addi	r5,sp,100
 1005384:	dd000f04 	addi	r20,sp,60
 1005388:	d9414115 	stw	r5,1284(sp)
 100538c:	d9814417 	ldw	r6,1296(sp)
 1005390:	880a973a 	slli	r5,r17,28
 1005394:	8004d13a 	srli	r2,r16,4
 1005398:	810003cc 	andi	r4,r16,15
 100539c:	3109883a 	add	r4,r6,r4
 10053a0:	2884b03a 	or	r2,r5,r2
 10053a4:	21400003 	ldbu	r5,0(r4)
 10053a8:	d9014117 	ldw	r4,1284(sp)
 10053ac:	8806d13a 	srli	r3,r17,4
 10053b0:	1021883a 	mov	r16,r2
 10053b4:	213fffc4 	addi	r4,r4,-1
 10053b8:	d9014115 	stw	r4,1284(sp)
 10053bc:	d9814117 	ldw	r6,1284(sp)
 10053c0:	10c8b03a 	or	r4,r2,r3
 10053c4:	1823883a 	mov	r17,r3
 10053c8:	31400005 	stb	r5,0(r6)
 10053cc:	203fef1e 	bne	r4,zero,100538c <___vfprintf_internal_r+0x1710>
 10053d0:	003cc506 	br	10046e8 <___vfprintf_internal_r+0xa6c>
 10053d4:	00800c04 	movi	r2,48
 10053d8:	d98018c4 	addi	r6,sp,99
 10053dc:	dd000f04 	addi	r20,sp,60
 10053e0:	d88018c5 	stb	r2,99(sp)
 10053e4:	d9814115 	stw	r6,1284(sp)
 10053e8:	003cbf06 	br	10046e8 <___vfprintf_internal_r+0xa6c>
 10053ec:	dc400d17 	ldw	r17,52(sp)
 10053f0:	07004074 	movhi	fp,257
 10053f4:	e70d5284 	addi	fp,fp,13642
 10053f8:	003bc106 	br	1004300 <___vfprintf_internal_r+0x684>
 10053fc:	d9414c17 	ldw	r5,1328(sp)
 1005400:	2880040c 	andi	r2,r5,16
 1005404:	10007c26 	beq	r2,zero,10055f8 <___vfprintf_internal_r+0x197c>
 1005408:	38800017 	ldw	r2,0(r7)
 100540c:	39c00104 	addi	r7,r7,4
 1005410:	d9c14015 	stw	r7,1280(sp)
 1005414:	d9814b17 	ldw	r6,1324(sp)
 1005418:	d9c14017 	ldw	r7,1280(sp)
 100541c:	11800015 	stw	r6,0(r2)
 1005420:	003a7206 	br	1003dec <___vfprintf_internal_r+0x170>
 1005424:	d9014f17 	ldw	r4,1340(sp)
 1005428:	b00b883a 	mov	r5,r22
 100542c:	d9800c04 	addi	r6,sp,48
 1005430:	1003c240 	call	1003c24 <__sprint_r>
 1005434:	103bc91e 	bne	r2,zero,100435c <___vfprintf_internal_r+0x6e0>
 1005438:	dc800e17 	ldw	r18,56(sp)
 100543c:	dc400d17 	ldw	r17,52(sp)
 1005440:	d8c01904 	addi	r3,sp,100
 1005444:	d9014717 	ldw	r4,1308(sp)
 1005448:	d9414117 	ldw	r5,1284(sp)
 100544c:	8c400044 	addi	r17,r17,1
 1005450:	9125883a 	add	r18,r18,r4
 1005454:	008001c4 	movi	r2,7
 1005458:	19400015 	stw	r5,0(r3)
 100545c:	19000115 	stw	r4,4(r3)
 1005460:	dc800e15 	stw	r18,56(sp)
 1005464:	dc400d15 	stw	r17,52(sp)
 1005468:	147ce816 	blt	r2,r17,100480c <___vfprintf_internal_r+0xb90>
 100546c:	18c00204 	addi	r3,r3,8
 1005470:	003b8006 	br	1004274 <___vfprintf_internal_r+0x5f8>
 1005474:	38c00017 	ldw	r3,0(r7)
 1005478:	39000204 	addi	r4,r7,8
 100547c:	d9014015 	stw	r4,1280(sp)
 1005480:	d8c14215 	stw	r3,1288(sp)
 1005484:	39c00117 	ldw	r7,4(r7)
 1005488:	d9c14315 	stw	r7,1292(sp)
 100548c:	003e1a06 	br	1004cf8 <___vfprintf_internal_r+0x107c>
 1005490:	0005883a 	mov	r2,zero
 1005494:	1409c83a 	sub	r4,r2,r16
 1005498:	1105803a 	cmpltu	r2,r2,r4
 100549c:	044bc83a 	sub	r5,zero,r17
 10054a0:	2885c83a 	sub	r2,r5,r2
 10054a4:	2021883a 	mov	r16,r4
 10054a8:	1023883a 	mov	r17,r2
 10054ac:	01000044 	movi	r4,1
 10054b0:	00800b44 	movi	r2,45
 10054b4:	d8800405 	stb	r2,16(sp)
 10054b8:	003c7e06 	br	10046b4 <___vfprintf_internal_r+0xa38>
 10054bc:	d9014f17 	ldw	r4,1340(sp)
 10054c0:	b00b883a 	mov	r5,r22
 10054c4:	d9800c04 	addi	r6,sp,48
 10054c8:	1003c240 	call	1003c24 <__sprint_r>
 10054cc:	103ba31e 	bne	r2,zero,100435c <___vfprintf_internal_r+0x6e0>
 10054d0:	dc800e17 	ldw	r18,56(sp)
 10054d4:	dc400d17 	ldw	r17,52(sp)
 10054d8:	d9000517 	ldw	r4,20(sp)
 10054dc:	d9401904 	addi	r5,sp,100
 10054e0:	003da106 	br	1004b68 <___vfprintf_internal_r+0xeec>
 10054e4:	d9014f17 	ldw	r4,1340(sp)
 10054e8:	b00b883a 	mov	r5,r22
 10054ec:	d9800c04 	addi	r6,sp,48
 10054f0:	1003c240 	call	1003c24 <__sprint_r>
 10054f4:	103b991e 	bne	r2,zero,100435c <___vfprintf_internal_r+0x6e0>
 10054f8:	dc800e17 	ldw	r18,56(sp)
 10054fc:	dc400d17 	ldw	r17,52(sp)
 1005500:	d9000517 	ldw	r4,20(sp)
 1005504:	d8c01904 	addi	r3,sp,100
 1005508:	003d8b06 	br	1004b38 <___vfprintf_internal_r+0xebc>
 100550c:	07004074 	movhi	fp,257
 1005510:	e70d4e84 	addi	fp,fp,13626
 1005514:	9425883a 	add	r18,r18,r16
 1005518:	8c400044 	addi	r17,r17,1
 100551c:	008001c4 	movi	r2,7
 1005520:	1f000015 	stw	fp,0(r3)
 1005524:	1c000115 	stw	r16,4(r3)
 1005528:	dc800e15 	stw	r18,56(sp)
 100552c:	dc400d15 	stw	r17,52(sp)
 1005530:	147fbc16 	blt	r2,r17,1005424 <___vfprintf_internal_r+0x17a8>
 1005534:	18c00204 	addi	r3,r3,8
 1005538:	003fc206 	br	1005444 <___vfprintf_internal_r+0x17c8>
 100553c:	d9014f17 	ldw	r4,1340(sp)
 1005540:	b00b883a 	mov	r5,r22
 1005544:	d9800c04 	addi	r6,sp,48
 1005548:	1003c240 	call	1003c24 <__sprint_r>
 100554c:	103b831e 	bne	r2,zero,100435c <___vfprintf_internal_r+0x6e0>
 1005550:	dc800e17 	ldw	r18,56(sp)
 1005554:	d9000517 	ldw	r4,20(sp)
 1005558:	d8c01904 	addi	r3,sp,100
 100555c:	003cfc06 	br	1004950 <___vfprintf_internal_r+0xcd4>
 1005560:	07004074 	movhi	fp,257
 1005564:	e70d4e84 	addi	fp,fp,13626
 1005568:	003bde06 	br	10044e4 <___vfprintf_internal_r+0x868>
 100556c:	00804074 	movhi	r2,257
 1005570:	108d3d04 	addi	r2,r2,13556
 1005574:	d8814115 	stw	r2,1284(sp)
 1005578:	003def06 	br	1004d38 <___vfprintf_internal_r+0x10bc>
 100557c:	d9014217 	ldw	r4,1288(sp)
 1005580:	d9414317 	ldw	r5,1292(sp)
 1005584:	100aee80 	call	100aee8 <__isnand>
 1005588:	10003926 	beq	r2,zero,1005670 <___vfprintf_internal_r+0x19f4>
 100558c:	d9414d17 	ldw	r5,1332(sp)
 1005590:	008011c4 	movi	r2,71
 1005594:	1140ce16 	blt	r2,r5,10058d0 <___vfprintf_internal_r+0x1c54>
 1005598:	01804074 	movhi	r6,257
 100559c:	318d3e04 	addi	r6,r6,13560
 10055a0:	d9814115 	stw	r6,1284(sp)
 10055a4:	003de406 	br	1004d38 <___vfprintf_internal_r+0x10bc>
 10055a8:	d9014c17 	ldw	r4,1328(sp)
 10055ac:	bdc00044 	addi	r23,r23,1
 10055b0:	b8c00007 	ldb	r3,0(r23)
 10055b4:	21000814 	ori	r4,r4,32
 10055b8:	d9014c15 	stw	r4,1328(sp)
 10055bc:	003a2e06 	br	1003e78 <___vfprintf_internal_r+0x1fc>
 10055c0:	dcc14515 	stw	r19,1300(sp)
 10055c4:	98011016 	blt	r19,zero,1005a08 <___vfprintf_internal_r+0x1d8c>
 10055c8:	980f883a 	mov	r7,r19
 10055cc:	d8014615 	stw	zero,1304(sp)
 10055d0:	003c4c06 	br	1004704 <___vfprintf_internal_r+0xa88>
 10055d4:	d9014f17 	ldw	r4,1340(sp)
 10055d8:	b00b883a 	mov	r5,r22
 10055dc:	d9800c04 	addi	r6,sp,48
 10055e0:	1003c240 	call	1003c24 <__sprint_r>
 10055e4:	103b5d1e 	bne	r2,zero,100435c <___vfprintf_internal_r+0x6e0>
 10055e8:	dc800e17 	ldw	r18,56(sp)
 10055ec:	d9000517 	ldw	r4,20(sp)
 10055f0:	d8c01904 	addi	r3,sp,100
 10055f4:	003f2e06 	br	10052b0 <___vfprintf_internal_r+0x1634>
 10055f8:	d8c14c17 	ldw	r3,1328(sp)
 10055fc:	1880100c 	andi	r2,r3,64
 1005600:	1000a026 	beq	r2,zero,1005884 <___vfprintf_internal_r+0x1c08>
 1005604:	38800017 	ldw	r2,0(r7)
 1005608:	39c00104 	addi	r7,r7,4
 100560c:	d9c14015 	stw	r7,1280(sp)
 1005610:	d9014b17 	ldw	r4,1324(sp)
 1005614:	d9c14017 	ldw	r7,1280(sp)
 1005618:	1100000d 	sth	r4,0(r2)
 100561c:	0039f306 	br	1003dec <___vfprintf_internal_r+0x170>
 1005620:	d9014f17 	ldw	r4,1340(sp)
 1005624:	b00b883a 	mov	r5,r22
 1005628:	d9800c04 	addi	r6,sp,48
 100562c:	1003c240 	call	1003c24 <__sprint_r>
 1005630:	103b4a1e 	bne	r2,zero,100435c <___vfprintf_internal_r+0x6e0>
 1005634:	dc800e17 	ldw	r18,56(sp)
 1005638:	dc400d17 	ldw	r17,52(sp)
 100563c:	d9000517 	ldw	r4,20(sp)
 1005640:	d8c01904 	addi	r3,sp,100
 1005644:	003f2d06 	br	10052fc <___vfprintf_internal_r+0x1680>
 1005648:	00800184 	movi	r2,6
 100564c:	14c09a36 	bltu	r2,r19,10058b8 <___vfprintf_internal_r+0x1c3c>
 1005650:	dcc14515 	stw	r19,1300(sp)
 1005654:	9800010e 	bge	r19,zero,100565c <___vfprintf_internal_r+0x19e0>
 1005658:	d8014515 	stw	zero,1300(sp)
 100565c:	00804074 	movhi	r2,257
 1005660:	108d4004 	addi	r2,r2,13568
 1005664:	980f883a 	mov	r7,r19
 1005668:	d8814115 	stw	r2,1284(sp)
 100566c:	003a7206 	br	1004038 <___vfprintf_internal_r+0x3bc>
 1005670:	00bfffc4 	movi	r2,-1
 1005674:	9880e226 	beq	r19,r2,1005a00 <___vfprintf_internal_r+0x1d84>
 1005678:	d9414d17 	ldw	r5,1332(sp)
 100567c:	008019c4 	movi	r2,103
 1005680:	2880dc26 	beq	r5,r2,10059f4 <___vfprintf_internal_r+0x1d78>
 1005684:	008011c4 	movi	r2,71
 1005688:	2880da26 	beq	r5,r2,10059f4 <___vfprintf_internal_r+0x1d78>
 100568c:	d9414c17 	ldw	r5,1328(sp)
 1005690:	d9014317 	ldw	r4,1292(sp)
 1005694:	d9814217 	ldw	r6,1288(sp)
 1005698:	29404014 	ori	r5,r5,256
 100569c:	d9414c15 	stw	r5,1328(sp)
 10056a0:	2000cc16 	blt	r4,zero,10059d4 <___vfprintf_internal_r+0x1d58>
 10056a4:	3021883a 	mov	r16,r6
 10056a8:	2023883a 	mov	r17,r4
 10056ac:	0039883a 	mov	fp,zero
 10056b0:	d9414d17 	ldw	r5,1332(sp)
 10056b4:	00801984 	movi	r2,102
 10056b8:	2880b726 	beq	r5,r2,1005998 <___vfprintf_internal_r+0x1d1c>
 10056bc:	00801184 	movi	r2,70
 10056c0:	2880b526 	beq	r5,r2,1005998 <___vfprintf_internal_r+0x1d1c>
 10056c4:	00801944 	movi	r2,101
 10056c8:	2880c826 	beq	r5,r2,10059ec <___vfprintf_internal_r+0x1d70>
 10056cc:	00801144 	movi	r2,69
 10056d0:	2880c626 	beq	r5,r2,10059ec <___vfprintf_internal_r+0x1d70>
 10056d4:	9829883a 	mov	r20,r19
 10056d8:	d9014f17 	ldw	r4,1340(sp)
 10056dc:	d8800504 	addi	r2,sp,20
 10056e0:	880d883a 	mov	r6,r17
 10056e4:	d8800115 	stw	r2,4(sp)
 10056e8:	d8c00604 	addi	r3,sp,24
 10056ec:	d8800704 	addi	r2,sp,28
 10056f0:	800b883a 	mov	r5,r16
 10056f4:	01c00084 	movi	r7,2
 10056f8:	d8c00215 	stw	r3,8(sp)
 10056fc:	d8800315 	stw	r2,12(sp)
 1005700:	dd000015 	stw	r20,0(sp)
 1005704:	10079080 	call	1007908 <_dtoa_r>
 1005708:	d9814d17 	ldw	r6,1332(sp)
 100570c:	d8814115 	stw	r2,1284(sp)
 1005710:	008019c4 	movi	r2,103
 1005714:	30809526 	beq	r6,r2,100596c <___vfprintf_internal_r+0x1cf0>
 1005718:	d8c14d17 	ldw	r3,1332(sp)
 100571c:	008011c4 	movi	r2,71
 1005720:	18809226 	beq	r3,r2,100596c <___vfprintf_internal_r+0x1cf0>
 1005724:	d9414117 	ldw	r5,1284(sp)
 1005728:	d9814d17 	ldw	r6,1332(sp)
 100572c:	00801984 	movi	r2,102
 1005730:	2d25883a 	add	r18,r5,r20
 1005734:	30808626 	beq	r6,r2,1005950 <___vfprintf_internal_r+0x1cd4>
 1005738:	00801184 	movi	r2,70
 100573c:	30808426 	beq	r6,r2,1005950 <___vfprintf_internal_r+0x1cd4>
 1005740:	000d883a 	mov	r6,zero
 1005744:	000f883a 	mov	r7,zero
 1005748:	880b883a 	mov	r5,r17
 100574c:	8009883a 	mov	r4,r16
 1005750:	100fd200 	call	100fd20 <__eqdf2>
 1005754:	1000751e 	bne	r2,zero,100592c <___vfprintf_internal_r+0x1cb0>
 1005758:	9005883a 	mov	r2,r18
 100575c:	dc800715 	stw	r18,28(sp)
 1005760:	d9014117 	ldw	r4,1284(sp)
 1005764:	d9414d17 	ldw	r5,1332(sp)
 1005768:	00c019c4 	movi	r3,103
 100576c:	1125c83a 	sub	r18,r2,r4
 1005770:	28c06826 	beq	r5,r3,1005914 <___vfprintf_internal_r+0x1c98>
 1005774:	008011c4 	movi	r2,71
 1005778:	28806626 	beq	r5,r2,1005914 <___vfprintf_internal_r+0x1c98>
 100577c:	d9000517 	ldw	r4,20(sp)
 1005780:	d8c14d17 	ldw	r3,1332(sp)
 1005784:	00801944 	movi	r2,101
 1005788:	10c05516 	blt	r2,r3,10058e0 <___vfprintf_internal_r+0x1c64>
 100578c:	213fffc4 	addi	r4,r4,-1
 1005790:	d9000515 	stw	r4,20(sp)
 1005794:	d8c00805 	stb	r3,32(sp)
 1005798:	2021883a 	mov	r16,r4
 100579c:	2000c116 	blt	r4,zero,1005aa4 <___vfprintf_internal_r+0x1e28>
 10057a0:	00800ac4 	movi	r2,43
 10057a4:	d8800845 	stb	r2,33(sp)
 10057a8:	00800244 	movi	r2,9
 10057ac:	1400af0e 	bge	r2,r16,1005a6c <___vfprintf_internal_r+0x1df0>
 10057b0:	1027883a 	mov	r19,r2
 10057b4:	dc400b84 	addi	r17,sp,46
 10057b8:	8009883a 	mov	r4,r16
 10057bc:	01400284 	movi	r5,10
 10057c0:	10010340 	call	1001034 <__modsi3>
 10057c4:	10800c04 	addi	r2,r2,48
 10057c8:	8c7fffc4 	addi	r17,r17,-1
 10057cc:	8009883a 	mov	r4,r16
 10057d0:	01400284 	movi	r5,10
 10057d4:	88800005 	stb	r2,0(r17)
 10057d8:	1000fd40 	call	1000fd4 <__divsi3>
 10057dc:	1021883a 	mov	r16,r2
 10057e0:	98bff516 	blt	r19,r2,10057b8 <___vfprintf_internal_r+0x1b3c>
 10057e4:	10c00c04 	addi	r3,r2,48
 10057e8:	d88009c4 	addi	r2,sp,39
 10057ec:	108001c4 	addi	r2,r2,7
 10057f0:	897fffc4 	addi	r5,r17,-1
 10057f4:	88ffffc5 	stb	r3,-1(r17)
 10057f8:	2880a72e 	bgeu	r5,r2,1005a98 <___vfprintf_internal_r+0x1e1c>
 10057fc:	1009883a 	mov	r4,r2
 1005800:	d9800804 	addi	r6,sp,32
 1005804:	d8c00884 	addi	r3,sp,34
 1005808:	28800003 	ldbu	r2,0(r5)
 100580c:	29400044 	addi	r5,r5,1
 1005810:	18800005 	stb	r2,0(r3)
 1005814:	18c00044 	addi	r3,r3,1
 1005818:	293ffb36 	bltu	r5,r4,1005808 <___vfprintf_internal_r+0x1b8c>
 100581c:	1987c83a 	sub	r3,r3,r6
 1005820:	00800044 	movi	r2,1
 1005824:	d8c14815 	stw	r3,1312(sp)
 1005828:	90cf883a 	add	r7,r18,r3
 100582c:	1480960e 	bge	r2,r18,1005a88 <___vfprintf_internal_r+0x1e0c>
 1005830:	39c00044 	addi	r7,r7,1
 1005834:	d9c14515 	stw	r7,1300(sp)
 1005838:	38003416 	blt	r7,zero,100590c <___vfprintf_internal_r+0x1c90>
 100583c:	e0803fcc 	andi	r2,fp,255
 1005840:	1080201c 	xori	r2,r2,128
 1005844:	10bfe004 	addi	r2,r2,-128
 1005848:	10004e26 	beq	r2,zero,1005984 <___vfprintf_internal_r+0x1d08>
 100584c:	00800b44 	movi	r2,45
 1005850:	dc814715 	stw	r18,1308(sp)
 1005854:	d8014615 	stw	zero,1304(sp)
 1005858:	d8800405 	stb	r2,16(sp)
 100585c:	003bab06 	br	100470c <___vfprintf_internal_r+0xa90>
 1005860:	00800b44 	movi	r2,45
 1005864:	d8800405 	stb	r2,16(sp)
 1005868:	003d2d06 	br	1004d20 <___vfprintf_internal_r+0x10a4>
 100586c:	d9014f17 	ldw	r4,1340(sp)
 1005870:	b00b883a 	mov	r5,r22
 1005874:	d9800c04 	addi	r6,sp,48
 1005878:	1003c240 	call	1003c24 <__sprint_r>
 100587c:	103ab71e 	bne	r2,zero,100435c <___vfprintf_internal_r+0x6e0>
 1005880:	003ab506 	br	1004358 <___vfprintf_internal_r+0x6dc>
 1005884:	38800017 	ldw	r2,0(r7)
 1005888:	39c00104 	addi	r7,r7,4
 100588c:	d9c14015 	stw	r7,1280(sp)
 1005890:	d9414b17 	ldw	r5,1324(sp)
 1005894:	d9c14017 	ldw	r7,1280(sp)
 1005898:	11400015 	stw	r5,0(r2)
 100589c:	00395306 	br	1003dec <___vfprintf_internal_r+0x170>
 10058a0:	980f883a 	mov	r7,r19
 10058a4:	dcc14515 	stw	r19,1300(sp)
 10058a8:	d8014615 	stw	zero,1304(sp)
 10058ac:	003b9506 	br	1004704 <___vfprintf_internal_r+0xa88>
 10058b0:	0027883a 	mov	r19,zero
 10058b4:	00397206 	br	1003e80 <___vfprintf_internal_r+0x204>
 10058b8:	00c04074 	movhi	r3,257
 10058bc:	18cd4004 	addi	r3,r3,13568
 10058c0:	100f883a 	mov	r7,r2
 10058c4:	d8814515 	stw	r2,1300(sp)
 10058c8:	d8c14115 	stw	r3,1284(sp)
 10058cc:	0039da06 	br	1004038 <___vfprintf_internal_r+0x3bc>
 10058d0:	00804074 	movhi	r2,257
 10058d4:	108d3f04 	addi	r2,r2,13564
 10058d8:	d8814115 	stw	r2,1284(sp)
 10058dc:	003d1606 	br	1004d38 <___vfprintf_internal_r+0x10bc>
 10058e0:	d9414d17 	ldw	r5,1332(sp)
 10058e4:	00801984 	movi	r2,102
 10058e8:	28804926 	beq	r5,r2,1005a10 <___vfprintf_internal_r+0x1d94>
 10058ec:	200f883a 	mov	r7,r4
 10058f0:	24805716 	blt	r4,r18,1005a50 <___vfprintf_internal_r+0x1dd4>
 10058f4:	d9414c17 	ldw	r5,1328(sp)
 10058f8:	2880004c 	andi	r2,r5,1
 10058fc:	10000126 	beq	r2,zero,1005904 <___vfprintf_internal_r+0x1c88>
 1005900:	21c00044 	addi	r7,r4,1
 1005904:	d9c14515 	stw	r7,1300(sp)
 1005908:	383fcc0e 	bge	r7,zero,100583c <___vfprintf_internal_r+0x1bc0>
 100590c:	d8014515 	stw	zero,1300(sp)
 1005910:	003fca06 	br	100583c <___vfprintf_internal_r+0x1bc0>
 1005914:	d9000517 	ldw	r4,20(sp)
 1005918:	00bfff04 	movi	r2,-4
 100591c:	1100480e 	bge	r2,r4,1005a40 <___vfprintf_internal_r+0x1dc4>
 1005920:	99004716 	blt	r19,r4,1005a40 <___vfprintf_internal_r+0x1dc4>
 1005924:	d8c14d15 	stw	r3,1332(sp)
 1005928:	003ff006 	br	10058ec <___vfprintf_internal_r+0x1c70>
 100592c:	d8800717 	ldw	r2,28(sp)
 1005930:	14bf8b2e 	bgeu	r2,r18,1005760 <___vfprintf_internal_r+0x1ae4>
 1005934:	9007883a 	mov	r3,r18
 1005938:	01000c04 	movi	r4,48
 100593c:	11000005 	stb	r4,0(r2)
 1005940:	10800044 	addi	r2,r2,1
 1005944:	d8800715 	stw	r2,28(sp)
 1005948:	18bffc1e 	bne	r3,r2,100593c <___vfprintf_internal_r+0x1cc0>
 100594c:	003f8406 	br	1005760 <___vfprintf_internal_r+0x1ae4>
 1005950:	d8814117 	ldw	r2,1284(sp)
 1005954:	10c00007 	ldb	r3,0(r2)
 1005958:	00800c04 	movi	r2,48
 100595c:	18805b26 	beq	r3,r2,1005acc <___vfprintf_internal_r+0x1e50>
 1005960:	d9000517 	ldw	r4,20(sp)
 1005964:	9125883a 	add	r18,r18,r4
 1005968:	003f7506 	br	1005740 <___vfprintf_internal_r+0x1ac4>
 100596c:	d9014c17 	ldw	r4,1328(sp)
 1005970:	2080004c 	andi	r2,r4,1
 1005974:	1005003a 	cmpeq	r2,r2,zero
 1005978:	103f6a26 	beq	r2,zero,1005724 <___vfprintf_internal_r+0x1aa8>
 100597c:	d8800717 	ldw	r2,28(sp)
 1005980:	003f7706 	br	1005760 <___vfprintf_internal_r+0x1ae4>
 1005984:	d9c14515 	stw	r7,1300(sp)
 1005988:	38004d16 	blt	r7,zero,1005ac0 <___vfprintf_internal_r+0x1e44>
 100598c:	dc814715 	stw	r18,1308(sp)
 1005990:	d8014615 	stw	zero,1304(sp)
 1005994:	003b5b06 	br	1004704 <___vfprintf_internal_r+0xa88>
 1005998:	d9014f17 	ldw	r4,1340(sp)
 100599c:	d8800504 	addi	r2,sp,20
 10059a0:	d8800115 	stw	r2,4(sp)
 10059a4:	d8c00604 	addi	r3,sp,24
 10059a8:	d8800704 	addi	r2,sp,28
 10059ac:	800b883a 	mov	r5,r16
 10059b0:	880d883a 	mov	r6,r17
 10059b4:	01c000c4 	movi	r7,3
 10059b8:	d8c00215 	stw	r3,8(sp)
 10059bc:	d8800315 	stw	r2,12(sp)
 10059c0:	dcc00015 	stw	r19,0(sp)
 10059c4:	9829883a 	mov	r20,r19
 10059c8:	10079080 	call	1007908 <_dtoa_r>
 10059cc:	d8814115 	stw	r2,1284(sp)
 10059d0:	003f5106 	br	1005718 <___vfprintf_internal_r+0x1a9c>
 10059d4:	d8c14217 	ldw	r3,1288(sp)
 10059d8:	d9014317 	ldw	r4,1292(sp)
 10059dc:	07000b44 	movi	fp,45
 10059e0:	1821883a 	mov	r16,r3
 10059e4:	2460003c 	xorhi	r17,r4,32768
 10059e8:	003f3106 	br	10056b0 <___vfprintf_internal_r+0x1a34>
 10059ec:	9d000044 	addi	r20,r19,1
 10059f0:	003f3906 	br	10056d8 <___vfprintf_internal_r+0x1a5c>
 10059f4:	983f251e 	bne	r19,zero,100568c <___vfprintf_internal_r+0x1a10>
 10059f8:	04c00044 	movi	r19,1
 10059fc:	003f2306 	br	100568c <___vfprintf_internal_r+0x1a10>
 1005a00:	04c00184 	movi	r19,6
 1005a04:	003f2106 	br	100568c <___vfprintf_internal_r+0x1a10>
 1005a08:	d8014515 	stw	zero,1300(sp)
 1005a0c:	003eee06 	br	10055c8 <___vfprintf_internal_r+0x194c>
 1005a10:	200f883a 	mov	r7,r4
 1005a14:	0100370e 	bge	zero,r4,1005af4 <___vfprintf_internal_r+0x1e78>
 1005a18:	9800031e 	bne	r19,zero,1005a28 <___vfprintf_internal_r+0x1dac>
 1005a1c:	d9814c17 	ldw	r6,1328(sp)
 1005a20:	3080004c 	andi	r2,r6,1
 1005a24:	103fb726 	beq	r2,zero,1005904 <___vfprintf_internal_r+0x1c88>
 1005a28:	20800044 	addi	r2,r4,1
 1005a2c:	98a7883a 	add	r19,r19,r2
 1005a30:	dcc14515 	stw	r19,1300(sp)
 1005a34:	980f883a 	mov	r7,r19
 1005a38:	983f800e 	bge	r19,zero,100583c <___vfprintf_internal_r+0x1bc0>
 1005a3c:	003fb306 	br	100590c <___vfprintf_internal_r+0x1c90>
 1005a40:	d9814d17 	ldw	r6,1332(sp)
 1005a44:	31bfff84 	addi	r6,r6,-2
 1005a48:	d9814d15 	stw	r6,1332(sp)
 1005a4c:	003f4c06 	br	1005780 <___vfprintf_internal_r+0x1b04>
 1005a50:	0100180e 	bge	zero,r4,1005ab4 <___vfprintf_internal_r+0x1e38>
 1005a54:	00800044 	movi	r2,1
 1005a58:	1485883a 	add	r2,r2,r18
 1005a5c:	d8814515 	stw	r2,1300(sp)
 1005a60:	100f883a 	mov	r7,r2
 1005a64:	103f750e 	bge	r2,zero,100583c <___vfprintf_internal_r+0x1bc0>
 1005a68:	003fa806 	br	100590c <___vfprintf_internal_r+0x1c90>
 1005a6c:	80c00c04 	addi	r3,r16,48
 1005a70:	00800c04 	movi	r2,48
 1005a74:	d8c008c5 	stb	r3,35(sp)
 1005a78:	d9800804 	addi	r6,sp,32
 1005a7c:	d8c00904 	addi	r3,sp,36
 1005a80:	d8800885 	stb	r2,34(sp)
 1005a84:	003f6506 	br	100581c <___vfprintf_internal_r+0x1ba0>
 1005a88:	d9014c17 	ldw	r4,1328(sp)
 1005a8c:	2084703a 	and	r2,r4,r2
 1005a90:	103f9c26 	beq	r2,zero,1005904 <___vfprintf_internal_r+0x1c88>
 1005a94:	003f6606 	br	1005830 <___vfprintf_internal_r+0x1bb4>
 1005a98:	d9800804 	addi	r6,sp,32
 1005a9c:	d8c00884 	addi	r3,sp,34
 1005aa0:	003f5e06 	br	100581c <___vfprintf_internal_r+0x1ba0>
 1005aa4:	00800b44 	movi	r2,45
 1005aa8:	0121c83a 	sub	r16,zero,r4
 1005aac:	d8800845 	stb	r2,33(sp)
 1005ab0:	003f3d06 	br	10057a8 <___vfprintf_internal_r+0x1b2c>
 1005ab4:	00800084 	movi	r2,2
 1005ab8:	1105c83a 	sub	r2,r2,r4
 1005abc:	003fe606 	br	1005a58 <___vfprintf_internal_r+0x1ddc>
 1005ac0:	d8014515 	stw	zero,1300(sp)
 1005ac4:	dc814715 	stw	r18,1308(sp)
 1005ac8:	003fb106 	br	1005990 <___vfprintf_internal_r+0x1d14>
 1005acc:	000d883a 	mov	r6,zero
 1005ad0:	000f883a 	mov	r7,zero
 1005ad4:	8009883a 	mov	r4,r16
 1005ad8:	880b883a 	mov	r5,r17
 1005adc:	100fda80 	call	100fda8 <__nedf2>
 1005ae0:	103f9f26 	beq	r2,zero,1005960 <___vfprintf_internal_r+0x1ce4>
 1005ae4:	00800044 	movi	r2,1
 1005ae8:	1509c83a 	sub	r4,r2,r20
 1005aec:	d9000515 	stw	r4,20(sp)
 1005af0:	003f9b06 	br	1005960 <___vfprintf_internal_r+0x1ce4>
 1005af4:	98000d1e 	bne	r19,zero,1005b2c <___vfprintf_internal_r+0x1eb0>
 1005af8:	d8c14c17 	ldw	r3,1328(sp)
 1005afc:	1880004c 	andi	r2,r3,1
 1005b00:	10000a1e 	bne	r2,zero,1005b2c <___vfprintf_internal_r+0x1eb0>
 1005b04:	01000044 	movi	r4,1
 1005b08:	200f883a 	mov	r7,r4
 1005b0c:	d9014515 	stw	r4,1300(sp)
 1005b10:	003f4a06 	br	100583c <___vfprintf_internal_r+0x1bc0>
 1005b14:	3cc00017 	ldw	r19,0(r7)
 1005b18:	39c00104 	addi	r7,r7,4
 1005b1c:	983d0e0e 	bge	r19,zero,1004f58 <___vfprintf_internal_r+0x12dc>
 1005b20:	b8c00007 	ldb	r3,0(r23)
 1005b24:	04ffffc4 	movi	r19,-1
 1005b28:	0038d306 	br	1003e78 <___vfprintf_internal_r+0x1fc>
 1005b2c:	9cc00084 	addi	r19,r19,2
 1005b30:	dcc14515 	stw	r19,1300(sp)
 1005b34:	980f883a 	mov	r7,r19
 1005b38:	983f400e 	bge	r19,zero,100583c <___vfprintf_internal_r+0x1bc0>
 1005b3c:	003f7306 	br	100590c <___vfprintf_internal_r+0x1c90>

01005b40 <__vfprintf_internal>:
 1005b40:	00804074 	movhi	r2,257
 1005b44:	10915504 	addi	r2,r2,17748
 1005b48:	2013883a 	mov	r9,r4
 1005b4c:	11000017 	ldw	r4,0(r2)
 1005b50:	2805883a 	mov	r2,r5
 1005b54:	300f883a 	mov	r7,r6
 1005b58:	480b883a 	mov	r5,r9
 1005b5c:	100d883a 	mov	r6,r2
 1005b60:	1003c7c1 	jmpi	1003c7c <___vfprintf_internal_r>

01005b64 <__svfscanf_r>:
 1005b64:	deff4e04 	addi	sp,sp,-712
 1005b68:	dd80ae15 	stw	r22,696(sp)
 1005b6c:	dd00ac15 	stw	r20,688(sp)
 1005b70:	dc40a915 	stw	r17,676(sp)
 1005b74:	dc00a815 	stw	r16,672(sp)
 1005b78:	dfc0b115 	stw	ra,708(sp)
 1005b7c:	df00b015 	stw	fp,704(sp)
 1005b80:	ddc0af15 	stw	r23,700(sp)
 1005b84:	dd40ad15 	stw	r21,692(sp)
 1005b88:	dcc0ab15 	stw	r19,684(sp)
 1005b8c:	dc80aa15 	stw	r18,680(sp)
 1005b90:	202d883a 	mov	r22,r4
 1005b94:	2821883a 	mov	r16,r5
 1005b98:	d9c0a415 	stw	r7,656(sp)
 1005b9c:	3029883a 	mov	r20,r6
 1005ba0:	d800a215 	stw	zero,648(sp)
 1005ba4:	0023883a 	mov	r17,zero
 1005ba8:	d800a115 	stw	zero,644(sp)
 1005bac:	d800a015 	stw	zero,640(sp)
 1005bb0:	a1000007 	ldb	r4,0(r20)
 1005bb4:	d9000115 	stw	r4,4(sp)
 1005bb8:	20001f26 	beq	r4,zero,1005c38 <__svfscanf_r+0xd4>
 1005bbc:	04c04074 	movhi	r19,257
 1005bc0:	9cd15904 	addi	r19,r19,17764
 1005bc4:	9c800017 	ldw	r18,0(r19)
 1005bc8:	a5000044 	addi	r20,r20,1
 1005bcc:	9107883a 	add	r3,r18,r4
 1005bd0:	18800003 	ldbu	r2,0(r3)
 1005bd4:	1080020c 	andi	r2,r2,8
 1005bd8:	10002426 	beq	r2,zero,1005c6c <__svfscanf_r+0x108>
 1005bdc:	80c00117 	ldw	r3,4(r16)
 1005be0:	00c00e0e 	bge	zero,r3,1005c1c <__svfscanf_r+0xb8>
 1005be4:	81400017 	ldw	r5,0(r16)
 1005be8:	98800017 	ldw	r2,0(r19)
 1005bec:	28c00003 	ldbu	r3,0(r5)
 1005bf0:	1887883a 	add	r3,r3,r2
 1005bf4:	19000003 	ldbu	r4,0(r3)
 1005bf8:	2100020c 	andi	r4,r4,8
 1005bfc:	203fec26 	beq	r4,zero,1005bb0 <__svfscanf_r+0x4c>
 1005c00:	80c00117 	ldw	r3,4(r16)
 1005c04:	29800044 	addi	r6,r5,1
 1005c08:	8c400044 	addi	r17,r17,1
 1005c0c:	18ffffc4 	addi	r3,r3,-1
 1005c10:	81800015 	stw	r6,0(r16)
 1005c14:	80c00115 	stw	r3,4(r16)
 1005c18:	00fff216 	blt	zero,r3,1005be4 <__svfscanf_r+0x80>
 1005c1c:	b009883a 	mov	r4,r22
 1005c20:	800b883a 	mov	r5,r16
 1005c24:	10036100 	call	1003610 <__srefill_r>
 1005c28:	103fee26 	beq	r2,zero,1005be4 <__svfscanf_r+0x80>
 1005c2c:	a1000007 	ldb	r4,0(r20)
 1005c30:	d9000115 	stw	r4,4(sp)
 1005c34:	203fe11e 	bne	r4,zero,1005bbc <__svfscanf_r+0x58>
 1005c38:	d880a217 	ldw	r2,648(sp)
 1005c3c:	dfc0b117 	ldw	ra,708(sp)
 1005c40:	df00b017 	ldw	fp,704(sp)
 1005c44:	ddc0af17 	ldw	r23,700(sp)
 1005c48:	dd80ae17 	ldw	r22,696(sp)
 1005c4c:	dd40ad17 	ldw	r21,692(sp)
 1005c50:	dd00ac17 	ldw	r20,688(sp)
 1005c54:	dcc0ab17 	ldw	r19,684(sp)
 1005c58:	dc80aa17 	ldw	r18,680(sp)
 1005c5c:	dc40a917 	ldw	r17,676(sp)
 1005c60:	dc00a817 	ldw	r16,672(sp)
 1005c64:	dec0b204 	addi	sp,sp,712
 1005c68:	f800283a 	ret
 1005c6c:	00800944 	movi	r2,37
 1005c70:	20801626 	beq	r4,r2,1005ccc <__svfscanf_r+0x168>
 1005c74:	80800117 	ldw	r2,4(r16)
 1005c78:	00800b0e 	bge	zero,r2,1005ca8 <__svfscanf_r+0x144>
 1005c7c:	81000017 	ldw	r4,0(r16)
 1005c80:	a0ffffc7 	ldb	r3,-1(r20)
 1005c84:	20800003 	ldbu	r2,0(r4)
 1005c88:	10ffeb1e 	bne	r2,r3,1005c38 <__svfscanf_r+0xd4>
 1005c8c:	80c00117 	ldw	r3,4(r16)
 1005c90:	21800044 	addi	r6,r4,1
 1005c94:	8c400044 	addi	r17,r17,1
 1005c98:	18ffffc4 	addi	r3,r3,-1
 1005c9c:	80c00115 	stw	r3,4(r16)
 1005ca0:	81800015 	stw	r6,0(r16)
 1005ca4:	003fc206 	br	1005bb0 <__svfscanf_r+0x4c>
 1005ca8:	b009883a 	mov	r4,r22
 1005cac:	800b883a 	mov	r5,r16
 1005cb0:	10036100 	call	1003610 <__srefill_r>
 1005cb4:	103ff126 	beq	r2,zero,1005c7c <__svfscanf_r+0x118>
 1005cb8:	d900a217 	ldw	r4,648(sp)
 1005cbc:	2004981e 	bne	r4,zero,1006f20 <__svfscanf_r+0x13bc>
 1005cc0:	00bfffc4 	movi	r2,-1
 1005cc4:	d880a215 	stw	r2,648(sp)
 1005cc8:	003fdb06 	br	1005c38 <__svfscanf_r+0xd4>
 1005ccc:	d800a315 	stw	zero,652(sp)
 1005cd0:	002b883a 	mov	r21,zero
 1005cd4:	a0c00003 	ldbu	r3,0(r20)
 1005cd8:	00801e04 	movi	r2,120
 1005cdc:	a5000044 	addi	r20,r20,1
 1005ce0:	1dc03fcc 	andi	r23,r3,255
 1005ce4:	bdc0201c 	xori	r23,r23,128
 1005ce8:	bdffe004 	addi	r23,r23,-128
 1005cec:	10c08036 	bltu	r2,r3,1005ef0 <__svfscanf_r+0x38c>
 1005cf0:	18c5883a 	add	r2,r3,r3
 1005cf4:	1085883a 	add	r2,r2,r2
 1005cf8:	00c04034 	movhi	r3,256
 1005cfc:	18d74304 	addi	r3,r3,23820
 1005d00:	10c5883a 	add	r2,r2,r3
 1005d04:	11000017 	ldw	r4,0(r2)
 1005d08:	2000683a 	jmp	r4
 1005d0c:	01005cc0 	call	1005cc <__alt_mem_sram+0x5cc>
 1005d10:	01005ef0 	cmpltui	r4,zero,379
 1005d14:	01005ef0 	cmpltui	r4,zero,379
 1005d18:	01005ef0 	cmpltui	r4,zero,379
 1005d1c:	01005ef0 	cmpltui	r4,zero,379
 1005d20:	01005ef0 	cmpltui	r4,zero,379
 1005d24:	01005ef0 	cmpltui	r4,zero,379
 1005d28:	01005ef0 	cmpltui	r4,zero,379
 1005d2c:	01005ef0 	cmpltui	r4,zero,379
 1005d30:	01005ef0 	cmpltui	r4,zero,379
 1005d34:	01005ef0 	cmpltui	r4,zero,379
 1005d38:	01005ef0 	cmpltui	r4,zero,379
 1005d3c:	01005ef0 	cmpltui	r4,zero,379
 1005d40:	01005ef0 	cmpltui	r4,zero,379
 1005d44:	01005ef0 	cmpltui	r4,zero,379
 1005d48:	01005ef0 	cmpltui	r4,zero,379
 1005d4c:	01005ef0 	cmpltui	r4,zero,379
 1005d50:	01005ef0 	cmpltui	r4,zero,379
 1005d54:	01005ef0 	cmpltui	r4,zero,379
 1005d58:	01005ef0 	cmpltui	r4,zero,379
 1005d5c:	01005ef0 	cmpltui	r4,zero,379
 1005d60:	01005ef0 	cmpltui	r4,zero,379
 1005d64:	01005ef0 	cmpltui	r4,zero,379
 1005d68:	01005ef0 	cmpltui	r4,zero,379
 1005d6c:	01005ef0 	cmpltui	r4,zero,379
 1005d70:	01005ef0 	cmpltui	r4,zero,379
 1005d74:	01005ef0 	cmpltui	r4,zero,379
 1005d78:	01005ef0 	cmpltui	r4,zero,379
 1005d7c:	01005ef0 	cmpltui	r4,zero,379
 1005d80:	01005ef0 	cmpltui	r4,zero,379
 1005d84:	01005ef0 	cmpltui	r4,zero,379
 1005d88:	01005ef0 	cmpltui	r4,zero,379
 1005d8c:	01005ef0 	cmpltui	r4,zero,379
 1005d90:	01005ef0 	cmpltui	r4,zero,379
 1005d94:	01005ef0 	cmpltui	r4,zero,379
 1005d98:	01005ef0 	cmpltui	r4,zero,379
 1005d9c:	01005ef0 	cmpltui	r4,zero,379
 1005da0:	01005c74 	movhi	r4,369
 1005da4:	01005ef0 	cmpltui	r4,zero,379
 1005da8:	01005ef0 	cmpltui	r4,zero,379
 1005dac:	01005ef0 	cmpltui	r4,zero,379
 1005db0:	01005ef0 	cmpltui	r4,zero,379
 1005db4:	01006d90 	cmplti	r4,zero,438
 1005db8:	01005ef0 	cmpltui	r4,zero,379
 1005dbc:	01005ef0 	cmpltui	r4,zero,379
 1005dc0:	01005ef0 	cmpltui	r4,zero,379
 1005dc4:	01005ef0 	cmpltui	r4,zero,379
 1005dc8:	01005ef0 	cmpltui	r4,zero,379
 1005dcc:	01006d74 	movhi	r4,437
 1005dd0:	01006d74 	movhi	r4,437
 1005dd4:	01006d74 	movhi	r4,437
 1005dd8:	01006d74 	movhi	r4,437
 1005ddc:	01006d74 	movhi	r4,437
 1005de0:	01006d74 	movhi	r4,437
 1005de4:	01006d74 	movhi	r4,437
 1005de8:	01006d74 	movhi	r4,437
 1005dec:	01006d74 	movhi	r4,437
 1005df0:	01006d74 	movhi	r4,437
 1005df4:	01005ef0 	cmpltui	r4,zero,379
 1005df8:	01005ef0 	cmpltui	r4,zero,379
 1005dfc:	01005ef0 	cmpltui	r4,zero,379
 1005e00:	01005ef0 	cmpltui	r4,zero,379
 1005e04:	01005ef0 	cmpltui	r4,zero,379
 1005e08:	01005ef0 	cmpltui	r4,zero,379
 1005e0c:	01005ef0 	cmpltui	r4,zero,379
 1005e10:	01005ef0 	cmpltui	r4,zero,379
 1005e14:	01005ef0 	cmpltui	r4,zero,379
 1005e18:	01005ef0 	cmpltui	r4,zero,379
 1005e1c:	01005f04 	movi	r4,380
 1005e20:	01006e78 	rdprs	r4,zero,441
 1005e24:	01005ef0 	cmpltui	r4,zero,379
 1005e28:	01006e78 	rdprs	r4,zero,441
 1005e2c:	01005ef0 	cmpltui	r4,zero,379
 1005e30:	01005ef0 	cmpltui	r4,zero,379
 1005e34:	01005ef0 	cmpltui	r4,zero,379
 1005e38:	01005ef0 	cmpltui	r4,zero,379
 1005e3c:	01006d6c 	andhi	r4,zero,437
 1005e40:	01005ef0 	cmpltui	r4,zero,379
 1005e44:	01005ef0 	cmpltui	r4,zero,379
 1005e48:	01006d4c 	andi	r4,zero,437
 1005e4c:	01005ef0 	cmpltui	r4,zero,379
 1005e50:	01005ef0 	cmpltui	r4,zero,379
 1005e54:	01005ef0 	cmpltui	r4,zero,379
 1005e58:	01005ef0 	cmpltui	r4,zero,379
 1005e5c:	01005ef0 	cmpltui	r4,zero,379
 1005e60:	01005ef0 	cmpltui	r4,zero,379
 1005e64:	01005ef0 	cmpltui	r4,zero,379
 1005e68:	01005ef0 	cmpltui	r4,zero,379
 1005e6c:	01006d98 	cmpnei	r4,zero,438
 1005e70:	01005ef0 	cmpltui	r4,zero,379
 1005e74:	01005ef0 	cmpltui	r4,zero,379
 1005e78:	01006d30 	cmpltui	r4,zero,436
 1005e7c:	01005ef0 	cmpltui	r4,zero,379
 1005e80:	01005ef0 	cmpltui	r4,zero,379
 1005e84:	01005ef0 	cmpltui	r4,zero,379
 1005e88:	01005ef0 	cmpltui	r4,zero,379
 1005e8c:	01005ef0 	cmpltui	r4,zero,379
 1005e90:	01005ef0 	cmpltui	r4,zero,379
 1005e94:	01005ef0 	cmpltui	r4,zero,379
 1005e98:	01006e80 	call	1006e8 <__alt_mem_sram+0x6e8>
 1005e9c:	01005f08 	cmpgei	r4,zero,380
 1005ea0:	01006e78 	rdprs	r4,zero,441
 1005ea4:	01006e78 	rdprs	r4,zero,441
 1005ea8:	01006e78 	rdprs	r4,zero,441
 1005eac:	01006e8c 	andi	r4,zero,442
 1005eb0:	01006dd4 	movui	r4,439
 1005eb4:	01005ef0 	cmpltui	r4,zero,379
 1005eb8:	01005ef0 	cmpltui	r4,zero,379
 1005ebc:	0100649c 	xori	r4,zero,402
 1005ec0:	01005ef0 	cmpltui	r4,zero,379
 1005ec4:	01006f88 	cmpgei	r4,zero,446
 1005ec8:	01006f44 	movi	r4,445
 1005ecc:	01006f68 	cmpgeui	r4,zero,445
 1005ed0:	01005ef0 	cmpltui	r4,zero,379
 1005ed4:	01005ef0 	cmpltui	r4,zero,379
 1005ed8:	01006f60 	cmpeqi	r4,zero,445
 1005edc:	01005ef0 	cmpltui	r4,zero,379
 1005ee0:	01006db8 	rdprs	r4,zero,438
 1005ee4:	01005ef0 	cmpltui	r4,zero,379
 1005ee8:	01005ef0 	cmpltui	r4,zero,379
 1005eec:	01006d98 	cmpnei	r4,zero,438
 1005ef0:	bc87883a 	add	r3,r23,r18
 1005ef4:	18800003 	ldbu	r2,0(r3)
 1005ef8:	1080004c 	andi	r2,r2,1
 1005efc:	1005003a 	cmpeq	r2,r2,zero
 1005f00:	1000011e 	bne	r2,zero,1005f08 <__svfscanf_r+0x3a4>
 1005f04:	ad400054 	ori	r21,r21,1
 1005f08:	01004074 	movhi	r4,257
 1005f0c:	21323104 	addi	r4,r4,-14140
 1005f10:	00800284 	movi	r2,10
 1005f14:	d900a015 	stw	r4,640(sp)
 1005f18:	048000c4 	movi	r18,3
 1005f1c:	d880a115 	stw	r2,644(sp)
 1005f20:	80c00117 	ldw	r3,4(r16)
 1005f24:	00c13f0e 	bge	zero,r3,1006424 <__svfscanf_r+0x8c0>
 1005f28:	a880100c 	andi	r2,r21,64
 1005f2c:	10001326 	beq	r2,zero,1005f7c <__svfscanf_r+0x418>
 1005f30:	00800104 	movi	r2,4
 1005f34:	14bf1e36 	bltu	r2,r18,1005bb0 <__svfscanf_r+0x4c>
 1005f38:	9485883a 	add	r2,r18,r18
 1005f3c:	1085883a 	add	r2,r2,r2
 1005f40:	00c04034 	movhi	r3,256
 1005f44:	18d7d504 	addi	r3,r3,24404
 1005f48:	10c5883a 	add	r2,r2,r3
 1005f4c:	11000017 	ldw	r4,0(r2)
 1005f50:	2000683a 	jmp	r4
 1005f54:	01005fb8 	rdprs	r4,zero,382
 1005f58:	010060b8 	rdprs	r4,zero,386
 1005f5c:	010062c8 	cmpgei	r4,zero,395
 1005f60:	0100612c 	andhi	r4,zero,388
 1005f64:	01006400 	call	100640 <__alt_mem_sram+0x640>
 1005f68:	b009883a 	mov	r4,r22
 1005f6c:	800b883a 	mov	r5,r16
 1005f70:	10036100 	call	1003610 <__srefill_r>
 1005f74:	103f501e 	bne	r2,zero,1005cb8 <__svfscanf_r+0x154>
 1005f78:	8c400044 	addi	r17,r17,1
 1005f7c:	81400017 	ldw	r5,0(r16)
 1005f80:	98800017 	ldw	r2,0(r19)
 1005f84:	28c00003 	ldbu	r3,0(r5)
 1005f88:	1887883a 	add	r3,r3,r2
 1005f8c:	19000003 	ldbu	r4,0(r3)
 1005f90:	2100020c 	andi	r4,r4,8
 1005f94:	203fe626 	beq	r4,zero,1005f30 <__svfscanf_r+0x3cc>
 1005f98:	80c00117 	ldw	r3,4(r16)
 1005f9c:	18ffffc4 	addi	r3,r3,-1
 1005fa0:	80c00115 	stw	r3,4(r16)
 1005fa4:	00fff00e 	bge	zero,r3,1005f68 <__svfscanf_r+0x404>
 1005fa8:	29800044 	addi	r6,r5,1
 1005fac:	8c400044 	addi	r17,r17,1
 1005fb0:	81800015 	stw	r6,0(r16)
 1005fb4:	003ff106 	br	1005f7c <__svfscanf_r+0x418>
 1005fb8:	d8c0a317 	ldw	r3,652(sp)
 1005fbc:	1800021e 	bne	r3,zero,1005fc8 <__svfscanf_r+0x464>
 1005fc0:	01000044 	movi	r4,1
 1005fc4:	d900a315 	stw	r4,652(sp)
 1005fc8:	a880004c 	andi	r2,r21,1
 1005fcc:	1005003a 	cmpeq	r2,r2,zero
 1005fd0:	1002811e 	bne	r2,zero,10069d8 <__svfscanf_r+0xe74>
 1005fd4:	ad40040c 	andi	r21,r21,16
 1005fd8:	a805003a 	cmpeq	r2,r21,zero
 1005fdc:	d880a615 	stw	r2,664(sp)
 1005fe0:	1003d31e 	bne	r2,zero,1006f30 <__svfscanf_r+0x13cc>
 1005fe4:	0027883a 	mov	r19,zero
 1005fe8:	d900a317 	ldw	r4,652(sp)
 1005fec:	2003c726 	beq	r4,zero,1006f0c <__svfscanf_r+0x13a8>
 1005ff0:	07004074 	movhi	fp,257
 1005ff4:	e7115a04 	addi	fp,fp,17768
 1005ff8:	e0800017 	ldw	r2,0(fp)
 1005ffc:	103f2e26 	beq	r2,zero,1005cb8 <__svfscanf_r+0x154>
 1006000:	d8804404 	addi	r2,sp,272
 1006004:	0025883a 	mov	r18,zero
 1006008:	d880a515 	stw	r2,660(sp)
 100600c:	05ffffc4 	movi	r23,-1
 1006010:	80800017 	ldw	r2,0(r16)
 1006014:	80c00117 	ldw	r3,4(r16)
 1006018:	d900a517 	ldw	r4,660(sp)
 100601c:	12000003 	ldbu	r8,0(r2)
 1006020:	18ffffc4 	addi	r3,r3,-1
 1006024:	11800044 	addi	r6,r2,1
 1006028:	248f883a 	add	r7,r4,r18
 100602c:	80c00115 	stw	r3,4(r16)
 1006030:	81800015 	stw	r6,0(r16)
 1006034:	3a000005 	stb	r8,0(r7)
 1006038:	d9000204 	addi	r4,sp,8
 100603c:	000b883a 	mov	r5,zero
 1006040:	01800204 	movi	r6,8
 1006044:	10033d40 	call	10033d4 <memset>
 1006048:	d980a517 	ldw	r6,660(sp)
 100604c:	94800044 	addi	r18,r18,1
 1006050:	d8800204 	addi	r2,sp,8
 1006054:	b009883a 	mov	r4,r22
 1006058:	980b883a 	mov	r5,r19
 100605c:	900f883a 	mov	r7,r18
 1006060:	d8800015 	stw	r2,0(sp)
 1006064:	10095d00 	call	10095d0 <_mbrtowc_r>
 1006068:	1007883a 	mov	r3,r2
 100606c:	15ff1226 	beq	r2,r23,1005cb8 <__svfscanf_r+0x154>
 1006070:	10039e1e 	bne	r2,zero,1006eec <__svfscanf_r+0x1388>
 1006074:	a800011e 	bne	r21,zero,100607c <__svfscanf_r+0x518>
 1006078:	98000015 	stw	zero,0(r19)
 100607c:	d8c0a317 	ldw	r3,652(sp)
 1006080:	d900a617 	ldw	r4,664(sp)
 1006084:	8ca3883a 	add	r17,r17,r18
 1006088:	18ffffc4 	addi	r3,r3,-1
 100608c:	d8c0a315 	stw	r3,652(sp)
 1006090:	20000126 	beq	r4,zero,1006098 <__svfscanf_r+0x534>
 1006094:	9cc00104 	addi	r19,r19,4
 1006098:	0025883a 	mov	r18,zero
 100609c:	80c00117 	ldw	r3,4(r16)
 10060a0:	00c3950e 	bge	zero,r3,1006ef8 <__svfscanf_r+0x1394>
 10060a4:	d880a317 	ldw	r2,652(sp)
 10060a8:	10039826 	beq	r2,zero,1006f0c <__svfscanf_r+0x13a8>
 10060ac:	e0800017 	ldw	r2,0(fp)
 10060b0:	90bfd71e 	bne	r18,r2,1006010 <__svfscanf_r+0x4ac>
 10060b4:	003f0006 	br	1005cb8 <__svfscanf_r+0x154>
 10060b8:	d880a317 	ldw	r2,652(sp)
 10060bc:	1000021e 	bne	r2,zero,10060c8 <__svfscanf_r+0x564>
 10060c0:	00ffffc4 	movi	r3,-1
 10060c4:	d8c0a315 	stw	r3,652(sp)
 10060c8:	a880040c 	andi	r2,r21,16
 10060cc:	1003b826 	beq	r2,zero,1006fb0 <__svfscanf_r+0x144c>
 10060d0:	0027883a 	mov	r19,zero
 10060d4:	dd400404 	addi	r21,sp,16
 10060d8:	81000017 	ldw	r4,0(r16)
 10060dc:	20800003 	ldbu	r2,0(r4)
 10060e0:	a885883a 	add	r2,r21,r2
 10060e4:	10c00007 	ldb	r3,0(r2)
 10060e8:	18037d26 	beq	r3,zero,1006ee0 <__svfscanf_r+0x137c>
 10060ec:	80c00117 	ldw	r3,4(r16)
 10060f0:	21800044 	addi	r6,r4,1
 10060f4:	d900a317 	ldw	r4,652(sp)
 10060f8:	18ffffc4 	addi	r3,r3,-1
 10060fc:	9cc00044 	addi	r19,r19,1
 1006100:	81800015 	stw	r6,0(r16)
 1006104:	80c00115 	stw	r3,4(r16)
 1006108:	24c37526 	beq	r4,r19,1006ee0 <__svfscanf_r+0x137c>
 100610c:	00fff216 	blt	zero,r3,10060d8 <__svfscanf_r+0x574>
 1006110:	b009883a 	mov	r4,r22
 1006114:	800b883a 	mov	r5,r16
 1006118:	10036100 	call	1003610 <__srefill_r>
 100611c:	103fee26 	beq	r2,zero,10060d8 <__svfscanf_r+0x574>
 1006120:	983ee526 	beq	r19,zero,1005cb8 <__svfscanf_r+0x154>
 1006124:	8ce3883a 	add	r17,r17,r19
 1006128:	003ea106 	br	1005bb0 <__svfscanf_r+0x4c>
 100612c:	d900a317 	ldw	r4,652(sp)
 1006130:	00805704 	movi	r2,348
 1006134:	20ffffc4 	addi	r3,r4,-1
 1006138:	10c0bf2e 	bgeu	r2,r3,1006438 <__svfscanf_r+0x8d4>
 100613c:	00805744 	movi	r2,349
 1006140:	24ffa8c4 	addi	r19,r4,-349
 1006144:	ac836014 	ori	r18,r21,3456
 1006148:	d880a315 	stw	r2,652(sp)
 100614c:	d8c04404 	addi	r3,sp,272
 1006150:	d8c0a515 	stw	r3,660(sp)
 1006154:	002f883a 	mov	r23,zero
 1006158:	182b883a 	mov	r21,r3
 100615c:	81800017 	ldw	r6,0(r16)
 1006160:	00c01344 	movi	r3,77
 1006164:	31400003 	ldbu	r5,0(r6)
 1006168:	28bff544 	addi	r2,r5,-43
 100616c:	10803fcc 	andi	r2,r2,255
 1006170:	1880b836 	bltu	r3,r2,1006454 <__svfscanf_r+0x8f0>
 1006174:	1085883a 	add	r2,r2,r2
 1006178:	1085883a 	add	r2,r2,r2
 100617c:	00c04034 	movhi	r3,256
 1006180:	18d86404 	addi	r3,r3,24976
 1006184:	10c5883a 	add	r2,r2,r3
 1006188:	11000017 	ldw	r4,0(r2)
 100618c:	2000683a 	jmp	r4
 1006190:	010065a4 	muli	r4,zero,406
 1006194:	01006454 	movui	r4,401
 1006198:	010065a4 	muli	r4,zero,406
 100619c:	01006454 	movui	r4,401
 10061a0:	01006454 	movui	r4,401
 10061a4:	010065e8 	cmpgeui	r4,zero,407
 10061a8:	01006dec 	andhi	r4,zero,439
 10061ac:	01006dec 	andhi	r4,zero,439
 10061b0:	01006dec 	andhi	r4,zero,439
 10061b4:	01006dec 	andhi	r4,zero,439
 10061b8:	01006dec 	andhi	r4,zero,439
 10061bc:	01006dec 	andhi	r4,zero,439
 10061c0:	01006dec 	andhi	r4,zero,439
 10061c4:	01006e14 	movui	r4,440
 10061c8:	01006e14 	movui	r4,440
 10061cc:	01006454 	movui	r4,401
 10061d0:	01006454 	movui	r4,401
 10061d4:	01006454 	movui	r4,401
 10061d8:	01006454 	movui	r4,401
 10061dc:	01006454 	movui	r4,401
 10061e0:	01006454 	movui	r4,401
 10061e4:	01006454 	movui	r4,401
 10061e8:	01006e44 	movi	r4,441
 10061ec:	01006e44 	movi	r4,441
 10061f0:	01006e44 	movi	r4,441
 10061f4:	01006e44 	movi	r4,441
 10061f8:	01006e44 	movi	r4,441
 10061fc:	01006e44 	movi	r4,441
 1006200:	01006454 	movui	r4,401
 1006204:	01006454 	movui	r4,401
 1006208:	01006454 	movui	r4,401
 100620c:	01006454 	movui	r4,401
 1006210:	01006454 	movui	r4,401
 1006214:	01006454 	movui	r4,401
 1006218:	01006454 	movui	r4,401
 100621c:	01006454 	movui	r4,401
 1006220:	01006454 	movui	r4,401
 1006224:	01006454 	movui	r4,401
 1006228:	01006454 	movui	r4,401
 100622c:	01006454 	movui	r4,401
 1006230:	01006454 	movui	r4,401
 1006234:	01006454 	movui	r4,401
 1006238:	01006454 	movui	r4,401
 100623c:	01006454 	movui	r4,401
 1006240:	01006454 	movui	r4,401
 1006244:	01006e54 	movui	r4,441
 1006248:	01006454 	movui	r4,401
 100624c:	01006454 	movui	r4,401
 1006250:	01006454 	movui	r4,401
 1006254:	01006454 	movui	r4,401
 1006258:	01006454 	movui	r4,401
 100625c:	01006454 	movui	r4,401
 1006260:	01006454 	movui	r4,401
 1006264:	01006454 	movui	r4,401
 1006268:	01006e44 	movi	r4,441
 100626c:	01006e44 	movi	r4,441
 1006270:	01006e44 	movi	r4,441
 1006274:	01006e44 	movi	r4,441
 1006278:	01006e44 	movi	r4,441
 100627c:	01006e44 	movi	r4,441
 1006280:	01006454 	movui	r4,401
 1006284:	01006454 	movui	r4,401
 1006288:	01006454 	movui	r4,401
 100628c:	01006454 	movui	r4,401
 1006290:	01006454 	movui	r4,401
 1006294:	01006454 	movui	r4,401
 1006298:	01006454 	movui	r4,401
 100629c:	01006454 	movui	r4,401
 10062a0:	01006454 	movui	r4,401
 10062a4:	01006454 	movui	r4,401
 10062a8:	01006454 	movui	r4,401
 10062ac:	01006454 	movui	r4,401
 10062b0:	01006454 	movui	r4,401
 10062b4:	01006454 	movui	r4,401
 10062b8:	01006454 	movui	r4,401
 10062bc:	01006454 	movui	r4,401
 10062c0:	01006454 	movui	r4,401
 10062c4:	01006e54 	movui	r4,441
 10062c8:	d900a317 	ldw	r4,652(sp)
 10062cc:	2000021e 	bne	r4,zero,10062d8 <__svfscanf_r+0x774>
 10062d0:	00bfffc4 	movi	r2,-1
 10062d4:	d880a315 	stw	r2,652(sp)
 10062d8:	a880004c 	andi	r2,r21,1
 10062dc:	1005003a 	cmpeq	r2,r2,zero
 10062e0:	1003651e 	bne	r2,zero,1007078 <__svfscanf_r+0x1514>
 10062e4:	adc0040c 	andi	r23,r21,16
 10062e8:	b807003a 	cmpeq	r3,r23,zero
 10062ec:	d8c0a715 	stw	r3,668(sp)
 10062f0:	1802f61e 	bne	r3,zero,1006ecc <__svfscanf_r+0x1368>
 10062f4:	dd400104 	addi	r21,sp,4
 10062f8:	0025883a 	mov	r18,zero
 10062fc:	073fffc4 	movi	fp,-1
 1006300:	81400017 	ldw	r5,0(r16)
 1006304:	98800017 	ldw	r2,0(r19)
 1006308:	29c00003 	ldbu	r7,0(r5)
 100630c:	38c03fcc 	andi	r3,r7,255
 1006310:	1887883a 	add	r3,r3,r2
 1006314:	19000003 	ldbu	r4,0(r3)
 1006318:	2100020c 	andi	r4,r4,8
 100631c:	2000321e 	bne	r4,zero,10063e8 <__svfscanf_r+0x884>
 1006320:	d8c0a317 	ldw	r3,652(sp)
 1006324:	18003026 	beq	r3,zero,10063e8 <__svfscanf_r+0x884>
 1006328:	00804074 	movhi	r2,257
 100632c:	10915a04 	addi	r2,r2,17768
 1006330:	10c00017 	ldw	r3,0(r2)
 1006334:	90fe6026 	beq	r18,r3,1005cb8 <__svfscanf_r+0x154>
 1006338:	d8c04404 	addi	r3,sp,272
 100633c:	80800117 	ldw	r2,4(r16)
 1006340:	d8c0a515 	stw	r3,660(sp)
 1006344:	d900a517 	ldw	r4,660(sp)
 1006348:	10ffffc4 	addi	r3,r2,-1
 100634c:	29800044 	addi	r6,r5,1
 1006350:	80c00115 	stw	r3,4(r16)
 1006354:	2485883a 	add	r2,r4,r18
 1006358:	81800015 	stw	r6,0(r16)
 100635c:	d9000204 	addi	r4,sp,8
 1006360:	000b883a 	mov	r5,zero
 1006364:	01800204 	movi	r6,8
 1006368:	11c00005 	stb	r7,0(r2)
 100636c:	10033d40 	call	10033d4 <memset>
 1006370:	d980a517 	ldw	r6,660(sp)
 1006374:	94800044 	addi	r18,r18,1
 1006378:	d8800204 	addi	r2,sp,8
 100637c:	b009883a 	mov	r4,r22
 1006380:	a80b883a 	mov	r5,r21
 1006384:	900f883a 	mov	r7,r18
 1006388:	d8800015 	stw	r2,0(sp)
 100638c:	10095d00 	call	10095d0 <_mbrtowc_r>
 1006390:	1007883a 	mov	r3,r2
 1006394:	173e4826 	beq	r2,fp,1005cb8 <__svfscanf_r+0x154>
 1006398:	1002c91e 	bne	r2,zero,1006ec0 <__svfscanf_r+0x135c>
 100639c:	a8000015 	stw	zero,0(r21)
 10063a0:	a9000017 	ldw	r4,0(r21)
 10063a4:	10094680 	call	1009468 <iswspace>
 10063a8:	1002bc1e 	bne	r2,zero,1006e9c <__svfscanf_r+0x1338>
 10063ac:	d900a317 	ldw	r4,652(sp)
 10063b0:	d880a717 	ldw	r2,668(sp)
 10063b4:	8ca3883a 	add	r17,r17,r18
 10063b8:	213fffc4 	addi	r4,r4,-1
 10063bc:	d900a315 	stw	r4,652(sp)
 10063c0:	10000126 	beq	r2,zero,10063c8 <__svfscanf_r+0x864>
 10063c4:	ad400104 	addi	r21,r21,4
 10063c8:	0025883a 	mov	r18,zero
 10063cc:	80c00117 	ldw	r3,4(r16)
 10063d0:	00ffcb16 	blt	zero,r3,1006300 <__svfscanf_r+0x79c>
 10063d4:	b009883a 	mov	r4,r22
 10063d8:	800b883a 	mov	r5,r16
 10063dc:	10036100 	call	1003610 <__srefill_r>
 10063e0:	103fc726 	beq	r2,zero,1006300 <__svfscanf_r+0x79c>
 10063e4:	903e341e 	bne	r18,zero,1005cb8 <__svfscanf_r+0x154>
 10063e8:	b83df11e 	bne	r23,zero,1005bb0 <__svfscanf_r+0x4c>
 10063ec:	d900a217 	ldw	r4,648(sp)
 10063f0:	a8000015 	stw	zero,0(r21)
 10063f4:	21000044 	addi	r4,r4,1
 10063f8:	d900a215 	stw	r4,648(sp)
 10063fc:	003dec06 	br	1005bb0 <__svfscanf_r+0x4c>
 1006400:	d900a317 	ldw	r4,652(sp)
 1006404:	00805704 	movi	r2,348
 1006408:	20ffffc4 	addi	r3,r4,-1
 100640c:	10c0902e 	bgeu	r2,r3,1006650 <__svfscanf_r+0xaec>
 1006410:	00805744 	movi	r2,349
 1006414:	24ffa8c4 	addi	r19,r4,-349
 1006418:	ad41e014 	ori	r21,r21,1920
 100641c:	d880a315 	stw	r2,652(sp)
 1006420:	00010806 	br	1006844 <__svfscanf_r+0xce0>
 1006424:	b009883a 	mov	r4,r22
 1006428:	800b883a 	mov	r5,r16
 100642c:	10036100 	call	1003610 <__srefill_r>
 1006430:	103ebd26 	beq	r2,zero,1005f28 <__svfscanf_r+0x3c4>
 1006434:	003e2006 	br	1005cb8 <__svfscanf_r+0x154>
 1006438:	d900a317 	ldw	r4,652(sp)
 100643c:	ac836014 	ori	r18,r21,3456
 1006440:	2002941e 	bne	r4,zero,1006e94 <__svfscanf_r+0x1330>
 1006444:	d8804404 	addi	r2,sp,272
 1006448:	d880a515 	stw	r2,660(sp)
 100644c:	002f883a 	mov	r23,zero
 1006450:	102b883a 	mov	r21,r2
 1006454:	9080400c 	andi	r2,r18,256
 1006458:	10000926 	beq	r2,zero,1006480 <__svfscanf_r+0x91c>
 100645c:	d8c0a517 	ldw	r3,660(sp)
 1006460:	1d40052e 	bgeu	r3,r21,1006478 <__svfscanf_r+0x914>
 1006464:	ad7fffc4 	addi	r21,r21,-1
 1006468:	a9400007 	ldb	r5,0(r21)
 100646c:	b009883a 	mov	r4,r22
 1006470:	800d883a 	mov	r6,r16
 1006474:	100d4800 	call	100d480 <_ungetc_r>
 1006478:	d900a517 	ldw	r4,660(sp)
 100647c:	257dee26 	beq	r4,r21,1005c38 <__svfscanf_r+0xd4>
 1006480:	9080040c 	andi	r2,r18,16
 1006484:	10000a26 	beq	r2,zero,10064b0 <__svfscanf_r+0x94c>
 1006488:	d8c0a517 	ldw	r3,660(sp)
 100648c:	a8c5c83a 	sub	r2,r21,r3
 1006490:	b885883a 	add	r2,r23,r2
 1006494:	88a3883a 	add	r17,r17,r2
 1006498:	003dc506 	br	1005bb0 <__svfscanf_r+0x4c>
 100649c:	a0c00007 	ldb	r3,0(r20)
 10064a0:	00801b04 	movi	r2,108
 10064a4:	18801726 	beq	r3,r2,1006504 <__svfscanf_r+0x9a0>
 10064a8:	ad400054 	ori	r21,r21,1
 10064ac:	003e0906 	br	1005cd4 <__svfscanf_r+0x170>
 10064b0:	a8000005 	stb	zero,0(r21)
 10064b4:	d8c0a017 	ldw	r3,640(sp)
 10064b8:	d940a517 	ldw	r5,660(sp)
 10064bc:	d9c0a117 	ldw	r7,644(sp)
 10064c0:	b009883a 	mov	r4,r22
 10064c4:	000d883a 	mov	r6,zero
 10064c8:	183ee83a 	callr	r3
 10064cc:	1007883a 	mov	r3,r2
 10064d0:	9080080c 	andi	r2,r18,32
 10064d4:	1000251e 	bne	r2,zero,100656c <__svfscanf_r+0xa08>
 10064d8:	9080010c 	andi	r2,r18,4
 10064dc:	10000c26 	beq	r2,zero,1006510 <__svfscanf_r+0x9ac>
 10064e0:	d900a417 	ldw	r4,656(sp)
 10064e4:	20800017 	ldw	r2,0(r4)
 10064e8:	21000104 	addi	r4,r4,4
 10064ec:	d900a415 	stw	r4,656(sp)
 10064f0:	10c0000d 	sth	r3,0(r2)
 10064f4:	d880a217 	ldw	r2,648(sp)
 10064f8:	10800044 	addi	r2,r2,1
 10064fc:	d880a215 	stw	r2,648(sp)
 1006500:	003fe106 	br	1006488 <__svfscanf_r+0x924>
 1006504:	a5000044 	addi	r20,r20,1
 1006508:	ad400094 	ori	r21,r21,2
 100650c:	003df106 	br	1005cd4 <__svfscanf_r+0x170>
 1006510:	9080004c 	andi	r2,r18,1
 1006514:	1005003a 	cmpeq	r2,r2,zero
 1006518:	10001426 	beq	r2,zero,100656c <__svfscanf_r+0xa08>
 100651c:	9080008c 	andi	r2,r18,2
 1006520:	10001226 	beq	r2,zero,100656c <__svfscanf_r+0xa08>
 1006524:	d8c0a017 	ldw	r3,640(sp)
 1006528:	00804074 	movhi	r2,257
 100652c:	10b39404 	addi	r2,r2,-12720
 1006530:	18801426 	beq	r3,r2,1006584 <__svfscanf_r+0xa20>
 1006534:	d9c0a117 	ldw	r7,644(sp)
 1006538:	d940a517 	ldw	r5,660(sp)
 100653c:	000d883a 	mov	r6,zero
 1006540:	b009883a 	mov	r4,r22
 1006544:	100cb380 	call	100cb38 <_strtoll_r>
 1006548:	100d883a 	mov	r6,r2
 100654c:	180f883a 	mov	r7,r3
 1006550:	d900a417 	ldw	r4,656(sp)
 1006554:	20800017 	ldw	r2,0(r4)
 1006558:	21000104 	addi	r4,r4,4
 100655c:	d900a415 	stw	r4,656(sp)
 1006560:	11c00115 	stw	r7,4(r2)
 1006564:	11800015 	stw	r6,0(r2)
 1006568:	003fe206 	br	10064f4 <__svfscanf_r+0x990>
 100656c:	d900a417 	ldw	r4,656(sp)
 1006570:	20800017 	ldw	r2,0(r4)
 1006574:	21000104 	addi	r4,r4,4
 1006578:	d900a415 	stw	r4,656(sp)
 100657c:	10c00015 	stw	r3,0(r2)
 1006580:	003fdc06 	br	10064f4 <__svfscanf_r+0x990>
 1006584:	d9c0a117 	ldw	r7,644(sp)
 1006588:	d940a517 	ldw	r5,660(sp)
 100658c:	000d883a 	mov	r6,zero
 1006590:	b009883a 	mov	r4,r22
 1006594:	100d0b40 	call	100d0b4 <_strtoull_r>
 1006598:	100d883a 	mov	r6,r2
 100659c:	180f883a 	mov	r7,r3
 10065a0:	003feb06 	br	1006550 <__svfscanf_r+0x9ec>
 10065a4:	9080200c 	andi	r2,r18,128
 10065a8:	103faa26 	beq	r2,zero,1006454 <__svfscanf_r+0x8f0>
 10065ac:	00bfdfc4 	movi	r2,-129
 10065b0:	90a4703a 	and	r18,r18,r2
 10065b4:	a9400005 	stb	r5,0(r21)
 10065b8:	ad400044 	addi	r21,r21,1
 10065bc:	80c00117 	ldw	r3,4(r16)
 10065c0:	18ffffc4 	addi	r3,r3,-1
 10065c4:	80c00115 	stw	r3,4(r16)
 10065c8:	00c0130e 	bge	zero,r3,1006618 <__svfscanf_r+0xab4>
 10065cc:	31800044 	addi	r6,r6,1
 10065d0:	81800015 	stw	r6,0(r16)
 10065d4:	d880a317 	ldw	r2,652(sp)
 10065d8:	10bfffc4 	addi	r2,r2,-1
 10065dc:	d880a315 	stw	r2,652(sp)
 10065e0:	103ede1e 	bne	r2,zero,100615c <__svfscanf_r+0x5f8>
 10065e4:	003f9b06 	br	1006454 <__svfscanf_r+0x8f0>
 10065e8:	9082000c 	andi	r2,r18,2048
 10065ec:	103ff126 	beq	r2,zero,10065b4 <__svfscanf_r+0xa50>
 10065f0:	d8c0a117 	ldw	r3,644(sp)
 10065f4:	1800031e 	bne	r3,zero,1006604 <__svfscanf_r+0xaa0>
 10065f8:	01000204 	movi	r4,8
 10065fc:	94808014 	ori	r18,r18,512
 1006600:	d900a115 	stw	r4,644(sp)
 1006604:	9081000c 	andi	r2,r18,1024
 1006608:	10000826 	beq	r2,zero,100662c <__svfscanf_r+0xac8>
 100660c:	00be9fc4 	movi	r2,-1409
 1006610:	90a4703a 	and	r18,r18,r2
 1006614:	003fe706 	br	10065b4 <__svfscanf_r+0xa50>
 1006618:	b009883a 	mov	r4,r22
 100661c:	800b883a 	mov	r5,r16
 1006620:	10036100 	call	1003610 <__srefill_r>
 1006624:	103feb26 	beq	r2,zero,10065d4 <__svfscanf_r+0xa70>
 1006628:	003f8a06 	br	1006454 <__svfscanf_r+0x8f0>
 100662c:	98000426 	beq	r19,zero,1006640 <__svfscanf_r+0xadc>
 1006630:	d880a317 	ldw	r2,652(sp)
 1006634:	9cffffc4 	addi	r19,r19,-1
 1006638:	10800044 	addi	r2,r2,1
 100663c:	d880a315 	stw	r2,652(sp)
 1006640:	00bf1fc4 	movi	r2,-897
 1006644:	90a4703a 	and	r18,r18,r2
 1006648:	bdc00044 	addi	r23,r23,1
 100664c:	003fdb06 	br	10065bc <__svfscanf_r+0xa58>
 1006650:	d900a317 	ldw	r4,652(sp)
 1006654:	ad41e014 	ori	r21,r21,1920
 1006658:	2000791e 	bne	r4,zero,1006840 <__svfscanf_r+0xcdc>
 100665c:	d8c04404 	addi	r3,sp,272
 1006660:	d8c0a515 	stw	r3,660(sp)
 1006664:	182f883a 	mov	r23,r3
 1006668:	d8009c15 	stw	zero,624(sp)
 100666c:	d8009d15 	stw	zero,628(sp)
 1006670:	d8009f15 	stw	zero,636(sp)
 1006674:	d8009e15 	stw	zero,632(sp)
 1006678:	0039883a 	mov	fp,zero
 100667c:	e1003fcc 	andi	r4,fp,255
 1006680:	2100201c 	xori	r4,r4,128
 1006684:	213fe004 	addi	r4,r4,-128
 1006688:	20ffffc4 	addi	r3,r4,-1
 100668c:	00800184 	movi	r2,6
 1006690:	10c01736 	bltu	r2,r3,10066f0 <__svfscanf_r+0xb8c>
 1006694:	00c00084 	movi	r3,2
 1006698:	19026d0e 	bge	r3,r4,1007050 <__svfscanf_r+0x14ec>
 100669c:	008000c4 	movi	r2,3
 10066a0:	1100130e 	bge	r2,r4,10066f0 <__svfscanf_r+0xb8c>
 10066a4:	e4ffffc4 	addi	r19,fp,-1
 10066a8:	b825883a 	mov	r18,r23
 10066ac:	94bfffc4 	addi	r18,r18,-1
 10066b0:	91400007 	ldb	r5,0(r18)
 10066b4:	b009883a 	mov	r4,r22
 10066b8:	800d883a 	mov	r6,r16
 10066bc:	100d4800 	call	100d480 <_ungetc_r>
 10066c0:	9cffffc4 	addi	r19,r19,-1
 10066c4:	98c03fcc 	andi	r3,r19,255
 10066c8:	18c0201c 	xori	r3,r3,128
 10066cc:	18ffe004 	addi	r3,r3,-128
 10066d0:	00800084 	movi	r2,2
 10066d4:	18bff51e 	bne	r3,r2,10066ac <__svfscanf_r+0xb48>
 10066d8:	e0bfff04 	addi	r2,fp,-4
 10066dc:	10803fcc 	andi	r2,r2,255
 10066e0:	b887c83a 	sub	r3,r23,r2
 10066e4:	8885c83a 	sub	r2,r17,r2
 10066e8:	147fffc4 	addi	r17,r2,-1
 10066ec:	1dffffc4 	addi	r23,r3,-1
 10066f0:	a880400c 	andi	r2,r21,256
 10066f4:	10001226 	beq	r2,zero,1006740 <__svfscanf_r+0xbdc>
 10066f8:	a881000c 	andi	r2,r21,1024
 10066fc:	10002b1e 	bne	r2,zero,10067ac <__svfscanf_r+0xc48>
 1006700:	bdffffc4 	addi	r23,r23,-1
 1006704:	b9400007 	ldb	r5,0(r23)
 1006708:	00801944 	movi	r2,101
 100670c:	8c7fffc4 	addi	r17,r17,-1
 1006710:	28800826 	beq	r5,r2,1006734 <__svfscanf_r+0xbd0>
 1006714:	00801144 	movi	r2,69
 1006718:	28800626 	beq	r5,r2,1006734 <__svfscanf_r+0xbd0>
 100671c:	bdffffc4 	addi	r23,r23,-1
 1006720:	b009883a 	mov	r4,r22
 1006724:	800d883a 	mov	r6,r16
 1006728:	100d4800 	call	100d480 <_ungetc_r>
 100672c:	b9400007 	ldb	r5,0(r23)
 1006730:	8c7fffc4 	addi	r17,r17,-1
 1006734:	b009883a 	mov	r4,r22
 1006738:	800d883a 	mov	r6,r16
 100673c:	100d4800 	call	100d480 <_ungetc_r>
 1006740:	a880040c 	andi	r2,r21,16
 1006744:	103d1a1e 	bne	r2,zero,1005bb0 <__svfscanf_r+0x4c>
 1006748:	a8c1800c 	andi	r3,r21,1536
 100674c:	00810004 	movi	r2,1024
 1006750:	b8000005 	stb	zero,0(r23)
 1006754:	18813326 	beq	r3,r2,1006c24 <__svfscanf_r+0x10c0>
 1006758:	d8809d17 	ldw	r2,628(sp)
 100675c:	1000251e 	bne	r2,zero,10067f4 <__svfscanf_r+0xc90>
 1006760:	d940a517 	ldw	r5,660(sp)
 1006764:	b009883a 	mov	r4,r22
 1006768:	000d883a 	mov	r6,zero
 100676c:	100b1b80 	call	100b1b8 <_strtod_r>
 1006770:	a900004c 	andi	r4,r21,1
 1006774:	2009003a 	cmpeq	r4,r4,zero
 1006778:	1025883a 	mov	r18,r2
 100677c:	1827883a 	mov	r19,r3
 1006780:	2000141e 	bne	r4,zero,10067d4 <__svfscanf_r+0xc70>
 1006784:	d8c0a417 	ldw	r3,656(sp)
 1006788:	18800017 	ldw	r2,0(r3)
 100678c:	1d400104 	addi	r21,r3,4
 1006790:	14c00115 	stw	r19,4(r2)
 1006794:	14800015 	stw	r18,0(r2)
 1006798:	d8c0a217 	ldw	r3,648(sp)
 100679c:	dd40a415 	stw	r21,656(sp)
 10067a0:	18c00044 	addi	r3,r3,1
 10067a4:	d8c0a215 	stw	r3,648(sp)
 10067a8:	003d0106 	br	1005bb0 <__svfscanf_r+0x4c>
 10067ac:	d900a517 	ldw	r4,660(sp)
 10067b0:	25fd212e 	bgeu	r4,r23,1005c38 <__svfscanf_r+0xd4>
 10067b4:	bdffffc4 	addi	r23,r23,-1
 10067b8:	b9400007 	ldb	r5,0(r23)
 10067bc:	b009883a 	mov	r4,r22
 10067c0:	800d883a 	mov	r6,r16
 10067c4:	100d4800 	call	100d480 <_ungetc_r>
 10067c8:	d880a517 	ldw	r2,660(sp)
 10067cc:	15fff936 	bltu	r2,r23,10067b4 <__svfscanf_r+0xc50>
 10067d0:	003d1906 	br	1005c38 <__svfscanf_r+0xd4>
 10067d4:	a880008c 	andi	r2,r21,2
 10067d8:	10011926 	beq	r2,zero,1006c40 <__svfscanf_r+0x10dc>
 10067dc:	d900a417 	ldw	r4,656(sp)
 10067e0:	20800017 	ldw	r2,0(r4)
 10067e4:	25400104 	addi	r21,r4,4
 10067e8:	10c00115 	stw	r3,4(r2)
 10067ec:	14800015 	stw	r18,0(r2)
 10067f0:	003fe906 	br	1006798 <__svfscanf_r+0xc34>
 10067f4:	d8c09c17 	ldw	r3,624(sp)
 10067f8:	b009883a 	mov	r4,r22
 10067fc:	000d883a 	mov	r6,zero
 1006800:	19400044 	addi	r5,r3,1
 1006804:	01c00284 	movi	r7,10
 1006808:	100c8c40 	call	100c8c4 <_strtol_r>
 100680c:	d9009d17 	ldw	r4,628(sp)
 1006810:	110dc83a 	sub	r6,r2,r4
 1006814:	d8c0a517 	ldw	r3,660(sp)
 1006818:	d9009c17 	ldw	r4,624(sp)
 100681c:	188054c4 	addi	r2,r3,339
 1006820:	20800236 	bltu	r4,r2,100682c <__svfscanf_r+0xcc8>
 1006824:	18805484 	addi	r2,r3,338
 1006828:	d8809c15 	stw	r2,624(sp)
 100682c:	d9009c17 	ldw	r4,624(sp)
 1006830:	01404074 	movhi	r5,257
 1006834:	294d5704 	addi	r5,r5,13660
 1006838:	100afe00 	call	100afe0 <sprintf>
 100683c:	003fc806 	br	1006760 <__svfscanf_r+0xbfc>
 1006840:	0027883a 	mov	r19,zero
 1006844:	d8c04404 	addi	r3,sp,272
 1006848:	d8c0a515 	stw	r3,660(sp)
 100684c:	182f883a 	mov	r23,r3
 1006850:	d8009f15 	stw	zero,636(sp)
 1006854:	d8009e15 	stw	zero,632(sp)
 1006858:	d8009d15 	stw	zero,628(sp)
 100685c:	d8009c15 	stw	zero,624(sp)
 1006860:	0039883a 	mov	fp,zero
 1006864:	0025883a 	mov	r18,zero
 1006868:	80800017 	ldw	r2,0(r16)
 100686c:	11400003 	ldbu	r5,0(r2)
 1006870:	00801384 	movi	r2,78
 1006874:	28fff544 	addi	r3,r5,-43
 1006878:	18c03fcc 	andi	r3,r3,255
 100687c:	10c08336 	bltu	r2,r3,1006a8c <__svfscanf_r+0xf28>
 1006880:	18c5883a 	add	r2,r3,r3
 1006884:	1085883a 	add	r2,r2,r2
 1006888:	00c04034 	movhi	r3,256
 100688c:	18da2704 	addi	r3,r3,26780
 1006890:	10c5883a 	add	r2,r2,r3
 1006894:	11000017 	ldw	r4,0(r2)
 1006898:	2000683a 	jmp	r4
 100689c:	01006a44 	movi	r4,425
 10068a0:	01006a8c 	andi	r4,zero,426
 10068a4:	01006a44 	movi	r4,425
 10068a8:	01006ad0 	cmplti	r4,zero,427
 10068ac:	01006a8c 	andi	r4,zero,426
 10068b0:	01006b3c 	xorhi	r4,zero,428
 10068b4:	01006b70 	cmpltui	r4,zero,429
 10068b8:	01006b70 	cmpltui	r4,zero,429
 10068bc:	01006b70 	cmpltui	r4,zero,429
 10068c0:	01006b70 	cmpltui	r4,zero,429
 10068c4:	01006b70 	cmpltui	r4,zero,429
 10068c8:	01006b70 	cmpltui	r4,zero,429
 10068cc:	01006b70 	cmpltui	r4,zero,429
 10068d0:	01006b70 	cmpltui	r4,zero,429
 10068d4:	01006b70 	cmpltui	r4,zero,429
 10068d8:	01006a8c 	andi	r4,zero,426
 10068dc:	01006a8c 	andi	r4,zero,426
 10068e0:	01006a8c 	andi	r4,zero,426
 10068e4:	01006a8c 	andi	r4,zero,426
 10068e8:	01006a8c 	andi	r4,zero,426
 10068ec:	01006a8c 	andi	r4,zero,426
 10068f0:	01006a8c 	andi	r4,zero,426
 10068f4:	01006b90 	cmplti	r4,zero,430
 10068f8:	01006a8c 	andi	r4,zero,426
 10068fc:	01006a8c 	andi	r4,zero,426
 1006900:	01006a8c 	andi	r4,zero,426
 1006904:	01006ba0 	cmpeqi	r4,zero,430
 1006908:	01006bec 	andhi	r4,zero,431
 100690c:	01006a8c 	andi	r4,zero,426
 1006910:	01006a8c 	andi	r4,zero,426
 1006914:	01006cc4 	movi	r4,435
 1006918:	01006a8c 	andi	r4,zero,426
 100691c:	01006a8c 	andi	r4,zero,426
 1006920:	01006a8c 	andi	r4,zero,426
 1006924:	01006a8c 	andi	r4,zero,426
 1006928:	01006c70 	cmpltui	r4,zero,433
 100692c:	01006a8c 	andi	r4,zero,426
 1006930:	01006a8c 	andi	r4,zero,426
 1006934:	01006a8c 	andi	r4,zero,426
 1006938:	01006a8c 	andi	r4,zero,426
 100693c:	01006a8c 	andi	r4,zero,426
 1006940:	01006d04 	movi	r4,436
 1006944:	01006a8c 	andi	r4,zero,426
 1006948:	01006a8c 	andi	r4,zero,426
 100694c:	01006a8c 	andi	r4,zero,426
 1006950:	01006a8c 	andi	r4,zero,426
 1006954:	01006c08 	cmpgei	r4,zero,432
 1006958:	01006a8c 	andi	r4,zero,426
 100695c:	01006a8c 	andi	r4,zero,426
 1006960:	01006a8c 	andi	r4,zero,426
 1006964:	01006a8c 	andi	r4,zero,426
 1006968:	01006a8c 	andi	r4,zero,426
 100696c:	01006a8c 	andi	r4,zero,426
 1006970:	01006a8c 	andi	r4,zero,426
 1006974:	01006b90 	cmplti	r4,zero,430
 1006978:	01006a8c 	andi	r4,zero,426
 100697c:	01006a8c 	andi	r4,zero,426
 1006980:	01006a8c 	andi	r4,zero,426
 1006984:	01006ba0 	cmpeqi	r4,zero,430
 1006988:	01006bec 	andhi	r4,zero,431
 100698c:	01006a8c 	andi	r4,zero,426
 1006990:	01006a8c 	andi	r4,zero,426
 1006994:	01006cc4 	movi	r4,435
 1006998:	01006a8c 	andi	r4,zero,426
 100699c:	01006a8c 	andi	r4,zero,426
 10069a0:	01006a8c 	andi	r4,zero,426
 10069a4:	01006a8c 	andi	r4,zero,426
 10069a8:	01006c70 	cmpltui	r4,zero,433
 10069ac:	01006a8c 	andi	r4,zero,426
 10069b0:	01006a8c 	andi	r4,zero,426
 10069b4:	01006a8c 	andi	r4,zero,426
 10069b8:	01006a8c 	andi	r4,zero,426
 10069bc:	01006a8c 	andi	r4,zero,426
 10069c0:	01006d04 	movi	r4,436
 10069c4:	01006a8c 	andi	r4,zero,426
 10069c8:	01006a8c 	andi	r4,zero,426
 10069cc:	01006a8c 	andi	r4,zero,426
 10069d0:	01006a8c 	andi	r4,zero,426
 10069d4:	01006c08 	cmpgei	r4,zero,432
 10069d8:	a880040c 	andi	r2,r21,16
 10069dc:	10004826 	beq	r2,zero,1006b00 <__svfscanf_r+0xf9c>
 10069e0:	0027883a 	mov	r19,zero
 10069e4:	00000b06 	br	1006a14 <__svfscanf_r+0xeb0>
 10069e8:	80800017 	ldw	r2,0(r16)
 10069ec:	b009883a 	mov	r4,r22
 10069f0:	800b883a 	mov	r5,r16
 10069f4:	148d883a 	add	r6,r2,r18
 10069f8:	81800015 	stw	r6,0(r16)
 10069fc:	9ca7883a 	add	r19,r19,r18
 1006a00:	10036100 	call	1003610 <__srefill_r>
 1006a04:	103dc61e 	bne	r2,zero,1006120 <__svfscanf_r+0x5bc>
 1006a08:	d880a317 	ldw	r2,652(sp)
 1006a0c:	1485c83a 	sub	r2,r2,r18
 1006a10:	d880a315 	stw	r2,652(sp)
 1006a14:	84800117 	ldw	r18,4(r16)
 1006a18:	d900a317 	ldw	r4,652(sp)
 1006a1c:	913ff216 	blt	r18,r4,10069e8 <__svfscanf_r+0xe84>
 1006a20:	d900a317 	ldw	r4,652(sp)
 1006a24:	80800017 	ldw	r2,0(r16)
 1006a28:	9927883a 	add	r19,r19,r4
 1006a2c:	9107c83a 	sub	r3,r18,r4
 1006a30:	110d883a 	add	r6,r2,r4
 1006a34:	8ce3883a 	add	r17,r17,r19
 1006a38:	80c00115 	stw	r3,4(r16)
 1006a3c:	81800015 	stw	r6,0(r16)
 1006a40:	003c5b06 	br	1005bb0 <__svfscanf_r+0x4c>
 1006a44:	a880200c 	andi	r2,r21,128
 1006a48:	10001026 	beq	r2,zero,1006a8c <__svfscanf_r+0xf28>
 1006a4c:	00bfdfc4 	movi	r2,-129
 1006a50:	a8aa703a 	and	r21,r21,r2
 1006a54:	b9400005 	stb	r5,0(r23)
 1006a58:	bdc00044 	addi	r23,r23,1
 1006a5c:	80c00117 	ldw	r3,4(r16)
 1006a60:	8c400044 	addi	r17,r17,1
 1006a64:	18bfffc4 	addi	r2,r3,-1
 1006a68:	80800115 	stw	r2,4(r16)
 1006a6c:	00801f0e 	bge	zero,r2,1006aec <__svfscanf_r+0xf88>
 1006a70:	80800017 	ldw	r2,0(r16)
 1006a74:	10800044 	addi	r2,r2,1
 1006a78:	80800015 	stw	r2,0(r16)
 1006a7c:	d880a317 	ldw	r2,652(sp)
 1006a80:	10bfffc4 	addi	r2,r2,-1
 1006a84:	d880a315 	stw	r2,652(sp)
 1006a88:	103f771e 	bne	r2,zero,1006868 <__svfscanf_r+0xd04>
 1006a8c:	d8c09e17 	ldw	r3,632(sp)
 1006a90:	18000226 	beq	r3,zero,1006a9c <__svfscanf_r+0xf38>
 1006a94:	00bfbfc4 	movi	r2,-257
 1006a98:	a8aa703a 	and	r21,r21,r2
 1006a9c:	90ffffc4 	addi	r3,r18,-1
 1006aa0:	00800044 	movi	r2,1
 1006aa4:	10fef536 	bltu	r2,r3,100667c <__svfscanf_r+0xb18>
 1006aa8:	d900a517 	ldw	r4,660(sp)
 1006aac:	25fc622e 	bgeu	r4,r23,1005c38 <__svfscanf_r+0xd4>
 1006ab0:	bdffffc4 	addi	r23,r23,-1
 1006ab4:	b9400007 	ldb	r5,0(r23)
 1006ab8:	b009883a 	mov	r4,r22
 1006abc:	800d883a 	mov	r6,r16
 1006ac0:	100d4800 	call	100d480 <_ungetc_r>
 1006ac4:	d880a517 	ldw	r2,660(sp)
 1006ac8:	15fff936 	bltu	r2,r23,1006ab0 <__svfscanf_r+0xf4c>
 1006acc:	003c5a06 	br	1005c38 <__svfscanf_r+0xd4>
 1006ad0:	a880800c 	andi	r2,r21,512
 1006ad4:	103fed26 	beq	r2,zero,1006a8c <__svfscanf_r+0xf28>
 1006ad8:	d9009e17 	ldw	r4,632(sp)
 1006adc:	00bf5fc4 	movi	r2,-641
 1006ae0:	a8aa703a 	and	r21,r21,r2
 1006ae4:	d9009f15 	stw	r4,636(sp)
 1006ae8:	003fda06 	br	1006a54 <__svfscanf_r+0xef0>
 1006aec:	b009883a 	mov	r4,r22
 1006af0:	800b883a 	mov	r5,r16
 1006af4:	10036100 	call	1003610 <__srefill_r>
 1006af8:	103fe026 	beq	r2,zero,1006a7c <__svfscanf_r+0xf18>
 1006afc:	003fe306 	br	1006a8c <__svfscanf_r+0xf28>
 1006b00:	d880a417 	ldw	r2,656(sp)
 1006b04:	d980a317 	ldw	r6,652(sp)
 1006b08:	01400044 	movi	r5,1
 1006b0c:	11000017 	ldw	r4,0(r2)
 1006b10:	800f883a 	mov	r7,r16
 1006b14:	1001d280 	call	1001d28 <fread>
 1006b18:	103c6726 	beq	r2,zero,1005cb8 <__svfscanf_r+0x154>
 1006b1c:	d8c0a417 	ldw	r3,656(sp)
 1006b20:	d900a217 	ldw	r4,648(sp)
 1006b24:	88a3883a 	add	r17,r17,r2
 1006b28:	18c00104 	addi	r3,r3,4
 1006b2c:	21000044 	addi	r4,r4,1
 1006b30:	d8c0a415 	stw	r3,656(sp)
 1006b34:	d900a215 	stw	r4,648(sp)
 1006b38:	003c1d06 	br	1005bb0 <__svfscanf_r+0x4c>
 1006b3c:	a880400c 	andi	r2,r21,256
 1006b40:	10000b26 	beq	r2,zero,1006b70 <__svfscanf_r+0x100c>
 1006b44:	00bfdfc4 	movi	r2,-129
 1006b48:	a8aa703a 	and	r21,r21,r2
 1006b4c:	d8809e17 	ldw	r2,632(sp)
 1006b50:	10800044 	addi	r2,r2,1
 1006b54:	d8809e15 	stw	r2,632(sp)
 1006b58:	983fc026 	beq	r19,zero,1006a5c <__svfscanf_r+0xef8>
 1006b5c:	d8c0a317 	ldw	r3,652(sp)
 1006b60:	9cffffc4 	addi	r19,r19,-1
 1006b64:	18c00044 	addi	r3,r3,1
 1006b68:	d8c0a315 	stw	r3,652(sp)
 1006b6c:	003fbb06 	br	1006a5c <__svfscanf_r+0xef8>
 1006b70:	e0803fcc 	andi	r2,fp,255
 1006b74:	1080201c 	xori	r2,r2,128
 1006b78:	10bfe004 	addi	r2,r2,-128
 1006b7c:	9085883a 	add	r2,r18,r2
 1006b80:	103fc21e 	bne	r2,zero,1006a8c <__svfscanf_r+0xf28>
 1006b84:	00bf9fc4 	movi	r2,-385
 1006b88:	a8aa703a 	and	r21,r21,r2
 1006b8c:	003fb106 	br	1006a54 <__svfscanf_r+0xef0>
 1006b90:	00800044 	movi	r2,1
 1006b94:	90bfbd1e 	bne	r18,r2,1006a8c <__svfscanf_r+0xf28>
 1006b98:	04800084 	movi	r18,2
 1006b9c:	003fad06 	br	1006a54 <__svfscanf_r+0xef0>
 1006ba0:	a8c1400c 	andi	r3,r21,1280
 1006ba4:	00810004 	movi	r2,1024
 1006ba8:	18800426 	beq	r3,r2,1006bbc <__svfscanf_r+0x1058>
 1006bac:	a884703a 	and	r2,r21,r2
 1006bb0:	103fb626 	beq	r2,zero,1006a8c <__svfscanf_r+0xf28>
 1006bb4:	d8809e17 	ldw	r2,632(sp)
 1006bb8:	103fb826 	beq	r2,zero,1006a9c <__svfscanf_r+0xf38>
 1006bbc:	a880800c 	andi	r2,r21,512
 1006bc0:	1000051e 	bne	r2,zero,1006bd8 <__svfscanf_r+0x1074>
 1006bc4:	d8c09e17 	ldw	r3,632(sp)
 1006bc8:	d9009f17 	ldw	r4,636(sp)
 1006bcc:	ddc09c15 	stw	r23,624(sp)
 1006bd0:	1907c83a 	sub	r3,r3,r4
 1006bd4:	d8c09d15 	stw	r3,628(sp)
 1006bd8:	00be7fc4 	movi	r2,-1537
 1006bdc:	a884703a 	and	r2,r21,r2
 1006be0:	15406014 	ori	r21,r2,384
 1006be4:	d8009e15 	stw	zero,632(sp)
 1006be8:	003f9a06 	br	1006a54 <__svfscanf_r+0xef0>
 1006bec:	e0c03fcc 	andi	r3,fp,255
 1006bf0:	18c0201c 	xori	r3,r3,128
 1006bf4:	18ffe004 	addi	r3,r3,-128
 1006bf8:	00800084 	movi	r2,2
 1006bfc:	18bfa31e 	bne	r3,r2,1006a8c <__svfscanf_r+0xf28>
 1006c00:	070000c4 	movi	fp,3
 1006c04:	003f9306 	br	1006a54 <__svfscanf_r+0xef0>
 1006c08:	e0c03fcc 	andi	r3,fp,255
 1006c0c:	18c0201c 	xori	r3,r3,128
 1006c10:	18ffe004 	addi	r3,r3,-128
 1006c14:	008001c4 	movi	r2,7
 1006c18:	18bf9c1e 	bne	r3,r2,1006a8c <__svfscanf_r+0xf28>
 1006c1c:	07000204 	movi	fp,8
 1006c20:	003f8c06 	br	1006a54 <__svfscanf_r+0xef0>
 1006c24:	d8c09e17 	ldw	r3,632(sp)
 1006c28:	d9009f17 	ldw	r4,636(sp)
 1006c2c:	1905c83a 	sub	r2,r3,r4
 1006c30:	103ecb26 	beq	r2,zero,1006760 <__svfscanf_r+0xbfc>
 1006c34:	008dc83a 	sub	r6,zero,r2
 1006c38:	ddc09c15 	stw	r23,624(sp)
 1006c3c:	003ef506 	br	1006814 <__svfscanf_r+0xcb0>
 1006c40:	d880a417 	ldw	r2,656(sp)
 1006c44:	9009883a 	mov	r4,r18
 1006c48:	180b883a 	mov	r5,r3
 1006c4c:	15c00017 	ldw	r23,0(r2)
 1006c50:	15400104 	addi	r21,r2,4
 1006c54:	100aee80 	call	100aee8 <__isnand>
 1006c58:	1000311e 	bne	r2,zero,1006d20 <__svfscanf_r+0x11bc>
 1006c5c:	980b883a 	mov	r5,r19
 1006c60:	9009883a 	mov	r4,r18
 1006c64:	10102200 	call	1010220 <__truncdfsf2>
 1006c68:	b8800015 	stw	r2,0(r23)
 1006c6c:	003eca06 	br	1006798 <__svfscanf_r+0xc34>
 1006c70:	9000101e 	bne	r18,zero,1006cb4 <__svfscanf_r+0x1150>
 1006c74:	a8c1c00c 	andi	r3,r21,1792
 1006c78:	0081c004 	movi	r2,1792
 1006c7c:	18800926 	beq	r3,r2,1006ca4 <__svfscanf_r+0x1140>
 1006c80:	e0c03fcc 	andi	r3,fp,255
 1006c84:	18c0201c 	xori	r3,r3,128
 1006c88:	18ffe004 	addi	r3,r3,-128
 1006c8c:	00800044 	movi	r2,1
 1006c90:	18800226 	beq	r3,r2,1006c9c <__svfscanf_r+0x1138>
 1006c94:	00800104 	movi	r2,4
 1006c98:	18bf7c1e 	bne	r3,r2,1006a8c <__svfscanf_r+0xf28>
 1006c9c:	e7000044 	addi	fp,fp,1
 1006ca0:	003f6c06 	br	1006a54 <__svfscanf_r+0xef0>
 1006ca4:	00be1fc4 	movi	r2,-1921
 1006ca8:	a8aa703a 	and	r21,r21,r2
 1006cac:	04800044 	movi	r18,1
 1006cb0:	003f6806 	br	1006a54 <__svfscanf_r+0xef0>
 1006cb4:	00800084 	movi	r2,2
 1006cb8:	90bff11e 	bne	r18,r2,1006c80 <__svfscanf_r+0x111c>
 1006cbc:	048000c4 	movi	r18,3
 1006cc0:	003f6406 	br	1006a54 <__svfscanf_r+0xef0>
 1006cc4:	e0c03fcc 	andi	r3,fp,255
 1006cc8:	18c0201c 	xori	r3,r3,128
 1006ccc:	18ffe004 	addi	r3,r3,-128
 1006cd0:	1800071e 	bne	r3,zero,1006cf0 <__svfscanf_r+0x118c>
 1006cd4:	a8c1c00c 	andi	r3,r21,1792
 1006cd8:	0081c004 	movi	r2,1792
 1006cdc:	18bf6b1e 	bne	r3,r2,1006a8c <__svfscanf_r+0xf28>
 1006ce0:	00be1fc4 	movi	r2,-1921
 1006ce4:	a8aa703a 	and	r21,r21,r2
 1006ce8:	07000044 	movi	fp,1
 1006cec:	003f5906 	br	1006a54 <__svfscanf_r+0xef0>
 1006cf0:	008000c4 	movi	r2,3
 1006cf4:	18bfe926 	beq	r3,r2,1006c9c <__svfscanf_r+0x1138>
 1006cf8:	00800144 	movi	r2,5
 1006cfc:	18bfe726 	beq	r3,r2,1006c9c <__svfscanf_r+0x1138>
 1006d00:	003f6206 	br	1006a8c <__svfscanf_r+0xf28>
 1006d04:	e0c03fcc 	andi	r3,fp,255
 1006d08:	18c0201c 	xori	r3,r3,128
 1006d0c:	18ffe004 	addi	r3,r3,-128
 1006d10:	00800184 	movi	r2,6
 1006d14:	18bf5d1e 	bne	r3,r2,1006a8c <__svfscanf_r+0xf28>
 1006d18:	070001c4 	movi	fp,7
 1006d1c:	003f4d06 	br	1006a54 <__svfscanf_r+0xef0>
 1006d20:	0009883a 	mov	r4,zero
 1006d24:	100afd80 	call	100afd8 <nanf>
 1006d28:	b8800015 	stw	r2,0(r23)
 1006d2c:	003e9a06 	br	1006798 <__svfscanf_r+0xc34>
 1006d30:	a00b883a 	mov	r5,r20
 1006d34:	d9000404 	addi	r4,sp,16
 1006d38:	100af180 	call	100af18 <__sccl>
 1006d3c:	1029883a 	mov	r20,r2
 1006d40:	ad401014 	ori	r21,r21,64
 1006d44:	04800044 	movi	r18,1
 1006d48:	003c7506 	br	1005f20 <__svfscanf_r+0x3bc>
 1006d4c:	01000204 	movi	r4,8
 1006d50:	00804074 	movhi	r2,257
 1006d54:	10b39404 	addi	r2,r2,-12720
 1006d58:	ad400054 	ori	r21,r21,1
 1006d5c:	048000c4 	movi	r18,3
 1006d60:	d900a115 	stw	r4,644(sp)
 1006d64:	d880a015 	stw	r2,640(sp)
 1006d68:	003c6d06 	br	1005f20 <__svfscanf_r+0x3bc>
 1006d6c:	ad400094 	ori	r21,r21,2
 1006d70:	003bd806 	br	1005cd4 <__svfscanf_r+0x170>
 1006d74:	d900a317 	ldw	r4,652(sp)
 1006d78:	01400284 	movi	r5,10
 1006d7c:	10010a40 	call	10010a4 <__mulsi3>
 1006d80:	15c5883a 	add	r2,r2,r23
 1006d84:	10bff404 	addi	r2,r2,-48
 1006d88:	d880a315 	stw	r2,652(sp)
 1006d8c:	003bd106 	br	1005cd4 <__svfscanf_r+0x170>
 1006d90:	ad400414 	ori	r21,r21,16
 1006d94:	003bcf06 	br	1005cd4 <__svfscanf_r+0x170>
 1006d98:	00800404 	movi	r2,16
 1006d9c:	00c04074 	movhi	r3,257
 1006da0:	18f39404 	addi	r3,r3,-12720
 1006da4:	ad408014 	ori	r21,r21,512
 1006da8:	048000c4 	movi	r18,3
 1006dac:	d880a115 	stw	r2,644(sp)
 1006db0:	d8c0a015 	stw	r3,640(sp)
 1006db4:	003c5a06 	br	1005f20 <__svfscanf_r+0x3bc>
 1006db8:	00c00284 	movi	r3,10
 1006dbc:	01004074 	movhi	r4,257
 1006dc0:	21339404 	addi	r4,r4,-12720
 1006dc4:	048000c4 	movi	r18,3
 1006dc8:	d8c0a115 	stw	r3,644(sp)
 1006dcc:	d900a015 	stw	r4,640(sp)
 1006dd0:	003c5306 	br	1005f20 <__svfscanf_r+0x3bc>
 1006dd4:	00c04074 	movhi	r3,257
 1006dd8:	18f23104 	addi	r3,r3,-14140
 1006ddc:	048000c4 	movi	r18,3
 1006de0:	d8c0a015 	stw	r3,640(sp)
 1006de4:	d800a115 	stw	zero,644(sp)
 1006de8:	003c4d06 	br	1005f20 <__svfscanf_r+0x3bc>
 1006dec:	d8c0a117 	ldw	r3,644(sp)
 1006df0:	18c5883a 	add	r2,r3,r3
 1006df4:	00c04074 	movhi	r3,257
 1006df8:	18cd5884 	addi	r3,r3,13666
 1006dfc:	10c5883a 	add	r2,r2,r3
 1006e00:	1080000f 	ldh	r2,0(r2)
 1006e04:	00fd1fc4 	movi	r3,-2945
 1006e08:	90e4703a 	and	r18,r18,r3
 1006e0c:	d880a115 	stw	r2,644(sp)
 1006e10:	003de806 	br	10065b4 <__svfscanf_r+0xa50>
 1006e14:	d900a117 	ldw	r4,644(sp)
 1006e18:	00c04074 	movhi	r3,257
 1006e1c:	18cd5884 	addi	r3,r3,13666
 1006e20:	2105883a 	add	r2,r4,r4
 1006e24:	10c5883a 	add	r2,r2,r3
 1006e28:	1080000f 	ldh	r2,0(r2)
 1006e2c:	00c00204 	movi	r3,8
 1006e30:	d880a115 	stw	r2,644(sp)
 1006e34:	18bd870e 	bge	r3,r2,1006454 <__svfscanf_r+0x8f0>
 1006e38:	00bd1fc4 	movi	r2,-2945
 1006e3c:	90a4703a 	and	r18,r18,r2
 1006e40:	003ddc06 	br	10065b4 <__svfscanf_r+0xa50>
 1006e44:	d8c0a117 	ldw	r3,644(sp)
 1006e48:	00800284 	movi	r2,10
 1006e4c:	10fffa16 	blt	r2,r3,1006e38 <__svfscanf_r+0x12d4>
 1006e50:	003d8006 	br	1006454 <__svfscanf_r+0x8f0>
 1006e54:	90c1800c 	andi	r3,r18,1536
 1006e58:	00808004 	movi	r2,512
 1006e5c:	18bd7d1e 	bne	r3,r2,1006454 <__svfscanf_r+0x8f0>
 1006e60:	00bf7fc4 	movi	r2,-513
 1006e64:	9084703a 	and	r2,r18,r2
 1006e68:	01000404 	movi	r4,16
 1006e6c:	14814014 	ori	r18,r2,1280
 1006e70:	d900a115 	stw	r4,644(sp)
 1006e74:	003dcf06 	br	10065b4 <__svfscanf_r+0xa50>
 1006e78:	04800104 	movi	r18,4
 1006e7c:	003c2806 	br	1005f20 <__svfscanf_r+0x3bc>
 1006e80:	ad401014 	ori	r21,r21,64
 1006e84:	0025883a 	mov	r18,zero
 1006e88:	003c2506 	br	1005f20 <__svfscanf_r+0x3bc>
 1006e8c:	ad400114 	ori	r21,r21,4
 1006e90:	003b9006 	br	1005cd4 <__svfscanf_r+0x170>
 1006e94:	0027883a 	mov	r19,zero
 1006e98:	003cac06 	br	100614c <__svfscanf_r+0x5e8>
 1006e9c:	903d5226 	beq	r18,zero,10063e8 <__svfscanf_r+0x884>
 1006ea0:	94bfffc4 	addi	r18,r18,-1
 1006ea4:	d8c04404 	addi	r3,sp,272
 1006ea8:	1c85883a 	add	r2,r3,r18
 1006eac:	11400003 	ldbu	r5,0(r2)
 1006eb0:	b009883a 	mov	r4,r22
 1006eb4:	800d883a 	mov	r6,r16
 1006eb8:	100d4800 	call	100d480 <_ungetc_r>
 1006ebc:	003ff706 	br	1006e9c <__svfscanf_r+0x1338>
 1006ec0:	00bfff84 	movi	r2,-2
 1006ec4:	18bd361e 	bne	r3,r2,10063a0 <__svfscanf_r+0x83c>
 1006ec8:	003d4006 	br	10063cc <__svfscanf_r+0x868>
 1006ecc:	d900a417 	ldw	r4,656(sp)
 1006ed0:	25400017 	ldw	r21,0(r4)
 1006ed4:	21000104 	addi	r4,r4,4
 1006ed8:	d900a415 	stw	r4,656(sp)
 1006edc:	003d0606 	br	10062f8 <__svfscanf_r+0x794>
 1006ee0:	983b5526 	beq	r19,zero,1005c38 <__svfscanf_r+0xd4>
 1006ee4:	8ce3883a 	add	r17,r17,r19
 1006ee8:	003b3106 	br	1005bb0 <__svfscanf_r+0x4c>
 1006eec:	00bfff84 	movi	r2,-2
 1006ef0:	18bc621e 	bne	r3,r2,100607c <__svfscanf_r+0x518>
 1006ef4:	003c6906 	br	100609c <__svfscanf_r+0x538>
 1006ef8:	b009883a 	mov	r4,r22
 1006efc:	800b883a 	mov	r5,r16
 1006f00:	10036100 	call	1003610 <__srefill_r>
 1006f04:	103c6726 	beq	r2,zero,10060a4 <__svfscanf_r+0x540>
 1006f08:	903b6b1e 	bne	r18,zero,1005cb8 <__svfscanf_r+0x154>
 1006f0c:	a83b281e 	bne	r21,zero,1005bb0 <__svfscanf_r+0x4c>
 1006f10:	d8c0a217 	ldw	r3,648(sp)
 1006f14:	18c00044 	addi	r3,r3,1
 1006f18:	d8c0a215 	stw	r3,648(sp)
 1006f1c:	003b2406 	br	1005bb0 <__svfscanf_r+0x4c>
 1006f20:	8080030b 	ldhu	r2,12(r16)
 1006f24:	1080100c 	andi	r2,r2,64
 1006f28:	103b4326 	beq	r2,zero,1005c38 <__svfscanf_r+0xd4>
 1006f2c:	003b6406 	br	1005cc0 <__svfscanf_r+0x15c>
 1006f30:	d8c0a417 	ldw	r3,656(sp)
 1006f34:	1cc00017 	ldw	r19,0(r3)
 1006f38:	18c00104 	addi	r3,r3,4
 1006f3c:	d8c0a415 	stw	r3,656(sp)
 1006f40:	003c2906 	br	1005fe8 <__svfscanf_r+0x484>
 1006f44:	00800204 	movi	r2,8
 1006f48:	00c04074 	movhi	r3,257
 1006f4c:	18f39404 	addi	r3,r3,-12720
 1006f50:	048000c4 	movi	r18,3
 1006f54:	d880a115 	stw	r2,644(sp)
 1006f58:	d8c0a015 	stw	r3,640(sp)
 1006f5c:	003bf006 	br	1005f20 <__svfscanf_r+0x3bc>
 1006f60:	04800084 	movi	r18,2
 1006f64:	003bee06 	br	1005f20 <__svfscanf_r+0x3bc>
 1006f68:	01000404 	movi	r4,16
 1006f6c:	00804074 	movhi	r2,257
 1006f70:	10b39404 	addi	r2,r2,-12720
 1006f74:	ad408814 	ori	r21,r21,544
 1006f78:	048000c4 	movi	r18,3
 1006f7c:	d900a115 	stw	r4,644(sp)
 1006f80:	d880a015 	stw	r2,640(sp)
 1006f84:	003be606 	br	1005f20 <__svfscanf_r+0x3bc>
 1006f88:	a880040c 	andi	r2,r21,16
 1006f8c:	103b081e 	bne	r2,zero,1005bb0 <__svfscanf_r+0x4c>
 1006f90:	a880010c 	andi	r2,r21,4
 1006f94:	10004e26 	beq	r2,zero,10070d0 <__svfscanf_r+0x156c>
 1006f98:	d8c0a417 	ldw	r3,656(sp)
 1006f9c:	18800017 	ldw	r2,0(r3)
 1006fa0:	18c00104 	addi	r3,r3,4
 1006fa4:	d8c0a415 	stw	r3,656(sp)
 1006fa8:	1440000d 	sth	r17,0(r2)
 1006fac:	003b0006 	br	1005bb0 <__svfscanf_r+0x4c>
 1006fb0:	d880a417 	ldw	r2,656(sp)
 1006fb4:	dd400404 	addi	r21,sp,16
 1006fb8:	14800017 	ldw	r18,0(r2)
 1006fbc:	9027883a 	mov	r19,r18
 1006fc0:	81000017 	ldw	r4,0(r16)
 1006fc4:	20800003 	ldbu	r2,0(r4)
 1006fc8:	a885883a 	add	r2,r21,r2
 1006fcc:	10c00007 	ldb	r3,0(r2)
 1006fd0:	18001426 	beq	r3,zero,1007024 <__svfscanf_r+0x14c0>
 1006fd4:	d8c0a317 	ldw	r3,652(sp)
 1006fd8:	80800117 	ldw	r2,4(r16)
 1006fdc:	21800044 	addi	r6,r4,1
 1006fe0:	18ffffc4 	addi	r3,r3,-1
 1006fe4:	d8c0a315 	stw	r3,652(sp)
 1006fe8:	10ffffc4 	addi	r3,r2,-1
 1006fec:	80c00115 	stw	r3,4(r16)
 1006ff0:	20800003 	ldbu	r2,0(r4)
 1006ff4:	90800005 	stb	r2,0(r18)
 1006ff8:	d900a317 	ldw	r4,652(sp)
 1006ffc:	81800015 	stw	r6,0(r16)
 1007000:	94800044 	addi	r18,r18,1
 1007004:	20000726 	beq	r4,zero,1007024 <__svfscanf_r+0x14c0>
 1007008:	80800117 	ldw	r2,4(r16)
 100700c:	00bfec16 	blt	zero,r2,1006fc0 <__svfscanf_r+0x145c>
 1007010:	b009883a 	mov	r4,r22
 1007014:	800b883a 	mov	r5,r16
 1007018:	10036100 	call	1003610 <__srefill_r>
 100701c:	103fe826 	beq	r2,zero,1006fc0 <__svfscanf_r+0x145c>
 1007020:	9cbb2526 	beq	r19,r18,1005cb8 <__svfscanf_r+0x154>
 1007024:	94e7c83a 	sub	r19,r18,r19
 1007028:	983b0326 	beq	r19,zero,1005c38 <__svfscanf_r+0xd4>
 100702c:	90000005 	stb	zero,0(r18)
 1007030:	d880a417 	ldw	r2,656(sp)
 1007034:	d8c0a217 	ldw	r3,648(sp)
 1007038:	8ce3883a 	add	r17,r17,r19
 100703c:	10800104 	addi	r2,r2,4
 1007040:	18c00044 	addi	r3,r3,1
 1007044:	d880a415 	stw	r2,656(sp)
 1007048:	d8c0a215 	stw	r3,648(sp)
 100704c:	003ad806 	br	1005bb0 <__svfscanf_r+0x4c>
 1007050:	d900a517 	ldw	r4,660(sp)
 1007054:	25faf82e 	bgeu	r4,r23,1005c38 <__svfscanf_r+0xd4>
 1007058:	bdffffc4 	addi	r23,r23,-1
 100705c:	b9400007 	ldb	r5,0(r23)
 1007060:	b009883a 	mov	r4,r22
 1007064:	800d883a 	mov	r6,r16
 1007068:	100d4800 	call	100d480 <_ungetc_r>
 100706c:	d8c0a517 	ldw	r3,660(sp)
 1007070:	1dfff936 	bltu	r3,r23,1007058 <__svfscanf_r+0x14f4>
 1007074:	003af006 	br	1005c38 <__svfscanf_r+0xd4>
 1007078:	a880040c 	andi	r2,r21,16
 100707c:	10002d26 	beq	r2,zero,1007134 <__svfscanf_r+0x15d0>
 1007080:	0025883a 	mov	r18,zero
 1007084:	00000906 	br	10070ac <__svfscanf_r+0x1548>
 1007088:	80c00117 	ldw	r3,4(r16)
 100708c:	d880a317 	ldw	r2,652(sp)
 1007090:	29800044 	addi	r6,r5,1
 1007094:	18ffffc4 	addi	r3,r3,-1
 1007098:	94800044 	addi	r18,r18,1
 100709c:	81800015 	stw	r6,0(r16)
 10070a0:	80c00115 	stw	r3,4(r16)
 10070a4:	14800826 	beq	r2,r18,10070c8 <__svfscanf_r+0x1564>
 10070a8:	00c0120e 	bge	zero,r3,10070f4 <__svfscanf_r+0x1590>
 10070ac:	81400017 	ldw	r5,0(r16)
 10070b0:	98800017 	ldw	r2,0(r19)
 10070b4:	28c00003 	ldbu	r3,0(r5)
 10070b8:	1887883a 	add	r3,r3,r2
 10070bc:	19000003 	ldbu	r4,0(r3)
 10070c0:	2100020c 	andi	r4,r4,8
 10070c4:	203ff026 	beq	r4,zero,1007088 <__svfscanf_r+0x1524>
 10070c8:	8ca3883a 	add	r17,r17,r18
 10070cc:	003ab806 	br	1005bb0 <__svfscanf_r+0x4c>
 10070d0:	a880004c 	andi	r2,r21,1
 10070d4:	1005003a 	cmpeq	r2,r2,zero
 10070d8:	10000b1e 	bne	r2,zero,1007108 <__svfscanf_r+0x15a4>
 10070dc:	d900a417 	ldw	r4,656(sp)
 10070e0:	20800017 	ldw	r2,0(r4)
 10070e4:	21000104 	addi	r4,r4,4
 10070e8:	d900a415 	stw	r4,656(sp)
 10070ec:	14400015 	stw	r17,0(r2)
 10070f0:	003aaf06 	br	1005bb0 <__svfscanf_r+0x4c>
 10070f4:	b009883a 	mov	r4,r22
 10070f8:	800b883a 	mov	r5,r16
 10070fc:	10036100 	call	1003610 <__srefill_r>
 1007100:	103fea26 	beq	r2,zero,10070ac <__svfscanf_r+0x1548>
 1007104:	003ff006 	br	10070c8 <__svfscanf_r+0x1564>
 1007108:	a880008c 	andi	r2,r21,2
 100710c:	10002c26 	beq	r2,zero,10071c0 <__svfscanf_r+0x165c>
 1007110:	d8c0a417 	ldw	r3,656(sp)
 1007114:	d900a417 	ldw	r4,656(sp)
 1007118:	18800017 	ldw	r2,0(r3)
 100711c:	8807d7fa 	srai	r3,r17,31
 1007120:	21000104 	addi	r4,r4,4
 1007124:	d900a415 	stw	r4,656(sp)
 1007128:	14400015 	stw	r17,0(r2)
 100712c:	10c00115 	stw	r3,4(r2)
 1007130:	003a9f06 	br	1005bb0 <__svfscanf_r+0x4c>
 1007134:	d8c0a417 	ldw	r3,656(sp)
 1007138:	1d400017 	ldw	r21,0(r3)
 100713c:	a825883a 	mov	r18,r21
 1007140:	00000e06 	br	100717c <__svfscanf_r+0x1618>
 1007144:	80800117 	ldw	r2,4(r16)
 1007148:	d900a317 	ldw	r4,652(sp)
 100714c:	29800044 	addi	r6,r5,1
 1007150:	10ffffc4 	addi	r3,r2,-1
 1007154:	213fffc4 	addi	r4,r4,-1
 1007158:	d900a315 	stw	r4,652(sp)
 100715c:	80c00115 	stw	r3,4(r16)
 1007160:	28800003 	ldbu	r2,0(r5)
 1007164:	90800005 	stb	r2,0(r18)
 1007168:	81800015 	stw	r6,0(r16)
 100716c:	94800044 	addi	r18,r18,1
 1007170:	20000926 	beq	r4,zero,1007198 <__svfscanf_r+0x1634>
 1007174:	80800117 	ldw	r2,4(r16)
 1007178:	0080170e 	bge	zero,r2,10071d8 <__svfscanf_r+0x1674>
 100717c:	81400017 	ldw	r5,0(r16)
 1007180:	98800017 	ldw	r2,0(r19)
 1007184:	28c00003 	ldbu	r3,0(r5)
 1007188:	1887883a 	add	r3,r3,r2
 100718c:	19000003 	ldbu	r4,0(r3)
 1007190:	2100020c 	andi	r4,r4,8
 1007194:	203feb26 	beq	r4,zero,1007144 <__svfscanf_r+0x15e0>
 1007198:	9545c83a 	sub	r2,r18,r21
 100719c:	d8c0a217 	ldw	r3,648(sp)
 10071a0:	88a3883a 	add	r17,r17,r2
 10071a4:	d880a417 	ldw	r2,656(sp)
 10071a8:	18c00044 	addi	r3,r3,1
 10071ac:	d8c0a215 	stw	r3,648(sp)
 10071b0:	10800104 	addi	r2,r2,4
 10071b4:	d880a415 	stw	r2,656(sp)
 10071b8:	90000005 	stb	zero,0(r18)
 10071bc:	003a7c06 	br	1005bb0 <__svfscanf_r+0x4c>
 10071c0:	d8c0a417 	ldw	r3,656(sp)
 10071c4:	18800017 	ldw	r2,0(r3)
 10071c8:	18c00104 	addi	r3,r3,4
 10071cc:	d8c0a415 	stw	r3,656(sp)
 10071d0:	14400015 	stw	r17,0(r2)
 10071d4:	003a7606 	br	1005bb0 <__svfscanf_r+0x4c>
 10071d8:	b009883a 	mov	r4,r22
 10071dc:	800b883a 	mov	r5,r16
 10071e0:	10036100 	call	1003610 <__srefill_r>
 10071e4:	103fe526 	beq	r2,zero,100717c <__svfscanf_r+0x1618>
 10071e8:	003feb06 	br	1007198 <__svfscanf_r+0x1634>

010071ec <__svfscanf>:
 10071ec:	00804074 	movhi	r2,257
 10071f0:	10915504 	addi	r2,r2,17748
 10071f4:	2013883a 	mov	r9,r4
 10071f8:	11000017 	ldw	r4,0(r2)
 10071fc:	2805883a 	mov	r2,r5
 1007200:	300f883a 	mov	r7,r6
 1007204:	480b883a 	mov	r5,r9
 1007208:	100d883a 	mov	r6,r2
 100720c:	1005b641 	jmpi	1005b64 <__svfscanf_r>

01007210 <_vfscanf_r>:
 1007210:	defffb04 	addi	sp,sp,-20
 1007214:	dcc00315 	stw	r19,12(sp)
 1007218:	dc800215 	stw	r18,8(sp)
 100721c:	dc400115 	stw	r17,4(sp)
 1007220:	dc000015 	stw	r16,0(sp)
 1007224:	dfc00415 	stw	ra,16(sp)
 1007228:	2021883a 	mov	r16,r4
 100722c:	2823883a 	mov	r17,r5
 1007230:	3025883a 	mov	r18,r6
 1007234:	3827883a 	mov	r19,r7
 1007238:	20000226 	beq	r4,zero,1007244 <_vfscanf_r+0x34>
 100723c:	20800e17 	ldw	r2,56(r4)
 1007240:	10000b26 	beq	r2,zero,1007270 <_vfscanf_r+0x60>
 1007244:	8009883a 	mov	r4,r16
 1007248:	880b883a 	mov	r5,r17
 100724c:	900d883a 	mov	r6,r18
 1007250:	980f883a 	mov	r7,r19
 1007254:	dfc00417 	ldw	ra,16(sp)
 1007258:	dcc00317 	ldw	r19,12(sp)
 100725c:	dc800217 	ldw	r18,8(sp)
 1007260:	dc400117 	ldw	r17,4(sp)
 1007264:	dc000017 	ldw	r16,0(sp)
 1007268:	dec00504 	addi	sp,sp,20
 100726c:	1005b641 	jmpi	1005b64 <__svfscanf_r>
 1007270:	10017200 	call	1001720 <__sinit>
 1007274:	003ff306 	br	1007244 <_vfscanf_r+0x34>

01007278 <vfscanf>:
 1007278:	defffb04 	addi	sp,sp,-20
 100727c:	dcc00315 	stw	r19,12(sp)
 1007280:	04c04074 	movhi	r19,257
 1007284:	9cd15504 	addi	r19,r19,17748
 1007288:	98c00017 	ldw	r3,0(r19)
 100728c:	dc800215 	stw	r18,8(sp)
 1007290:	dc400115 	stw	r17,4(sp)
 1007294:	dc000015 	stw	r16,0(sp)
 1007298:	dfc00415 	stw	ra,16(sp)
 100729c:	2021883a 	mov	r16,r4
 10072a0:	2823883a 	mov	r17,r5
 10072a4:	3025883a 	mov	r18,r6
 10072a8:	18000326 	beq	r3,zero,10072b8 <vfscanf+0x40>
 10072ac:	18800e17 	ldw	r2,56(r3)
 10072b0:	1809883a 	mov	r4,r3
 10072b4:	10000b26 	beq	r2,zero,10072e4 <vfscanf+0x6c>
 10072b8:	99000017 	ldw	r4,0(r19)
 10072bc:	800b883a 	mov	r5,r16
 10072c0:	880d883a 	mov	r6,r17
 10072c4:	900f883a 	mov	r7,r18
 10072c8:	dfc00417 	ldw	ra,16(sp)
 10072cc:	dcc00317 	ldw	r19,12(sp)
 10072d0:	dc800217 	ldw	r18,8(sp)
 10072d4:	dc400117 	ldw	r17,4(sp)
 10072d8:	dc000017 	ldw	r16,0(sp)
 10072dc:	dec00504 	addi	sp,sp,20
 10072e0:	1005b641 	jmpi	1005b64 <__svfscanf_r>
 10072e4:	10017200 	call	1001720 <__sinit>
 10072e8:	003ff306 	br	10072b8 <vfscanf+0x40>

010072ec <_write_r>:
 10072ec:	defffd04 	addi	sp,sp,-12
 10072f0:	dc000015 	stw	r16,0(sp)
 10072f4:	04004074 	movhi	r16,257
 10072f8:	84142904 	addi	r16,r16,20644
 10072fc:	dc400115 	stw	r17,4(sp)
 1007300:	80000015 	stw	zero,0(r16)
 1007304:	2023883a 	mov	r17,r4
 1007308:	2809883a 	mov	r4,r5
 100730c:	300b883a 	mov	r5,r6
 1007310:	380d883a 	mov	r6,r7
 1007314:	dfc00215 	stw	ra,8(sp)
 1007318:	10119780 	call	1011978 <write>
 100731c:	1007883a 	mov	r3,r2
 1007320:	00bfffc4 	movi	r2,-1
 1007324:	18800626 	beq	r3,r2,1007340 <_write_r+0x54>
 1007328:	1805883a 	mov	r2,r3
 100732c:	dfc00217 	ldw	ra,8(sp)
 1007330:	dc400117 	ldw	r17,4(sp)
 1007334:	dc000017 	ldw	r16,0(sp)
 1007338:	dec00304 	addi	sp,sp,12
 100733c:	f800283a 	ret
 1007340:	80800017 	ldw	r2,0(r16)
 1007344:	103ff826 	beq	r2,zero,1007328 <_write_r+0x3c>
 1007348:	88800015 	stw	r2,0(r17)
 100734c:	1805883a 	mov	r2,r3
 1007350:	dfc00217 	ldw	ra,8(sp)
 1007354:	dc400117 	ldw	r17,4(sp)
 1007358:	dc000017 	ldw	r16,0(sp)
 100735c:	dec00304 	addi	sp,sp,12
 1007360:	f800283a 	ret

01007364 <__swsetup_r>:
 1007364:	00804074 	movhi	r2,257
 1007368:	10915504 	addi	r2,r2,17748
 100736c:	10c00017 	ldw	r3,0(r2)
 1007370:	defffd04 	addi	sp,sp,-12
 1007374:	dc400115 	stw	r17,4(sp)
 1007378:	dc000015 	stw	r16,0(sp)
 100737c:	dfc00215 	stw	ra,8(sp)
 1007380:	2023883a 	mov	r17,r4
 1007384:	2821883a 	mov	r16,r5
 1007388:	18000226 	beq	r3,zero,1007394 <__swsetup_r+0x30>
 100738c:	18800e17 	ldw	r2,56(r3)
 1007390:	10001f26 	beq	r2,zero,1007410 <__swsetup_r+0xac>
 1007394:	8100030b 	ldhu	r4,12(r16)
 1007398:	2080020c 	andi	r2,r4,8
 100739c:	10002826 	beq	r2,zero,1007440 <__swsetup_r+0xdc>
 10073a0:	81400417 	ldw	r5,16(r16)
 10073a4:	28001d26 	beq	r5,zero,100741c <__swsetup_r+0xb8>
 10073a8:	2080004c 	andi	r2,r4,1
 10073ac:	1005003a 	cmpeq	r2,r2,zero
 10073b0:	10000b26 	beq	r2,zero,10073e0 <__swsetup_r+0x7c>
 10073b4:	2080008c 	andi	r2,r4,2
 10073b8:	10001226 	beq	r2,zero,1007404 <__swsetup_r+0xa0>
 10073bc:	0005883a 	mov	r2,zero
 10073c0:	80800215 	stw	r2,8(r16)
 10073c4:	28000b26 	beq	r5,zero,10073f4 <__swsetup_r+0x90>
 10073c8:	0005883a 	mov	r2,zero
 10073cc:	dfc00217 	ldw	ra,8(sp)
 10073d0:	dc400117 	ldw	r17,4(sp)
 10073d4:	dc000017 	ldw	r16,0(sp)
 10073d8:	dec00304 	addi	sp,sp,12
 10073dc:	f800283a 	ret
 10073e0:	80800517 	ldw	r2,20(r16)
 10073e4:	80000215 	stw	zero,8(r16)
 10073e8:	0085c83a 	sub	r2,zero,r2
 10073ec:	80800615 	stw	r2,24(r16)
 10073f0:	283ff51e 	bne	r5,zero,10073c8 <__swsetup_r+0x64>
 10073f4:	2080200c 	andi	r2,r4,128
 10073f8:	103ff326 	beq	r2,zero,10073c8 <__swsetup_r+0x64>
 10073fc:	00bfffc4 	movi	r2,-1
 1007400:	003ff206 	br	10073cc <__swsetup_r+0x68>
 1007404:	80800517 	ldw	r2,20(r16)
 1007408:	80800215 	stw	r2,8(r16)
 100740c:	003fed06 	br	10073c4 <__swsetup_r+0x60>
 1007410:	1809883a 	mov	r4,r3
 1007414:	10017200 	call	1001720 <__sinit>
 1007418:	003fde06 	br	1007394 <__swsetup_r+0x30>
 100741c:	20c0a00c 	andi	r3,r4,640
 1007420:	00808004 	movi	r2,512
 1007424:	18bfe026 	beq	r3,r2,10073a8 <__swsetup_r+0x44>
 1007428:	8809883a 	mov	r4,r17
 100742c:	800b883a 	mov	r5,r16
 1007430:	10029540 	call	1002954 <__smakebuf_r>
 1007434:	8100030b 	ldhu	r4,12(r16)
 1007438:	81400417 	ldw	r5,16(r16)
 100743c:	003fda06 	br	10073a8 <__swsetup_r+0x44>
 1007440:	2080040c 	andi	r2,r4,16
 1007444:	103fed26 	beq	r2,zero,10073fc <__swsetup_r+0x98>
 1007448:	2080010c 	andi	r2,r4,4
 100744c:	10001226 	beq	r2,zero,1007498 <__swsetup_r+0x134>
 1007450:	81400c17 	ldw	r5,48(r16)
 1007454:	28000526 	beq	r5,zero,100746c <__swsetup_r+0x108>
 1007458:	80801004 	addi	r2,r16,64
 100745c:	28800226 	beq	r5,r2,1007468 <__swsetup_r+0x104>
 1007460:	8809883a 	mov	r4,r17
 1007464:	1001e940 	call	1001e94 <_free_r>
 1007468:	80000c15 	stw	zero,48(r16)
 100746c:	8080030b 	ldhu	r2,12(r16)
 1007470:	81400417 	ldw	r5,16(r16)
 1007474:	80000115 	stw	zero,4(r16)
 1007478:	10bff6cc 	andi	r2,r2,65499
 100747c:	8080030d 	sth	r2,12(r16)
 1007480:	81400015 	stw	r5,0(r16)
 1007484:	8080030b 	ldhu	r2,12(r16)
 1007488:	10800214 	ori	r2,r2,8
 100748c:	113fffcc 	andi	r4,r2,65535
 1007490:	8080030d 	sth	r2,12(r16)
 1007494:	003fc306 	br	10073a4 <__swsetup_r+0x40>
 1007498:	81400417 	ldw	r5,16(r16)
 100749c:	003ff906 	br	1007484 <__swsetup_r+0x120>

010074a0 <register_fini>:
 10074a0:	f800283a 	ret

010074a4 <__call_exitprocs>:
 10074a4:	00804074 	movhi	r2,257
 10074a8:	10915604 	addi	r2,r2,17752
 10074ac:	10800017 	ldw	r2,0(r2)
 10074b0:	defff304 	addi	sp,sp,-52
 10074b4:	df000b15 	stw	fp,44(sp)
 10074b8:	d8800115 	stw	r2,4(sp)
 10074bc:	00804034 	movhi	r2,256
 10074c0:	108aba04 	addi	r2,r2,10984
 10074c4:	1005003a 	cmpeq	r2,r2,zero
 10074c8:	d8800215 	stw	r2,8(sp)
 10074cc:	d8800117 	ldw	r2,4(sp)
 10074d0:	dd400815 	stw	r21,32(sp)
 10074d4:	dd000715 	stw	r20,28(sp)
 10074d8:	10805204 	addi	r2,r2,328
 10074dc:	dfc00c15 	stw	ra,48(sp)
 10074e0:	ddc00a15 	stw	r23,40(sp)
 10074e4:	dd800915 	stw	r22,36(sp)
 10074e8:	dcc00615 	stw	r19,24(sp)
 10074ec:	dc800515 	stw	r18,20(sp)
 10074f0:	dc400415 	stw	r17,16(sp)
 10074f4:	dc000315 	stw	r16,12(sp)
 10074f8:	282b883a 	mov	r21,r5
 10074fc:	2039883a 	mov	fp,r4
 1007500:	d8800015 	stw	r2,0(sp)
 1007504:	2829003a 	cmpeq	r20,r5,zero
 1007508:	d8800117 	ldw	r2,4(sp)
 100750c:	14405217 	ldw	r17,328(r2)
 1007510:	88001026 	beq	r17,zero,1007554 <__call_exitprocs+0xb0>
 1007514:	ddc00017 	ldw	r23,0(sp)
 1007518:	88800117 	ldw	r2,4(r17)
 100751c:	8c802204 	addi	r18,r17,136
 1007520:	143fffc4 	addi	r16,r2,-1
 1007524:	80000916 	blt	r16,zero,100754c <__call_exitprocs+0xa8>
 1007528:	05bfffc4 	movi	r22,-1
 100752c:	a000151e 	bne	r20,zero,1007584 <__call_exitprocs+0xe0>
 1007530:	8409883a 	add	r4,r16,r16
 1007534:	2105883a 	add	r2,r4,r4
 1007538:	1485883a 	add	r2,r2,r18
 100753c:	10c02017 	ldw	r3,128(r2)
 1007540:	a8c01126 	beq	r21,r3,1007588 <__call_exitprocs+0xe4>
 1007544:	843fffc4 	addi	r16,r16,-1
 1007548:	85bff81e 	bne	r16,r22,100752c <__call_exitprocs+0x88>
 100754c:	d8800217 	ldw	r2,8(sp)
 1007550:	10003126 	beq	r2,zero,1007618 <__call_exitprocs+0x174>
 1007554:	dfc00c17 	ldw	ra,48(sp)
 1007558:	df000b17 	ldw	fp,44(sp)
 100755c:	ddc00a17 	ldw	r23,40(sp)
 1007560:	dd800917 	ldw	r22,36(sp)
 1007564:	dd400817 	ldw	r21,32(sp)
 1007568:	dd000717 	ldw	r20,28(sp)
 100756c:	dcc00617 	ldw	r19,24(sp)
 1007570:	dc800517 	ldw	r18,20(sp)
 1007574:	dc400417 	ldw	r17,16(sp)
 1007578:	dc000317 	ldw	r16,12(sp)
 100757c:	dec00d04 	addi	sp,sp,52
 1007580:	f800283a 	ret
 1007584:	8409883a 	add	r4,r16,r16
 1007588:	88c00117 	ldw	r3,4(r17)
 100758c:	2105883a 	add	r2,r4,r4
 1007590:	1445883a 	add	r2,r2,r17
 1007594:	18ffffc4 	addi	r3,r3,-1
 1007598:	11800217 	ldw	r6,8(r2)
 100759c:	1c001526 	beq	r3,r16,10075f4 <__call_exitprocs+0x150>
 10075a0:	10000215 	stw	zero,8(r2)
 10075a4:	303fe726 	beq	r6,zero,1007544 <__call_exitprocs+0xa0>
 10075a8:	00c00044 	movi	r3,1
 10075ac:	1c06983a 	sll	r3,r3,r16
 10075b0:	90804017 	ldw	r2,256(r18)
 10075b4:	8cc00117 	ldw	r19,4(r17)
 10075b8:	1884703a 	and	r2,r3,r2
 10075bc:	10001426 	beq	r2,zero,1007610 <__call_exitprocs+0x16c>
 10075c0:	90804117 	ldw	r2,260(r18)
 10075c4:	1884703a 	and	r2,r3,r2
 10075c8:	10000c1e 	bne	r2,zero,10075fc <__call_exitprocs+0x158>
 10075cc:	2105883a 	add	r2,r4,r4
 10075d0:	1485883a 	add	r2,r2,r18
 10075d4:	11400017 	ldw	r5,0(r2)
 10075d8:	e009883a 	mov	r4,fp
 10075dc:	303ee83a 	callr	r6
 10075e0:	88800117 	ldw	r2,4(r17)
 10075e4:	98bfc81e 	bne	r19,r2,1007508 <__call_exitprocs+0x64>
 10075e8:	b8800017 	ldw	r2,0(r23)
 10075ec:	147fd526 	beq	r2,r17,1007544 <__call_exitprocs+0xa0>
 10075f0:	003fc506 	br	1007508 <__call_exitprocs+0x64>
 10075f4:	8c000115 	stw	r16,4(r17)
 10075f8:	003fea06 	br	10075a4 <__call_exitprocs+0x100>
 10075fc:	2105883a 	add	r2,r4,r4
 1007600:	1485883a 	add	r2,r2,r18
 1007604:	11000017 	ldw	r4,0(r2)
 1007608:	303ee83a 	callr	r6
 100760c:	003ff406 	br	10075e0 <__call_exitprocs+0x13c>
 1007610:	303ee83a 	callr	r6
 1007614:	003ff206 	br	10075e0 <__call_exitprocs+0x13c>
 1007618:	88800117 	ldw	r2,4(r17)
 100761c:	1000081e 	bne	r2,zero,1007640 <__call_exitprocs+0x19c>
 1007620:	89000017 	ldw	r4,0(r17)
 1007624:	20000726 	beq	r4,zero,1007644 <__call_exitprocs+0x1a0>
 1007628:	b9000015 	stw	r4,0(r23)
 100762c:	8809883a 	mov	r4,r17
 1007630:	1002ae80 	call	1002ae8 <free>
 1007634:	bc400017 	ldw	r17,0(r23)
 1007638:	883fb71e 	bne	r17,zero,1007518 <__call_exitprocs+0x74>
 100763c:	003fc506 	br	1007554 <__call_exitprocs+0xb0>
 1007640:	89000017 	ldw	r4,0(r17)
 1007644:	882f883a 	mov	r23,r17
 1007648:	2023883a 	mov	r17,r4
 100764c:	883fb21e 	bne	r17,zero,1007518 <__call_exitprocs+0x74>
 1007650:	003fc006 	br	1007554 <__call_exitprocs+0xb0>

01007654 <_close_r>:
 1007654:	defffd04 	addi	sp,sp,-12
 1007658:	dc000015 	stw	r16,0(sp)
 100765c:	04004074 	movhi	r16,257
 1007660:	84142904 	addi	r16,r16,20644
 1007664:	dc400115 	stw	r17,4(sp)
 1007668:	80000015 	stw	zero,0(r16)
 100766c:	2023883a 	mov	r17,r4
 1007670:	2809883a 	mov	r4,r5
 1007674:	dfc00215 	stw	ra,8(sp)
 1007678:	1010cb80 	call	1010cb8 <close>
 100767c:	1007883a 	mov	r3,r2
 1007680:	00bfffc4 	movi	r2,-1
 1007684:	18800626 	beq	r3,r2,10076a0 <_close_r+0x4c>
 1007688:	1805883a 	mov	r2,r3
 100768c:	dfc00217 	ldw	ra,8(sp)
 1007690:	dc400117 	ldw	r17,4(sp)
 1007694:	dc000017 	ldw	r16,0(sp)
 1007698:	dec00304 	addi	sp,sp,12
 100769c:	f800283a 	ret
 10076a0:	80800017 	ldw	r2,0(r16)
 10076a4:	103ff826 	beq	r2,zero,1007688 <_close_r+0x34>
 10076a8:	88800015 	stw	r2,0(r17)
 10076ac:	1805883a 	mov	r2,r3
 10076b0:	dfc00217 	ldw	ra,8(sp)
 10076b4:	dc400117 	ldw	r17,4(sp)
 10076b8:	dc000017 	ldw	r16,0(sp)
 10076bc:	dec00304 	addi	sp,sp,12
 10076c0:	f800283a 	ret

010076c4 <quorem>:
 10076c4:	28c00417 	ldw	r3,16(r5)
 10076c8:	20800417 	ldw	r2,16(r4)
 10076cc:	defff104 	addi	sp,sp,-60
 10076d0:	dfc00e15 	stw	ra,56(sp)
 10076d4:	df000d15 	stw	fp,52(sp)
 10076d8:	ddc00c15 	stw	r23,48(sp)
 10076dc:	dd800b15 	stw	r22,44(sp)
 10076e0:	dd400a15 	stw	r21,40(sp)
 10076e4:	dd000915 	stw	r20,36(sp)
 10076e8:	dcc00815 	stw	r19,32(sp)
 10076ec:	dc800715 	stw	r18,28(sp)
 10076f0:	dc400615 	stw	r17,24(sp)
 10076f4:	dc000515 	stw	r16,20(sp)
 10076f8:	d9000315 	stw	r4,12(sp)
 10076fc:	d9400415 	stw	r5,16(sp)
 1007700:	10c07f16 	blt	r2,r3,1007900 <quorem+0x23c>
 1007704:	1d3fffc4 	addi	r20,r3,-1
 1007708:	d8c00417 	ldw	r3,16(sp)
 100770c:	d9000317 	ldw	r4,12(sp)
 1007710:	a505883a 	add	r2,r20,r20
 1007714:	1085883a 	add	r2,r2,r2
 1007718:	1cc00504 	addi	r19,r3,20
 100771c:	25c00504 	addi	r23,r4,20
 1007720:	98ad883a 	add	r22,r19,r2
 1007724:	15c7883a 	add	r3,r2,r23
 1007728:	b1400017 	ldw	r5,0(r22)
 100772c:	19000017 	ldw	r4,0(r3)
 1007730:	d8c00015 	stw	r3,0(sp)
 1007734:	29400044 	addi	r5,r5,1
 1007738:	d9000215 	stw	r4,8(sp)
 100773c:	10010940 	call	1001094 <__udivsi3>
 1007740:	1039883a 	mov	fp,r2
 1007744:	10003d1e 	bne	r2,zero,100783c <quorem+0x178>
 1007748:	d9400417 	ldw	r5,16(sp)
 100774c:	d9000317 	ldw	r4,12(sp)
 1007750:	100990c0 	call	100990c <__mcmp>
 1007754:	10002c16 	blt	r2,zero,1007808 <quorem+0x144>
 1007758:	e7000044 	addi	fp,fp,1
 100775c:	b80f883a 	mov	r7,r23
 1007760:	0011883a 	mov	r8,zero
 1007764:	0009883a 	mov	r4,zero
 1007768:	99400017 	ldw	r5,0(r19)
 100776c:	38c00017 	ldw	r3,0(r7)
 1007770:	9cc00104 	addi	r19,r19,4
 1007774:	28bfffcc 	andi	r2,r5,65535
 1007778:	2085883a 	add	r2,r4,r2
 100777c:	11bfffcc 	andi	r6,r2,65535
 1007780:	193fffcc 	andi	r4,r3,65535
 1007784:	1004d43a 	srli	r2,r2,16
 1007788:	280ad43a 	srli	r5,r5,16
 100778c:	2189c83a 	sub	r4,r4,r6
 1007790:	2209883a 	add	r4,r4,r8
 1007794:	1806d43a 	srli	r3,r3,16
 1007798:	288b883a 	add	r5,r5,r2
 100779c:	200dd43a 	srai	r6,r4,16
 10077a0:	28bfffcc 	andi	r2,r5,65535
 10077a4:	1887c83a 	sub	r3,r3,r2
 10077a8:	1987883a 	add	r3,r3,r6
 10077ac:	3900000d 	sth	r4,0(r7)
 10077b0:	38c0008d 	sth	r3,2(r7)
 10077b4:	2808d43a 	srli	r4,r5,16
 10077b8:	39c00104 	addi	r7,r7,4
 10077bc:	1811d43a 	srai	r8,r3,16
 10077c0:	b4ffe92e 	bgeu	r22,r19,1007768 <quorem+0xa4>
 10077c4:	a505883a 	add	r2,r20,r20
 10077c8:	1085883a 	add	r2,r2,r2
 10077cc:	b885883a 	add	r2,r23,r2
 10077d0:	10c00017 	ldw	r3,0(r2)
 10077d4:	18000c1e 	bne	r3,zero,1007808 <quorem+0x144>
 10077d8:	113fff04 	addi	r4,r2,-4
 10077dc:	b900082e 	bgeu	r23,r4,1007800 <quorem+0x13c>
 10077e0:	10bfff17 	ldw	r2,-4(r2)
 10077e4:	10000326 	beq	r2,zero,10077f4 <quorem+0x130>
 10077e8:	00000506 	br	1007800 <quorem+0x13c>
 10077ec:	20800017 	ldw	r2,0(r4)
 10077f0:	1000031e 	bne	r2,zero,1007800 <quorem+0x13c>
 10077f4:	213fff04 	addi	r4,r4,-4
 10077f8:	a53fffc4 	addi	r20,r20,-1
 10077fc:	b93ffb36 	bltu	r23,r4,10077ec <quorem+0x128>
 1007800:	d9000317 	ldw	r4,12(sp)
 1007804:	25000415 	stw	r20,16(r4)
 1007808:	e005883a 	mov	r2,fp
 100780c:	dfc00e17 	ldw	ra,56(sp)
 1007810:	df000d17 	ldw	fp,52(sp)
 1007814:	ddc00c17 	ldw	r23,48(sp)
 1007818:	dd800b17 	ldw	r22,44(sp)
 100781c:	dd400a17 	ldw	r21,40(sp)
 1007820:	dd000917 	ldw	r20,36(sp)
 1007824:	dcc00817 	ldw	r19,32(sp)
 1007828:	dc800717 	ldw	r18,28(sp)
 100782c:	dc400617 	ldw	r17,24(sp)
 1007830:	dc000517 	ldw	r16,20(sp)
 1007834:	dec00f04 	addi	sp,sp,60
 1007838:	f800283a 	ret
 100783c:	b823883a 	mov	r17,r23
 1007840:	9825883a 	mov	r18,r19
 1007844:	d8000115 	stw	zero,4(sp)
 1007848:	002b883a 	mov	r21,zero
 100784c:	94000017 	ldw	r16,0(r18)
 1007850:	e009883a 	mov	r4,fp
 1007854:	94800104 	addi	r18,r18,4
 1007858:	817fffcc 	andi	r5,r16,65535
 100785c:	10010a40 	call	10010a4 <__mulsi3>
 1007860:	800ad43a 	srli	r5,r16,16
 1007864:	e009883a 	mov	r4,fp
 1007868:	a8a1883a 	add	r16,r21,r2
 100786c:	10010a40 	call	10010a4 <__mulsi3>
 1007870:	89000017 	ldw	r4,0(r17)
 1007874:	80ffffcc 	andi	r3,r16,65535
 1007878:	8020d43a 	srli	r16,r16,16
 100787c:	217fffcc 	andi	r5,r4,65535
 1007880:	28cbc83a 	sub	r5,r5,r3
 1007884:	d8c00117 	ldw	r3,4(sp)
 1007888:	2008d43a 	srli	r4,r4,16
 100788c:	1405883a 	add	r2,r2,r16
 1007890:	28cb883a 	add	r5,r5,r3
 1007894:	280dd43a 	srai	r6,r5,16
 1007898:	10ffffcc 	andi	r3,r2,65535
 100789c:	20c9c83a 	sub	r4,r4,r3
 10078a0:	2189883a 	add	r4,r4,r6
 10078a4:	8900008d 	sth	r4,2(r17)
 10078a8:	2009d43a 	srai	r4,r4,16
 10078ac:	8940000d 	sth	r5,0(r17)
 10078b0:	102ad43a 	srli	r21,r2,16
 10078b4:	8c400104 	addi	r17,r17,4
 10078b8:	d9000115 	stw	r4,4(sp)
 10078bc:	b4bfe32e 	bgeu	r22,r18,100784c <quorem+0x188>
 10078c0:	d9000217 	ldw	r4,8(sp)
 10078c4:	203fa01e 	bne	r4,zero,1007748 <quorem+0x84>
 10078c8:	d8800017 	ldw	r2,0(sp)
 10078cc:	10ffff04 	addi	r3,r2,-4
 10078d0:	b8c0082e 	bgeu	r23,r3,10078f4 <quorem+0x230>
 10078d4:	10bfff17 	ldw	r2,-4(r2)
 10078d8:	10000326 	beq	r2,zero,10078e8 <quorem+0x224>
 10078dc:	00000506 	br	10078f4 <quorem+0x230>
 10078e0:	18800017 	ldw	r2,0(r3)
 10078e4:	1000031e 	bne	r2,zero,10078f4 <quorem+0x230>
 10078e8:	18ffff04 	addi	r3,r3,-4
 10078ec:	a53fffc4 	addi	r20,r20,-1
 10078f0:	b8fffb36 	bltu	r23,r3,10078e0 <quorem+0x21c>
 10078f4:	d8c00317 	ldw	r3,12(sp)
 10078f8:	1d000415 	stw	r20,16(r3)
 10078fc:	003f9206 	br	1007748 <quorem+0x84>
 1007900:	0005883a 	mov	r2,zero
 1007904:	003fc106 	br	100780c <quorem+0x148>

01007908 <_dtoa_r>:
 1007908:	22001017 	ldw	r8,64(r4)
 100790c:	deffda04 	addi	sp,sp,-152
 1007910:	dd402115 	stw	r21,132(sp)
 1007914:	dd002015 	stw	r20,128(sp)
 1007918:	dc801e15 	stw	r18,120(sp)
 100791c:	dc401d15 	stw	r17,116(sp)
 1007920:	dfc02515 	stw	ra,148(sp)
 1007924:	df002415 	stw	fp,144(sp)
 1007928:	ddc02315 	stw	r23,140(sp)
 100792c:	dd802215 	stw	r22,136(sp)
 1007930:	dcc01f15 	stw	r19,124(sp)
 1007934:	dc001c15 	stw	r16,112(sp)
 1007938:	d9001615 	stw	r4,88(sp)
 100793c:	3023883a 	mov	r17,r6
 1007940:	2829883a 	mov	r20,r5
 1007944:	d9c01715 	stw	r7,92(sp)
 1007948:	dc802817 	ldw	r18,160(sp)
 100794c:	302b883a 	mov	r21,r6
 1007950:	40000a26 	beq	r8,zero,100797c <_dtoa_r+0x74>
 1007954:	20801117 	ldw	r2,68(r4)
 1007958:	400b883a 	mov	r5,r8
 100795c:	40800115 	stw	r2,4(r8)
 1007960:	20c01117 	ldw	r3,68(r4)
 1007964:	00800044 	movi	r2,1
 1007968:	10c4983a 	sll	r2,r2,r3
 100796c:	40800215 	stw	r2,8(r8)
 1007970:	10097b00 	call	10097b0 <_Bfree>
 1007974:	d8c01617 	ldw	r3,88(sp)
 1007978:	18001015 	stw	zero,64(r3)
 100797c:	8800a316 	blt	r17,zero,1007c0c <_dtoa_r+0x304>
 1007980:	90000015 	stw	zero,0(r18)
 1007984:	a8dffc2c 	andhi	r3,r21,32752
 1007988:	009ffc34 	movhi	r2,32752
 100798c:	18809126 	beq	r3,r2,1007bd4 <_dtoa_r+0x2cc>
 1007990:	000d883a 	mov	r6,zero
 1007994:	000f883a 	mov	r7,zero
 1007998:	a009883a 	mov	r4,r20
 100799c:	a80b883a 	mov	r5,r21
 10079a0:	dd001215 	stw	r20,72(sp)
 10079a4:	dd401315 	stw	r21,76(sp)
 10079a8:	100fda80 	call	100fda8 <__nedf2>
 10079ac:	1000171e 	bne	r2,zero,1007a0c <_dtoa_r+0x104>
 10079b0:	d9802717 	ldw	r6,156(sp)
 10079b4:	00800044 	movi	r2,1
 10079b8:	30800015 	stw	r2,0(r6)
 10079bc:	d8802917 	ldw	r2,164(sp)
 10079c0:	10029b26 	beq	r2,zero,1008430 <_dtoa_r+0xb28>
 10079c4:	d9002917 	ldw	r4,164(sp)
 10079c8:	00804074 	movhi	r2,257
 10079cc:	108d4e44 	addi	r2,r2,13625
 10079d0:	10ffffc4 	addi	r3,r2,-1
 10079d4:	20800015 	stw	r2,0(r4)
 10079d8:	1805883a 	mov	r2,r3
 10079dc:	dfc02517 	ldw	ra,148(sp)
 10079e0:	df002417 	ldw	fp,144(sp)
 10079e4:	ddc02317 	ldw	r23,140(sp)
 10079e8:	dd802217 	ldw	r22,136(sp)
 10079ec:	dd402117 	ldw	r21,132(sp)
 10079f0:	dd002017 	ldw	r20,128(sp)
 10079f4:	dcc01f17 	ldw	r19,124(sp)
 10079f8:	dc801e17 	ldw	r18,120(sp)
 10079fc:	dc401d17 	ldw	r17,116(sp)
 1007a00:	dc001c17 	ldw	r16,112(sp)
 1007a04:	dec02604 	addi	sp,sp,152
 1007a08:	f800283a 	ret
 1007a0c:	d9001617 	ldw	r4,88(sp)
 1007a10:	d9401217 	ldw	r5,72(sp)
 1007a14:	d8800104 	addi	r2,sp,4
 1007a18:	a80d883a 	mov	r6,r21
 1007a1c:	d9c00204 	addi	r7,sp,8
 1007a20:	d8800015 	stw	r2,0(sp)
 1007a24:	1009dec0 	call	1009dec <__d2b>
 1007a28:	d8800715 	stw	r2,28(sp)
 1007a2c:	a804d53a 	srli	r2,r21,20
 1007a30:	1101ffcc 	andi	r4,r2,2047
 1007a34:	20008626 	beq	r4,zero,1007c50 <_dtoa_r+0x348>
 1007a38:	d8c01217 	ldw	r3,72(sp)
 1007a3c:	00800434 	movhi	r2,16
 1007a40:	10bfffc4 	addi	r2,r2,-1
 1007a44:	ddc00117 	ldw	r23,4(sp)
 1007a48:	a884703a 	and	r2,r21,r2
 1007a4c:	1811883a 	mov	r8,r3
 1007a50:	124ffc34 	orhi	r9,r2,16368
 1007a54:	25bf0044 	addi	r22,r4,-1023
 1007a58:	d8000815 	stw	zero,32(sp)
 1007a5c:	0005883a 	mov	r2,zero
 1007a60:	00cffe34 	movhi	r3,16376
 1007a64:	480b883a 	mov	r5,r9
 1007a68:	4009883a 	mov	r4,r8
 1007a6c:	180f883a 	mov	r7,r3
 1007a70:	100d883a 	mov	r6,r2
 1007a74:	100f6100 	call	100f610 <__subdf3>
 1007a78:	0218dbf4 	movhi	r8,25455
 1007a7c:	4210d844 	addi	r8,r8,17249
 1007a80:	024ff4f4 	movhi	r9,16339
 1007a84:	4a61e9c4 	addi	r9,r9,-30809
 1007a88:	480f883a 	mov	r7,r9
 1007a8c:	400d883a 	mov	r6,r8
 1007a90:	180b883a 	mov	r5,r3
 1007a94:	1009883a 	mov	r4,r2
 1007a98:	100f7040 	call	100f704 <__muldf3>
 1007a9c:	0222d874 	movhi	r8,35681
 1007aa0:	42322cc4 	addi	r8,r8,-14157
 1007aa4:	024ff1f4 	movhi	r9,16327
 1007aa8:	4a628a04 	addi	r9,r9,-30168
 1007aac:	480f883a 	mov	r7,r9
 1007ab0:	400d883a 	mov	r6,r8
 1007ab4:	180b883a 	mov	r5,r3
 1007ab8:	1009883a 	mov	r4,r2
 1007abc:	100f6900 	call	100f690 <__adddf3>
 1007ac0:	b009883a 	mov	r4,r22
 1007ac4:	1021883a 	mov	r16,r2
 1007ac8:	1823883a 	mov	r17,r3
 1007acc:	10100500 	call	1010050 <__floatsidf>
 1007ad0:	021427f4 	movhi	r8,20639
 1007ad4:	421e7ec4 	addi	r8,r8,31227
 1007ad8:	024ff4f4 	movhi	r9,16339
 1007adc:	4a5104c4 	addi	r9,r9,17427
 1007ae0:	480f883a 	mov	r7,r9
 1007ae4:	400d883a 	mov	r6,r8
 1007ae8:	180b883a 	mov	r5,r3
 1007aec:	1009883a 	mov	r4,r2
 1007af0:	100f7040 	call	100f704 <__muldf3>
 1007af4:	180f883a 	mov	r7,r3
 1007af8:	880b883a 	mov	r5,r17
 1007afc:	100d883a 	mov	r6,r2
 1007b00:	8009883a 	mov	r4,r16
 1007b04:	100f6900 	call	100f690 <__adddf3>
 1007b08:	1009883a 	mov	r4,r2
 1007b0c:	180b883a 	mov	r5,r3
 1007b10:	1021883a 	mov	r16,r2
 1007b14:	1823883a 	mov	r17,r3
 1007b18:	10101480 	call	1010148 <__fixdfsi>
 1007b1c:	000d883a 	mov	r6,zero
 1007b20:	000f883a 	mov	r7,zero
 1007b24:	8009883a 	mov	r4,r16
 1007b28:	880b883a 	mov	r5,r17
 1007b2c:	d8800d15 	stw	r2,52(sp)
 1007b30:	100ff400 	call	100ff40 <__ltdf2>
 1007b34:	10031716 	blt	r2,zero,1008794 <_dtoa_r+0xe8c>
 1007b38:	d8c00d17 	ldw	r3,52(sp)
 1007b3c:	00800584 	movi	r2,22
 1007b40:	10c1482e 	bgeu	r2,r3,1008064 <_dtoa_r+0x75c>
 1007b44:	01000044 	movi	r4,1
 1007b48:	d9000c15 	stw	r4,48(sp)
 1007b4c:	bd85c83a 	sub	r2,r23,r22
 1007b50:	11bfffc4 	addi	r6,r2,-1
 1007b54:	30030b16 	blt	r6,zero,1008784 <_dtoa_r+0xe7c>
 1007b58:	d9800a15 	stw	r6,40(sp)
 1007b5c:	d8001115 	stw	zero,68(sp)
 1007b60:	d8c00d17 	ldw	r3,52(sp)
 1007b64:	1802ff16 	blt	r3,zero,1008764 <_dtoa_r+0xe5c>
 1007b68:	d9000a17 	ldw	r4,40(sp)
 1007b6c:	d8c00915 	stw	r3,36(sp)
 1007b70:	d8001015 	stw	zero,64(sp)
 1007b74:	20c9883a 	add	r4,r4,r3
 1007b78:	d9000a15 	stw	r4,40(sp)
 1007b7c:	d9001717 	ldw	r4,92(sp)
 1007b80:	00800244 	movi	r2,9
 1007b84:	11004636 	bltu	r2,r4,1007ca0 <_dtoa_r+0x398>
 1007b88:	00800144 	movi	r2,5
 1007b8c:	11020416 	blt	r2,r4,10083a0 <_dtoa_r+0xa98>
 1007b90:	04400044 	movi	r17,1
 1007b94:	d8c01717 	ldw	r3,92(sp)
 1007b98:	00800144 	movi	r2,5
 1007b9c:	10c1ed36 	bltu	r2,r3,1008354 <_dtoa_r+0xa4c>
 1007ba0:	18c5883a 	add	r2,r3,r3
 1007ba4:	1085883a 	add	r2,r2,r2
 1007ba8:	00c04034 	movhi	r3,256
 1007bac:	18deef04 	addi	r3,r3,31676
 1007bb0:	10c5883a 	add	r2,r2,r3
 1007bb4:	11000017 	ldw	r4,0(r2)
 1007bb8:	2000683a 	jmp	r4
 1007bbc:	01007ca8 	cmpgeui	r4,zero,498
 1007bc0:	01007ca8 	cmpgeui	r4,zero,498
 1007bc4:	010086a8 	cmpgeui	r4,zero,538
 1007bc8:	01008680 	call	100868 <__alt_mem_sram+0x868>
 1007bcc:	010086c4 	movi	r4,539
 1007bd0:	010086d0 	cmplti	r4,zero,539
 1007bd4:	d9002717 	ldw	r4,156(sp)
 1007bd8:	0089c3c4 	movi	r2,9999
 1007bdc:	20800015 	stw	r2,0(r4)
 1007be0:	a0001026 	beq	r20,zero,1007c24 <_dtoa_r+0x31c>
 1007be4:	00c04074 	movhi	r3,257
 1007be8:	18ce0504 	addi	r3,r3,14356
 1007bec:	d9802917 	ldw	r6,164(sp)
 1007bf0:	303f7926 	beq	r6,zero,10079d8 <_dtoa_r+0xd0>
 1007bf4:	188000c7 	ldb	r2,3(r3)
 1007bf8:	190000c4 	addi	r4,r3,3
 1007bfc:	1000101e 	bne	r2,zero,1007c40 <_dtoa_r+0x338>
 1007c00:	d8802917 	ldw	r2,164(sp)
 1007c04:	11000015 	stw	r4,0(r2)
 1007c08:	003f7306 	br	10079d8 <_dtoa_r+0xd0>
 1007c0c:	00a00034 	movhi	r2,32768
 1007c10:	10bfffc4 	addi	r2,r2,-1
 1007c14:	00c00044 	movi	r3,1
 1007c18:	88aa703a 	and	r21,r17,r2
 1007c1c:	90c00015 	stw	r3,0(r18)
 1007c20:	003f5806 	br	1007984 <_dtoa_r+0x7c>
 1007c24:	00800434 	movhi	r2,16
 1007c28:	10bfffc4 	addi	r2,r2,-1
 1007c2c:	a884703a 	and	r2,r21,r2
 1007c30:	103fec1e 	bne	r2,zero,1007be4 <_dtoa_r+0x2dc>
 1007c34:	00c04074 	movhi	r3,257
 1007c38:	18ce0204 	addi	r3,r3,14344
 1007c3c:	003feb06 	br	1007bec <_dtoa_r+0x2e4>
 1007c40:	d8802917 	ldw	r2,164(sp)
 1007c44:	19000204 	addi	r4,r3,8
 1007c48:	11000015 	stw	r4,0(r2)
 1007c4c:	003f6206 	br	10079d8 <_dtoa_r+0xd0>
 1007c50:	ddc00117 	ldw	r23,4(sp)
 1007c54:	d8800217 	ldw	r2,8(sp)
 1007c58:	01000804 	movi	r4,32
 1007c5c:	b8c10c84 	addi	r3,r23,1074
 1007c60:	18a3883a 	add	r17,r3,r2
 1007c64:	2441b80e 	bge	r4,r17,1008348 <_dtoa_r+0xa40>
 1007c68:	00c01004 	movi	r3,64
 1007c6c:	1c47c83a 	sub	r3,r3,r17
 1007c70:	88bff804 	addi	r2,r17,-32
 1007c74:	a8c6983a 	sll	r3,r21,r3
 1007c78:	a084d83a 	srl	r2,r20,r2
 1007c7c:	1888b03a 	or	r4,r3,r2
 1007c80:	10102940 	call	1010294 <__floatunsidf>
 1007c84:	1011883a 	mov	r8,r2
 1007c88:	00bf8434 	movhi	r2,65040
 1007c8c:	01000044 	movi	r4,1
 1007c90:	10d3883a 	add	r9,r2,r3
 1007c94:	8dbef344 	addi	r22,r17,-1075
 1007c98:	d9000815 	stw	r4,32(sp)
 1007c9c:	003f6f06 	br	1007a5c <_dtoa_r+0x154>
 1007ca0:	d8001715 	stw	zero,92(sp)
 1007ca4:	04400044 	movi	r17,1
 1007ca8:	00bfffc4 	movi	r2,-1
 1007cac:	00c00044 	movi	r3,1
 1007cb0:	d8800e15 	stw	r2,56(sp)
 1007cb4:	d8002615 	stw	zero,152(sp)
 1007cb8:	d8800f15 	stw	r2,60(sp)
 1007cbc:	d8c00b15 	stw	r3,44(sp)
 1007cc0:	1021883a 	mov	r16,r2
 1007cc4:	d8801617 	ldw	r2,88(sp)
 1007cc8:	10001115 	stw	zero,68(r2)
 1007ccc:	d8801617 	ldw	r2,88(sp)
 1007cd0:	11401117 	ldw	r5,68(r2)
 1007cd4:	1009883a 	mov	r4,r2
 1007cd8:	1009d300 	call	1009d30 <_Balloc>
 1007cdc:	d8c01617 	ldw	r3,88(sp)
 1007ce0:	d8800515 	stw	r2,20(sp)
 1007ce4:	18801015 	stw	r2,64(r3)
 1007ce8:	00800384 	movi	r2,14
 1007cec:	14006836 	bltu	r2,r16,1007e90 <_dtoa_r+0x588>
 1007cf0:	8805003a 	cmpeq	r2,r17,zero
 1007cf4:	1000661e 	bne	r2,zero,1007e90 <_dtoa_r+0x588>
 1007cf8:	d9000d17 	ldw	r4,52(sp)
 1007cfc:	0102300e 	bge	zero,r4,10085c0 <_dtoa_r+0xcb8>
 1007d00:	208003cc 	andi	r2,r4,15
 1007d04:	100490fa 	slli	r2,r2,3
 1007d08:	2025d13a 	srai	r18,r4,4
 1007d0c:	00c04074 	movhi	r3,257
 1007d10:	18ce1604 	addi	r3,r3,14424
 1007d14:	10c5883a 	add	r2,r2,r3
 1007d18:	90c0040c 	andi	r3,r18,16
 1007d1c:	14000017 	ldw	r16,0(r2)
 1007d20:	14400117 	ldw	r17,4(r2)
 1007d24:	18036a1e 	bne	r3,zero,1008ad0 <_dtoa_r+0x11c8>
 1007d28:	05800084 	movi	r22,2
 1007d2c:	90001026 	beq	r18,zero,1007d70 <_dtoa_r+0x468>
 1007d30:	04c04074 	movhi	r19,257
 1007d34:	9cce4804 	addi	r19,r19,14624
 1007d38:	9080004c 	andi	r2,r18,1
 1007d3c:	1005003a 	cmpeq	r2,r2,zero
 1007d40:	1000081e 	bne	r2,zero,1007d64 <_dtoa_r+0x45c>
 1007d44:	99800017 	ldw	r6,0(r19)
 1007d48:	99c00117 	ldw	r7,4(r19)
 1007d4c:	880b883a 	mov	r5,r17
 1007d50:	8009883a 	mov	r4,r16
 1007d54:	100f7040 	call	100f704 <__muldf3>
 1007d58:	1021883a 	mov	r16,r2
 1007d5c:	b5800044 	addi	r22,r22,1
 1007d60:	1823883a 	mov	r17,r3
 1007d64:	9025d07a 	srai	r18,r18,1
 1007d68:	9cc00204 	addi	r19,r19,8
 1007d6c:	903ff21e 	bne	r18,zero,1007d38 <_dtoa_r+0x430>
 1007d70:	a80b883a 	mov	r5,r21
 1007d74:	a009883a 	mov	r4,r20
 1007d78:	880f883a 	mov	r7,r17
 1007d7c:	800d883a 	mov	r6,r16
 1007d80:	100fac80 	call	100fac8 <__divdf3>
 1007d84:	1029883a 	mov	r20,r2
 1007d88:	182b883a 	mov	r21,r3
 1007d8c:	d8c00c17 	ldw	r3,48(sp)
 1007d90:	1805003a 	cmpeq	r2,r3,zero
 1007d94:	1000081e 	bne	r2,zero,1007db8 <_dtoa_r+0x4b0>
 1007d98:	0005883a 	mov	r2,zero
 1007d9c:	00cffc34 	movhi	r3,16368
 1007da0:	180f883a 	mov	r7,r3
 1007da4:	a009883a 	mov	r4,r20
 1007da8:	a80b883a 	mov	r5,r21
 1007dac:	100d883a 	mov	r6,r2
 1007db0:	100ff400 	call	100ff40 <__ltdf2>
 1007db4:	1003fe16 	blt	r2,zero,1008db0 <_dtoa_r+0x14a8>
 1007db8:	b009883a 	mov	r4,r22
 1007dbc:	10100500 	call	1010050 <__floatsidf>
 1007dc0:	180b883a 	mov	r5,r3
 1007dc4:	1009883a 	mov	r4,r2
 1007dc8:	a00d883a 	mov	r6,r20
 1007dcc:	a80f883a 	mov	r7,r21
 1007dd0:	100f7040 	call	100f704 <__muldf3>
 1007dd4:	0011883a 	mov	r8,zero
 1007dd8:	02500734 	movhi	r9,16412
 1007ddc:	1009883a 	mov	r4,r2
 1007de0:	180b883a 	mov	r5,r3
 1007de4:	480f883a 	mov	r7,r9
 1007de8:	400d883a 	mov	r6,r8
 1007dec:	100f6900 	call	100f690 <__adddf3>
 1007df0:	d9000f17 	ldw	r4,60(sp)
 1007df4:	102d883a 	mov	r22,r2
 1007df8:	00bf3034 	movhi	r2,64704
 1007dfc:	18b9883a 	add	fp,r3,r2
 1007e00:	e02f883a 	mov	r23,fp
 1007e04:	20028f1e 	bne	r4,zero,1008844 <_dtoa_r+0xf3c>
 1007e08:	0005883a 	mov	r2,zero
 1007e0c:	00d00534 	movhi	r3,16404
 1007e10:	a009883a 	mov	r4,r20
 1007e14:	a80b883a 	mov	r5,r21
 1007e18:	180f883a 	mov	r7,r3
 1007e1c:	100d883a 	mov	r6,r2
 1007e20:	100f6100 	call	100f610 <__subdf3>
 1007e24:	1009883a 	mov	r4,r2
 1007e28:	e00f883a 	mov	r7,fp
 1007e2c:	180b883a 	mov	r5,r3
 1007e30:	b00d883a 	mov	r6,r22
 1007e34:	1025883a 	mov	r18,r2
 1007e38:	1827883a 	mov	r19,r3
 1007e3c:	100fe300 	call	100fe30 <__gtdf2>
 1007e40:	00834f16 	blt	zero,r2,1008b80 <_dtoa_r+0x1278>
 1007e44:	e0e0003c 	xorhi	r3,fp,32768
 1007e48:	9009883a 	mov	r4,r18
 1007e4c:	980b883a 	mov	r5,r19
 1007e50:	180f883a 	mov	r7,r3
 1007e54:	b00d883a 	mov	r6,r22
 1007e58:	100ff400 	call	100ff40 <__ltdf2>
 1007e5c:	1000080e 	bge	r2,zero,1007e80 <_dtoa_r+0x578>
 1007e60:	0027883a 	mov	r19,zero
 1007e64:	0025883a 	mov	r18,zero
 1007e68:	d8802617 	ldw	r2,152(sp)
 1007e6c:	df000517 	ldw	fp,20(sp)
 1007e70:	d8000615 	stw	zero,24(sp)
 1007e74:	0084303a 	nor	r2,zero,r2
 1007e78:	d8800d15 	stw	r2,52(sp)
 1007e7c:	00019b06 	br	10084ec <_dtoa_r+0xbe4>
 1007e80:	d9801217 	ldw	r6,72(sp)
 1007e84:	d8801317 	ldw	r2,76(sp)
 1007e88:	3029883a 	mov	r20,r6
 1007e8c:	102b883a 	mov	r21,r2
 1007e90:	d8c00217 	ldw	r3,8(sp)
 1007e94:	18008516 	blt	r3,zero,10080ac <_dtoa_r+0x7a4>
 1007e98:	d9000d17 	ldw	r4,52(sp)
 1007e9c:	00800384 	movi	r2,14
 1007ea0:	11008216 	blt	r2,r4,10080ac <_dtoa_r+0x7a4>
 1007ea4:	200490fa 	slli	r2,r4,3
 1007ea8:	d9802617 	ldw	r6,152(sp)
 1007eac:	00c04074 	movhi	r3,257
 1007eb0:	18ce1604 	addi	r3,r3,14424
 1007eb4:	10c5883a 	add	r2,r2,r3
 1007eb8:	14800017 	ldw	r18,0(r2)
 1007ebc:	14c00117 	ldw	r19,4(r2)
 1007ec0:	30031e16 	blt	r6,zero,1008b3c <_dtoa_r+0x1234>
 1007ec4:	d9000517 	ldw	r4,20(sp)
 1007ec8:	d8c00f17 	ldw	r3,60(sp)
 1007ecc:	a823883a 	mov	r17,r21
 1007ed0:	a021883a 	mov	r16,r20
 1007ed4:	192b883a 	add	r21,r3,r4
 1007ed8:	2039883a 	mov	fp,r4
 1007edc:	00000f06 	br	1007f1c <_dtoa_r+0x614>
 1007ee0:	0005883a 	mov	r2,zero
 1007ee4:	00d00934 	movhi	r3,16420
 1007ee8:	5009883a 	mov	r4,r10
 1007eec:	580b883a 	mov	r5,r11
 1007ef0:	180f883a 	mov	r7,r3
 1007ef4:	100d883a 	mov	r6,r2
 1007ef8:	100f7040 	call	100f704 <__muldf3>
 1007efc:	180b883a 	mov	r5,r3
 1007f00:	000d883a 	mov	r6,zero
 1007f04:	000f883a 	mov	r7,zero
 1007f08:	1009883a 	mov	r4,r2
 1007f0c:	1021883a 	mov	r16,r2
 1007f10:	1823883a 	mov	r17,r3
 1007f14:	100fda80 	call	100fda8 <__nedf2>
 1007f18:	10004526 	beq	r2,zero,1008030 <_dtoa_r+0x728>
 1007f1c:	900d883a 	mov	r6,r18
 1007f20:	980f883a 	mov	r7,r19
 1007f24:	8009883a 	mov	r4,r16
 1007f28:	880b883a 	mov	r5,r17
 1007f2c:	100fac80 	call	100fac8 <__divdf3>
 1007f30:	180b883a 	mov	r5,r3
 1007f34:	1009883a 	mov	r4,r2
 1007f38:	10101480 	call	1010148 <__fixdfsi>
 1007f3c:	1009883a 	mov	r4,r2
 1007f40:	1029883a 	mov	r20,r2
 1007f44:	10100500 	call	1010050 <__floatsidf>
 1007f48:	180f883a 	mov	r7,r3
 1007f4c:	9009883a 	mov	r4,r18
 1007f50:	980b883a 	mov	r5,r19
 1007f54:	100d883a 	mov	r6,r2
 1007f58:	100f7040 	call	100f704 <__muldf3>
 1007f5c:	180f883a 	mov	r7,r3
 1007f60:	880b883a 	mov	r5,r17
 1007f64:	8009883a 	mov	r4,r16
 1007f68:	100d883a 	mov	r6,r2
 1007f6c:	100f6100 	call	100f610 <__subdf3>
 1007f70:	1015883a 	mov	r10,r2
 1007f74:	a0800c04 	addi	r2,r20,48
 1007f78:	e0800005 	stb	r2,0(fp)
 1007f7c:	e7000044 	addi	fp,fp,1
 1007f80:	1817883a 	mov	r11,r3
 1007f84:	e57fd61e 	bne	fp,r21,1007ee0 <_dtoa_r+0x5d8>
 1007f88:	500d883a 	mov	r6,r10
 1007f8c:	180f883a 	mov	r7,r3
 1007f90:	5009883a 	mov	r4,r10
 1007f94:	180b883a 	mov	r5,r3
 1007f98:	100f6900 	call	100f690 <__adddf3>
 1007f9c:	100d883a 	mov	r6,r2
 1007fa0:	9009883a 	mov	r4,r18
 1007fa4:	980b883a 	mov	r5,r19
 1007fa8:	180f883a 	mov	r7,r3
 1007fac:	1021883a 	mov	r16,r2
 1007fb0:	1823883a 	mov	r17,r3
 1007fb4:	100ff400 	call	100ff40 <__ltdf2>
 1007fb8:	10000816 	blt	r2,zero,1007fdc <_dtoa_r+0x6d4>
 1007fbc:	980b883a 	mov	r5,r19
 1007fc0:	800d883a 	mov	r6,r16
 1007fc4:	880f883a 	mov	r7,r17
 1007fc8:	9009883a 	mov	r4,r18
 1007fcc:	100fd200 	call	100fd20 <__eqdf2>
 1007fd0:	1000171e 	bne	r2,zero,1008030 <_dtoa_r+0x728>
 1007fd4:	a080004c 	andi	r2,r20,1
 1007fd8:	10001526 	beq	r2,zero,1008030 <_dtoa_r+0x728>
 1007fdc:	d8800d17 	ldw	r2,52(sp)
 1007fe0:	d8800415 	stw	r2,16(sp)
 1007fe4:	e009883a 	mov	r4,fp
 1007fe8:	213fffc4 	addi	r4,r4,-1
 1007fec:	20c00007 	ldb	r3,0(r4)
 1007ff0:	00800e44 	movi	r2,57
 1007ff4:	1880081e 	bne	r3,r2,1008018 <_dtoa_r+0x710>
 1007ff8:	d8800517 	ldw	r2,20(sp)
 1007ffc:	113ffa1e 	bne	r2,r4,1007fe8 <_dtoa_r+0x6e0>
 1008000:	d8c00417 	ldw	r3,16(sp)
 1008004:	d9800517 	ldw	r6,20(sp)
 1008008:	00800c04 	movi	r2,48
 100800c:	18c00044 	addi	r3,r3,1
 1008010:	d8c00415 	stw	r3,16(sp)
 1008014:	30800005 	stb	r2,0(r6)
 1008018:	20800003 	ldbu	r2,0(r4)
 100801c:	d8c00417 	ldw	r3,16(sp)
 1008020:	27000044 	addi	fp,r4,1
 1008024:	10800044 	addi	r2,r2,1
 1008028:	d8c00d15 	stw	r3,52(sp)
 100802c:	20800005 	stb	r2,0(r4)
 1008030:	d9001617 	ldw	r4,88(sp)
 1008034:	d9400717 	ldw	r5,28(sp)
 1008038:	10097b00 	call	10097b0 <_Bfree>
 100803c:	e0000005 	stb	zero,0(fp)
 1008040:	d9800d17 	ldw	r6,52(sp)
 1008044:	d8c02717 	ldw	r3,156(sp)
 1008048:	d9002917 	ldw	r4,164(sp)
 100804c:	30800044 	addi	r2,r6,1
 1008050:	18800015 	stw	r2,0(r3)
 1008054:	20029c26 	beq	r4,zero,1008ac8 <_dtoa_r+0x11c0>
 1008058:	d8c00517 	ldw	r3,20(sp)
 100805c:	27000015 	stw	fp,0(r4)
 1008060:	003e5d06 	br	10079d8 <_dtoa_r+0xd0>
 1008064:	d9800d17 	ldw	r6,52(sp)
 1008068:	00c04074 	movhi	r3,257
 100806c:	18ce1604 	addi	r3,r3,14424
 1008070:	d9001217 	ldw	r4,72(sp)
 1008074:	300490fa 	slli	r2,r6,3
 1008078:	d9401317 	ldw	r5,76(sp)
 100807c:	10c5883a 	add	r2,r2,r3
 1008080:	12000017 	ldw	r8,0(r2)
 1008084:	12400117 	ldw	r9,4(r2)
 1008088:	400d883a 	mov	r6,r8
 100808c:	480f883a 	mov	r7,r9
 1008090:	100ff400 	call	100ff40 <__ltdf2>
 1008094:	1000030e 	bge	r2,zero,10080a4 <_dtoa_r+0x79c>
 1008098:	d8800d17 	ldw	r2,52(sp)
 100809c:	10bfffc4 	addi	r2,r2,-1
 10080a0:	d8800d15 	stw	r2,52(sp)
 10080a4:	d8000c15 	stw	zero,48(sp)
 10080a8:	003ea806 	br	1007b4c <_dtoa_r+0x244>
 10080ac:	d9000b17 	ldw	r4,44(sp)
 10080b0:	202cc03a 	cmpne	r22,r4,zero
 10080b4:	b000c71e 	bne	r22,zero,10083d4 <_dtoa_r+0xacc>
 10080b8:	dc001117 	ldw	r16,68(sp)
 10080bc:	dc801017 	ldw	r18,64(sp)
 10080c0:	0027883a 	mov	r19,zero
 10080c4:	04000b0e 	bge	zero,r16,10080f4 <_dtoa_r+0x7ec>
 10080c8:	d8c00a17 	ldw	r3,40(sp)
 10080cc:	00c0090e 	bge	zero,r3,10080f4 <_dtoa_r+0x7ec>
 10080d0:	8005883a 	mov	r2,r16
 10080d4:	1c011316 	blt	r3,r16,1008524 <_dtoa_r+0xc1c>
 10080d8:	d9000a17 	ldw	r4,40(sp)
 10080dc:	d9801117 	ldw	r6,68(sp)
 10080e0:	80a1c83a 	sub	r16,r16,r2
 10080e4:	2089c83a 	sub	r4,r4,r2
 10080e8:	308dc83a 	sub	r6,r6,r2
 10080ec:	d9000a15 	stw	r4,40(sp)
 10080f0:	d9801115 	stw	r6,68(sp)
 10080f4:	d8801017 	ldw	r2,64(sp)
 10080f8:	0080150e 	bge	zero,r2,1008150 <_dtoa_r+0x848>
 10080fc:	d8c00b17 	ldw	r3,44(sp)
 1008100:	1805003a 	cmpeq	r2,r3,zero
 1008104:	1001c91e 	bne	r2,zero,100882c <_dtoa_r+0xf24>
 1008108:	04800e0e 	bge	zero,r18,1008144 <_dtoa_r+0x83c>
 100810c:	d9001617 	ldw	r4,88(sp)
 1008110:	980b883a 	mov	r5,r19
 1008114:	900d883a 	mov	r6,r18
 1008118:	100a5fc0 	call	100a5fc <__pow5mult>
 100811c:	d9001617 	ldw	r4,88(sp)
 1008120:	d9800717 	ldw	r6,28(sp)
 1008124:	100b883a 	mov	r5,r2
 1008128:	1027883a 	mov	r19,r2
 100812c:	100a2400 	call	100a240 <__multiply>
 1008130:	d9001617 	ldw	r4,88(sp)
 1008134:	d9400717 	ldw	r5,28(sp)
 1008138:	1023883a 	mov	r17,r2
 100813c:	10097b00 	call	10097b0 <_Bfree>
 1008140:	dc400715 	stw	r17,28(sp)
 1008144:	d9001017 	ldw	r4,64(sp)
 1008148:	248dc83a 	sub	r6,r4,r18
 100814c:	30010e1e 	bne	r6,zero,1008588 <_dtoa_r+0xc80>
 1008150:	d9001617 	ldw	r4,88(sp)
 1008154:	04400044 	movi	r17,1
 1008158:	880b883a 	mov	r5,r17
 100815c:	100a4940 	call	100a494 <__i2b>
 1008160:	d9800917 	ldw	r6,36(sp)
 1008164:	1025883a 	mov	r18,r2
 1008168:	0180040e 	bge	zero,r6,100817c <_dtoa_r+0x874>
 100816c:	d9001617 	ldw	r4,88(sp)
 1008170:	100b883a 	mov	r5,r2
 1008174:	100a5fc0 	call	100a5fc <__pow5mult>
 1008178:	1025883a 	mov	r18,r2
 100817c:	d8801717 	ldw	r2,92(sp)
 1008180:	8880f30e 	bge	r17,r2,1008550 <_dtoa_r+0xc48>
 1008184:	0023883a 	mov	r17,zero
 1008188:	d9800917 	ldw	r6,36(sp)
 100818c:	30019e1e 	bne	r6,zero,1008808 <_dtoa_r+0xf00>
 1008190:	00c00044 	movi	r3,1
 1008194:	d9000a17 	ldw	r4,40(sp)
 1008198:	20c5883a 	add	r2,r4,r3
 100819c:	10c007cc 	andi	r3,r2,31
 10081a0:	1800841e 	bne	r3,zero,10083b4 <_dtoa_r+0xaac>
 10081a4:	00800704 	movi	r2,28
 10081a8:	d9000a17 	ldw	r4,40(sp)
 10081ac:	d9801117 	ldw	r6,68(sp)
 10081b0:	80a1883a 	add	r16,r16,r2
 10081b4:	2089883a 	add	r4,r4,r2
 10081b8:	308d883a 	add	r6,r6,r2
 10081bc:	d9000a15 	stw	r4,40(sp)
 10081c0:	d9801115 	stw	r6,68(sp)
 10081c4:	d8801117 	ldw	r2,68(sp)
 10081c8:	0080050e 	bge	zero,r2,10081e0 <_dtoa_r+0x8d8>
 10081cc:	d9400717 	ldw	r5,28(sp)
 10081d0:	d9001617 	ldw	r4,88(sp)
 10081d4:	100d883a 	mov	r6,r2
 10081d8:	100a0f40 	call	100a0f4 <__lshift>
 10081dc:	d8800715 	stw	r2,28(sp)
 10081e0:	d8c00a17 	ldw	r3,40(sp)
 10081e4:	00c0050e 	bge	zero,r3,10081fc <_dtoa_r+0x8f4>
 10081e8:	d9001617 	ldw	r4,88(sp)
 10081ec:	900b883a 	mov	r5,r18
 10081f0:	180d883a 	mov	r6,r3
 10081f4:	100a0f40 	call	100a0f4 <__lshift>
 10081f8:	1025883a 	mov	r18,r2
 10081fc:	d9000c17 	ldw	r4,48(sp)
 1008200:	2005003a 	cmpeq	r2,r4,zero
 1008204:	10016f26 	beq	r2,zero,10087c4 <_dtoa_r+0xebc>
 1008208:	d9000f17 	ldw	r4,60(sp)
 100820c:	0102170e 	bge	zero,r4,1008a6c <_dtoa_r+0x1164>
 1008210:	d9800b17 	ldw	r6,44(sp)
 1008214:	3005003a 	cmpeq	r2,r6,zero
 1008218:	1000881e 	bne	r2,zero,100843c <_dtoa_r+0xb34>
 100821c:	0400050e 	bge	zero,r16,1008234 <_dtoa_r+0x92c>
 1008220:	d9001617 	ldw	r4,88(sp)
 1008224:	980b883a 	mov	r5,r19
 1008228:	800d883a 	mov	r6,r16
 100822c:	100a0f40 	call	100a0f4 <__lshift>
 1008230:	1027883a 	mov	r19,r2
 1008234:	8804c03a 	cmpne	r2,r17,zero
 1008238:	1002541e 	bne	r2,zero,1008b8c <_dtoa_r+0x1284>
 100823c:	980b883a 	mov	r5,r19
 1008240:	dd800517 	ldw	r22,20(sp)
 1008244:	dcc00615 	stw	r19,24(sp)
 1008248:	a700004c 	andi	fp,r20,1
 100824c:	2827883a 	mov	r19,r5
 1008250:	d9000717 	ldw	r4,28(sp)
 1008254:	900b883a 	mov	r5,r18
 1008258:	10076c40 	call	10076c4 <quorem>
 100825c:	d9000717 	ldw	r4,28(sp)
 1008260:	d9400617 	ldw	r5,24(sp)
 1008264:	1023883a 	mov	r17,r2
 1008268:	8dc00c04 	addi	r23,r17,48
 100826c:	100990c0 	call	100990c <__mcmp>
 1008270:	d9001617 	ldw	r4,88(sp)
 1008274:	900b883a 	mov	r5,r18
 1008278:	980d883a 	mov	r6,r19
 100827c:	1029883a 	mov	r20,r2
 1008280:	1009f680 	call	1009f68 <__mdiff>
 1008284:	102b883a 	mov	r21,r2
 1008288:	10800317 	ldw	r2,12(r2)
 100828c:	1001281e 	bne	r2,zero,1008730 <_dtoa_r+0xe28>
 1008290:	d9000717 	ldw	r4,28(sp)
 1008294:	a80b883a 	mov	r5,r21
 1008298:	100990c0 	call	100990c <__mcmp>
 100829c:	d9001617 	ldw	r4,88(sp)
 10082a0:	1021883a 	mov	r16,r2
 10082a4:	a80b883a 	mov	r5,r21
 10082a8:	10097b00 	call	10097b0 <_Bfree>
 10082ac:	8000041e 	bne	r16,zero,10082c0 <_dtoa_r+0x9b8>
 10082b0:	d8801717 	ldw	r2,92(sp)
 10082b4:	1000021e 	bne	r2,zero,10082c0 <_dtoa_r+0x9b8>
 10082b8:	e004c03a 	cmpne	r2,fp,zero
 10082bc:	10011726 	beq	r2,zero,100871c <_dtoa_r+0xe14>
 10082c0:	a0010616 	blt	r20,zero,10086dc <_dtoa_r+0xdd4>
 10082c4:	a000041e 	bne	r20,zero,10082d8 <_dtoa_r+0x9d0>
 10082c8:	d8c01717 	ldw	r3,92(sp)
 10082cc:	1800021e 	bne	r3,zero,10082d8 <_dtoa_r+0x9d0>
 10082d0:	e004c03a 	cmpne	r2,fp,zero
 10082d4:	10010126 	beq	r2,zero,10086dc <_dtoa_r+0xdd4>
 10082d8:	04023d16 	blt	zero,r16,1008bd0 <_dtoa_r+0x12c8>
 10082dc:	b5c00005 	stb	r23,0(r22)
 10082e0:	d9800517 	ldw	r6,20(sp)
 10082e4:	d9000f17 	ldw	r4,60(sp)
 10082e8:	b5800044 	addi	r22,r22,1
 10082ec:	3105883a 	add	r2,r6,r4
 10082f0:	b0806526 	beq	r22,r2,1008488 <_dtoa_r+0xb80>
 10082f4:	d9400717 	ldw	r5,28(sp)
 10082f8:	d9001617 	ldw	r4,88(sp)
 10082fc:	01800284 	movi	r6,10
 1008300:	000f883a 	mov	r7,zero
 1008304:	100a4d00 	call	100a4d0 <__multadd>
 1008308:	d8800715 	stw	r2,28(sp)
 100830c:	d8800617 	ldw	r2,24(sp)
 1008310:	14c10c26 	beq	r2,r19,1008744 <_dtoa_r+0xe3c>
 1008314:	d9400617 	ldw	r5,24(sp)
 1008318:	d9001617 	ldw	r4,88(sp)
 100831c:	01800284 	movi	r6,10
 1008320:	000f883a 	mov	r7,zero
 1008324:	100a4d00 	call	100a4d0 <__multadd>
 1008328:	d9001617 	ldw	r4,88(sp)
 100832c:	980b883a 	mov	r5,r19
 1008330:	01800284 	movi	r6,10
 1008334:	000f883a 	mov	r7,zero
 1008338:	d8800615 	stw	r2,24(sp)
 100833c:	100a4d00 	call	100a4d0 <__multadd>
 1008340:	1027883a 	mov	r19,r2
 1008344:	003fc206 	br	1008250 <_dtoa_r+0x948>
 1008348:	2445c83a 	sub	r2,r4,r17
 100834c:	a088983a 	sll	r4,r20,r2
 1008350:	003e4b06 	br	1007c80 <_dtoa_r+0x378>
 1008354:	01bfffc4 	movi	r6,-1
 1008358:	00800044 	movi	r2,1
 100835c:	d9800e15 	stw	r6,56(sp)
 1008360:	d9800f15 	stw	r6,60(sp)
 1008364:	d8800b15 	stw	r2,44(sp)
 1008368:	d8c01617 	ldw	r3,88(sp)
 100836c:	008005c4 	movi	r2,23
 1008370:	18001115 	stw	zero,68(r3)
 1008374:	1580082e 	bgeu	r2,r22,1008398 <_dtoa_r+0xa90>
 1008378:	00c00104 	movi	r3,4
 100837c:	0009883a 	mov	r4,zero
 1008380:	18c7883a 	add	r3,r3,r3
 1008384:	18800504 	addi	r2,r3,20
 1008388:	21000044 	addi	r4,r4,1
 100838c:	b0bffc2e 	bgeu	r22,r2,1008380 <_dtoa_r+0xa78>
 1008390:	d9801617 	ldw	r6,88(sp)
 1008394:	31001115 	stw	r4,68(r6)
 1008398:	dc000f17 	ldw	r16,60(sp)
 100839c:	003e4b06 	br	1007ccc <_dtoa_r+0x3c4>
 10083a0:	d9801717 	ldw	r6,92(sp)
 10083a4:	0023883a 	mov	r17,zero
 10083a8:	31bfff04 	addi	r6,r6,-4
 10083ac:	d9801715 	stw	r6,92(sp)
 10083b0:	003df806 	br	1007b94 <_dtoa_r+0x28c>
 10083b4:	00800804 	movi	r2,32
 10083b8:	10c9c83a 	sub	r4,r2,r3
 10083bc:	00c00104 	movi	r3,4
 10083c0:	19005a16 	blt	r3,r4,100852c <_dtoa_r+0xc24>
 10083c4:	008000c4 	movi	r2,3
 10083c8:	113f7e16 	blt	r2,r4,10081c4 <_dtoa_r+0x8bc>
 10083cc:	20800704 	addi	r2,r4,28
 10083d0:	003f7506 	br	10081a8 <_dtoa_r+0x8a0>
 10083d4:	d9801717 	ldw	r6,92(sp)
 10083d8:	00800044 	movi	r2,1
 10083dc:	1180a10e 	bge	r2,r6,1008664 <_dtoa_r+0xd5c>
 10083e0:	d9800f17 	ldw	r6,60(sp)
 10083e4:	d8c01017 	ldw	r3,64(sp)
 10083e8:	30bfffc4 	addi	r2,r6,-1
 10083ec:	1881c616 	blt	r3,r2,1008b08 <_dtoa_r+0x1200>
 10083f0:	18a5c83a 	sub	r18,r3,r2
 10083f4:	d8800f17 	ldw	r2,60(sp)
 10083f8:	10026216 	blt	r2,zero,1008d84 <_dtoa_r+0x147c>
 10083fc:	dc001117 	ldw	r16,68(sp)
 1008400:	1007883a 	mov	r3,r2
 1008404:	d9800a17 	ldw	r6,40(sp)
 1008408:	d8801117 	ldw	r2,68(sp)
 100840c:	d9001617 	ldw	r4,88(sp)
 1008410:	30cd883a 	add	r6,r6,r3
 1008414:	10c5883a 	add	r2,r2,r3
 1008418:	01400044 	movi	r5,1
 100841c:	d9800a15 	stw	r6,40(sp)
 1008420:	d8801115 	stw	r2,68(sp)
 1008424:	100a4940 	call	100a494 <__i2b>
 1008428:	1027883a 	mov	r19,r2
 100842c:	003f2506 	br	10080c4 <_dtoa_r+0x7bc>
 1008430:	00c04074 	movhi	r3,257
 1008434:	18cd4e04 	addi	r3,r3,13624
 1008438:	003d6706 	br	10079d8 <_dtoa_r+0xd0>
 100843c:	dd800517 	ldw	r22,20(sp)
 1008440:	04000044 	movi	r16,1
 1008444:	00000706 	br	1008464 <_dtoa_r+0xb5c>
 1008448:	d9400717 	ldw	r5,28(sp)
 100844c:	d9001617 	ldw	r4,88(sp)
 1008450:	01800284 	movi	r6,10
 1008454:	000f883a 	mov	r7,zero
 1008458:	100a4d00 	call	100a4d0 <__multadd>
 100845c:	d8800715 	stw	r2,28(sp)
 1008460:	84000044 	addi	r16,r16,1
 1008464:	d9000717 	ldw	r4,28(sp)
 1008468:	900b883a 	mov	r5,r18
 100846c:	10076c40 	call	10076c4 <quorem>
 1008470:	15c00c04 	addi	r23,r2,48
 1008474:	b5c00005 	stb	r23,0(r22)
 1008478:	d8c00f17 	ldw	r3,60(sp)
 100847c:	b5800044 	addi	r22,r22,1
 1008480:	80fff116 	blt	r16,r3,1008448 <_dtoa_r+0xb40>
 1008484:	d8000615 	stw	zero,24(sp)
 1008488:	d9400717 	ldw	r5,28(sp)
 100848c:	d9001617 	ldw	r4,88(sp)
 1008490:	01800044 	movi	r6,1
 1008494:	100a0f40 	call	100a0f4 <__lshift>
 1008498:	1009883a 	mov	r4,r2
 100849c:	900b883a 	mov	r5,r18
 10084a0:	d8800715 	stw	r2,28(sp)
 10084a4:	100990c0 	call	100990c <__mcmp>
 10084a8:	00803c0e 	bge	zero,r2,100859c <_dtoa_r+0xc94>
 10084ac:	b009883a 	mov	r4,r22
 10084b0:	213fffc4 	addi	r4,r4,-1
 10084b4:	21400003 	ldbu	r5,0(r4)
 10084b8:	00800e44 	movi	r2,57
 10084bc:	28c03fcc 	andi	r3,r5,255
 10084c0:	18c0201c 	xori	r3,r3,128
 10084c4:	18ffe004 	addi	r3,r3,-128
 10084c8:	1881981e 	bne	r3,r2,1008b2c <_dtoa_r+0x1224>
 10084cc:	d9800517 	ldw	r6,20(sp)
 10084d0:	21bff71e 	bne	r4,r6,10084b0 <_dtoa_r+0xba8>
 10084d4:	d8800d17 	ldw	r2,52(sp)
 10084d8:	37000044 	addi	fp,r6,1
 10084dc:	10800044 	addi	r2,r2,1
 10084e0:	d8800d15 	stw	r2,52(sp)
 10084e4:	00800c44 	movi	r2,49
 10084e8:	30800005 	stb	r2,0(r6)
 10084ec:	d9001617 	ldw	r4,88(sp)
 10084f0:	900b883a 	mov	r5,r18
 10084f4:	10097b00 	call	10097b0 <_Bfree>
 10084f8:	983ecd26 	beq	r19,zero,1008030 <_dtoa_r+0x728>
 10084fc:	d8c00617 	ldw	r3,24(sp)
 1008500:	18000426 	beq	r3,zero,1008514 <_dtoa_r+0xc0c>
 1008504:	1cc00326 	beq	r3,r19,1008514 <_dtoa_r+0xc0c>
 1008508:	d9001617 	ldw	r4,88(sp)
 100850c:	180b883a 	mov	r5,r3
 1008510:	10097b00 	call	10097b0 <_Bfree>
 1008514:	d9001617 	ldw	r4,88(sp)
 1008518:	980b883a 	mov	r5,r19
 100851c:	10097b00 	call	10097b0 <_Bfree>
 1008520:	003ec306 	br	1008030 <_dtoa_r+0x728>
 1008524:	1805883a 	mov	r2,r3
 1008528:	003eeb06 	br	10080d8 <_dtoa_r+0x7d0>
 100852c:	d9800a17 	ldw	r6,40(sp)
 1008530:	d8c01117 	ldw	r3,68(sp)
 1008534:	20bfff04 	addi	r2,r4,-4
 1008538:	308d883a 	add	r6,r6,r2
 100853c:	1887883a 	add	r3,r3,r2
 1008540:	80a1883a 	add	r16,r16,r2
 1008544:	d9800a15 	stw	r6,40(sp)
 1008548:	d8c01115 	stw	r3,68(sp)
 100854c:	003f1d06 	br	10081c4 <_dtoa_r+0x8bc>
 1008550:	a03f0c1e 	bne	r20,zero,1008184 <_dtoa_r+0x87c>
 1008554:	00800434 	movhi	r2,16
 1008558:	10bfffc4 	addi	r2,r2,-1
 100855c:	a884703a 	and	r2,r21,r2
 1008560:	103f081e 	bne	r2,zero,1008184 <_dtoa_r+0x87c>
 1008564:	a89ffc2c 	andhi	r2,r21,32752
 1008568:	103f0626 	beq	r2,zero,1008184 <_dtoa_r+0x87c>
 100856c:	d8c01117 	ldw	r3,68(sp)
 1008570:	d9000a17 	ldw	r4,40(sp)
 1008574:	18c00044 	addi	r3,r3,1
 1008578:	21000044 	addi	r4,r4,1
 100857c:	d8c01115 	stw	r3,68(sp)
 1008580:	d9000a15 	stw	r4,40(sp)
 1008584:	003f0006 	br	1008188 <_dtoa_r+0x880>
 1008588:	d9400717 	ldw	r5,28(sp)
 100858c:	d9001617 	ldw	r4,88(sp)
 1008590:	100a5fc0 	call	100a5fc <__pow5mult>
 1008594:	d8800715 	stw	r2,28(sp)
 1008598:	003eed06 	br	1008150 <_dtoa_r+0x848>
 100859c:	1000021e 	bne	r2,zero,10085a8 <_dtoa_r+0xca0>
 10085a0:	b880004c 	andi	r2,r23,1
 10085a4:	103fc11e 	bne	r2,zero,10084ac <_dtoa_r+0xba4>
 10085a8:	b5bfffc4 	addi	r22,r22,-1
 10085ac:	b0c00007 	ldb	r3,0(r22)
 10085b0:	00800c04 	movi	r2,48
 10085b4:	18bffc26 	beq	r3,r2,10085a8 <_dtoa_r+0xca0>
 10085b8:	b7000044 	addi	fp,r22,1
 10085bc:	003fcb06 	br	10084ec <_dtoa_r+0xbe4>
 10085c0:	d9800d17 	ldw	r6,52(sp)
 10085c4:	018fc83a 	sub	r7,zero,r6
 10085c8:	3801f726 	beq	r7,zero,1008da8 <_dtoa_r+0x14a0>
 10085cc:	398003cc 	andi	r6,r7,15
 10085d0:	300c90fa 	slli	r6,r6,3
 10085d4:	01404074 	movhi	r5,257
 10085d8:	294e1604 	addi	r5,r5,14424
 10085dc:	d9001217 	ldw	r4,72(sp)
 10085e0:	314d883a 	add	r6,r6,r5
 10085e4:	30c00117 	ldw	r3,4(r6)
 10085e8:	30800017 	ldw	r2,0(r6)
 10085ec:	d9401317 	ldw	r5,76(sp)
 10085f0:	3821d13a 	srai	r16,r7,4
 10085f4:	100d883a 	mov	r6,r2
 10085f8:	180f883a 	mov	r7,r3
 10085fc:	100f7040 	call	100f704 <__muldf3>
 1008600:	1011883a 	mov	r8,r2
 1008604:	1813883a 	mov	r9,r3
 1008608:	1029883a 	mov	r20,r2
 100860c:	182b883a 	mov	r21,r3
 1008610:	8001e526 	beq	r16,zero,1008da8 <_dtoa_r+0x14a0>
 1008614:	05800084 	movi	r22,2
 1008618:	04404074 	movhi	r17,257
 100861c:	8c4e4804 	addi	r17,r17,14624
 1008620:	8080004c 	andi	r2,r16,1
 1008624:	1005003a 	cmpeq	r2,r2,zero
 1008628:	1000081e 	bne	r2,zero,100864c <_dtoa_r+0xd44>
 100862c:	89800017 	ldw	r6,0(r17)
 1008630:	89c00117 	ldw	r7,4(r17)
 1008634:	480b883a 	mov	r5,r9
 1008638:	4009883a 	mov	r4,r8
 100863c:	100f7040 	call	100f704 <__muldf3>
 1008640:	1011883a 	mov	r8,r2
 1008644:	b5800044 	addi	r22,r22,1
 1008648:	1813883a 	mov	r9,r3
 100864c:	8021d07a 	srai	r16,r16,1
 1008650:	8c400204 	addi	r17,r17,8
 1008654:	803ff21e 	bne	r16,zero,1008620 <_dtoa_r+0xd18>
 1008658:	4029883a 	mov	r20,r8
 100865c:	482b883a 	mov	r21,r9
 1008660:	003dca06 	br	1007d8c <_dtoa_r+0x484>
 1008664:	d9000817 	ldw	r4,32(sp)
 1008668:	2005003a 	cmpeq	r2,r4,zero
 100866c:	1001f61e 	bne	r2,zero,1008e48 <_dtoa_r+0x1540>
 1008670:	dc001117 	ldw	r16,68(sp)
 1008674:	dc801017 	ldw	r18,64(sp)
 1008678:	18c10cc4 	addi	r3,r3,1075
 100867c:	003f6106 	br	1008404 <_dtoa_r+0xafc>
 1008680:	d8000b15 	stw	zero,44(sp)
 1008684:	d9802617 	ldw	r6,152(sp)
 1008688:	d8c00d17 	ldw	r3,52(sp)
 100868c:	30800044 	addi	r2,r6,1
 1008690:	18ad883a 	add	r22,r3,r2
 1008694:	b13fffc4 	addi	r4,r22,-1
 1008698:	d9000e15 	stw	r4,56(sp)
 100869c:	0581f60e 	bge	zero,r22,1008e78 <_dtoa_r+0x1570>
 10086a0:	dd800f15 	stw	r22,60(sp)
 10086a4:	003f3006 	br	1008368 <_dtoa_r+0xa60>
 10086a8:	d8000b15 	stw	zero,44(sp)
 10086ac:	d9002617 	ldw	r4,152(sp)
 10086b0:	0101eb0e 	bge	zero,r4,1008e60 <_dtoa_r+0x1558>
 10086b4:	202d883a 	mov	r22,r4
 10086b8:	d9000e15 	stw	r4,56(sp)
 10086bc:	d9000f15 	stw	r4,60(sp)
 10086c0:	003f2906 	br	1008368 <_dtoa_r+0xa60>
 10086c4:	01800044 	movi	r6,1
 10086c8:	d9800b15 	stw	r6,44(sp)
 10086cc:	003ff706 	br	10086ac <_dtoa_r+0xda4>
 10086d0:	01000044 	movi	r4,1
 10086d4:	d9000b15 	stw	r4,44(sp)
 10086d8:	003fea06 	br	1008684 <_dtoa_r+0xd7c>
 10086dc:	04000c0e 	bge	zero,r16,1008710 <_dtoa_r+0xe08>
 10086e0:	d9400717 	ldw	r5,28(sp)
 10086e4:	d9001617 	ldw	r4,88(sp)
 10086e8:	01800044 	movi	r6,1
 10086ec:	100a0f40 	call	100a0f4 <__lshift>
 10086f0:	1009883a 	mov	r4,r2
 10086f4:	900b883a 	mov	r5,r18
 10086f8:	d8800715 	stw	r2,28(sp)
 10086fc:	100990c0 	call	100990c <__mcmp>
 1008700:	0081e00e 	bge	zero,r2,1008e84 <_dtoa_r+0x157c>
 1008704:	bdc00044 	addi	r23,r23,1
 1008708:	00800e84 	movi	r2,58
 100870c:	b881a226 	beq	r23,r2,1008d98 <_dtoa_r+0x1490>
 1008710:	b7000044 	addi	fp,r22,1
 1008714:	b5c00005 	stb	r23,0(r22)
 1008718:	003f7406 	br	10084ec <_dtoa_r+0xbe4>
 100871c:	00800e44 	movi	r2,57
 1008720:	b8819d26 	beq	r23,r2,1008d98 <_dtoa_r+0x1490>
 1008724:	053ffa0e 	bge	zero,r20,1008710 <_dtoa_r+0xe08>
 1008728:	8dc00c44 	addi	r23,r17,49
 100872c:	003ff806 	br	1008710 <_dtoa_r+0xe08>
 1008730:	d9001617 	ldw	r4,88(sp)
 1008734:	a80b883a 	mov	r5,r21
 1008738:	04000044 	movi	r16,1
 100873c:	10097b00 	call	10097b0 <_Bfree>
 1008740:	003edf06 	br	10082c0 <_dtoa_r+0x9b8>
 1008744:	d9001617 	ldw	r4,88(sp)
 1008748:	980b883a 	mov	r5,r19
 100874c:	01800284 	movi	r6,10
 1008750:	000f883a 	mov	r7,zero
 1008754:	100a4d00 	call	100a4d0 <__multadd>
 1008758:	1027883a 	mov	r19,r2
 100875c:	d8800615 	stw	r2,24(sp)
 1008760:	003ebb06 	br	1008250 <_dtoa_r+0x948>
 1008764:	d9801117 	ldw	r6,68(sp)
 1008768:	d8800d17 	ldw	r2,52(sp)
 100876c:	d8000915 	stw	zero,36(sp)
 1008770:	308dc83a 	sub	r6,r6,r2
 1008774:	0087c83a 	sub	r3,zero,r2
 1008778:	d9801115 	stw	r6,68(sp)
 100877c:	d8c01015 	stw	r3,64(sp)
 1008780:	003cfe06 	br	1007b7c <_dtoa_r+0x274>
 1008784:	018dc83a 	sub	r6,zero,r6
 1008788:	d9801115 	stw	r6,68(sp)
 100878c:	d8000a15 	stw	zero,40(sp)
 1008790:	003cf306 	br	1007b60 <_dtoa_r+0x258>
 1008794:	d9000d17 	ldw	r4,52(sp)
 1008798:	10100500 	call	1010050 <__floatsidf>
 100879c:	880b883a 	mov	r5,r17
 10087a0:	8009883a 	mov	r4,r16
 10087a4:	180f883a 	mov	r7,r3
 10087a8:	100d883a 	mov	r6,r2
 10087ac:	100fda80 	call	100fda8 <__nedf2>
 10087b0:	103ce126 	beq	r2,zero,1007b38 <_dtoa_r+0x230>
 10087b4:	d9800d17 	ldw	r6,52(sp)
 10087b8:	31bfffc4 	addi	r6,r6,-1
 10087bc:	d9800d15 	stw	r6,52(sp)
 10087c0:	003cdd06 	br	1007b38 <_dtoa_r+0x230>
 10087c4:	d9000717 	ldw	r4,28(sp)
 10087c8:	900b883a 	mov	r5,r18
 10087cc:	100990c0 	call	100990c <__mcmp>
 10087d0:	103e8d0e 	bge	r2,zero,1008208 <_dtoa_r+0x900>
 10087d4:	d9400717 	ldw	r5,28(sp)
 10087d8:	d9001617 	ldw	r4,88(sp)
 10087dc:	01800284 	movi	r6,10
 10087e0:	000f883a 	mov	r7,zero
 10087e4:	100a4d00 	call	100a4d0 <__multadd>
 10087e8:	d9800d17 	ldw	r6,52(sp)
 10087ec:	d8800715 	stw	r2,28(sp)
 10087f0:	31bfffc4 	addi	r6,r6,-1
 10087f4:	d9800d15 	stw	r6,52(sp)
 10087f8:	b001a71e 	bne	r22,zero,1008e98 <_dtoa_r+0x1590>
 10087fc:	d8800e17 	ldw	r2,56(sp)
 1008800:	d8800f15 	stw	r2,60(sp)
 1008804:	003e8006 	br	1008208 <_dtoa_r+0x900>
 1008808:	90800417 	ldw	r2,16(r18)
 100880c:	1085883a 	add	r2,r2,r2
 1008810:	1085883a 	add	r2,r2,r2
 1008814:	1485883a 	add	r2,r2,r18
 1008818:	11000417 	ldw	r4,16(r2)
 100881c:	10097d80 	call	10097d8 <__hi0bits>
 1008820:	00c00804 	movi	r3,32
 1008824:	1887c83a 	sub	r3,r3,r2
 1008828:	003e5a06 	br	1008194 <_dtoa_r+0x88c>
 100882c:	d9400717 	ldw	r5,28(sp)
 1008830:	d9801017 	ldw	r6,64(sp)
 1008834:	d9001617 	ldw	r4,88(sp)
 1008838:	100a5fc0 	call	100a5fc <__pow5mult>
 100883c:	d8800715 	stw	r2,28(sp)
 1008840:	003e4306 	br	1008150 <_dtoa_r+0x848>
 1008844:	d9800f17 	ldw	r6,60(sp)
 1008848:	d8800d17 	ldw	r2,52(sp)
 100884c:	d9800315 	stw	r6,12(sp)
 1008850:	d8800415 	stw	r2,16(sp)
 1008854:	d8c00b17 	ldw	r3,44(sp)
 1008858:	1805003a 	cmpeq	r2,r3,zero
 100885c:	1000e21e 	bne	r2,zero,1008be8 <_dtoa_r+0x12e0>
 1008860:	d9000317 	ldw	r4,12(sp)
 1008864:	0005883a 	mov	r2,zero
 1008868:	00cff834 	movhi	r3,16352
 100886c:	200c90fa 	slli	r6,r4,3
 1008870:	01004074 	movhi	r4,257
 1008874:	210e1604 	addi	r4,r4,14424
 1008878:	180b883a 	mov	r5,r3
 100887c:	310d883a 	add	r6,r6,r4
 1008880:	327fff17 	ldw	r9,-4(r6)
 1008884:	323ffe17 	ldw	r8,-8(r6)
 1008888:	1009883a 	mov	r4,r2
 100888c:	480f883a 	mov	r7,r9
 1008890:	400d883a 	mov	r6,r8
 1008894:	100fac80 	call	100fac8 <__divdf3>
 1008898:	180b883a 	mov	r5,r3
 100889c:	b00d883a 	mov	r6,r22
 10088a0:	b80f883a 	mov	r7,r23
 10088a4:	1009883a 	mov	r4,r2
 10088a8:	100f6100 	call	100f610 <__subdf3>
 10088ac:	a80b883a 	mov	r5,r21
 10088b0:	a009883a 	mov	r4,r20
 10088b4:	d8c01915 	stw	r3,100(sp)
 10088b8:	d8801815 	stw	r2,96(sp)
 10088bc:	10101480 	call	1010148 <__fixdfsi>
 10088c0:	1009883a 	mov	r4,r2
 10088c4:	1027883a 	mov	r19,r2
 10088c8:	10100500 	call	1010050 <__floatsidf>
 10088cc:	a80b883a 	mov	r5,r21
 10088d0:	a009883a 	mov	r4,r20
 10088d4:	180f883a 	mov	r7,r3
 10088d8:	100d883a 	mov	r6,r2
 10088dc:	100f6100 	call	100f610 <__subdf3>
 10088e0:	d9801817 	ldw	r6,96(sp)
 10088e4:	1823883a 	mov	r17,r3
 10088e8:	d8801415 	stw	r2,80(sp)
 10088ec:	302d883a 	mov	r22,r6
 10088f0:	d9800517 	ldw	r6,20(sp)
 10088f4:	9cc00c04 	addi	r19,r19,48
 10088f8:	dc401515 	stw	r17,84(sp)
 10088fc:	d8c01917 	ldw	r3,100(sp)
 1008900:	34c00005 	stb	r19,0(r6)
 1008904:	d8800517 	ldw	r2,20(sp)
 1008908:	d9401917 	ldw	r5,100(sp)
 100890c:	d9801417 	ldw	r6,80(sp)
 1008910:	b009883a 	mov	r4,r22
 1008914:	880f883a 	mov	r7,r17
 1008918:	182f883a 	mov	r23,r3
 100891c:	17000044 	addi	fp,r2,1
 1008920:	100fe300 	call	100fe30 <__gtdf2>
 1008924:	00804e16 	blt	zero,r2,1008a60 <_dtoa_r+0x1158>
 1008928:	d9801417 	ldw	r6,80(sp)
 100892c:	0005883a 	mov	r2,zero
 1008930:	00cffc34 	movhi	r3,16368
 1008934:	180b883a 	mov	r5,r3
 1008938:	880f883a 	mov	r7,r17
 100893c:	1009883a 	mov	r4,r2
 1008940:	100f6100 	call	100f610 <__subdf3>
 1008944:	d9401917 	ldw	r5,100(sp)
 1008948:	180f883a 	mov	r7,r3
 100894c:	b009883a 	mov	r4,r22
 1008950:	100d883a 	mov	r6,r2
 1008954:	100fe300 	call	100fe30 <__gtdf2>
 1008958:	00bda216 	blt	zero,r2,1007fe4 <_dtoa_r+0x6dc>
 100895c:	d8c00317 	ldw	r3,12(sp)
 1008960:	00800044 	movi	r2,1
 1008964:	10c01216 	blt	r2,r3,10089b0 <_dtoa_r+0x10a8>
 1008968:	003d4506 	br	1007e80 <_dtoa_r+0x578>
 100896c:	d9801417 	ldw	r6,80(sp)
 1008970:	0005883a 	mov	r2,zero
 1008974:	00cffc34 	movhi	r3,16368
 1008978:	180b883a 	mov	r5,r3
 100897c:	880f883a 	mov	r7,r17
 1008980:	1009883a 	mov	r4,r2
 1008984:	100f6100 	call	100f610 <__subdf3>
 1008988:	d9c01b17 	ldw	r7,108(sp)
 100898c:	180b883a 	mov	r5,r3
 1008990:	1009883a 	mov	r4,r2
 1008994:	b00d883a 	mov	r6,r22
 1008998:	100ff400 	call	100ff40 <__ltdf2>
 100899c:	103d9116 	blt	r2,zero,1007fe4 <_dtoa_r+0x6dc>
 10089a0:	d9800517 	ldw	r6,20(sp)
 10089a4:	d9000317 	ldw	r4,12(sp)
 10089a8:	3105883a 	add	r2,r6,r4
 10089ac:	e0bd3426 	beq	fp,r2,1007e80 <_dtoa_r+0x578>
 10089b0:	04500934 	movhi	r17,16420
 10089b4:	0021883a 	mov	r16,zero
 10089b8:	b80b883a 	mov	r5,r23
 10089bc:	b009883a 	mov	r4,r22
 10089c0:	800d883a 	mov	r6,r16
 10089c4:	880f883a 	mov	r7,r17
 10089c8:	100f7040 	call	100f704 <__muldf3>
 10089cc:	d9401517 	ldw	r5,84(sp)
 10089d0:	d9001417 	ldw	r4,80(sp)
 10089d4:	880f883a 	mov	r7,r17
 10089d8:	000d883a 	mov	r6,zero
 10089dc:	d8801a15 	stw	r2,104(sp)
 10089e0:	d8c01b15 	stw	r3,108(sp)
 10089e4:	100f7040 	call	100f704 <__muldf3>
 10089e8:	180b883a 	mov	r5,r3
 10089ec:	1009883a 	mov	r4,r2
 10089f0:	1823883a 	mov	r17,r3
 10089f4:	1021883a 	mov	r16,r2
 10089f8:	10101480 	call	1010148 <__fixdfsi>
 10089fc:	1009883a 	mov	r4,r2
 1008a00:	102b883a 	mov	r21,r2
 1008a04:	10100500 	call	1010050 <__floatsidf>
 1008a08:	880b883a 	mov	r5,r17
 1008a0c:	8009883a 	mov	r4,r16
 1008a10:	180f883a 	mov	r7,r3
 1008a14:	100d883a 	mov	r6,r2
 1008a18:	100f6100 	call	100f610 <__subdf3>
 1008a1c:	1021883a 	mov	r16,r2
 1008a20:	d9001b17 	ldw	r4,108(sp)
 1008a24:	1823883a 	mov	r17,r3
 1008a28:	dc001415 	stw	r16,80(sp)
 1008a2c:	ad400c04 	addi	r21,r21,48
 1008a30:	dc401515 	stw	r17,84(sp)
 1008a34:	d8801a17 	ldw	r2,104(sp)
 1008a38:	e5400005 	stb	r21,0(fp)
 1008a3c:	202f883a 	mov	r23,r4
 1008a40:	d9c01b17 	ldw	r7,108(sp)
 1008a44:	d9001417 	ldw	r4,80(sp)
 1008a48:	880b883a 	mov	r5,r17
 1008a4c:	100d883a 	mov	r6,r2
 1008a50:	102d883a 	mov	r22,r2
 1008a54:	e7000044 	addi	fp,fp,1
 1008a58:	100ff400 	call	100ff40 <__ltdf2>
 1008a5c:	103fc30e 	bge	r2,zero,100896c <_dtoa_r+0x1064>
 1008a60:	d9000417 	ldw	r4,16(sp)
 1008a64:	d9000d15 	stw	r4,52(sp)
 1008a68:	003d7106 	br	1008030 <_dtoa_r+0x728>
 1008a6c:	d9801717 	ldw	r6,92(sp)
 1008a70:	00800084 	movi	r2,2
 1008a74:	11bde60e 	bge	r2,r6,1008210 <_dtoa_r+0x908>
 1008a78:	203cfb1e 	bne	r4,zero,1007e68 <_dtoa_r+0x560>
 1008a7c:	d9001617 	ldw	r4,88(sp)
 1008a80:	900b883a 	mov	r5,r18
 1008a84:	01800144 	movi	r6,5
 1008a88:	000f883a 	mov	r7,zero
 1008a8c:	100a4d00 	call	100a4d0 <__multadd>
 1008a90:	d9000717 	ldw	r4,28(sp)
 1008a94:	100b883a 	mov	r5,r2
 1008a98:	1025883a 	mov	r18,r2
 1008a9c:	100990c0 	call	100990c <__mcmp>
 1008aa0:	00bcf10e 	bge	zero,r2,1007e68 <_dtoa_r+0x560>
 1008aa4:	d8c00d17 	ldw	r3,52(sp)
 1008aa8:	d9000517 	ldw	r4,20(sp)
 1008aac:	d8000615 	stw	zero,24(sp)
 1008ab0:	18c00044 	addi	r3,r3,1
 1008ab4:	d8c00d15 	stw	r3,52(sp)
 1008ab8:	00800c44 	movi	r2,49
 1008abc:	27000044 	addi	fp,r4,1
 1008ac0:	20800005 	stb	r2,0(r4)
 1008ac4:	003e8906 	br	10084ec <_dtoa_r+0xbe4>
 1008ac8:	d8c00517 	ldw	r3,20(sp)
 1008acc:	003bc206 	br	10079d8 <_dtoa_r+0xd0>
 1008ad0:	01804074 	movhi	r6,257
 1008ad4:	318e4804 	addi	r6,r6,14624
 1008ad8:	30c00917 	ldw	r3,36(r6)
 1008adc:	30800817 	ldw	r2,32(r6)
 1008ae0:	d9001217 	ldw	r4,72(sp)
 1008ae4:	d9401317 	ldw	r5,76(sp)
 1008ae8:	180f883a 	mov	r7,r3
 1008aec:	100d883a 	mov	r6,r2
 1008af0:	100fac80 	call	100fac8 <__divdf3>
 1008af4:	948003cc 	andi	r18,r18,15
 1008af8:	058000c4 	movi	r22,3
 1008afc:	1029883a 	mov	r20,r2
 1008b00:	182b883a 	mov	r21,r3
 1008b04:	003c8906 	br	1007d2c <_dtoa_r+0x424>
 1008b08:	d9001017 	ldw	r4,64(sp)
 1008b0c:	d9800917 	ldw	r6,36(sp)
 1008b10:	0025883a 	mov	r18,zero
 1008b14:	1105c83a 	sub	r2,r2,r4
 1008b18:	2089883a 	add	r4,r4,r2
 1008b1c:	308d883a 	add	r6,r6,r2
 1008b20:	d9001015 	stw	r4,64(sp)
 1008b24:	d9800915 	stw	r6,36(sp)
 1008b28:	003e3206 	br	10083f4 <_dtoa_r+0xaec>
 1008b2c:	28800044 	addi	r2,r5,1
 1008b30:	27000044 	addi	fp,r4,1
 1008b34:	20800005 	stb	r2,0(r4)
 1008b38:	003e6c06 	br	10084ec <_dtoa_r+0xbe4>
 1008b3c:	d8800f17 	ldw	r2,60(sp)
 1008b40:	00bce016 	blt	zero,r2,1007ec4 <_dtoa_r+0x5bc>
 1008b44:	d9800f17 	ldw	r6,60(sp)
 1008b48:	303cc51e 	bne	r6,zero,1007e60 <_dtoa_r+0x558>
 1008b4c:	0005883a 	mov	r2,zero
 1008b50:	00d00534 	movhi	r3,16404
 1008b54:	980b883a 	mov	r5,r19
 1008b58:	180f883a 	mov	r7,r3
 1008b5c:	9009883a 	mov	r4,r18
 1008b60:	100d883a 	mov	r6,r2
 1008b64:	100f7040 	call	100f704 <__muldf3>
 1008b68:	180b883a 	mov	r5,r3
 1008b6c:	a80f883a 	mov	r7,r21
 1008b70:	1009883a 	mov	r4,r2
 1008b74:	a00d883a 	mov	r6,r20
 1008b78:	100feb80 	call	100feb8 <__gedf2>
 1008b7c:	103cb80e 	bge	r2,zero,1007e60 <_dtoa_r+0x558>
 1008b80:	0027883a 	mov	r19,zero
 1008b84:	0025883a 	mov	r18,zero
 1008b88:	003fc606 	br	1008aa4 <_dtoa_r+0x119c>
 1008b8c:	99400117 	ldw	r5,4(r19)
 1008b90:	d9001617 	ldw	r4,88(sp)
 1008b94:	1009d300 	call	1009d30 <_Balloc>
 1008b98:	99800417 	ldw	r6,16(r19)
 1008b9c:	11000304 	addi	r4,r2,12
 1008ba0:	99400304 	addi	r5,r19,12
 1008ba4:	318d883a 	add	r6,r6,r6
 1008ba8:	318d883a 	add	r6,r6,r6
 1008bac:	31800204 	addi	r6,r6,8
 1008bb0:	1023883a 	mov	r17,r2
 1008bb4:	10033340 	call	1003334 <memcpy>
 1008bb8:	d9001617 	ldw	r4,88(sp)
 1008bbc:	880b883a 	mov	r5,r17
 1008bc0:	01800044 	movi	r6,1
 1008bc4:	100a0f40 	call	100a0f4 <__lshift>
 1008bc8:	100b883a 	mov	r5,r2
 1008bcc:	003d9c06 	br	1008240 <_dtoa_r+0x938>
 1008bd0:	00800e44 	movi	r2,57
 1008bd4:	b8807026 	beq	r23,r2,1008d98 <_dtoa_r+0x1490>
 1008bd8:	b8800044 	addi	r2,r23,1
 1008bdc:	b7000044 	addi	fp,r22,1
 1008be0:	b0800005 	stb	r2,0(r22)
 1008be4:	003e4106 	br	10084ec <_dtoa_r+0xbe4>
 1008be8:	d8800317 	ldw	r2,12(sp)
 1008bec:	01804074 	movhi	r6,257
 1008bf0:	318e1604 	addi	r6,r6,14424
 1008bf4:	b009883a 	mov	r4,r22
 1008bf8:	100e90fa 	slli	r7,r2,3
 1008bfc:	b80b883a 	mov	r5,r23
 1008c00:	398f883a 	add	r7,r7,r6
 1008c04:	38bffe17 	ldw	r2,-8(r7)
 1008c08:	d9800517 	ldw	r6,20(sp)
 1008c0c:	38ffff17 	ldw	r3,-4(r7)
 1008c10:	37000044 	addi	fp,r6,1
 1008c14:	180f883a 	mov	r7,r3
 1008c18:	100d883a 	mov	r6,r2
 1008c1c:	100f7040 	call	100f704 <__muldf3>
 1008c20:	a80b883a 	mov	r5,r21
 1008c24:	a009883a 	mov	r4,r20
 1008c28:	182f883a 	mov	r23,r3
 1008c2c:	102d883a 	mov	r22,r2
 1008c30:	10101480 	call	1010148 <__fixdfsi>
 1008c34:	1009883a 	mov	r4,r2
 1008c38:	1027883a 	mov	r19,r2
 1008c3c:	10100500 	call	1010050 <__floatsidf>
 1008c40:	a80b883a 	mov	r5,r21
 1008c44:	a009883a 	mov	r4,r20
 1008c48:	180f883a 	mov	r7,r3
 1008c4c:	100d883a 	mov	r6,r2
 1008c50:	100f6100 	call	100f610 <__subdf3>
 1008c54:	180b883a 	mov	r5,r3
 1008c58:	d8c00517 	ldw	r3,20(sp)
 1008c5c:	9cc00c04 	addi	r19,r19,48
 1008c60:	1009883a 	mov	r4,r2
 1008c64:	1cc00005 	stb	r19,0(r3)
 1008c68:	2021883a 	mov	r16,r4
 1008c6c:	d9000317 	ldw	r4,12(sp)
 1008c70:	00800044 	movi	r2,1
 1008c74:	2823883a 	mov	r17,r5
 1008c78:	20802226 	beq	r4,r2,1008d04 <_dtoa_r+0x13fc>
 1008c7c:	1029883a 	mov	r20,r2
 1008c80:	0005883a 	mov	r2,zero
 1008c84:	00d00934 	movhi	r3,16420
 1008c88:	180f883a 	mov	r7,r3
 1008c8c:	100d883a 	mov	r6,r2
 1008c90:	880b883a 	mov	r5,r17
 1008c94:	8009883a 	mov	r4,r16
 1008c98:	100f7040 	call	100f704 <__muldf3>
 1008c9c:	180b883a 	mov	r5,r3
 1008ca0:	1009883a 	mov	r4,r2
 1008ca4:	1823883a 	mov	r17,r3
 1008ca8:	1021883a 	mov	r16,r2
 1008cac:	10101480 	call	1010148 <__fixdfsi>
 1008cb0:	1009883a 	mov	r4,r2
 1008cb4:	102b883a 	mov	r21,r2
 1008cb8:	10100500 	call	1010050 <__floatsidf>
 1008cbc:	880b883a 	mov	r5,r17
 1008cc0:	8009883a 	mov	r4,r16
 1008cc4:	180f883a 	mov	r7,r3
 1008cc8:	100d883a 	mov	r6,r2
 1008ccc:	100f6100 	call	100f610 <__subdf3>
 1008cd0:	180b883a 	mov	r5,r3
 1008cd4:	d8c00517 	ldw	r3,20(sp)
 1008cd8:	1009883a 	mov	r4,r2
 1008cdc:	ad400c04 	addi	r21,r21,48
 1008ce0:	1d05883a 	add	r2,r3,r20
 1008ce4:	15400005 	stb	r21,0(r2)
 1008ce8:	2021883a 	mov	r16,r4
 1008cec:	d9000317 	ldw	r4,12(sp)
 1008cf0:	a5000044 	addi	r20,r20,1
 1008cf4:	2823883a 	mov	r17,r5
 1008cf8:	a13fe11e 	bne	r20,r4,1008c80 <_dtoa_r+0x1378>
 1008cfc:	e505883a 	add	r2,fp,r20
 1008d00:	173fffc4 	addi	fp,r2,-1
 1008d04:	0025883a 	mov	r18,zero
 1008d08:	04cff834 	movhi	r19,16352
 1008d0c:	b009883a 	mov	r4,r22
 1008d10:	b80b883a 	mov	r5,r23
 1008d14:	900d883a 	mov	r6,r18
 1008d18:	980f883a 	mov	r7,r19
 1008d1c:	100f6900 	call	100f690 <__adddf3>
 1008d20:	180b883a 	mov	r5,r3
 1008d24:	1009883a 	mov	r4,r2
 1008d28:	800d883a 	mov	r6,r16
 1008d2c:	880f883a 	mov	r7,r17
 1008d30:	100ff400 	call	100ff40 <__ltdf2>
 1008d34:	103cab16 	blt	r2,zero,1007fe4 <_dtoa_r+0x6dc>
 1008d38:	0009883a 	mov	r4,zero
 1008d3c:	980b883a 	mov	r5,r19
 1008d40:	b80f883a 	mov	r7,r23
 1008d44:	b00d883a 	mov	r6,r22
 1008d48:	100f6100 	call	100f610 <__subdf3>
 1008d4c:	180b883a 	mov	r5,r3
 1008d50:	880f883a 	mov	r7,r17
 1008d54:	1009883a 	mov	r4,r2
 1008d58:	800d883a 	mov	r6,r16
 1008d5c:	100fe300 	call	100fe30 <__gtdf2>
 1008d60:	00bc470e 	bge	zero,r2,1007e80 <_dtoa_r+0x578>
 1008d64:	00c00c04 	movi	r3,48
 1008d68:	e73fffc4 	addi	fp,fp,-1
 1008d6c:	e0800007 	ldb	r2,0(fp)
 1008d70:	10fffd26 	beq	r2,r3,1008d68 <_dtoa_r+0x1460>
 1008d74:	d9800417 	ldw	r6,16(sp)
 1008d78:	e7000044 	addi	fp,fp,1
 1008d7c:	d9800d15 	stw	r6,52(sp)
 1008d80:	003cab06 	br	1008030 <_dtoa_r+0x728>
 1008d84:	d8c00f17 	ldw	r3,60(sp)
 1008d88:	d9001117 	ldw	r4,68(sp)
 1008d8c:	20e1c83a 	sub	r16,r4,r3
 1008d90:	0007883a 	mov	r3,zero
 1008d94:	003d9b06 	br	1008404 <_dtoa_r+0xafc>
 1008d98:	00800e44 	movi	r2,57
 1008d9c:	b0800005 	stb	r2,0(r22)
 1008da0:	b5800044 	addi	r22,r22,1
 1008da4:	003dc106 	br	10084ac <_dtoa_r+0xba4>
 1008da8:	05800084 	movi	r22,2
 1008dac:	003bf706 	br	1007d8c <_dtoa_r+0x484>
 1008db0:	d9000f17 	ldw	r4,60(sp)
 1008db4:	013c000e 	bge	zero,r4,1007db8 <_dtoa_r+0x4b0>
 1008db8:	d9800e17 	ldw	r6,56(sp)
 1008dbc:	01bc300e 	bge	zero,r6,1007e80 <_dtoa_r+0x578>
 1008dc0:	0005883a 	mov	r2,zero
 1008dc4:	00d00934 	movhi	r3,16420
 1008dc8:	a80b883a 	mov	r5,r21
 1008dcc:	180f883a 	mov	r7,r3
 1008dd0:	a009883a 	mov	r4,r20
 1008dd4:	100d883a 	mov	r6,r2
 1008dd8:	100f7040 	call	100f704 <__muldf3>
 1008ddc:	b1000044 	addi	r4,r22,1
 1008de0:	1021883a 	mov	r16,r2
 1008de4:	1823883a 	mov	r17,r3
 1008de8:	10100500 	call	1010050 <__floatsidf>
 1008dec:	880b883a 	mov	r5,r17
 1008df0:	8009883a 	mov	r4,r16
 1008df4:	180f883a 	mov	r7,r3
 1008df8:	100d883a 	mov	r6,r2
 1008dfc:	100f7040 	call	100f704 <__muldf3>
 1008e00:	0011883a 	mov	r8,zero
 1008e04:	02500734 	movhi	r9,16412
 1008e08:	180b883a 	mov	r5,r3
 1008e0c:	480f883a 	mov	r7,r9
 1008e10:	1009883a 	mov	r4,r2
 1008e14:	400d883a 	mov	r6,r8
 1008e18:	100f6900 	call	100f690 <__adddf3>
 1008e1c:	102d883a 	mov	r22,r2
 1008e20:	00bf3034 	movhi	r2,64704
 1008e24:	10ef883a 	add	r23,r2,r3
 1008e28:	d8800d17 	ldw	r2,52(sp)
 1008e2c:	d8c00e17 	ldw	r3,56(sp)
 1008e30:	8029883a 	mov	r20,r16
 1008e34:	10bfffc4 	addi	r2,r2,-1
 1008e38:	882b883a 	mov	r21,r17
 1008e3c:	d8800415 	stw	r2,16(sp)
 1008e40:	d8c00315 	stw	r3,12(sp)
 1008e44:	003e8306 	br	1008854 <_dtoa_r+0xf4c>
 1008e48:	d8800117 	ldw	r2,4(sp)
 1008e4c:	dc001117 	ldw	r16,68(sp)
 1008e50:	dc801017 	ldw	r18,64(sp)
 1008e54:	00c00d84 	movi	r3,54
 1008e58:	1887c83a 	sub	r3,r3,r2
 1008e5c:	003d6906 	br	1008404 <_dtoa_r+0xafc>
 1008e60:	01800044 	movi	r6,1
 1008e64:	3021883a 	mov	r16,r6
 1008e68:	d9800f15 	stw	r6,60(sp)
 1008e6c:	d9802615 	stw	r6,152(sp)
 1008e70:	d9800e15 	stw	r6,56(sp)
 1008e74:	003b9306 	br	1007cc4 <_dtoa_r+0x3bc>
 1008e78:	b021883a 	mov	r16,r22
 1008e7c:	dd800f15 	stw	r22,60(sp)
 1008e80:	003b9006 	br	1007cc4 <_dtoa_r+0x3bc>
 1008e84:	103e221e 	bne	r2,zero,1008710 <_dtoa_r+0xe08>
 1008e88:	b880004c 	andi	r2,r23,1
 1008e8c:	1005003a 	cmpeq	r2,r2,zero
 1008e90:	103e1f1e 	bne	r2,zero,1008710 <_dtoa_r+0xe08>
 1008e94:	003e1b06 	br	1008704 <_dtoa_r+0xdfc>
 1008e98:	d9001617 	ldw	r4,88(sp)
 1008e9c:	980b883a 	mov	r5,r19
 1008ea0:	01800284 	movi	r6,10
 1008ea4:	000f883a 	mov	r7,zero
 1008ea8:	100a4d00 	call	100a4d0 <__multadd>
 1008eac:	d8c00e17 	ldw	r3,56(sp)
 1008eb0:	1027883a 	mov	r19,r2
 1008eb4:	d8c00f15 	stw	r3,60(sp)
 1008eb8:	003cd306 	br	1008208 <_dtoa_r+0x900>

01008ebc <__sflags>:
 1008ebc:	28c00007 	ldb	r3,0(r5)
 1008ec0:	00801c84 	movi	r2,114
 1008ec4:	18800926 	beq	r3,r2,1008eec <__sflags+0x30>
 1008ec8:	00801dc4 	movi	r2,119
 1008ecc:	18801426 	beq	r3,r2,1008f20 <__sflags+0x64>
 1008ed0:	00801844 	movi	r2,97
 1008ed4:	18801626 	beq	r3,r2,1008f30 <__sflags+0x74>
 1008ed8:	0007883a 	mov	r3,zero
 1008edc:	00800584 	movi	r2,22
 1008ee0:	20800015 	stw	r2,0(r4)
 1008ee4:	1805883a 	mov	r2,r3
 1008ee8:	f800283a 	ret
 1008eec:	000f883a 	mov	r7,zero
 1008ef0:	0011883a 	mov	r8,zero
 1008ef4:	00c00104 	movi	r3,4
 1008ef8:	28800047 	ldb	r2,1(r5)
 1008efc:	10000426 	beq	r2,zero,1008f10 <__sflags+0x54>
 1008f00:	01000ac4 	movi	r4,43
 1008f04:	11000e26 	beq	r2,r4,1008f40 <__sflags+0x84>
 1008f08:	28800087 	ldb	r2,2(r5)
 1008f0c:	11000c26 	beq	r2,r4,1008f40 <__sflags+0x84>
 1008f10:	3a04b03a 	or	r2,r7,r8
 1008f14:	30800015 	stw	r2,0(r6)
 1008f18:	1805883a 	mov	r2,r3
 1008f1c:	f800283a 	ret
 1008f20:	01c00044 	movi	r7,1
 1008f24:	02018004 	movi	r8,1536
 1008f28:	00c00204 	movi	r3,8
 1008f2c:	003ff206 	br	1008ef8 <__sflags+0x3c>
 1008f30:	01c00044 	movi	r7,1
 1008f34:	02008204 	movi	r8,520
 1008f38:	00c04204 	movi	r3,264
 1008f3c:	003fee06 	br	1008ef8 <__sflags+0x3c>
 1008f40:	00bffcc4 	movi	r2,-13
 1008f44:	1884703a 	and	r2,r3,r2
 1008f48:	01c00084 	movi	r7,2
 1008f4c:	10c00414 	ori	r3,r2,16
 1008f50:	3a04b03a 	or	r2,r7,r8
 1008f54:	30800015 	stw	r2,0(r6)
 1008f58:	003fef06 	br	1008f18 <__sflags+0x5c>

01008f5c <__sfvwrite_r>:
 1008f5c:	30800217 	ldw	r2,8(r6)
 1008f60:	defff504 	addi	sp,sp,-44
 1008f64:	df000915 	stw	fp,36(sp)
 1008f68:	dd800715 	stw	r22,28(sp)
 1008f6c:	dc800315 	stw	r18,12(sp)
 1008f70:	dfc00a15 	stw	ra,40(sp)
 1008f74:	ddc00815 	stw	r23,32(sp)
 1008f78:	dd400615 	stw	r21,24(sp)
 1008f7c:	dd000515 	stw	r20,20(sp)
 1008f80:	dcc00415 	stw	r19,16(sp)
 1008f84:	dc400215 	stw	r17,8(sp)
 1008f88:	dc000115 	stw	r16,4(sp)
 1008f8c:	302d883a 	mov	r22,r6
 1008f90:	2039883a 	mov	fp,r4
 1008f94:	2825883a 	mov	r18,r5
 1008f98:	10001c26 	beq	r2,zero,100900c <__sfvwrite_r+0xb0>
 1008f9c:	29c0030b 	ldhu	r7,12(r5)
 1008fa0:	3880020c 	andi	r2,r7,8
 1008fa4:	10002726 	beq	r2,zero,1009044 <__sfvwrite_r+0xe8>
 1008fa8:	28800417 	ldw	r2,16(r5)
 1008fac:	10002526 	beq	r2,zero,1009044 <__sfvwrite_r+0xe8>
 1008fb0:	3880008c 	andi	r2,r7,2
 1008fb4:	b5400017 	ldw	r21,0(r22)
 1008fb8:	10002826 	beq	r2,zero,100905c <__sfvwrite_r+0x100>
 1008fbc:	0021883a 	mov	r16,zero
 1008fc0:	0023883a 	mov	r17,zero
 1008fc4:	880d883a 	mov	r6,r17
 1008fc8:	e009883a 	mov	r4,fp
 1008fcc:	00810004 	movi	r2,1024
 1008fd0:	80006e26 	beq	r16,zero,100918c <__sfvwrite_r+0x230>
 1008fd4:	800f883a 	mov	r7,r16
 1008fd8:	91400717 	ldw	r5,28(r18)
 1008fdc:	1400012e 	bgeu	r2,r16,1008fe4 <__sfvwrite_r+0x88>
 1008fe0:	100f883a 	mov	r7,r2
 1008fe4:	90c00917 	ldw	r3,36(r18)
 1008fe8:	183ee83a 	callr	r3
 1008fec:	1007883a 	mov	r3,r2
 1008ff0:	80a1c83a 	sub	r16,r16,r2
 1008ff4:	88a3883a 	add	r17,r17,r2
 1008ff8:	00806d0e 	bge	zero,r2,10091b0 <__sfvwrite_r+0x254>
 1008ffc:	b0800217 	ldw	r2,8(r22)
 1009000:	10c5c83a 	sub	r2,r2,r3
 1009004:	b0800215 	stw	r2,8(r22)
 1009008:	103fee1e 	bne	r2,zero,1008fc4 <__sfvwrite_r+0x68>
 100900c:	0009883a 	mov	r4,zero
 1009010:	2005883a 	mov	r2,r4
 1009014:	dfc00a17 	ldw	ra,40(sp)
 1009018:	df000917 	ldw	fp,36(sp)
 100901c:	ddc00817 	ldw	r23,32(sp)
 1009020:	dd800717 	ldw	r22,28(sp)
 1009024:	dd400617 	ldw	r21,24(sp)
 1009028:	dd000517 	ldw	r20,20(sp)
 100902c:	dcc00417 	ldw	r19,16(sp)
 1009030:	dc800317 	ldw	r18,12(sp)
 1009034:	dc400217 	ldw	r17,8(sp)
 1009038:	dc000117 	ldw	r16,4(sp)
 100903c:	dec00b04 	addi	sp,sp,44
 1009040:	f800283a 	ret
 1009044:	10073640 	call	1007364 <__swsetup_r>
 1009048:	1000e41e 	bne	r2,zero,10093dc <__sfvwrite_r+0x480>
 100904c:	91c0030b 	ldhu	r7,12(r18)
 1009050:	b5400017 	ldw	r21,0(r22)
 1009054:	3880008c 	andi	r2,r7,2
 1009058:	103fd81e 	bne	r2,zero,1008fbc <__sfvwrite_r+0x60>
 100905c:	3880004c 	andi	r2,r7,1
 1009060:	1005003a 	cmpeq	r2,r2,zero
 1009064:	10005726 	beq	r2,zero,10091c4 <__sfvwrite_r+0x268>
 1009068:	0029883a 	mov	r20,zero
 100906c:	002f883a 	mov	r23,zero
 1009070:	a0004226 	beq	r20,zero,100917c <__sfvwrite_r+0x220>
 1009074:	3880800c 	andi	r2,r7,512
 1009078:	94000217 	ldw	r16,8(r18)
 100907c:	10008b26 	beq	r2,zero,10092ac <__sfvwrite_r+0x350>
 1009080:	800d883a 	mov	r6,r16
 1009084:	a400a536 	bltu	r20,r16,100931c <__sfvwrite_r+0x3c0>
 1009088:	3881200c 	andi	r2,r7,1152
 100908c:	10002726 	beq	r2,zero,100912c <__sfvwrite_r+0x1d0>
 1009090:	90800517 	ldw	r2,20(r18)
 1009094:	92000417 	ldw	r8,16(r18)
 1009098:	91400017 	ldw	r5,0(r18)
 100909c:	1087883a 	add	r3,r2,r2
 10090a0:	1887883a 	add	r3,r3,r2
 10090a4:	1808d7fa 	srli	r4,r3,31
 10090a8:	2a21c83a 	sub	r16,r5,r8
 10090ac:	80800044 	addi	r2,r16,1
 10090b0:	20c9883a 	add	r4,r4,r3
 10090b4:	2027d07a 	srai	r19,r4,1
 10090b8:	a085883a 	add	r2,r20,r2
 10090bc:	980d883a 	mov	r6,r19
 10090c0:	9880022e 	bgeu	r19,r2,10090cc <__sfvwrite_r+0x170>
 10090c4:	1027883a 	mov	r19,r2
 10090c8:	100d883a 	mov	r6,r2
 10090cc:	3881000c 	andi	r2,r7,1024
 10090d0:	1000b826 	beq	r2,zero,10093b4 <__sfvwrite_r+0x458>
 10090d4:	300b883a 	mov	r5,r6
 10090d8:	e009883a 	mov	r4,fp
 10090dc:	1002b100 	call	1002b10 <_malloc_r>
 10090e0:	10003126 	beq	r2,zero,10091a8 <__sfvwrite_r+0x24c>
 10090e4:	91400417 	ldw	r5,16(r18)
 10090e8:	1009883a 	mov	r4,r2
 10090ec:	800d883a 	mov	r6,r16
 10090f0:	1023883a 	mov	r17,r2
 10090f4:	10033340 	call	1003334 <memcpy>
 10090f8:	90c0030b 	ldhu	r3,12(r18)
 10090fc:	00beffc4 	movi	r2,-1025
 1009100:	1886703a 	and	r3,r3,r2
 1009104:	18c02014 	ori	r3,r3,128
 1009108:	90c0030d 	sth	r3,12(r18)
 100910c:	9c07c83a 	sub	r3,r19,r16
 1009110:	8c05883a 	add	r2,r17,r16
 1009114:	a00d883a 	mov	r6,r20
 1009118:	a021883a 	mov	r16,r20
 100911c:	90800015 	stw	r2,0(r18)
 1009120:	90c00215 	stw	r3,8(r18)
 1009124:	94400415 	stw	r17,16(r18)
 1009128:	94c00515 	stw	r19,20(r18)
 100912c:	91000017 	ldw	r4,0(r18)
 1009130:	b80b883a 	mov	r5,r23
 1009134:	a023883a 	mov	r17,r20
 1009138:	10096d00 	call	10096d0 <memmove>
 100913c:	90c00217 	ldw	r3,8(r18)
 1009140:	90800017 	ldw	r2,0(r18)
 1009144:	a027883a 	mov	r19,r20
 1009148:	1c07c83a 	sub	r3,r3,r16
 100914c:	1405883a 	add	r2,r2,r16
 1009150:	90c00215 	stw	r3,8(r18)
 1009154:	a021883a 	mov	r16,r20
 1009158:	90800015 	stw	r2,0(r18)
 100915c:	b0800217 	ldw	r2,8(r22)
 1009160:	1405c83a 	sub	r2,r2,r16
 1009164:	b0800215 	stw	r2,8(r22)
 1009168:	103fa826 	beq	r2,zero,100900c <__sfvwrite_r+0xb0>
 100916c:	a469c83a 	sub	r20,r20,r17
 1009170:	91c0030b 	ldhu	r7,12(r18)
 1009174:	bcef883a 	add	r23,r23,r19
 1009178:	a03fbe1e 	bne	r20,zero,1009074 <__sfvwrite_r+0x118>
 100917c:	adc00017 	ldw	r23,0(r21)
 1009180:	ad000117 	ldw	r20,4(r21)
 1009184:	ad400204 	addi	r21,r21,8
 1009188:	003fb906 	br	1009070 <__sfvwrite_r+0x114>
 100918c:	ac400017 	ldw	r17,0(r21)
 1009190:	ac000117 	ldw	r16,4(r21)
 1009194:	ad400204 	addi	r21,r21,8
 1009198:	003f8a06 	br	1008fc4 <__sfvwrite_r+0x68>
 100919c:	91400417 	ldw	r5,16(r18)
 10091a0:	e009883a 	mov	r4,fp
 10091a4:	1001e940 	call	1001e94 <_free_r>
 10091a8:	00800304 	movi	r2,12
 10091ac:	e0800015 	stw	r2,0(fp)
 10091b0:	9080030b 	ldhu	r2,12(r18)
 10091b4:	013fffc4 	movi	r4,-1
 10091b8:	10801014 	ori	r2,r2,64
 10091bc:	9080030d 	sth	r2,12(r18)
 10091c0:	003f9306 	br	1009010 <__sfvwrite_r+0xb4>
 10091c4:	0027883a 	mov	r19,zero
 10091c8:	002f883a 	mov	r23,zero
 10091cc:	d8000015 	stw	zero,0(sp)
 10091d0:	0029883a 	mov	r20,zero
 10091d4:	98001e26 	beq	r19,zero,1009250 <__sfvwrite_r+0x2f4>
 10091d8:	d8c00017 	ldw	r3,0(sp)
 10091dc:	1804c03a 	cmpne	r2,r3,zero
 10091e0:	10005e26 	beq	r2,zero,100935c <__sfvwrite_r+0x400>
 10091e4:	9821883a 	mov	r16,r19
 10091e8:	a4c0012e 	bgeu	r20,r19,10091f0 <__sfvwrite_r+0x294>
 10091ec:	a021883a 	mov	r16,r20
 10091f0:	91000017 	ldw	r4,0(r18)
 10091f4:	90800417 	ldw	r2,16(r18)
 10091f8:	91800217 	ldw	r6,8(r18)
 10091fc:	91c00517 	ldw	r7,20(r18)
 1009200:	1100022e 	bgeu	r2,r4,100920c <__sfvwrite_r+0x2b0>
 1009204:	31e3883a 	add	r17,r6,r7
 1009208:	8c001616 	blt	r17,r16,1009264 <__sfvwrite_r+0x308>
 100920c:	81c03816 	blt	r16,r7,10092f0 <__sfvwrite_r+0x394>
 1009210:	90c00917 	ldw	r3,36(r18)
 1009214:	91400717 	ldw	r5,28(r18)
 1009218:	e009883a 	mov	r4,fp
 100921c:	b80d883a 	mov	r6,r23
 1009220:	183ee83a 	callr	r3
 1009224:	1023883a 	mov	r17,r2
 1009228:	00bfe10e 	bge	zero,r2,10091b0 <__sfvwrite_r+0x254>
 100922c:	a469c83a 	sub	r20,r20,r17
 1009230:	a0001826 	beq	r20,zero,1009294 <__sfvwrite_r+0x338>
 1009234:	b0800217 	ldw	r2,8(r22)
 1009238:	1445c83a 	sub	r2,r2,r17
 100923c:	b0800215 	stw	r2,8(r22)
 1009240:	103f7226 	beq	r2,zero,100900c <__sfvwrite_r+0xb0>
 1009244:	9c67c83a 	sub	r19,r19,r17
 1009248:	bc6f883a 	add	r23,r23,r17
 100924c:	983fe21e 	bne	r19,zero,10091d8 <__sfvwrite_r+0x27c>
 1009250:	adc00017 	ldw	r23,0(r21)
 1009254:	acc00117 	ldw	r19,4(r21)
 1009258:	ad400204 	addi	r21,r21,8
 100925c:	d8000015 	stw	zero,0(sp)
 1009260:	003fdc06 	br	10091d4 <__sfvwrite_r+0x278>
 1009264:	b80b883a 	mov	r5,r23
 1009268:	880d883a 	mov	r6,r17
 100926c:	10096d00 	call	10096d0 <memmove>
 1009270:	90c00017 	ldw	r3,0(r18)
 1009274:	e009883a 	mov	r4,fp
 1009278:	900b883a 	mov	r5,r18
 100927c:	1c47883a 	add	r3,r3,r17
 1009280:	90c00015 	stw	r3,0(r18)
 1009284:	100131c0 	call	100131c <_fflush_r>
 1009288:	103fc91e 	bne	r2,zero,10091b0 <__sfvwrite_r+0x254>
 100928c:	a469c83a 	sub	r20,r20,r17
 1009290:	a03fe81e 	bne	r20,zero,1009234 <__sfvwrite_r+0x2d8>
 1009294:	e009883a 	mov	r4,fp
 1009298:	900b883a 	mov	r5,r18
 100929c:	100131c0 	call	100131c <_fflush_r>
 10092a0:	103fc31e 	bne	r2,zero,10091b0 <__sfvwrite_r+0x254>
 10092a4:	d8000015 	stw	zero,0(sp)
 10092a8:	003fe206 	br	1009234 <__sfvwrite_r+0x2d8>
 10092ac:	91000017 	ldw	r4,0(r18)
 10092b0:	90800417 	ldw	r2,16(r18)
 10092b4:	1100022e 	bgeu	r2,r4,10092c0 <__sfvwrite_r+0x364>
 10092b8:	8023883a 	mov	r17,r16
 10092bc:	85003136 	bltu	r16,r20,1009384 <__sfvwrite_r+0x428>
 10092c0:	91c00517 	ldw	r7,20(r18)
 10092c4:	a1c01836 	bltu	r20,r7,1009328 <__sfvwrite_r+0x3cc>
 10092c8:	90c00917 	ldw	r3,36(r18)
 10092cc:	91400717 	ldw	r5,28(r18)
 10092d0:	e009883a 	mov	r4,fp
 10092d4:	b80d883a 	mov	r6,r23
 10092d8:	183ee83a 	callr	r3
 10092dc:	1021883a 	mov	r16,r2
 10092e0:	00bfb30e 	bge	zero,r2,10091b0 <__sfvwrite_r+0x254>
 10092e4:	1023883a 	mov	r17,r2
 10092e8:	1027883a 	mov	r19,r2
 10092ec:	003f9b06 	br	100915c <__sfvwrite_r+0x200>
 10092f0:	b80b883a 	mov	r5,r23
 10092f4:	800d883a 	mov	r6,r16
 10092f8:	10096d00 	call	10096d0 <memmove>
 10092fc:	90c00217 	ldw	r3,8(r18)
 1009300:	90800017 	ldw	r2,0(r18)
 1009304:	8023883a 	mov	r17,r16
 1009308:	1c07c83a 	sub	r3,r3,r16
 100930c:	1405883a 	add	r2,r2,r16
 1009310:	90c00215 	stw	r3,8(r18)
 1009314:	90800015 	stw	r2,0(r18)
 1009318:	003fc406 	br	100922c <__sfvwrite_r+0x2d0>
 100931c:	a00d883a 	mov	r6,r20
 1009320:	a021883a 	mov	r16,r20
 1009324:	003f8106 	br	100912c <__sfvwrite_r+0x1d0>
 1009328:	b80b883a 	mov	r5,r23
 100932c:	a00d883a 	mov	r6,r20
 1009330:	10096d00 	call	10096d0 <memmove>
 1009334:	90c00217 	ldw	r3,8(r18)
 1009338:	90800017 	ldw	r2,0(r18)
 100933c:	a021883a 	mov	r16,r20
 1009340:	1d07c83a 	sub	r3,r3,r20
 1009344:	1505883a 	add	r2,r2,r20
 1009348:	a023883a 	mov	r17,r20
 100934c:	a027883a 	mov	r19,r20
 1009350:	90c00215 	stw	r3,8(r18)
 1009354:	90800015 	stw	r2,0(r18)
 1009358:	003f8006 	br	100915c <__sfvwrite_r+0x200>
 100935c:	b809883a 	mov	r4,r23
 1009360:	01400284 	movi	r5,10
 1009364:	980d883a 	mov	r6,r19
 1009368:	10032500 	call	1003250 <memchr>
 100936c:	10001726 	beq	r2,zero,10093cc <__sfvwrite_r+0x470>
 1009370:	15c5c83a 	sub	r2,r2,r23
 1009374:	15000044 	addi	r20,r2,1
 1009378:	00800044 	movi	r2,1
 100937c:	d8800015 	stw	r2,0(sp)
 1009380:	003f9806 	br	10091e4 <__sfvwrite_r+0x288>
 1009384:	b80b883a 	mov	r5,r23
 1009388:	800d883a 	mov	r6,r16
 100938c:	10096d00 	call	10096d0 <memmove>
 1009390:	90c00017 	ldw	r3,0(r18)
 1009394:	e009883a 	mov	r4,fp
 1009398:	900b883a 	mov	r5,r18
 100939c:	1c07883a 	add	r3,r3,r16
 10093a0:	90c00015 	stw	r3,0(r18)
 10093a4:	8027883a 	mov	r19,r16
 10093a8:	100131c0 	call	100131c <_fflush_r>
 10093ac:	103f6b26 	beq	r2,zero,100915c <__sfvwrite_r+0x200>
 10093b0:	003f7f06 	br	10091b0 <__sfvwrite_r+0x254>
 10093b4:	400b883a 	mov	r5,r8
 10093b8:	e009883a 	mov	r4,fp
 10093bc:	100a8b40 	call	100a8b4 <_realloc_r>
 10093c0:	103f7626 	beq	r2,zero,100919c <__sfvwrite_r+0x240>
 10093c4:	1023883a 	mov	r17,r2
 10093c8:	003f5006 	br	100910c <__sfvwrite_r+0x1b0>
 10093cc:	00c00044 	movi	r3,1
 10093d0:	9d000044 	addi	r20,r19,1
 10093d4:	d8c00015 	stw	r3,0(sp)
 10093d8:	003f8206 	br	10091e4 <__sfvwrite_r+0x288>
 10093dc:	9080030b 	ldhu	r2,12(r18)
 10093e0:	00c00244 	movi	r3,9
 10093e4:	013fffc4 	movi	r4,-1
 10093e8:	10801014 	ori	r2,r2,64
 10093ec:	9080030d 	sth	r2,12(r18)
 10093f0:	e0c00015 	stw	r3,0(fp)
 10093f4:	003f0606 	br	1009010 <__sfvwrite_r+0xb4>

010093f8 <_isatty_r>:
 10093f8:	defffd04 	addi	sp,sp,-12
 10093fc:	dc000015 	stw	r16,0(sp)
 1009400:	04004074 	movhi	r16,257
 1009404:	84142904 	addi	r16,r16,20644
 1009408:	dc400115 	stw	r17,4(sp)
 100940c:	80000015 	stw	zero,0(r16)
 1009410:	2023883a 	mov	r17,r4
 1009414:	2809883a 	mov	r4,r5
 1009418:	dfc00215 	stw	ra,8(sp)
 100941c:	1010fdc0 	call	1010fdc <isatty>
 1009420:	1007883a 	mov	r3,r2
 1009424:	00bfffc4 	movi	r2,-1
 1009428:	18800626 	beq	r3,r2,1009444 <_isatty_r+0x4c>
 100942c:	1805883a 	mov	r2,r3
 1009430:	dfc00217 	ldw	ra,8(sp)
 1009434:	dc400117 	ldw	r17,4(sp)
 1009438:	dc000017 	ldw	r16,0(sp)
 100943c:	dec00304 	addi	sp,sp,12
 1009440:	f800283a 	ret
 1009444:	80800017 	ldw	r2,0(r16)
 1009448:	103ff826 	beq	r2,zero,100942c <_isatty_r+0x34>
 100944c:	88800015 	stw	r2,0(r17)
 1009450:	1805883a 	mov	r2,r3
 1009454:	dfc00217 	ldw	ra,8(sp)
 1009458:	dc400117 	ldw	r17,4(sp)
 100945c:	dc000017 	ldw	r16,0(sp)
 1009460:	dec00304 	addi	sp,sp,12
 1009464:	f800283a 	ret

01009468 <iswspace>:
 1009468:	00803fc4 	movi	r2,255
 100946c:	0007883a 	mov	r3,zero
 1009470:	11000636 	bltu	r2,r4,100948c <iswspace+0x24>
 1009474:	00804074 	movhi	r2,257
 1009478:	10915904 	addi	r2,r2,17764
 100947c:	10c00017 	ldw	r3,0(r2)
 1009480:	1907883a 	add	r3,r3,r4
 1009484:	18800003 	ldbu	r2,0(r3)
 1009488:	10c0020c 	andi	r3,r2,8
 100948c:	1805883a 	mov	r2,r3
 1009490:	f800283a 	ret

01009494 <__locale_charset>:
 1009494:	d0a00617 	ldw	r2,-32744(gp)
 1009498:	f800283a 	ret

0100949c <_localeconv_r>:
 100949c:	00804074 	movhi	r2,257
 10094a0:	108e0a04 	addi	r2,r2,14376
 10094a4:	f800283a 	ret

010094a8 <localeconv>:
 10094a8:	00804074 	movhi	r2,257
 10094ac:	10915504 	addi	r2,r2,17748
 10094b0:	11000017 	ldw	r4,0(r2)
 10094b4:	100949c1 	jmpi	100949c <_localeconv_r>

010094b8 <_setlocale_r>:
 10094b8:	defffc04 	addi	sp,sp,-16
 10094bc:	00c04074 	movhi	r3,257
 10094c0:	18cd3504 	addi	r3,r3,13524
 10094c4:	dc800215 	stw	r18,8(sp)
 10094c8:	dc400115 	stw	r17,4(sp)
 10094cc:	dc000015 	stw	r16,0(sp)
 10094d0:	2023883a 	mov	r17,r4
 10094d4:	2825883a 	mov	r18,r5
 10094d8:	dfc00315 	stw	ra,12(sp)
 10094dc:	3021883a 	mov	r16,r6
 10094e0:	3009883a 	mov	r4,r6
 10094e4:	180b883a 	mov	r5,r3
 10094e8:	30000926 	beq	r6,zero,1009510 <_setlocale_r+0x58>
 10094ec:	100b0b40 	call	100b0b4 <strcmp>
 10094f0:	8009883a 	mov	r4,r16
 10094f4:	01404074 	movhi	r5,257
 10094f8:	294d4604 	addi	r5,r5,13592
 10094fc:	10000b1e 	bne	r2,zero,100952c <_setlocale_r+0x74>
 1009500:	8c000d15 	stw	r16,52(r17)
 1009504:	8c800c15 	stw	r18,48(r17)
 1009508:	00c04074 	movhi	r3,257
 100950c:	18cd3504 	addi	r3,r3,13524
 1009510:	1805883a 	mov	r2,r3
 1009514:	dfc00317 	ldw	ra,12(sp)
 1009518:	dc800217 	ldw	r18,8(sp)
 100951c:	dc400117 	ldw	r17,4(sp)
 1009520:	dc000017 	ldw	r16,0(sp)
 1009524:	dec00404 	addi	sp,sp,16
 1009528:	f800283a 	ret
 100952c:	100b0b40 	call	100b0b4 <strcmp>
 1009530:	0007883a 	mov	r3,zero
 1009534:	103ff226 	beq	r2,zero,1009500 <_setlocale_r+0x48>
 1009538:	003ff506 	br	1009510 <_setlocale_r+0x58>

0100953c <setlocale>:
 100953c:	01804074 	movhi	r6,257
 1009540:	31915504 	addi	r6,r6,17748
 1009544:	2007883a 	mov	r3,r4
 1009548:	31000017 	ldw	r4,0(r6)
 100954c:	280d883a 	mov	r6,r5
 1009550:	180b883a 	mov	r5,r3
 1009554:	10094b81 	jmpi	10094b8 <_setlocale_r>

01009558 <_lseek_r>:
 1009558:	defffd04 	addi	sp,sp,-12
 100955c:	dc000015 	stw	r16,0(sp)
 1009560:	04004074 	movhi	r16,257
 1009564:	84142904 	addi	r16,r16,20644
 1009568:	dc400115 	stw	r17,4(sp)
 100956c:	80000015 	stw	zero,0(r16)
 1009570:	2023883a 	mov	r17,r4
 1009574:	2809883a 	mov	r4,r5
 1009578:	300b883a 	mov	r5,r6
 100957c:	380d883a 	mov	r6,r7
 1009580:	dfc00215 	stw	ra,8(sp)
 1009584:	10111ec0 	call	10111ec <lseek>
 1009588:	1007883a 	mov	r3,r2
 100958c:	00bfffc4 	movi	r2,-1
 1009590:	18800626 	beq	r3,r2,10095ac <_lseek_r+0x54>
 1009594:	1805883a 	mov	r2,r3
 1009598:	dfc00217 	ldw	ra,8(sp)
 100959c:	dc400117 	ldw	r17,4(sp)
 10095a0:	dc000017 	ldw	r16,0(sp)
 10095a4:	dec00304 	addi	sp,sp,12
 10095a8:	f800283a 	ret
 10095ac:	80800017 	ldw	r2,0(r16)
 10095b0:	103ff826 	beq	r2,zero,1009594 <_lseek_r+0x3c>
 10095b4:	88800015 	stw	r2,0(r17)
 10095b8:	1805883a 	mov	r2,r3
 10095bc:	dfc00217 	ldw	ra,8(sp)
 10095c0:	dc400117 	ldw	r17,4(sp)
 10095c4:	dc000017 	ldw	r16,0(sp)
 10095c8:	dec00304 	addi	sp,sp,12
 10095cc:	f800283a 	ret

010095d0 <_mbrtowc_r>:
 10095d0:	defffc04 	addi	sp,sp,-16
 10095d4:	dc400215 	stw	r17,8(sp)
 10095d8:	dc000115 	stw	r16,4(sp)
 10095dc:	dfc00315 	stw	ra,12(sp)
 10095e0:	dc000417 	ldw	r16,16(sp)
 10095e4:	2023883a 	mov	r17,r4
 10095e8:	30000f26 	beq	r6,zero,1009628 <_mbrtowc_r+0x58>
 10095ec:	dc000015 	stw	r16,0(sp)
 10095f0:	10096900 	call	1009690 <_mbtowc_r>
 10095f4:	1007883a 	mov	r3,r2
 10095f8:	00bfffc4 	movi	r2,-1
 10095fc:	1809883a 	mov	r4,r3
 1009600:	1880111e 	bne	r3,r2,1009648 <_mbrtowc_r+0x78>
 1009604:	80000015 	stw	zero,0(r16)
 1009608:	00802284 	movi	r2,138
 100960c:	88800015 	stw	r2,0(r17)
 1009610:	2005883a 	mov	r2,r4
 1009614:	dfc00317 	ldw	ra,12(sp)
 1009618:	dc400217 	ldw	r17,8(sp)
 100961c:	dc000117 	ldw	r16,4(sp)
 1009620:	dec00404 	addi	sp,sp,16
 1009624:	f800283a 	ret
 1009628:	000b883a 	mov	r5,zero
 100962c:	01804074 	movhi	r6,257
 1009630:	318d4604 	addi	r6,r6,13592
 1009634:	01c00044 	movi	r7,1
 1009638:	dc000015 	stw	r16,0(sp)
 100963c:	10096900 	call	1009690 <_mbtowc_r>
 1009640:	1007883a 	mov	r3,r2
 1009644:	003fec06 	br	10095f8 <_mbrtowc_r+0x28>
 1009648:	1809883a 	mov	r4,r3
 100964c:	003ff006 	br	1009610 <_mbrtowc_r+0x40>

01009650 <mbrtowc>:
 1009650:	00804074 	movhi	r2,257
 1009654:	10915504 	addi	r2,r2,17748
 1009658:	2017883a 	mov	r11,r4
 100965c:	11000017 	ldw	r4,0(r2)
 1009660:	defffe04 	addi	sp,sp,-8
 1009664:	3013883a 	mov	r9,r6
 1009668:	2805883a 	mov	r2,r5
 100966c:	d9c00015 	stw	r7,0(sp)
 1009670:	580b883a 	mov	r5,r11
 1009674:	100d883a 	mov	r6,r2
 1009678:	480f883a 	mov	r7,r9
 100967c:	dfc00115 	stw	ra,4(sp)
 1009680:	10095d00 	call	10095d0 <_mbrtowc_r>
 1009684:	dfc00117 	ldw	ra,4(sp)
 1009688:	dec00204 	addi	sp,sp,8
 100968c:	f800283a 	ret

01009690 <_mbtowc_r>:
 1009690:	deffff04 	addi	sp,sp,-4
 1009694:	0005883a 	mov	r2,zero
 1009698:	28000326 	beq	r5,zero,10096a8 <_mbtowc_r+0x18>
 100969c:	3000041e 	bne	r6,zero,10096b0 <_mbtowc_r+0x20>
 10096a0:	dec00104 	addi	sp,sp,4
 10096a4:	f800283a 	ret
 10096a8:	d80b883a 	mov	r5,sp
 10096ac:	303ffc26 	beq	r6,zero,10096a0 <_mbtowc_r+0x10>
 10096b0:	00bfff84 	movi	r2,-2
 10096b4:	383ffa26 	beq	r7,zero,10096a0 <_mbtowc_r+0x10>
 10096b8:	30800003 	ldbu	r2,0(r6)
 10096bc:	28800015 	stw	r2,0(r5)
 10096c0:	30c00003 	ldbu	r3,0(r6)
 10096c4:	1804c03a 	cmpne	r2,r3,zero
 10096c8:	dec00104 	addi	sp,sp,4
 10096cc:	f800283a 	ret

010096d0 <memmove>:
 10096d0:	2807883a 	mov	r3,r5
 10096d4:	2011883a 	mov	r8,r4
 10096d8:	29000c2e 	bgeu	r5,r4,100970c <memmove+0x3c>
 10096dc:	298f883a 	add	r7,r5,r6
 10096e0:	21c00a2e 	bgeu	r4,r7,100970c <memmove+0x3c>
 10096e4:	30000726 	beq	r6,zero,1009704 <memmove+0x34>
 10096e8:	2187883a 	add	r3,r4,r6
 10096ec:	198dc83a 	sub	r6,r3,r6
 10096f0:	39ffffc4 	addi	r7,r7,-1
 10096f4:	38800003 	ldbu	r2,0(r7)
 10096f8:	18ffffc4 	addi	r3,r3,-1
 10096fc:	18800005 	stb	r2,0(r3)
 1009700:	19bffb1e 	bne	r3,r6,10096f0 <memmove+0x20>
 1009704:	2005883a 	mov	r2,r4
 1009708:	f800283a 	ret
 100970c:	01c003c4 	movi	r7,15
 1009710:	39800a36 	bltu	r7,r6,100973c <memmove+0x6c>
 1009714:	303ffb26 	beq	r6,zero,1009704 <memmove+0x34>
 1009718:	400f883a 	mov	r7,r8
 100971c:	320d883a 	add	r6,r6,r8
 1009720:	28800003 	ldbu	r2,0(r5)
 1009724:	29400044 	addi	r5,r5,1
 1009728:	38800005 	stb	r2,0(r7)
 100972c:	39c00044 	addi	r7,r7,1
 1009730:	39bffb1e 	bne	r7,r6,1009720 <memmove+0x50>
 1009734:	2005883a 	mov	r2,r4
 1009738:	f800283a 	ret
 100973c:	1904b03a 	or	r2,r3,r4
 1009740:	108000cc 	andi	r2,r2,3
 1009744:	103ff31e 	bne	r2,zero,1009714 <memmove+0x44>
 1009748:	3811883a 	mov	r8,r7
 100974c:	180b883a 	mov	r5,r3
 1009750:	200f883a 	mov	r7,r4
 1009754:	28c00017 	ldw	r3,0(r5)
 1009758:	31bffc04 	addi	r6,r6,-16
 100975c:	38c00015 	stw	r3,0(r7)
 1009760:	28800117 	ldw	r2,4(r5)
 1009764:	38800115 	stw	r2,4(r7)
 1009768:	28c00217 	ldw	r3,8(r5)
 100976c:	38c00215 	stw	r3,8(r7)
 1009770:	28800317 	ldw	r2,12(r5)
 1009774:	29400404 	addi	r5,r5,16
 1009778:	38800315 	stw	r2,12(r7)
 100977c:	39c00404 	addi	r7,r7,16
 1009780:	41bff436 	bltu	r8,r6,1009754 <memmove+0x84>
 1009784:	008000c4 	movi	r2,3
 1009788:	1180072e 	bgeu	r2,r6,10097a8 <memmove+0xd8>
 100978c:	1007883a 	mov	r3,r2
 1009790:	28800017 	ldw	r2,0(r5)
 1009794:	31bfff04 	addi	r6,r6,-4
 1009798:	29400104 	addi	r5,r5,4
 100979c:	38800015 	stw	r2,0(r7)
 10097a0:	39c00104 	addi	r7,r7,4
 10097a4:	19bffa36 	bltu	r3,r6,1009790 <memmove+0xc0>
 10097a8:	3811883a 	mov	r8,r7
 10097ac:	003fd906 	br	1009714 <memmove+0x44>

010097b0 <_Bfree>:
 10097b0:	28000826 	beq	r5,zero,10097d4 <_Bfree+0x24>
 10097b4:	28800117 	ldw	r2,4(r5)
 10097b8:	21001317 	ldw	r4,76(r4)
 10097bc:	1085883a 	add	r2,r2,r2
 10097c0:	1085883a 	add	r2,r2,r2
 10097c4:	1105883a 	add	r2,r2,r4
 10097c8:	10c00017 	ldw	r3,0(r2)
 10097cc:	28c00015 	stw	r3,0(r5)
 10097d0:	11400015 	stw	r5,0(r2)
 10097d4:	f800283a 	ret

010097d8 <__hi0bits>:
 10097d8:	20bfffec 	andhi	r2,r4,65535
 10097dc:	10001426 	beq	r2,zero,1009830 <__hi0bits+0x58>
 10097e0:	0007883a 	mov	r3,zero
 10097e4:	20bfc02c 	andhi	r2,r4,65280
 10097e8:	1000021e 	bne	r2,zero,10097f4 <__hi0bits+0x1c>
 10097ec:	2008923a 	slli	r4,r4,8
 10097f0:	18c00204 	addi	r3,r3,8
 10097f4:	20bc002c 	andhi	r2,r4,61440
 10097f8:	1000021e 	bne	r2,zero,1009804 <__hi0bits+0x2c>
 10097fc:	2008913a 	slli	r4,r4,4
 1009800:	18c00104 	addi	r3,r3,4
 1009804:	20b0002c 	andhi	r2,r4,49152
 1009808:	1000031e 	bne	r2,zero,1009818 <__hi0bits+0x40>
 100980c:	2105883a 	add	r2,r4,r4
 1009810:	18c00084 	addi	r3,r3,2
 1009814:	1089883a 	add	r4,r2,r2
 1009818:	20000316 	blt	r4,zero,1009828 <__hi0bits+0x50>
 100981c:	2090002c 	andhi	r2,r4,16384
 1009820:	10000626 	beq	r2,zero,100983c <__hi0bits+0x64>
 1009824:	18c00044 	addi	r3,r3,1
 1009828:	1805883a 	mov	r2,r3
 100982c:	f800283a 	ret
 1009830:	2008943a 	slli	r4,r4,16
 1009834:	00c00404 	movi	r3,16
 1009838:	003fea06 	br	10097e4 <__hi0bits+0xc>
 100983c:	00c00804 	movi	r3,32
 1009840:	1805883a 	mov	r2,r3
 1009844:	f800283a 	ret

01009848 <__lo0bits>:
 1009848:	20c00017 	ldw	r3,0(r4)
 100984c:	188001cc 	andi	r2,r3,7
 1009850:	10000a26 	beq	r2,zero,100987c <__lo0bits+0x34>
 1009854:	1880004c 	andi	r2,r3,1
 1009858:	1005003a 	cmpeq	r2,r2,zero
 100985c:	10002126 	beq	r2,zero,10098e4 <__lo0bits+0x9c>
 1009860:	1880008c 	andi	r2,r3,2
 1009864:	1000251e 	bne	r2,zero,10098fc <__lo0bits+0xb4>
 1009868:	1804d0ba 	srli	r2,r3,2
 100986c:	01400084 	movi	r5,2
 1009870:	20800015 	stw	r2,0(r4)
 1009874:	2805883a 	mov	r2,r5
 1009878:	f800283a 	ret
 100987c:	18bfffcc 	andi	r2,r3,65535
 1009880:	10001526 	beq	r2,zero,10098d8 <__lo0bits+0x90>
 1009884:	000b883a 	mov	r5,zero
 1009888:	18803fcc 	andi	r2,r3,255
 100988c:	1000021e 	bne	r2,zero,1009898 <__lo0bits+0x50>
 1009890:	1806d23a 	srli	r3,r3,8
 1009894:	29400204 	addi	r5,r5,8
 1009898:	188003cc 	andi	r2,r3,15
 100989c:	1000021e 	bne	r2,zero,10098a8 <__lo0bits+0x60>
 10098a0:	1806d13a 	srli	r3,r3,4
 10098a4:	29400104 	addi	r5,r5,4
 10098a8:	188000cc 	andi	r2,r3,3
 10098ac:	1000021e 	bne	r2,zero,10098b8 <__lo0bits+0x70>
 10098b0:	1806d0ba 	srli	r3,r3,2
 10098b4:	29400084 	addi	r5,r5,2
 10098b8:	1880004c 	andi	r2,r3,1
 10098bc:	1000031e 	bne	r2,zero,10098cc <__lo0bits+0x84>
 10098c0:	1806d07a 	srli	r3,r3,1
 10098c4:	18000a26 	beq	r3,zero,10098f0 <__lo0bits+0xa8>
 10098c8:	29400044 	addi	r5,r5,1
 10098cc:	2805883a 	mov	r2,r5
 10098d0:	20c00015 	stw	r3,0(r4)
 10098d4:	f800283a 	ret
 10098d8:	1806d43a 	srli	r3,r3,16
 10098dc:	01400404 	movi	r5,16
 10098e0:	003fe906 	br	1009888 <__lo0bits+0x40>
 10098e4:	000b883a 	mov	r5,zero
 10098e8:	2805883a 	mov	r2,r5
 10098ec:	f800283a 	ret
 10098f0:	01400804 	movi	r5,32
 10098f4:	2805883a 	mov	r2,r5
 10098f8:	f800283a 	ret
 10098fc:	1804d07a 	srli	r2,r3,1
 1009900:	01400044 	movi	r5,1
 1009904:	20800015 	stw	r2,0(r4)
 1009908:	003fda06 	br	1009874 <__lo0bits+0x2c>

0100990c <__mcmp>:
 100990c:	20800417 	ldw	r2,16(r4)
 1009910:	28c00417 	ldw	r3,16(r5)
 1009914:	10cfc83a 	sub	r7,r2,r3
 1009918:	38000c1e 	bne	r7,zero,100994c <__mcmp+0x40>
 100991c:	18c5883a 	add	r2,r3,r3
 1009920:	1085883a 	add	r2,r2,r2
 1009924:	10c00504 	addi	r3,r2,20
 1009928:	21000504 	addi	r4,r4,20
 100992c:	28cb883a 	add	r5,r5,r3
 1009930:	2085883a 	add	r2,r4,r2
 1009934:	10bfff04 	addi	r2,r2,-4
 1009938:	297fff04 	addi	r5,r5,-4
 100993c:	11800017 	ldw	r6,0(r2)
 1009940:	28c00017 	ldw	r3,0(r5)
 1009944:	30c0031e 	bne	r6,r3,1009954 <__mcmp+0x48>
 1009948:	20bffa36 	bltu	r4,r2,1009934 <__mcmp+0x28>
 100994c:	3805883a 	mov	r2,r7
 1009950:	f800283a 	ret
 1009954:	30c00336 	bltu	r6,r3,1009964 <__mcmp+0x58>
 1009958:	01c00044 	movi	r7,1
 100995c:	3805883a 	mov	r2,r7
 1009960:	f800283a 	ret
 1009964:	01ffffc4 	movi	r7,-1
 1009968:	003ff806 	br	100994c <__mcmp+0x40>

0100996c <__ulp>:
 100996c:	295ffc2c 	andhi	r5,r5,32752
 1009970:	013f3034 	movhi	r4,64704
 1009974:	290b883a 	add	r5,r5,r4
 1009978:	0145c83a 	sub	r2,zero,r5
 100997c:	1007d53a 	srai	r3,r2,20
 1009980:	000d883a 	mov	r6,zero
 1009984:	0140040e 	bge	zero,r5,1009998 <__ulp+0x2c>
 1009988:	280f883a 	mov	r7,r5
 100998c:	3807883a 	mov	r3,r7
 1009990:	3005883a 	mov	r2,r6
 1009994:	f800283a 	ret
 1009998:	008004c4 	movi	r2,19
 100999c:	193ffb04 	addi	r4,r3,-20
 10099a0:	10c00c0e 	bge	r2,r3,10099d4 <__ulp+0x68>
 10099a4:	008007c4 	movi	r2,31
 10099a8:	1107c83a 	sub	r3,r2,r4
 10099ac:	00800784 	movi	r2,30
 10099b0:	01400044 	movi	r5,1
 10099b4:	11000216 	blt	r2,r4,10099c0 <__ulp+0x54>
 10099b8:	00800044 	movi	r2,1
 10099bc:	10ca983a 	sll	r5,r2,r3
 10099c0:	000f883a 	mov	r7,zero
 10099c4:	280d883a 	mov	r6,r5
 10099c8:	3807883a 	mov	r3,r7
 10099cc:	3005883a 	mov	r2,r6
 10099d0:	f800283a 	ret
 10099d4:	00800234 	movhi	r2,8
 10099d8:	10cfd83a 	sra	r7,r2,r3
 10099dc:	000d883a 	mov	r6,zero
 10099e0:	3005883a 	mov	r2,r6
 10099e4:	3807883a 	mov	r3,r7
 10099e8:	f800283a 	ret

010099ec <__b2d>:
 10099ec:	20800417 	ldw	r2,16(r4)
 10099f0:	defff904 	addi	sp,sp,-28
 10099f4:	dd000415 	stw	r20,16(sp)
 10099f8:	1085883a 	add	r2,r2,r2
 10099fc:	25000504 	addi	r20,r4,20
 1009a00:	1085883a 	add	r2,r2,r2
 1009a04:	dc000015 	stw	r16,0(sp)
 1009a08:	a0a1883a 	add	r16,r20,r2
 1009a0c:	dd400515 	stw	r21,20(sp)
 1009a10:	857fff17 	ldw	r21,-4(r16)
 1009a14:	dc400115 	stw	r17,4(sp)
 1009a18:	dfc00615 	stw	ra,24(sp)
 1009a1c:	a809883a 	mov	r4,r21
 1009a20:	2823883a 	mov	r17,r5
 1009a24:	dcc00315 	stw	r19,12(sp)
 1009a28:	dc800215 	stw	r18,8(sp)
 1009a2c:	10097d80 	call	10097d8 <__hi0bits>
 1009a30:	100b883a 	mov	r5,r2
 1009a34:	00800804 	movi	r2,32
 1009a38:	1145c83a 	sub	r2,r2,r5
 1009a3c:	88800015 	stw	r2,0(r17)
 1009a40:	00800284 	movi	r2,10
 1009a44:	80ffff04 	addi	r3,r16,-4
 1009a48:	11401416 	blt	r2,r5,1009a9c <__b2d+0xb0>
 1009a4c:	008002c4 	movi	r2,11
 1009a50:	1149c83a 	sub	r4,r2,r5
 1009a54:	a0c02736 	bltu	r20,r3,1009af4 <__b2d+0x108>
 1009a58:	000d883a 	mov	r6,zero
 1009a5c:	28800544 	addi	r2,r5,21
 1009a60:	a906d83a 	srl	r3,r21,r4
 1009a64:	a884983a 	sll	r2,r21,r2
 1009a68:	1ccffc34 	orhi	r19,r3,16368
 1009a6c:	11a4b03a 	or	r18,r2,r6
 1009a70:	9005883a 	mov	r2,r18
 1009a74:	9807883a 	mov	r3,r19
 1009a78:	dfc00617 	ldw	ra,24(sp)
 1009a7c:	dd400517 	ldw	r21,20(sp)
 1009a80:	dd000417 	ldw	r20,16(sp)
 1009a84:	dcc00317 	ldw	r19,12(sp)
 1009a88:	dc800217 	ldw	r18,8(sp)
 1009a8c:	dc400117 	ldw	r17,4(sp)
 1009a90:	dc000017 	ldw	r16,0(sp)
 1009a94:	dec00704 	addi	sp,sp,28
 1009a98:	f800283a 	ret
 1009a9c:	a0c00e36 	bltu	r20,r3,1009ad8 <__b2d+0xec>
 1009aa0:	293ffd44 	addi	r4,r5,-11
 1009aa4:	000d883a 	mov	r6,zero
 1009aa8:	20000f26 	beq	r4,zero,1009ae8 <__b2d+0xfc>
 1009aac:	00800804 	movi	r2,32
 1009ab0:	110bc83a 	sub	r5,r2,r4
 1009ab4:	a0c01236 	bltu	r20,r3,1009b00 <__b2d+0x114>
 1009ab8:	000f883a 	mov	r7,zero
 1009abc:	a904983a 	sll	r2,r21,r4
 1009ac0:	3146d83a 	srl	r3,r6,r5
 1009ac4:	3108983a 	sll	r4,r6,r4
 1009ac8:	108ffc34 	orhi	r2,r2,16368
 1009acc:	18a6b03a 	or	r19,r3,r2
 1009ad0:	3924b03a 	or	r18,r7,r4
 1009ad4:	003fe606 	br	1009a70 <__b2d+0x84>
 1009ad8:	293ffd44 	addi	r4,r5,-11
 1009adc:	81bffe17 	ldw	r6,-8(r16)
 1009ae0:	80fffe04 	addi	r3,r16,-8
 1009ae4:	203ff11e 	bne	r4,zero,1009aac <__b2d+0xc0>
 1009ae8:	accffc34 	orhi	r19,r21,16368
 1009aec:	3025883a 	mov	r18,r6
 1009af0:	003fdf06 	br	1009a70 <__b2d+0x84>
 1009af4:	18bfff17 	ldw	r2,-4(r3)
 1009af8:	110cd83a 	srl	r6,r2,r4
 1009afc:	003fd706 	br	1009a5c <__b2d+0x70>
 1009b00:	18bfff17 	ldw	r2,-4(r3)
 1009b04:	114ed83a 	srl	r7,r2,r5
 1009b08:	003fec06 	br	1009abc <__b2d+0xd0>

01009b0c <__ratio>:
 1009b0c:	defff904 	addi	sp,sp,-28
 1009b10:	dc400215 	stw	r17,8(sp)
 1009b14:	2823883a 	mov	r17,r5
 1009b18:	d80b883a 	mov	r5,sp
 1009b1c:	dfc00615 	stw	ra,24(sp)
 1009b20:	dd000515 	stw	r20,20(sp)
 1009b24:	dcc00415 	stw	r19,16(sp)
 1009b28:	dc800315 	stw	r18,12(sp)
 1009b2c:	2025883a 	mov	r18,r4
 1009b30:	10099ec0 	call	10099ec <__b2d>
 1009b34:	8809883a 	mov	r4,r17
 1009b38:	d9400104 	addi	r5,sp,4
 1009b3c:	1027883a 	mov	r19,r2
 1009b40:	1829883a 	mov	r20,r3
 1009b44:	10099ec0 	call	10099ec <__b2d>
 1009b48:	89000417 	ldw	r4,16(r17)
 1009b4c:	91c00417 	ldw	r7,16(r18)
 1009b50:	d9800117 	ldw	r6,4(sp)
 1009b54:	180b883a 	mov	r5,r3
 1009b58:	390fc83a 	sub	r7,r7,r4
 1009b5c:	1009883a 	mov	r4,r2
 1009b60:	d8800017 	ldw	r2,0(sp)
 1009b64:	380e917a 	slli	r7,r7,5
 1009b68:	2011883a 	mov	r8,r4
 1009b6c:	1185c83a 	sub	r2,r2,r6
 1009b70:	11c5883a 	add	r2,r2,r7
 1009b74:	1006953a 	slli	r3,r2,20
 1009b78:	2813883a 	mov	r9,r5
 1009b7c:	00800d0e 	bge	zero,r2,1009bb4 <__ratio+0xa8>
 1009b80:	1d29883a 	add	r20,r3,r20
 1009b84:	a00b883a 	mov	r5,r20
 1009b88:	480f883a 	mov	r7,r9
 1009b8c:	9809883a 	mov	r4,r19
 1009b90:	400d883a 	mov	r6,r8
 1009b94:	100fac80 	call	100fac8 <__divdf3>
 1009b98:	dfc00617 	ldw	ra,24(sp)
 1009b9c:	dd000517 	ldw	r20,20(sp)
 1009ba0:	dcc00417 	ldw	r19,16(sp)
 1009ba4:	dc800317 	ldw	r18,12(sp)
 1009ba8:	dc400217 	ldw	r17,8(sp)
 1009bac:	dec00704 	addi	sp,sp,28
 1009bb0:	f800283a 	ret
 1009bb4:	28d3c83a 	sub	r9,r5,r3
 1009bb8:	003ff206 	br	1009b84 <__ratio+0x78>

01009bbc <_mprec_log10>:
 1009bbc:	defffe04 	addi	sp,sp,-8
 1009bc0:	008005c4 	movi	r2,23
 1009bc4:	dc000015 	stw	r16,0(sp)
 1009bc8:	dfc00115 	stw	ra,4(sp)
 1009bcc:	2021883a 	mov	r16,r4
 1009bd0:	11000c16 	blt	r2,r4,1009c04 <_mprec_log10+0x48>
 1009bd4:	200490fa 	slli	r2,r4,3
 1009bd8:	00c04074 	movhi	r3,257
 1009bdc:	18ce1604 	addi	r3,r3,14424
 1009be0:	10c5883a 	add	r2,r2,r3
 1009be4:	12400117 	ldw	r9,4(r2)
 1009be8:	12000017 	ldw	r8,0(r2)
 1009bec:	4807883a 	mov	r3,r9
 1009bf0:	4005883a 	mov	r2,r8
 1009bf4:	dfc00117 	ldw	ra,4(sp)
 1009bf8:	dc000017 	ldw	r16,0(sp)
 1009bfc:	dec00204 	addi	sp,sp,8
 1009c00:	f800283a 	ret
 1009c04:	0011883a 	mov	r8,zero
 1009c08:	024ffc34 	movhi	r9,16368
 1009c0c:	0005883a 	mov	r2,zero
 1009c10:	00d00934 	movhi	r3,16420
 1009c14:	480b883a 	mov	r5,r9
 1009c18:	4009883a 	mov	r4,r8
 1009c1c:	180f883a 	mov	r7,r3
 1009c20:	100d883a 	mov	r6,r2
 1009c24:	100f7040 	call	100f704 <__muldf3>
 1009c28:	843fffc4 	addi	r16,r16,-1
 1009c2c:	1011883a 	mov	r8,r2
 1009c30:	1813883a 	mov	r9,r3
 1009c34:	803ff51e 	bne	r16,zero,1009c0c <_mprec_log10+0x50>
 1009c38:	4005883a 	mov	r2,r8
 1009c3c:	4807883a 	mov	r3,r9
 1009c40:	dfc00117 	ldw	ra,4(sp)
 1009c44:	dc000017 	ldw	r16,0(sp)
 1009c48:	dec00204 	addi	sp,sp,8
 1009c4c:	f800283a 	ret

01009c50 <__copybits>:
 1009c50:	297fffc4 	addi	r5,r5,-1
 1009c54:	30800417 	ldw	r2,16(r6)
 1009c58:	280bd17a 	srai	r5,r5,5
 1009c5c:	31800504 	addi	r6,r6,20
 1009c60:	1085883a 	add	r2,r2,r2
 1009c64:	294b883a 	add	r5,r5,r5
 1009c68:	294b883a 	add	r5,r5,r5
 1009c6c:	1085883a 	add	r2,r2,r2
 1009c70:	290b883a 	add	r5,r5,r4
 1009c74:	3087883a 	add	r3,r6,r2
 1009c78:	29400104 	addi	r5,r5,4
 1009c7c:	30c0052e 	bgeu	r6,r3,1009c94 <__copybits+0x44>
 1009c80:	30800017 	ldw	r2,0(r6)
 1009c84:	31800104 	addi	r6,r6,4
 1009c88:	20800015 	stw	r2,0(r4)
 1009c8c:	21000104 	addi	r4,r4,4
 1009c90:	30fffb36 	bltu	r6,r3,1009c80 <__copybits+0x30>
 1009c94:	2140032e 	bgeu	r4,r5,1009ca4 <__copybits+0x54>
 1009c98:	20000015 	stw	zero,0(r4)
 1009c9c:	21000104 	addi	r4,r4,4
 1009ca0:	217ffd36 	bltu	r4,r5,1009c98 <__copybits+0x48>
 1009ca4:	f800283a 	ret

01009ca8 <__any_on>:
 1009ca8:	20800417 	ldw	r2,16(r4)
 1009cac:	2807d17a 	srai	r3,r5,5
 1009cb0:	21000504 	addi	r4,r4,20
 1009cb4:	10c00d0e 	bge	r2,r3,1009cec <__any_on+0x44>
 1009cb8:	1085883a 	add	r2,r2,r2
 1009cbc:	1085883a 	add	r2,r2,r2
 1009cc0:	208d883a 	add	r6,r4,r2
 1009cc4:	2180182e 	bgeu	r4,r6,1009d28 <__any_on+0x80>
 1009cc8:	30bfff17 	ldw	r2,-4(r6)
 1009ccc:	30ffff04 	addi	r3,r6,-4
 1009cd0:	1000041e 	bne	r2,zero,1009ce4 <__any_on+0x3c>
 1009cd4:	20c0142e 	bgeu	r4,r3,1009d28 <__any_on+0x80>
 1009cd8:	18ffff04 	addi	r3,r3,-4
 1009cdc:	18800017 	ldw	r2,0(r3)
 1009ce0:	103ffc26 	beq	r2,zero,1009cd4 <__any_on+0x2c>
 1009ce4:	00800044 	movi	r2,1
 1009ce8:	f800283a 	ret
 1009cec:	18800a0e 	bge	r3,r2,1009d18 <__any_on+0x70>
 1009cf0:	294007cc 	andi	r5,r5,31
 1009cf4:	28000826 	beq	r5,zero,1009d18 <__any_on+0x70>
 1009cf8:	18c5883a 	add	r2,r3,r3
 1009cfc:	1085883a 	add	r2,r2,r2
 1009d00:	208d883a 	add	r6,r4,r2
 1009d04:	30c00017 	ldw	r3,0(r6)
 1009d08:	1944d83a 	srl	r2,r3,r5
 1009d0c:	1144983a 	sll	r2,r2,r5
 1009d10:	18bff41e 	bne	r3,r2,1009ce4 <__any_on+0x3c>
 1009d14:	003feb06 	br	1009cc4 <__any_on+0x1c>
 1009d18:	18c5883a 	add	r2,r3,r3
 1009d1c:	1085883a 	add	r2,r2,r2
 1009d20:	208d883a 	add	r6,r4,r2
 1009d24:	003fe706 	br	1009cc4 <__any_on+0x1c>
 1009d28:	0005883a 	mov	r2,zero
 1009d2c:	f800283a 	ret

01009d30 <_Balloc>:
 1009d30:	20c01317 	ldw	r3,76(r4)
 1009d34:	defffb04 	addi	sp,sp,-20
 1009d38:	dcc00315 	stw	r19,12(sp)
 1009d3c:	dc800215 	stw	r18,8(sp)
 1009d40:	dfc00415 	stw	ra,16(sp)
 1009d44:	2825883a 	mov	r18,r5
 1009d48:	dc400115 	stw	r17,4(sp)
 1009d4c:	dc000015 	stw	r16,0(sp)
 1009d50:	2027883a 	mov	r19,r4
 1009d54:	01800404 	movi	r6,16
 1009d58:	01400104 	movi	r5,4
 1009d5c:	18001726 	beq	r3,zero,1009dbc <_Balloc+0x8c>
 1009d60:	01400044 	movi	r5,1
 1009d64:	9485883a 	add	r2,r18,r18
 1009d68:	2ca2983a 	sll	r17,r5,r18
 1009d6c:	1085883a 	add	r2,r2,r2
 1009d70:	10c7883a 	add	r3,r2,r3
 1009d74:	1c000017 	ldw	r16,0(r3)
 1009d78:	8c4d883a 	add	r6,r17,r17
 1009d7c:	318d883a 	add	r6,r6,r6
 1009d80:	9809883a 	mov	r4,r19
 1009d84:	31800504 	addi	r6,r6,20
 1009d88:	80001226 	beq	r16,zero,1009dd4 <_Balloc+0xa4>
 1009d8c:	80800017 	ldw	r2,0(r16)
 1009d90:	18800015 	stw	r2,0(r3)
 1009d94:	80000415 	stw	zero,16(r16)
 1009d98:	80000315 	stw	zero,12(r16)
 1009d9c:	8005883a 	mov	r2,r16
 1009da0:	dfc00417 	ldw	ra,16(sp)
 1009da4:	dcc00317 	ldw	r19,12(sp)
 1009da8:	dc800217 	ldw	r18,8(sp)
 1009dac:	dc400117 	ldw	r17,4(sp)
 1009db0:	dc000017 	ldw	r16,0(sp)
 1009db4:	dec00504 	addi	sp,sp,20
 1009db8:	f800283a 	ret
 1009dbc:	10010f80 	call	10010f8 <_calloc_r>
 1009dc0:	1007883a 	mov	r3,r2
 1009dc4:	0021883a 	mov	r16,zero
 1009dc8:	98801315 	stw	r2,76(r19)
 1009dcc:	103fe41e 	bne	r2,zero,1009d60 <_Balloc+0x30>
 1009dd0:	003ff206 	br	1009d9c <_Balloc+0x6c>
 1009dd4:	10010f80 	call	10010f8 <_calloc_r>
 1009dd8:	103ff026 	beq	r2,zero,1009d9c <_Balloc+0x6c>
 1009ddc:	1021883a 	mov	r16,r2
 1009de0:	14800115 	stw	r18,4(r2)
 1009de4:	14400215 	stw	r17,8(r2)
 1009de8:	003fea06 	br	1009d94 <_Balloc+0x64>

01009dec <__d2b>:
 1009dec:	defff504 	addi	sp,sp,-44
 1009df0:	dcc00515 	stw	r19,20(sp)
 1009df4:	04c00044 	movi	r19,1
 1009df8:	dc000215 	stw	r16,8(sp)
 1009dfc:	2821883a 	mov	r16,r5
 1009e00:	980b883a 	mov	r5,r19
 1009e04:	ddc00915 	stw	r23,36(sp)
 1009e08:	dd800815 	stw	r22,32(sp)
 1009e0c:	dd400715 	stw	r21,28(sp)
 1009e10:	dd000615 	stw	r20,24(sp)
 1009e14:	dc800415 	stw	r18,16(sp)
 1009e18:	dc400315 	stw	r17,12(sp)
 1009e1c:	dfc00a15 	stw	ra,40(sp)
 1009e20:	3023883a 	mov	r17,r6
 1009e24:	382d883a 	mov	r22,r7
 1009e28:	ddc00b17 	ldw	r23,44(sp)
 1009e2c:	1009d300 	call	1009d30 <_Balloc>
 1009e30:	1025883a 	mov	r18,r2
 1009e34:	00a00034 	movhi	r2,32768
 1009e38:	10bfffc4 	addi	r2,r2,-1
 1009e3c:	8888703a 	and	r4,r17,r2
 1009e40:	202ad53a 	srli	r21,r4,20
 1009e44:	00800434 	movhi	r2,16
 1009e48:	10bfffc4 	addi	r2,r2,-1
 1009e4c:	8886703a 	and	r3,r17,r2
 1009e50:	a829003a 	cmpeq	r20,r21,zero
 1009e54:	800b883a 	mov	r5,r16
 1009e58:	d8c00115 	stw	r3,4(sp)
 1009e5c:	94000504 	addi	r16,r18,20
 1009e60:	a000021e 	bne	r20,zero,1009e6c <__d2b+0x80>
 1009e64:	18c00434 	orhi	r3,r3,16
 1009e68:	d8c00115 	stw	r3,4(sp)
 1009e6c:	28002726 	beq	r5,zero,1009f0c <__d2b+0x120>
 1009e70:	d809883a 	mov	r4,sp
 1009e74:	d9400015 	stw	r5,0(sp)
 1009e78:	10098480 	call	1009848 <__lo0bits>
 1009e7c:	100d883a 	mov	r6,r2
 1009e80:	10003526 	beq	r2,zero,1009f58 <__d2b+0x16c>
 1009e84:	d8c00117 	ldw	r3,4(sp)
 1009e88:	00800804 	movi	r2,32
 1009e8c:	1185c83a 	sub	r2,r2,r6
 1009e90:	d9000017 	ldw	r4,0(sp)
 1009e94:	1886983a 	sll	r3,r3,r2
 1009e98:	1906b03a 	or	r3,r3,r4
 1009e9c:	90c00515 	stw	r3,20(r18)
 1009ea0:	d8c00117 	ldw	r3,4(sp)
 1009ea4:	1986d83a 	srl	r3,r3,r6
 1009ea8:	d8c00115 	stw	r3,4(sp)
 1009eac:	180b003a 	cmpeq	r5,r3,zero
 1009eb0:	00800084 	movi	r2,2
 1009eb4:	114bc83a 	sub	r5,r2,r5
 1009eb8:	80c00115 	stw	r3,4(r16)
 1009ebc:	91400415 	stw	r5,16(r18)
 1009ec0:	a0001a1e 	bne	r20,zero,1009f2c <__d2b+0x140>
 1009ec4:	3545883a 	add	r2,r6,r21
 1009ec8:	10bef344 	addi	r2,r2,-1075
 1009ecc:	00c00d44 	movi	r3,53
 1009ed0:	b0800015 	stw	r2,0(r22)
 1009ed4:	1987c83a 	sub	r3,r3,r6
 1009ed8:	b8c00015 	stw	r3,0(r23)
 1009edc:	9005883a 	mov	r2,r18
 1009ee0:	dfc00a17 	ldw	ra,40(sp)
 1009ee4:	ddc00917 	ldw	r23,36(sp)
 1009ee8:	dd800817 	ldw	r22,32(sp)
 1009eec:	dd400717 	ldw	r21,28(sp)
 1009ef0:	dd000617 	ldw	r20,24(sp)
 1009ef4:	dcc00517 	ldw	r19,20(sp)
 1009ef8:	dc800417 	ldw	r18,16(sp)
 1009efc:	dc400317 	ldw	r17,12(sp)
 1009f00:	dc000217 	ldw	r16,8(sp)
 1009f04:	dec00b04 	addi	sp,sp,44
 1009f08:	f800283a 	ret
 1009f0c:	d9000104 	addi	r4,sp,4
 1009f10:	10098480 	call	1009848 <__lo0bits>
 1009f14:	11800804 	addi	r6,r2,32
 1009f18:	d8800117 	ldw	r2,4(sp)
 1009f1c:	94c00415 	stw	r19,16(r18)
 1009f20:	980b883a 	mov	r5,r19
 1009f24:	90800515 	stw	r2,20(r18)
 1009f28:	a03fe626 	beq	r20,zero,1009ec4 <__d2b+0xd8>
 1009f2c:	2945883a 	add	r2,r5,r5
 1009f30:	1085883a 	add	r2,r2,r2
 1009f34:	1405883a 	add	r2,r2,r16
 1009f38:	113fff17 	ldw	r4,-4(r2)
 1009f3c:	30fef384 	addi	r3,r6,-1074
 1009f40:	2820917a 	slli	r16,r5,5
 1009f44:	b0c00015 	stw	r3,0(r22)
 1009f48:	10097d80 	call	10097d8 <__hi0bits>
 1009f4c:	80a1c83a 	sub	r16,r16,r2
 1009f50:	bc000015 	stw	r16,0(r23)
 1009f54:	003fe106 	br	1009edc <__d2b+0xf0>
 1009f58:	d8800017 	ldw	r2,0(sp)
 1009f5c:	90800515 	stw	r2,20(r18)
 1009f60:	d8c00117 	ldw	r3,4(sp)
 1009f64:	003fd106 	br	1009eac <__d2b+0xc0>

01009f68 <__mdiff>:
 1009f68:	defffb04 	addi	sp,sp,-20
 1009f6c:	dc000015 	stw	r16,0(sp)
 1009f70:	2821883a 	mov	r16,r5
 1009f74:	dc800215 	stw	r18,8(sp)
 1009f78:	300b883a 	mov	r5,r6
 1009f7c:	2025883a 	mov	r18,r4
 1009f80:	8009883a 	mov	r4,r16
 1009f84:	dc400115 	stw	r17,4(sp)
 1009f88:	dfc00415 	stw	ra,16(sp)
 1009f8c:	dcc00315 	stw	r19,12(sp)
 1009f90:	3023883a 	mov	r17,r6
 1009f94:	100990c0 	call	100990c <__mcmp>
 1009f98:	10004226 	beq	r2,zero,100a0a4 <__mdiff+0x13c>
 1009f9c:	10005016 	blt	r2,zero,100a0e0 <__mdiff+0x178>
 1009fa0:	0027883a 	mov	r19,zero
 1009fa4:	81400117 	ldw	r5,4(r16)
 1009fa8:	9009883a 	mov	r4,r18
 1009fac:	1009d300 	call	1009d30 <_Balloc>
 1009fb0:	1019883a 	mov	r12,r2
 1009fb4:	82800417 	ldw	r10,16(r16)
 1009fb8:	88800417 	ldw	r2,16(r17)
 1009fbc:	81800504 	addi	r6,r16,20
 1009fc0:	5287883a 	add	r3,r10,r10
 1009fc4:	1085883a 	add	r2,r2,r2
 1009fc8:	18c7883a 	add	r3,r3,r3
 1009fcc:	1085883a 	add	r2,r2,r2
 1009fd0:	8a000504 	addi	r8,r17,20
 1009fd4:	64c00315 	stw	r19,12(r12)
 1009fd8:	30db883a 	add	r13,r6,r3
 1009fdc:	4097883a 	add	r11,r8,r2
 1009fe0:	61c00504 	addi	r7,r12,20
 1009fe4:	0013883a 	mov	r9,zero
 1009fe8:	31000017 	ldw	r4,0(r6)
 1009fec:	41400017 	ldw	r5,0(r8)
 1009ff0:	42000104 	addi	r8,r8,4
 1009ff4:	20bfffcc 	andi	r2,r4,65535
 1009ff8:	28ffffcc 	andi	r3,r5,65535
 1009ffc:	10c5c83a 	sub	r2,r2,r3
 100a000:	1245883a 	add	r2,r2,r9
 100a004:	2008d43a 	srli	r4,r4,16
 100a008:	280ad43a 	srli	r5,r5,16
 100a00c:	1007d43a 	srai	r3,r2,16
 100a010:	3880000d 	sth	r2,0(r7)
 100a014:	2149c83a 	sub	r4,r4,r5
 100a018:	20c9883a 	add	r4,r4,r3
 100a01c:	3900008d 	sth	r4,2(r7)
 100a020:	31800104 	addi	r6,r6,4
 100a024:	39c00104 	addi	r7,r7,4
 100a028:	2013d43a 	srai	r9,r4,16
 100a02c:	42ffee36 	bltu	r8,r11,1009fe8 <__mdiff+0x80>
 100a030:	33400c2e 	bgeu	r6,r13,100a064 <__mdiff+0xfc>
 100a034:	30800017 	ldw	r2,0(r6)
 100a038:	31800104 	addi	r6,r6,4
 100a03c:	10ffffcc 	andi	r3,r2,65535
 100a040:	1a47883a 	add	r3,r3,r9
 100a044:	1004d43a 	srli	r2,r2,16
 100a048:	1809d43a 	srai	r4,r3,16
 100a04c:	38c0000d 	sth	r3,0(r7)
 100a050:	1105883a 	add	r2,r2,r4
 100a054:	3880008d 	sth	r2,2(r7)
 100a058:	1013d43a 	srai	r9,r2,16
 100a05c:	39c00104 	addi	r7,r7,4
 100a060:	337ff436 	bltu	r6,r13,100a034 <__mdiff+0xcc>
 100a064:	38bfff17 	ldw	r2,-4(r7)
 100a068:	38ffff04 	addi	r3,r7,-4
 100a06c:	1000041e 	bne	r2,zero,100a080 <__mdiff+0x118>
 100a070:	18ffff04 	addi	r3,r3,-4
 100a074:	18800017 	ldw	r2,0(r3)
 100a078:	52bfffc4 	addi	r10,r10,-1
 100a07c:	103ffc26 	beq	r2,zero,100a070 <__mdiff+0x108>
 100a080:	6005883a 	mov	r2,r12
 100a084:	62800415 	stw	r10,16(r12)
 100a088:	dfc00417 	ldw	ra,16(sp)
 100a08c:	dcc00317 	ldw	r19,12(sp)
 100a090:	dc800217 	ldw	r18,8(sp)
 100a094:	dc400117 	ldw	r17,4(sp)
 100a098:	dc000017 	ldw	r16,0(sp)
 100a09c:	dec00504 	addi	sp,sp,20
 100a0a0:	f800283a 	ret
 100a0a4:	9009883a 	mov	r4,r18
 100a0a8:	000b883a 	mov	r5,zero
 100a0ac:	1009d300 	call	1009d30 <_Balloc>
 100a0b0:	1019883a 	mov	r12,r2
 100a0b4:	00800044 	movi	r2,1
 100a0b8:	60800415 	stw	r2,16(r12)
 100a0bc:	6005883a 	mov	r2,r12
 100a0c0:	60000515 	stw	zero,20(r12)
 100a0c4:	dfc00417 	ldw	ra,16(sp)
 100a0c8:	dcc00317 	ldw	r19,12(sp)
 100a0cc:	dc800217 	ldw	r18,8(sp)
 100a0d0:	dc400117 	ldw	r17,4(sp)
 100a0d4:	dc000017 	ldw	r16,0(sp)
 100a0d8:	dec00504 	addi	sp,sp,20
 100a0dc:	f800283a 	ret
 100a0e0:	880d883a 	mov	r6,r17
 100a0e4:	04c00044 	movi	r19,1
 100a0e8:	8023883a 	mov	r17,r16
 100a0ec:	3021883a 	mov	r16,r6
 100a0f0:	003fac06 	br	1009fa4 <__mdiff+0x3c>

0100a0f4 <__lshift>:
 100a0f4:	defff904 	addi	sp,sp,-28
 100a0f8:	28800417 	ldw	r2,16(r5)
 100a0fc:	dc000015 	stw	r16,0(sp)
 100a100:	3021d17a 	srai	r16,r6,5
 100a104:	28c00217 	ldw	r3,8(r5)
 100a108:	10800044 	addi	r2,r2,1
 100a10c:	dc400115 	stw	r17,4(sp)
 100a110:	80a3883a 	add	r17,r16,r2
 100a114:	dd400515 	stw	r21,20(sp)
 100a118:	dd000415 	stw	r20,16(sp)
 100a11c:	dc800215 	stw	r18,8(sp)
 100a120:	dfc00615 	stw	ra,24(sp)
 100a124:	2825883a 	mov	r18,r5
 100a128:	dcc00315 	stw	r19,12(sp)
 100a12c:	3029883a 	mov	r20,r6
 100a130:	202b883a 	mov	r21,r4
 100a134:	29400117 	ldw	r5,4(r5)
 100a138:	1c40030e 	bge	r3,r17,100a148 <__lshift+0x54>
 100a13c:	18c7883a 	add	r3,r3,r3
 100a140:	29400044 	addi	r5,r5,1
 100a144:	1c7ffd16 	blt	r3,r17,100a13c <__lshift+0x48>
 100a148:	a809883a 	mov	r4,r21
 100a14c:	1009d300 	call	1009d30 <_Balloc>
 100a150:	1027883a 	mov	r19,r2
 100a154:	11400504 	addi	r5,r2,20
 100a158:	0400090e 	bge	zero,r16,100a180 <__lshift+0x8c>
 100a15c:	2805883a 	mov	r2,r5
 100a160:	0007883a 	mov	r3,zero
 100a164:	18c00044 	addi	r3,r3,1
 100a168:	10000015 	stw	zero,0(r2)
 100a16c:	10800104 	addi	r2,r2,4
 100a170:	80fffc1e 	bne	r16,r3,100a164 <__lshift+0x70>
 100a174:	8405883a 	add	r2,r16,r16
 100a178:	1085883a 	add	r2,r2,r2
 100a17c:	288b883a 	add	r5,r5,r2
 100a180:	90800417 	ldw	r2,16(r18)
 100a184:	91000504 	addi	r4,r18,20
 100a188:	a18007cc 	andi	r6,r20,31
 100a18c:	1085883a 	add	r2,r2,r2
 100a190:	1085883a 	add	r2,r2,r2
 100a194:	208f883a 	add	r7,r4,r2
 100a198:	30001e26 	beq	r6,zero,100a214 <__lshift+0x120>
 100a19c:	00800804 	movi	r2,32
 100a1a0:	1191c83a 	sub	r8,r2,r6
 100a1a4:	0007883a 	mov	r3,zero
 100a1a8:	20800017 	ldw	r2,0(r4)
 100a1ac:	1184983a 	sll	r2,r2,r6
 100a1b0:	1884b03a 	or	r2,r3,r2
 100a1b4:	28800015 	stw	r2,0(r5)
 100a1b8:	20c00017 	ldw	r3,0(r4)
 100a1bc:	21000104 	addi	r4,r4,4
 100a1c0:	29400104 	addi	r5,r5,4
 100a1c4:	1a06d83a 	srl	r3,r3,r8
 100a1c8:	21fff736 	bltu	r4,r7,100a1a8 <__lshift+0xb4>
 100a1cc:	28c00015 	stw	r3,0(r5)
 100a1d0:	18000126 	beq	r3,zero,100a1d8 <__lshift+0xe4>
 100a1d4:	8c400044 	addi	r17,r17,1
 100a1d8:	88bfffc4 	addi	r2,r17,-1
 100a1dc:	98800415 	stw	r2,16(r19)
 100a1e0:	a809883a 	mov	r4,r21
 100a1e4:	900b883a 	mov	r5,r18
 100a1e8:	10097b00 	call	10097b0 <_Bfree>
 100a1ec:	9805883a 	mov	r2,r19
 100a1f0:	dfc00617 	ldw	ra,24(sp)
 100a1f4:	dd400517 	ldw	r21,20(sp)
 100a1f8:	dd000417 	ldw	r20,16(sp)
 100a1fc:	dcc00317 	ldw	r19,12(sp)
 100a200:	dc800217 	ldw	r18,8(sp)
 100a204:	dc400117 	ldw	r17,4(sp)
 100a208:	dc000017 	ldw	r16,0(sp)
 100a20c:	dec00704 	addi	sp,sp,28
 100a210:	f800283a 	ret
 100a214:	20800017 	ldw	r2,0(r4)
 100a218:	21000104 	addi	r4,r4,4
 100a21c:	28800015 	stw	r2,0(r5)
 100a220:	29400104 	addi	r5,r5,4
 100a224:	21ffec2e 	bgeu	r4,r7,100a1d8 <__lshift+0xe4>
 100a228:	20800017 	ldw	r2,0(r4)
 100a22c:	21000104 	addi	r4,r4,4
 100a230:	28800015 	stw	r2,0(r5)
 100a234:	29400104 	addi	r5,r5,4
 100a238:	21fff636 	bltu	r4,r7,100a214 <__lshift+0x120>
 100a23c:	003fe606 	br	100a1d8 <__lshift+0xe4>

0100a240 <__multiply>:
 100a240:	defff004 	addi	sp,sp,-64
 100a244:	dc800815 	stw	r18,32(sp)
 100a248:	dc400715 	stw	r17,28(sp)
 100a24c:	2c800417 	ldw	r18,16(r5)
 100a250:	34400417 	ldw	r17,16(r6)
 100a254:	dcc00915 	stw	r19,36(sp)
 100a258:	dc000615 	stw	r16,24(sp)
 100a25c:	dfc00f15 	stw	ra,60(sp)
 100a260:	df000e15 	stw	fp,56(sp)
 100a264:	ddc00d15 	stw	r23,52(sp)
 100a268:	dd800c15 	stw	r22,48(sp)
 100a26c:	dd400b15 	stw	r21,44(sp)
 100a270:	dd000a15 	stw	r20,40(sp)
 100a274:	2821883a 	mov	r16,r5
 100a278:	3027883a 	mov	r19,r6
 100a27c:	9440040e 	bge	r18,r17,100a290 <__multiply+0x50>
 100a280:	8825883a 	mov	r18,r17
 100a284:	2c400417 	ldw	r17,16(r5)
 100a288:	2827883a 	mov	r19,r5
 100a28c:	3021883a 	mov	r16,r6
 100a290:	80800217 	ldw	r2,8(r16)
 100a294:	9447883a 	add	r3,r18,r17
 100a298:	d8c00415 	stw	r3,16(sp)
 100a29c:	81400117 	ldw	r5,4(r16)
 100a2a0:	10c0010e 	bge	r2,r3,100a2a8 <__multiply+0x68>
 100a2a4:	29400044 	addi	r5,r5,1
 100a2a8:	1009d300 	call	1009d30 <_Balloc>
 100a2ac:	d8800515 	stw	r2,20(sp)
 100a2b0:	d9000417 	ldw	r4,16(sp)
 100a2b4:	d8c00517 	ldw	r3,20(sp)
 100a2b8:	2105883a 	add	r2,r4,r4
 100a2bc:	1085883a 	add	r2,r2,r2
 100a2c0:	19000504 	addi	r4,r3,20
 100a2c4:	2085883a 	add	r2,r4,r2
 100a2c8:	d8800315 	stw	r2,12(sp)
 100a2cc:	2080052e 	bgeu	r4,r2,100a2e4 <__multiply+0xa4>
 100a2d0:	2005883a 	mov	r2,r4
 100a2d4:	d8c00317 	ldw	r3,12(sp)
 100a2d8:	10000015 	stw	zero,0(r2)
 100a2dc:	10800104 	addi	r2,r2,4
 100a2e0:	10fffc36 	bltu	r2,r3,100a2d4 <__multiply+0x94>
 100a2e4:	8c45883a 	add	r2,r17,r17
 100a2e8:	9487883a 	add	r3,r18,r18
 100a2ec:	9dc00504 	addi	r23,r19,20
 100a2f0:	1085883a 	add	r2,r2,r2
 100a2f4:	84000504 	addi	r16,r16,20
 100a2f8:	18c7883a 	add	r3,r3,r3
 100a2fc:	b885883a 	add	r2,r23,r2
 100a300:	dc000015 	stw	r16,0(sp)
 100a304:	d8800215 	stw	r2,8(sp)
 100a308:	80f9883a 	add	fp,r16,r3
 100a30c:	b880432e 	bgeu	r23,r2,100a41c <__multiply+0x1dc>
 100a310:	d9000115 	stw	r4,4(sp)
 100a314:	b9000017 	ldw	r4,0(r23)
 100a318:	253fffcc 	andi	r20,r4,65535
 100a31c:	a0001a26 	beq	r20,zero,100a388 <__multiply+0x148>
 100a320:	dcc00017 	ldw	r19,0(sp)
 100a324:	dc800117 	ldw	r18,4(sp)
 100a328:	002b883a 	mov	r21,zero
 100a32c:	9c400017 	ldw	r17,0(r19)
 100a330:	94000017 	ldw	r16,0(r18)
 100a334:	a009883a 	mov	r4,r20
 100a338:	897fffcc 	andi	r5,r17,65535
 100a33c:	10010a40 	call	10010a4 <__mulsi3>
 100a340:	880ad43a 	srli	r5,r17,16
 100a344:	80ffffcc 	andi	r3,r16,65535
 100a348:	a8c7883a 	add	r3,r21,r3
 100a34c:	a009883a 	mov	r4,r20
 100a350:	10e3883a 	add	r17,r2,r3
 100a354:	8020d43a 	srli	r16,r16,16
 100a358:	10010a40 	call	10010a4 <__mulsi3>
 100a35c:	8806d43a 	srli	r3,r17,16
 100a360:	1405883a 	add	r2,r2,r16
 100a364:	9cc00104 	addi	r19,r19,4
 100a368:	1887883a 	add	r3,r3,r2
 100a36c:	90c0008d 	sth	r3,2(r18)
 100a370:	9440000d 	sth	r17,0(r18)
 100a374:	182ad43a 	srli	r21,r3,16
 100a378:	94800104 	addi	r18,r18,4
 100a37c:	9f3feb36 	bltu	r19,fp,100a32c <__multiply+0xec>
 100a380:	95400015 	stw	r21,0(r18)
 100a384:	b9000017 	ldw	r4,0(r23)
 100a388:	202ad43a 	srli	r21,r4,16
 100a38c:	a8001c26 	beq	r21,zero,100a400 <__multiply+0x1c0>
 100a390:	d9000117 	ldw	r4,4(sp)
 100a394:	dd000017 	ldw	r20,0(sp)
 100a398:	002d883a 	mov	r22,zero
 100a39c:	24c00017 	ldw	r19,0(r4)
 100a3a0:	2025883a 	mov	r18,r4
 100a3a4:	9823883a 	mov	r17,r19
 100a3a8:	a4000017 	ldw	r16,0(r20)
 100a3ac:	a809883a 	mov	r4,r21
 100a3b0:	a5000104 	addi	r20,r20,4
 100a3b4:	817fffcc 	andi	r5,r16,65535
 100a3b8:	10010a40 	call	10010a4 <__mulsi3>
 100a3bc:	8806d43a 	srli	r3,r17,16
 100a3c0:	800ad43a 	srli	r5,r16,16
 100a3c4:	94c0000d 	sth	r19,0(r18)
 100a3c8:	b0c7883a 	add	r3,r22,r3
 100a3cc:	10e1883a 	add	r16,r2,r3
 100a3d0:	9400008d 	sth	r16,2(r18)
 100a3d4:	a809883a 	mov	r4,r21
 100a3d8:	94800104 	addi	r18,r18,4
 100a3dc:	10010a40 	call	10010a4 <__mulsi3>
 100a3e0:	94400017 	ldw	r17,0(r18)
 100a3e4:	8020d43a 	srli	r16,r16,16
 100a3e8:	88ffffcc 	andi	r3,r17,65535
 100a3ec:	10c5883a 	add	r2,r2,r3
 100a3f0:	80a7883a 	add	r19,r16,r2
 100a3f4:	982cd43a 	srli	r22,r19,16
 100a3f8:	a73feb36 	bltu	r20,fp,100a3a8 <__multiply+0x168>
 100a3fc:	94c00015 	stw	r19,0(r18)
 100a400:	d8800217 	ldw	r2,8(sp)
 100a404:	bdc00104 	addi	r23,r23,4
 100a408:	b880042e 	bgeu	r23,r2,100a41c <__multiply+0x1dc>
 100a40c:	d8c00117 	ldw	r3,4(sp)
 100a410:	18c00104 	addi	r3,r3,4
 100a414:	d8c00115 	stw	r3,4(sp)
 100a418:	003fbe06 	br	100a314 <__multiply+0xd4>
 100a41c:	d9000417 	ldw	r4,16(sp)
 100a420:	01000c0e 	bge	zero,r4,100a454 <__multiply+0x214>
 100a424:	d8c00317 	ldw	r3,12(sp)
 100a428:	18bfff17 	ldw	r2,-4(r3)
 100a42c:	18ffff04 	addi	r3,r3,-4
 100a430:	10000326 	beq	r2,zero,100a440 <__multiply+0x200>
 100a434:	00000706 	br	100a454 <__multiply+0x214>
 100a438:	18800017 	ldw	r2,0(r3)
 100a43c:	1000051e 	bne	r2,zero,100a454 <__multiply+0x214>
 100a440:	d9000417 	ldw	r4,16(sp)
 100a444:	18ffff04 	addi	r3,r3,-4
 100a448:	213fffc4 	addi	r4,r4,-1
 100a44c:	d9000415 	stw	r4,16(sp)
 100a450:	203ff91e 	bne	r4,zero,100a438 <__multiply+0x1f8>
 100a454:	d8800417 	ldw	r2,16(sp)
 100a458:	d8c00517 	ldw	r3,20(sp)
 100a45c:	18800415 	stw	r2,16(r3)
 100a460:	1805883a 	mov	r2,r3
 100a464:	dfc00f17 	ldw	ra,60(sp)
 100a468:	df000e17 	ldw	fp,56(sp)
 100a46c:	ddc00d17 	ldw	r23,52(sp)
 100a470:	dd800c17 	ldw	r22,48(sp)
 100a474:	dd400b17 	ldw	r21,44(sp)
 100a478:	dd000a17 	ldw	r20,40(sp)
 100a47c:	dcc00917 	ldw	r19,36(sp)
 100a480:	dc800817 	ldw	r18,32(sp)
 100a484:	dc400717 	ldw	r17,28(sp)
 100a488:	dc000617 	ldw	r16,24(sp)
 100a48c:	dec01004 	addi	sp,sp,64
 100a490:	f800283a 	ret

0100a494 <__i2b>:
 100a494:	defffd04 	addi	sp,sp,-12
 100a498:	dc000015 	stw	r16,0(sp)
 100a49c:	04000044 	movi	r16,1
 100a4a0:	dc800115 	stw	r18,4(sp)
 100a4a4:	2825883a 	mov	r18,r5
 100a4a8:	800b883a 	mov	r5,r16
 100a4ac:	dfc00215 	stw	ra,8(sp)
 100a4b0:	1009d300 	call	1009d30 <_Balloc>
 100a4b4:	14000415 	stw	r16,16(r2)
 100a4b8:	14800515 	stw	r18,20(r2)
 100a4bc:	dfc00217 	ldw	ra,8(sp)
 100a4c0:	dc800117 	ldw	r18,4(sp)
 100a4c4:	dc000017 	ldw	r16,0(sp)
 100a4c8:	dec00304 	addi	sp,sp,12
 100a4cc:	f800283a 	ret

0100a4d0 <__multadd>:
 100a4d0:	defff604 	addi	sp,sp,-40
 100a4d4:	dd800615 	stw	r22,24(sp)
 100a4d8:	2d800417 	ldw	r22,16(r5)
 100a4dc:	df000815 	stw	fp,32(sp)
 100a4e0:	ddc00715 	stw	r23,28(sp)
 100a4e4:	dd400515 	stw	r21,20(sp)
 100a4e8:	dd000415 	stw	r20,16(sp)
 100a4ec:	dcc00315 	stw	r19,12(sp)
 100a4f0:	dc800215 	stw	r18,8(sp)
 100a4f4:	dfc00915 	stw	ra,36(sp)
 100a4f8:	dc400115 	stw	r17,4(sp)
 100a4fc:	dc000015 	stw	r16,0(sp)
 100a500:	282f883a 	mov	r23,r5
 100a504:	2039883a 	mov	fp,r4
 100a508:	302b883a 	mov	r21,r6
 100a50c:	3829883a 	mov	r20,r7
 100a510:	2c800504 	addi	r18,r5,20
 100a514:	0027883a 	mov	r19,zero
 100a518:	94400017 	ldw	r17,0(r18)
 100a51c:	a80b883a 	mov	r5,r21
 100a520:	9cc00044 	addi	r19,r19,1
 100a524:	893fffcc 	andi	r4,r17,65535
 100a528:	10010a40 	call	10010a4 <__mulsi3>
 100a52c:	8808d43a 	srli	r4,r17,16
 100a530:	1521883a 	add	r16,r2,r20
 100a534:	a80b883a 	mov	r5,r21
 100a538:	10010a40 	call	10010a4 <__mulsi3>
 100a53c:	8008d43a 	srli	r4,r16,16
 100a540:	843fffcc 	andi	r16,r16,65535
 100a544:	1105883a 	add	r2,r2,r4
 100a548:	1006943a 	slli	r3,r2,16
 100a54c:	1028d43a 	srli	r20,r2,16
 100a550:	1c07883a 	add	r3,r3,r16
 100a554:	90c00015 	stw	r3,0(r18)
 100a558:	94800104 	addi	r18,r18,4
 100a55c:	9dbfee16 	blt	r19,r22,100a518 <__multadd+0x48>
 100a560:	a0000826 	beq	r20,zero,100a584 <__multadd+0xb4>
 100a564:	b8800217 	ldw	r2,8(r23)
 100a568:	b080130e 	bge	r22,r2,100a5b8 <__multadd+0xe8>
 100a56c:	b585883a 	add	r2,r22,r22
 100a570:	1085883a 	add	r2,r2,r2
 100a574:	15c5883a 	add	r2,r2,r23
 100a578:	b0c00044 	addi	r3,r22,1
 100a57c:	15000515 	stw	r20,20(r2)
 100a580:	b8c00415 	stw	r3,16(r23)
 100a584:	b805883a 	mov	r2,r23
 100a588:	dfc00917 	ldw	ra,36(sp)
 100a58c:	df000817 	ldw	fp,32(sp)
 100a590:	ddc00717 	ldw	r23,28(sp)
 100a594:	dd800617 	ldw	r22,24(sp)
 100a598:	dd400517 	ldw	r21,20(sp)
 100a59c:	dd000417 	ldw	r20,16(sp)
 100a5a0:	dcc00317 	ldw	r19,12(sp)
 100a5a4:	dc800217 	ldw	r18,8(sp)
 100a5a8:	dc400117 	ldw	r17,4(sp)
 100a5ac:	dc000017 	ldw	r16,0(sp)
 100a5b0:	dec00a04 	addi	sp,sp,40
 100a5b4:	f800283a 	ret
 100a5b8:	b9400117 	ldw	r5,4(r23)
 100a5bc:	e009883a 	mov	r4,fp
 100a5c0:	29400044 	addi	r5,r5,1
 100a5c4:	1009d300 	call	1009d30 <_Balloc>
 100a5c8:	b9800417 	ldw	r6,16(r23)
 100a5cc:	b9400304 	addi	r5,r23,12
 100a5d0:	11000304 	addi	r4,r2,12
 100a5d4:	318d883a 	add	r6,r6,r6
 100a5d8:	318d883a 	add	r6,r6,r6
 100a5dc:	31800204 	addi	r6,r6,8
 100a5e0:	1023883a 	mov	r17,r2
 100a5e4:	10033340 	call	1003334 <memcpy>
 100a5e8:	b80b883a 	mov	r5,r23
 100a5ec:	e009883a 	mov	r4,fp
 100a5f0:	10097b00 	call	10097b0 <_Bfree>
 100a5f4:	882f883a 	mov	r23,r17
 100a5f8:	003fdc06 	br	100a56c <__multadd+0x9c>

0100a5fc <__pow5mult>:
 100a5fc:	defffa04 	addi	sp,sp,-24
 100a600:	308000cc 	andi	r2,r6,3
 100a604:	dd000415 	stw	r20,16(sp)
 100a608:	dcc00315 	stw	r19,12(sp)
 100a60c:	dc000015 	stw	r16,0(sp)
 100a610:	dfc00515 	stw	ra,20(sp)
 100a614:	dc800215 	stw	r18,8(sp)
 100a618:	dc400115 	stw	r17,4(sp)
 100a61c:	3021883a 	mov	r16,r6
 100a620:	2027883a 	mov	r19,r4
 100a624:	2829883a 	mov	r20,r5
 100a628:	10002b1e 	bne	r2,zero,100a6d8 <__pow5mult+0xdc>
 100a62c:	8025d0ba 	srai	r18,r16,2
 100a630:	90001b26 	beq	r18,zero,100a6a0 <__pow5mult+0xa4>
 100a634:	9c001217 	ldw	r16,72(r19)
 100a638:	8000081e 	bne	r16,zero,100a65c <__pow5mult+0x60>
 100a63c:	00003006 	br	100a700 <__pow5mult+0x104>
 100a640:	800b883a 	mov	r5,r16
 100a644:	800d883a 	mov	r6,r16
 100a648:	9809883a 	mov	r4,r19
 100a64c:	90001426 	beq	r18,zero,100a6a0 <__pow5mult+0xa4>
 100a650:	80800017 	ldw	r2,0(r16)
 100a654:	10001b26 	beq	r2,zero,100a6c4 <__pow5mult+0xc8>
 100a658:	1021883a 	mov	r16,r2
 100a65c:	9080004c 	andi	r2,r18,1
 100a660:	1005003a 	cmpeq	r2,r2,zero
 100a664:	9025d07a 	srai	r18,r18,1
 100a668:	800d883a 	mov	r6,r16
 100a66c:	9809883a 	mov	r4,r19
 100a670:	a00b883a 	mov	r5,r20
 100a674:	103ff21e 	bne	r2,zero,100a640 <__pow5mult+0x44>
 100a678:	100a2400 	call	100a240 <__multiply>
 100a67c:	a00b883a 	mov	r5,r20
 100a680:	9809883a 	mov	r4,r19
 100a684:	1023883a 	mov	r17,r2
 100a688:	10097b00 	call	10097b0 <_Bfree>
 100a68c:	8829883a 	mov	r20,r17
 100a690:	800b883a 	mov	r5,r16
 100a694:	800d883a 	mov	r6,r16
 100a698:	9809883a 	mov	r4,r19
 100a69c:	903fec1e 	bne	r18,zero,100a650 <__pow5mult+0x54>
 100a6a0:	a005883a 	mov	r2,r20
 100a6a4:	dfc00517 	ldw	ra,20(sp)
 100a6a8:	dd000417 	ldw	r20,16(sp)
 100a6ac:	dcc00317 	ldw	r19,12(sp)
 100a6b0:	dc800217 	ldw	r18,8(sp)
 100a6b4:	dc400117 	ldw	r17,4(sp)
 100a6b8:	dc000017 	ldw	r16,0(sp)
 100a6bc:	dec00604 	addi	sp,sp,24
 100a6c0:	f800283a 	ret
 100a6c4:	100a2400 	call	100a240 <__multiply>
 100a6c8:	80800015 	stw	r2,0(r16)
 100a6cc:	1021883a 	mov	r16,r2
 100a6d0:	10000015 	stw	zero,0(r2)
 100a6d4:	003fe106 	br	100a65c <__pow5mult+0x60>
 100a6d8:	1085883a 	add	r2,r2,r2
 100a6dc:	00c04074 	movhi	r3,257
 100a6e0:	18ce5c04 	addi	r3,r3,14704
 100a6e4:	1085883a 	add	r2,r2,r2
 100a6e8:	10c5883a 	add	r2,r2,r3
 100a6ec:	11bfff17 	ldw	r6,-4(r2)
 100a6f0:	000f883a 	mov	r7,zero
 100a6f4:	100a4d00 	call	100a4d0 <__multadd>
 100a6f8:	1029883a 	mov	r20,r2
 100a6fc:	003fcb06 	br	100a62c <__pow5mult+0x30>
 100a700:	9809883a 	mov	r4,r19
 100a704:	01409c44 	movi	r5,625
 100a708:	100a4940 	call	100a494 <__i2b>
 100a70c:	98801215 	stw	r2,72(r19)
 100a710:	1021883a 	mov	r16,r2
 100a714:	10000015 	stw	zero,0(r2)
 100a718:	003fd006 	br	100a65c <__pow5mult+0x60>

0100a71c <__s2b>:
 100a71c:	defff904 	addi	sp,sp,-28
 100a720:	dcc00315 	stw	r19,12(sp)
 100a724:	dc800215 	stw	r18,8(sp)
 100a728:	2827883a 	mov	r19,r5
 100a72c:	2025883a 	mov	r18,r4
 100a730:	01400244 	movi	r5,9
 100a734:	39000204 	addi	r4,r7,8
 100a738:	dd000415 	stw	r20,16(sp)
 100a73c:	dc400115 	stw	r17,4(sp)
 100a740:	dfc00615 	stw	ra,24(sp)
 100a744:	dd400515 	stw	r21,20(sp)
 100a748:	dc000015 	stw	r16,0(sp)
 100a74c:	3829883a 	mov	r20,r7
 100a750:	3023883a 	mov	r17,r6
 100a754:	1000fd40 	call	1000fd4 <__divsi3>
 100a758:	00c00044 	movi	r3,1
 100a75c:	1880350e 	bge	r3,r2,100a834 <__s2b+0x118>
 100a760:	000b883a 	mov	r5,zero
 100a764:	18c7883a 	add	r3,r3,r3
 100a768:	29400044 	addi	r5,r5,1
 100a76c:	18bffd16 	blt	r3,r2,100a764 <__s2b+0x48>
 100a770:	9009883a 	mov	r4,r18
 100a774:	1009d300 	call	1009d30 <_Balloc>
 100a778:	1011883a 	mov	r8,r2
 100a77c:	d8800717 	ldw	r2,28(sp)
 100a780:	00c00044 	movi	r3,1
 100a784:	01800244 	movi	r6,9
 100a788:	40800515 	stw	r2,20(r8)
 100a78c:	40c00415 	stw	r3,16(r8)
 100a790:	3440260e 	bge	r6,r17,100a82c <__s2b+0x110>
 100a794:	3021883a 	mov	r16,r6
 100a798:	99ab883a 	add	r21,r19,r6
 100a79c:	9c05883a 	add	r2,r19,r16
 100a7a0:	11c00007 	ldb	r7,0(r2)
 100a7a4:	400b883a 	mov	r5,r8
 100a7a8:	9009883a 	mov	r4,r18
 100a7ac:	39fff404 	addi	r7,r7,-48
 100a7b0:	01800284 	movi	r6,10
 100a7b4:	100a4d00 	call	100a4d0 <__multadd>
 100a7b8:	84000044 	addi	r16,r16,1
 100a7bc:	1011883a 	mov	r8,r2
 100a7c0:	8c3ff61e 	bne	r17,r16,100a79c <__s2b+0x80>
 100a7c4:	ac45883a 	add	r2,r21,r17
 100a7c8:	117ffe04 	addi	r5,r2,-8
 100a7cc:	880d883a 	mov	r6,r17
 100a7d0:	35000c0e 	bge	r6,r20,100a804 <__s2b+0xe8>
 100a7d4:	a185c83a 	sub	r2,r20,r6
 100a7d8:	2821883a 	mov	r16,r5
 100a7dc:	28a3883a 	add	r17,r5,r2
 100a7e0:	81c00007 	ldb	r7,0(r16)
 100a7e4:	400b883a 	mov	r5,r8
 100a7e8:	9009883a 	mov	r4,r18
 100a7ec:	39fff404 	addi	r7,r7,-48
 100a7f0:	01800284 	movi	r6,10
 100a7f4:	100a4d00 	call	100a4d0 <__multadd>
 100a7f8:	84000044 	addi	r16,r16,1
 100a7fc:	1011883a 	mov	r8,r2
 100a800:	847ff71e 	bne	r16,r17,100a7e0 <__s2b+0xc4>
 100a804:	4005883a 	mov	r2,r8
 100a808:	dfc00617 	ldw	ra,24(sp)
 100a80c:	dd400517 	ldw	r21,20(sp)
 100a810:	dd000417 	ldw	r20,16(sp)
 100a814:	dcc00317 	ldw	r19,12(sp)
 100a818:	dc800217 	ldw	r18,8(sp)
 100a81c:	dc400117 	ldw	r17,4(sp)
 100a820:	dc000017 	ldw	r16,0(sp)
 100a824:	dec00704 	addi	sp,sp,28
 100a828:	f800283a 	ret
 100a82c:	99400284 	addi	r5,r19,10
 100a830:	003fe706 	br	100a7d0 <__s2b+0xb4>
 100a834:	000b883a 	mov	r5,zero
 100a838:	003fcd06 	br	100a770 <__s2b+0x54>

0100a83c <_read_r>:
 100a83c:	defffd04 	addi	sp,sp,-12
 100a840:	dc000015 	stw	r16,0(sp)
 100a844:	04004074 	movhi	r16,257
 100a848:	84142904 	addi	r16,r16,20644
 100a84c:	dc400115 	stw	r17,4(sp)
 100a850:	80000015 	stw	zero,0(r16)
 100a854:	2023883a 	mov	r17,r4
 100a858:	2809883a 	mov	r4,r5
 100a85c:	300b883a 	mov	r5,r6
 100a860:	380d883a 	mov	r6,r7
 100a864:	dfc00215 	stw	ra,8(sp)
 100a868:	10116c00 	call	10116c0 <read>
 100a86c:	1007883a 	mov	r3,r2
 100a870:	00bfffc4 	movi	r2,-1
 100a874:	18800626 	beq	r3,r2,100a890 <_read_r+0x54>
 100a878:	1805883a 	mov	r2,r3
 100a87c:	dfc00217 	ldw	ra,8(sp)
 100a880:	dc400117 	ldw	r17,4(sp)
 100a884:	dc000017 	ldw	r16,0(sp)
 100a888:	dec00304 	addi	sp,sp,12
 100a88c:	f800283a 	ret
 100a890:	80800017 	ldw	r2,0(r16)
 100a894:	103ff826 	beq	r2,zero,100a878 <_read_r+0x3c>
 100a898:	88800015 	stw	r2,0(r17)
 100a89c:	1805883a 	mov	r2,r3
 100a8a0:	dfc00217 	ldw	ra,8(sp)
 100a8a4:	dc400117 	ldw	r17,4(sp)
 100a8a8:	dc000017 	ldw	r16,0(sp)
 100a8ac:	dec00304 	addi	sp,sp,12
 100a8b0:	f800283a 	ret

0100a8b4 <_realloc_r>:
 100a8b4:	defff404 	addi	sp,sp,-48
 100a8b8:	dd800815 	stw	r22,32(sp)
 100a8bc:	dc800415 	stw	r18,16(sp)
 100a8c0:	dc400315 	stw	r17,12(sp)
 100a8c4:	dfc00b15 	stw	ra,44(sp)
 100a8c8:	df000a15 	stw	fp,40(sp)
 100a8cc:	ddc00915 	stw	r23,36(sp)
 100a8d0:	dd400715 	stw	r21,28(sp)
 100a8d4:	dd000615 	stw	r20,24(sp)
 100a8d8:	dcc00515 	stw	r19,20(sp)
 100a8dc:	dc000215 	stw	r16,8(sp)
 100a8e0:	2825883a 	mov	r18,r5
 100a8e4:	3023883a 	mov	r17,r6
 100a8e8:	202d883a 	mov	r22,r4
 100a8ec:	2800c926 	beq	r5,zero,100ac14 <_realloc_r+0x360>
 100a8f0:	101139c0 	call	101139c <__malloc_lock>
 100a8f4:	943ffe04 	addi	r16,r18,-8
 100a8f8:	88c002c4 	addi	r3,r17,11
 100a8fc:	00800584 	movi	r2,22
 100a900:	82000117 	ldw	r8,4(r16)
 100a904:	10c01b2e 	bgeu	r2,r3,100a974 <_realloc_r+0xc0>
 100a908:	00bffe04 	movi	r2,-8
 100a90c:	188e703a 	and	r7,r3,r2
 100a910:	3839883a 	mov	fp,r7
 100a914:	38001a16 	blt	r7,zero,100a980 <_realloc_r+0xcc>
 100a918:	e4401936 	bltu	fp,r17,100a980 <_realloc_r+0xcc>
 100a91c:	013fff04 	movi	r4,-4
 100a920:	4126703a 	and	r19,r8,r4
 100a924:	99c02616 	blt	r19,r7,100a9c0 <_realloc_r+0x10c>
 100a928:	802b883a 	mov	r21,r16
 100a92c:	9829883a 	mov	r20,r19
 100a930:	84000204 	addi	r16,r16,8
 100a934:	a80f883a 	mov	r7,r21
 100a938:	a70dc83a 	sub	r6,r20,fp
 100a93c:	008003c4 	movi	r2,15
 100a940:	1180c136 	bltu	r2,r6,100ac48 <_realloc_r+0x394>
 100a944:	38800117 	ldw	r2,4(r7)
 100a948:	a549883a 	add	r4,r20,r21
 100a94c:	1080004c 	andi	r2,r2,1
 100a950:	a084b03a 	or	r2,r20,r2
 100a954:	38800115 	stw	r2,4(r7)
 100a958:	20c00117 	ldw	r3,4(r4)
 100a95c:	18c00054 	ori	r3,r3,1
 100a960:	20c00115 	stw	r3,4(r4)
 100a964:	b009883a 	mov	r4,r22
 100a968:	10113bc0 	call	10113bc <__malloc_unlock>
 100a96c:	8023883a 	mov	r17,r16
 100a970:	00000606 	br	100a98c <_realloc_r+0xd8>
 100a974:	01c00404 	movi	r7,16
 100a978:	3839883a 	mov	fp,r7
 100a97c:	e47fe72e 	bgeu	fp,r17,100a91c <_realloc_r+0x68>
 100a980:	00800304 	movi	r2,12
 100a984:	0023883a 	mov	r17,zero
 100a988:	b0800015 	stw	r2,0(r22)
 100a98c:	8805883a 	mov	r2,r17
 100a990:	dfc00b17 	ldw	ra,44(sp)
 100a994:	df000a17 	ldw	fp,40(sp)
 100a998:	ddc00917 	ldw	r23,36(sp)
 100a99c:	dd800817 	ldw	r22,32(sp)
 100a9a0:	dd400717 	ldw	r21,28(sp)
 100a9a4:	dd000617 	ldw	r20,24(sp)
 100a9a8:	dcc00517 	ldw	r19,20(sp)
 100a9ac:	dc800417 	ldw	r18,16(sp)
 100a9b0:	dc400317 	ldw	r17,12(sp)
 100a9b4:	dc000217 	ldw	r16,8(sp)
 100a9b8:	dec00c04 	addi	sp,sp,48
 100a9bc:	f800283a 	ret
 100a9c0:	00804074 	movhi	r2,257
 100a9c4:	108fc704 	addi	r2,r2,16156
 100a9c8:	12400217 	ldw	r9,8(r2)
 100a9cc:	84cd883a 	add	r6,r16,r19
 100a9d0:	802b883a 	mov	r21,r16
 100a9d4:	3240b926 	beq	r6,r9,100acbc <_realloc_r+0x408>
 100a9d8:	31400117 	ldw	r5,4(r6)
 100a9dc:	00bfff84 	movi	r2,-2
 100a9e0:	2884703a 	and	r2,r5,r2
 100a9e4:	1185883a 	add	r2,r2,r6
 100a9e8:	10c00117 	ldw	r3,4(r2)
 100a9ec:	18c0004c 	andi	r3,r3,1
 100a9f0:	1807003a 	cmpeq	r3,r3,zero
 100a9f4:	1800a326 	beq	r3,zero,100ac84 <_realloc_r+0x3d0>
 100a9f8:	2908703a 	and	r4,r5,r4
 100a9fc:	9929883a 	add	r20,r19,r4
 100aa00:	a1c0a30e 	bge	r20,r7,100ac90 <_realloc_r+0x3dc>
 100aa04:	4080004c 	andi	r2,r8,1
 100aa08:	1000551e 	bne	r2,zero,100ab60 <_realloc_r+0x2ac>
 100aa0c:	80800017 	ldw	r2,0(r16)
 100aa10:	80afc83a 	sub	r23,r16,r2
 100aa14:	b8c00117 	ldw	r3,4(r23)
 100aa18:	00bfff04 	movi	r2,-4
 100aa1c:	1884703a 	and	r2,r3,r2
 100aa20:	30002e26 	beq	r6,zero,100aadc <_realloc_r+0x228>
 100aa24:	3240b926 	beq	r6,r9,100ad0c <_realloc_r+0x458>
 100aa28:	98a9883a 	add	r20,r19,r2
 100aa2c:	2509883a 	add	r4,r4,r20
 100aa30:	d9000015 	stw	r4,0(sp)
 100aa34:	21c02a16 	blt	r4,r7,100aae0 <_realloc_r+0x22c>
 100aa38:	30800317 	ldw	r2,12(r6)
 100aa3c:	30c00217 	ldw	r3,8(r6)
 100aa40:	01400904 	movi	r5,36
 100aa44:	99bfff04 	addi	r6,r19,-4
 100aa48:	18800315 	stw	r2,12(r3)
 100aa4c:	10c00215 	stw	r3,8(r2)
 100aa50:	b9000317 	ldw	r4,12(r23)
 100aa54:	b8800217 	ldw	r2,8(r23)
 100aa58:	b82b883a 	mov	r21,r23
 100aa5c:	bc000204 	addi	r16,r23,8
 100aa60:	20800215 	stw	r2,8(r4)
 100aa64:	11000315 	stw	r4,12(r2)
 100aa68:	2980e436 	bltu	r5,r6,100adfc <_realloc_r+0x548>
 100aa6c:	008004c4 	movi	r2,19
 100aa70:	9009883a 	mov	r4,r18
 100aa74:	8011883a 	mov	r8,r16
 100aa78:	11800f2e 	bgeu	r2,r6,100aab8 <_realloc_r+0x204>
 100aa7c:	90800017 	ldw	r2,0(r18)
 100aa80:	ba000404 	addi	r8,r23,16
 100aa84:	91000204 	addi	r4,r18,8
 100aa88:	b8800215 	stw	r2,8(r23)
 100aa8c:	90c00117 	ldw	r3,4(r18)
 100aa90:	008006c4 	movi	r2,27
 100aa94:	b8c00315 	stw	r3,12(r23)
 100aa98:	1180072e 	bgeu	r2,r6,100aab8 <_realloc_r+0x204>
 100aa9c:	90c00217 	ldw	r3,8(r18)
 100aaa0:	ba000604 	addi	r8,r23,24
 100aaa4:	91000404 	addi	r4,r18,16
 100aaa8:	b8c00415 	stw	r3,16(r23)
 100aaac:	90800317 	ldw	r2,12(r18)
 100aab0:	b8800515 	stw	r2,20(r23)
 100aab4:	3140e726 	beq	r6,r5,100ae54 <_realloc_r+0x5a0>
 100aab8:	20800017 	ldw	r2,0(r4)
 100aabc:	dd000017 	ldw	r20,0(sp)
 100aac0:	b80f883a 	mov	r7,r23
 100aac4:	40800015 	stw	r2,0(r8)
 100aac8:	20c00117 	ldw	r3,4(r4)
 100aacc:	40c00115 	stw	r3,4(r8)
 100aad0:	20800217 	ldw	r2,8(r4)
 100aad4:	40800215 	stw	r2,8(r8)
 100aad8:	003f9706 	br	100a938 <_realloc_r+0x84>
 100aadc:	98a9883a 	add	r20,r19,r2
 100aae0:	a1c01f16 	blt	r20,r7,100ab60 <_realloc_r+0x2ac>
 100aae4:	b8c00317 	ldw	r3,12(r23)
 100aae8:	b8800217 	ldw	r2,8(r23)
 100aaec:	99bfff04 	addi	r6,r19,-4
 100aaf0:	01400904 	movi	r5,36
 100aaf4:	b82b883a 	mov	r21,r23
 100aaf8:	18800215 	stw	r2,8(r3)
 100aafc:	10c00315 	stw	r3,12(r2)
 100ab00:	bc000204 	addi	r16,r23,8
 100ab04:	2980c336 	bltu	r5,r6,100ae14 <_realloc_r+0x560>
 100ab08:	008004c4 	movi	r2,19
 100ab0c:	9009883a 	mov	r4,r18
 100ab10:	8011883a 	mov	r8,r16
 100ab14:	11800f2e 	bgeu	r2,r6,100ab54 <_realloc_r+0x2a0>
 100ab18:	90800017 	ldw	r2,0(r18)
 100ab1c:	ba000404 	addi	r8,r23,16
 100ab20:	91000204 	addi	r4,r18,8
 100ab24:	b8800215 	stw	r2,8(r23)
 100ab28:	90c00117 	ldw	r3,4(r18)
 100ab2c:	008006c4 	movi	r2,27
 100ab30:	b8c00315 	stw	r3,12(r23)
 100ab34:	1180072e 	bgeu	r2,r6,100ab54 <_realloc_r+0x2a0>
 100ab38:	90c00217 	ldw	r3,8(r18)
 100ab3c:	ba000604 	addi	r8,r23,24
 100ab40:	91000404 	addi	r4,r18,16
 100ab44:	b8c00415 	stw	r3,16(r23)
 100ab48:	90800317 	ldw	r2,12(r18)
 100ab4c:	b8800515 	stw	r2,20(r23)
 100ab50:	3140c726 	beq	r6,r5,100ae70 <_realloc_r+0x5bc>
 100ab54:	20800017 	ldw	r2,0(r4)
 100ab58:	b80f883a 	mov	r7,r23
 100ab5c:	003fd906 	br	100aac4 <_realloc_r+0x210>
 100ab60:	880b883a 	mov	r5,r17
 100ab64:	b009883a 	mov	r4,r22
 100ab68:	1002b100 	call	1002b10 <_malloc_r>
 100ab6c:	1023883a 	mov	r17,r2
 100ab70:	10002526 	beq	r2,zero,100ac08 <_realloc_r+0x354>
 100ab74:	80800117 	ldw	r2,4(r16)
 100ab78:	00ffff84 	movi	r3,-2
 100ab7c:	893ffe04 	addi	r4,r17,-8
 100ab80:	10c4703a 	and	r2,r2,r3
 100ab84:	8085883a 	add	r2,r16,r2
 100ab88:	20809526 	beq	r4,r2,100ade0 <_realloc_r+0x52c>
 100ab8c:	99bfff04 	addi	r6,r19,-4
 100ab90:	01c00904 	movi	r7,36
 100ab94:	39804536 	bltu	r7,r6,100acac <_realloc_r+0x3f8>
 100ab98:	008004c4 	movi	r2,19
 100ab9c:	9009883a 	mov	r4,r18
 100aba0:	880b883a 	mov	r5,r17
 100aba4:	11800f2e 	bgeu	r2,r6,100abe4 <_realloc_r+0x330>
 100aba8:	90800017 	ldw	r2,0(r18)
 100abac:	89400204 	addi	r5,r17,8
 100abb0:	91000204 	addi	r4,r18,8
 100abb4:	88800015 	stw	r2,0(r17)
 100abb8:	90c00117 	ldw	r3,4(r18)
 100abbc:	008006c4 	movi	r2,27
 100abc0:	88c00115 	stw	r3,4(r17)
 100abc4:	1180072e 	bgeu	r2,r6,100abe4 <_realloc_r+0x330>
 100abc8:	90c00217 	ldw	r3,8(r18)
 100abcc:	89400404 	addi	r5,r17,16
 100abd0:	91000404 	addi	r4,r18,16
 100abd4:	88c00215 	stw	r3,8(r17)
 100abd8:	90800317 	ldw	r2,12(r18)
 100abdc:	88800315 	stw	r2,12(r17)
 100abe0:	31c09126 	beq	r6,r7,100ae28 <_realloc_r+0x574>
 100abe4:	20800017 	ldw	r2,0(r4)
 100abe8:	28800015 	stw	r2,0(r5)
 100abec:	20c00117 	ldw	r3,4(r4)
 100abf0:	28c00115 	stw	r3,4(r5)
 100abf4:	20800217 	ldw	r2,8(r4)
 100abf8:	28800215 	stw	r2,8(r5)
 100abfc:	900b883a 	mov	r5,r18
 100ac00:	b009883a 	mov	r4,r22
 100ac04:	1001e940 	call	1001e94 <_free_r>
 100ac08:	b009883a 	mov	r4,r22
 100ac0c:	10113bc0 	call	10113bc <__malloc_unlock>
 100ac10:	003f5e06 	br	100a98c <_realloc_r+0xd8>
 100ac14:	300b883a 	mov	r5,r6
 100ac18:	dfc00b17 	ldw	ra,44(sp)
 100ac1c:	df000a17 	ldw	fp,40(sp)
 100ac20:	ddc00917 	ldw	r23,36(sp)
 100ac24:	dd800817 	ldw	r22,32(sp)
 100ac28:	dd400717 	ldw	r21,28(sp)
 100ac2c:	dd000617 	ldw	r20,24(sp)
 100ac30:	dcc00517 	ldw	r19,20(sp)
 100ac34:	dc800417 	ldw	r18,16(sp)
 100ac38:	dc400317 	ldw	r17,12(sp)
 100ac3c:	dc000217 	ldw	r16,8(sp)
 100ac40:	dec00c04 	addi	sp,sp,48
 100ac44:	1002b101 	jmpi	1002b10 <_malloc_r>
 100ac48:	38800117 	ldw	r2,4(r7)
 100ac4c:	e54b883a 	add	r5,fp,r21
 100ac50:	31000054 	ori	r4,r6,1
 100ac54:	1080004c 	andi	r2,r2,1
 100ac58:	1704b03a 	or	r2,r2,fp
 100ac5c:	38800115 	stw	r2,4(r7)
 100ac60:	29000115 	stw	r4,4(r5)
 100ac64:	2987883a 	add	r3,r5,r6
 100ac68:	18800117 	ldw	r2,4(r3)
 100ac6c:	29400204 	addi	r5,r5,8
 100ac70:	b009883a 	mov	r4,r22
 100ac74:	10800054 	ori	r2,r2,1
 100ac78:	18800115 	stw	r2,4(r3)
 100ac7c:	1001e940 	call	1001e94 <_free_r>
 100ac80:	003f3806 	br	100a964 <_realloc_r+0xb0>
 100ac84:	000d883a 	mov	r6,zero
 100ac88:	0009883a 	mov	r4,zero
 100ac8c:	003f5d06 	br	100aa04 <_realloc_r+0x150>
 100ac90:	30c00217 	ldw	r3,8(r6)
 100ac94:	30800317 	ldw	r2,12(r6)
 100ac98:	800f883a 	mov	r7,r16
 100ac9c:	84000204 	addi	r16,r16,8
 100aca0:	10c00215 	stw	r3,8(r2)
 100aca4:	18800315 	stw	r2,12(r3)
 100aca8:	003f2306 	br	100a938 <_realloc_r+0x84>
 100acac:	8809883a 	mov	r4,r17
 100acb0:	900b883a 	mov	r5,r18
 100acb4:	10096d00 	call	10096d0 <memmove>
 100acb8:	003fd006 	br	100abfc <_realloc_r+0x348>
 100acbc:	30800117 	ldw	r2,4(r6)
 100acc0:	e0c00404 	addi	r3,fp,16
 100acc4:	1108703a 	and	r4,r2,r4
 100acc8:	9905883a 	add	r2,r19,r4
 100accc:	10ff4d16 	blt	r2,r3,100aa04 <_realloc_r+0x150>
 100acd0:	1705c83a 	sub	r2,r2,fp
 100acd4:	870b883a 	add	r5,r16,fp
 100acd8:	10800054 	ori	r2,r2,1
 100acdc:	28800115 	stw	r2,4(r5)
 100ace0:	80c00117 	ldw	r3,4(r16)
 100ace4:	00804074 	movhi	r2,257
 100ace8:	108fc704 	addi	r2,r2,16156
 100acec:	b009883a 	mov	r4,r22
 100acf0:	18c0004c 	andi	r3,r3,1
 100acf4:	e0c6b03a 	or	r3,fp,r3
 100acf8:	11400215 	stw	r5,8(r2)
 100acfc:	80c00115 	stw	r3,4(r16)
 100ad00:	10113bc0 	call	10113bc <__malloc_unlock>
 100ad04:	84400204 	addi	r17,r16,8
 100ad08:	003f2006 	br	100a98c <_realloc_r+0xd8>
 100ad0c:	98a9883a 	add	r20,r19,r2
 100ad10:	2509883a 	add	r4,r4,r20
 100ad14:	e0800404 	addi	r2,fp,16
 100ad18:	d9000115 	stw	r4,4(sp)
 100ad1c:	20bf7016 	blt	r4,r2,100aae0 <_realloc_r+0x22c>
 100ad20:	b8c00317 	ldw	r3,12(r23)
 100ad24:	b8800217 	ldw	r2,8(r23)
 100ad28:	99bfff04 	addi	r6,r19,-4
 100ad2c:	01400904 	movi	r5,36
 100ad30:	18800215 	stw	r2,8(r3)
 100ad34:	10c00315 	stw	r3,12(r2)
 100ad38:	bc400204 	addi	r17,r23,8
 100ad3c:	29804136 	bltu	r5,r6,100ae44 <_realloc_r+0x590>
 100ad40:	008004c4 	movi	r2,19
 100ad44:	9009883a 	mov	r4,r18
 100ad48:	880f883a 	mov	r7,r17
 100ad4c:	11800f2e 	bgeu	r2,r6,100ad8c <_realloc_r+0x4d8>
 100ad50:	90800017 	ldw	r2,0(r18)
 100ad54:	b9c00404 	addi	r7,r23,16
 100ad58:	91000204 	addi	r4,r18,8
 100ad5c:	b8800215 	stw	r2,8(r23)
 100ad60:	90c00117 	ldw	r3,4(r18)
 100ad64:	008006c4 	movi	r2,27
 100ad68:	b8c00315 	stw	r3,12(r23)
 100ad6c:	1180072e 	bgeu	r2,r6,100ad8c <_realloc_r+0x4d8>
 100ad70:	90c00217 	ldw	r3,8(r18)
 100ad74:	b9c00604 	addi	r7,r23,24
 100ad78:	91000404 	addi	r4,r18,16
 100ad7c:	b8c00415 	stw	r3,16(r23)
 100ad80:	90800317 	ldw	r2,12(r18)
 100ad84:	b8800515 	stw	r2,20(r23)
 100ad88:	31404026 	beq	r6,r5,100ae8c <_realloc_r+0x5d8>
 100ad8c:	20800017 	ldw	r2,0(r4)
 100ad90:	38800015 	stw	r2,0(r7)
 100ad94:	20c00117 	ldw	r3,4(r4)
 100ad98:	38c00115 	stw	r3,4(r7)
 100ad9c:	20800217 	ldw	r2,8(r4)
 100ada0:	38800215 	stw	r2,8(r7)
 100ada4:	d8c00117 	ldw	r3,4(sp)
 100ada8:	bf0b883a 	add	r5,r23,fp
 100adac:	b009883a 	mov	r4,r22
 100adb0:	1f05c83a 	sub	r2,r3,fp
 100adb4:	10800054 	ori	r2,r2,1
 100adb8:	28800115 	stw	r2,4(r5)
 100adbc:	b8c00117 	ldw	r3,4(r23)
 100adc0:	00804074 	movhi	r2,257
 100adc4:	108fc704 	addi	r2,r2,16156
 100adc8:	11400215 	stw	r5,8(r2)
 100adcc:	18c0004c 	andi	r3,r3,1
 100add0:	e0c6b03a 	or	r3,fp,r3
 100add4:	b8c00115 	stw	r3,4(r23)
 100add8:	10113bc0 	call	10113bc <__malloc_unlock>
 100addc:	003eeb06 	br	100a98c <_realloc_r+0xd8>
 100ade0:	20800117 	ldw	r2,4(r4)
 100ade4:	00ffff04 	movi	r3,-4
 100ade8:	800f883a 	mov	r7,r16
 100adec:	10c4703a 	and	r2,r2,r3
 100adf0:	98a9883a 	add	r20,r19,r2
 100adf4:	84000204 	addi	r16,r16,8
 100adf8:	003ecf06 	br	100a938 <_realloc_r+0x84>
 100adfc:	900b883a 	mov	r5,r18
 100ae00:	8009883a 	mov	r4,r16
 100ae04:	10096d00 	call	10096d0 <memmove>
 100ae08:	dd000017 	ldw	r20,0(sp)
 100ae0c:	b80f883a 	mov	r7,r23
 100ae10:	003ec906 	br	100a938 <_realloc_r+0x84>
 100ae14:	900b883a 	mov	r5,r18
 100ae18:	8009883a 	mov	r4,r16
 100ae1c:	10096d00 	call	10096d0 <memmove>
 100ae20:	b80f883a 	mov	r7,r23
 100ae24:	003ec406 	br	100a938 <_realloc_r+0x84>
 100ae28:	90c00417 	ldw	r3,16(r18)
 100ae2c:	89400604 	addi	r5,r17,24
 100ae30:	91000604 	addi	r4,r18,24
 100ae34:	88c00415 	stw	r3,16(r17)
 100ae38:	90800517 	ldw	r2,20(r18)
 100ae3c:	88800515 	stw	r2,20(r17)
 100ae40:	003f6806 	br	100abe4 <_realloc_r+0x330>
 100ae44:	900b883a 	mov	r5,r18
 100ae48:	8809883a 	mov	r4,r17
 100ae4c:	10096d00 	call	10096d0 <memmove>
 100ae50:	003fd406 	br	100ada4 <_realloc_r+0x4f0>
 100ae54:	90c00417 	ldw	r3,16(r18)
 100ae58:	91000604 	addi	r4,r18,24
 100ae5c:	ba000804 	addi	r8,r23,32
 100ae60:	b8c00615 	stw	r3,24(r23)
 100ae64:	90800517 	ldw	r2,20(r18)
 100ae68:	b8800715 	stw	r2,28(r23)
 100ae6c:	003f1206 	br	100aab8 <_realloc_r+0x204>
 100ae70:	90c00417 	ldw	r3,16(r18)
 100ae74:	91000604 	addi	r4,r18,24
 100ae78:	ba000804 	addi	r8,r23,32
 100ae7c:	b8c00615 	stw	r3,24(r23)
 100ae80:	90800517 	ldw	r2,20(r18)
 100ae84:	b8800715 	stw	r2,28(r23)
 100ae88:	003f3206 	br	100ab54 <_realloc_r+0x2a0>
 100ae8c:	90c00417 	ldw	r3,16(r18)
 100ae90:	91000604 	addi	r4,r18,24
 100ae94:	b9c00804 	addi	r7,r23,32
 100ae98:	b8c00615 	stw	r3,24(r23)
 100ae9c:	90800517 	ldw	r2,20(r18)
 100aea0:	b8800715 	stw	r2,28(r23)
 100aea4:	003fb906 	br	100ad8c <_realloc_r+0x4d8>

0100aea8 <__isinfd>:
 100aea8:	200d883a 	mov	r6,r4
 100aeac:	0109c83a 	sub	r4,zero,r4
 100aeb0:	2188b03a 	or	r4,r4,r6
 100aeb4:	2008d7fa 	srli	r4,r4,31
 100aeb8:	00a00034 	movhi	r2,32768
 100aebc:	10bfffc4 	addi	r2,r2,-1
 100aec0:	1144703a 	and	r2,r2,r5
 100aec4:	2088b03a 	or	r4,r4,r2
 100aec8:	009ffc34 	movhi	r2,32752
 100aecc:	1105c83a 	sub	r2,r2,r4
 100aed0:	0087c83a 	sub	r3,zero,r2
 100aed4:	10c4b03a 	or	r2,r2,r3
 100aed8:	1004d7fa 	srli	r2,r2,31
 100aedc:	00c00044 	movi	r3,1
 100aee0:	1885c83a 	sub	r2,r3,r2
 100aee4:	f800283a 	ret

0100aee8 <__isnand>:
 100aee8:	200d883a 	mov	r6,r4
 100aeec:	0109c83a 	sub	r4,zero,r4
 100aef0:	2188b03a 	or	r4,r4,r6
 100aef4:	2008d7fa 	srli	r4,r4,31
 100aef8:	00a00034 	movhi	r2,32768
 100aefc:	10bfffc4 	addi	r2,r2,-1
 100af00:	1144703a 	and	r2,r2,r5
 100af04:	2088b03a 	or	r4,r4,r2
 100af08:	009ffc34 	movhi	r2,32752
 100af0c:	1105c83a 	sub	r2,r2,r4
 100af10:	1004d7fa 	srli	r2,r2,31
 100af14:	f800283a 	ret

0100af18 <__sccl>:
 100af18:	28c00003 	ldbu	r3,0(r5)
 100af1c:	00801784 	movi	r2,94
 100af20:	2a000044 	addi	r8,r5,1
 100af24:	18802526 	beq	r3,r2,100afbc <__sccl+0xa4>
 100af28:	180f883a 	mov	r7,r3
 100af2c:	0013883a 	mov	r9,zero
 100af30:	000d883a 	mov	r6,zero
 100af34:	0007883a 	mov	r3,zero
 100af38:	01404004 	movi	r5,256
 100af3c:	1905883a 	add	r2,r3,r4
 100af40:	18c00044 	addi	r3,r3,1
 100af44:	11800005 	stb	r6,0(r2)
 100af48:	197ffc1e 	bne	r3,r5,100af3c <__sccl+0x24>
 100af4c:	38000c26 	beq	r7,zero,100af80 <__sccl+0x68>
 100af50:	00800044 	movi	r2,1
 100af54:	124dc83a 	sub	r6,r2,r9
 100af58:	3905883a 	add	r2,r7,r4
 100af5c:	11800005 	stb	r6,0(r2)
 100af60:	41400044 	addi	r5,r8,1
 100af64:	02400b44 	movi	r9,45
 100af68:	02801744 	movi	r10,93
 100af6c:	28bfffc3 	ldbu	r2,-1(r5)
 100af70:	2811883a 	mov	r8,r5
 100af74:	12400726 	beq	r2,r9,100af94 <__sccl+0x7c>
 100af78:	12800226 	beq	r2,r10,100af84 <__sccl+0x6c>
 100af7c:	1000031e 	bne	r2,zero,100af8c <__sccl+0x74>
 100af80:	423fffc4 	addi	r8,r8,-1
 100af84:	4005883a 	mov	r2,r8
 100af88:	f800283a 	ret
 100af8c:	100f883a 	mov	r7,r2
 100af90:	003ff106 	br	100af58 <__sccl+0x40>
 100af94:	28c00003 	ldbu	r3,0(r5)
 100af98:	1a800d26 	beq	r3,r10,100afd0 <__sccl+0xb8>
 100af9c:	19c00c16 	blt	r3,r7,100afd0 <__sccl+0xb8>
 100afa0:	21c5883a 	add	r2,r4,r7
 100afa4:	39c00044 	addi	r7,r7,1
 100afa8:	11800045 	stb	r6,1(r2)
 100afac:	10800044 	addi	r2,r2,1
 100afb0:	38fffc16 	blt	r7,r3,100afa4 <__sccl+0x8c>
 100afb4:	29400084 	addi	r5,r5,2
 100afb8:	003fec06 	br	100af6c <__sccl+0x54>
 100afbc:	29c00043 	ldbu	r7,1(r5)
 100afc0:	02400044 	movi	r9,1
 100afc4:	2a000084 	addi	r8,r5,2
 100afc8:	480d883a 	mov	r6,r9
 100afcc:	003fd906 	br	100af34 <__sccl+0x1c>
 100afd0:	01c00b44 	movi	r7,45
 100afd4:	003fe006 	br	100af58 <__sccl+0x40>

0100afd8 <nanf>:
 100afd8:	009ff034 	movhi	r2,32704
 100afdc:	f800283a 	ret

0100afe0 <sprintf>:
 100afe0:	deffe504 	addi	sp,sp,-108
 100afe4:	2013883a 	mov	r9,r4
 100afe8:	dfc01815 	stw	ra,96(sp)
 100afec:	d9801915 	stw	r6,100(sp)
 100aff0:	d9c01a15 	stw	r7,104(sp)
 100aff4:	d8801904 	addi	r2,sp,100
 100aff8:	d8800015 	stw	r2,0(sp)
 100affc:	00804074 	movhi	r2,257
 100b000:	10915504 	addi	r2,r2,17748
 100b004:	11000017 	ldw	r4,0(r2)
 100b008:	d9c00017 	ldw	r7,0(sp)
 100b00c:	00808204 	movi	r2,520
 100b010:	00e00034 	movhi	r3,32768
 100b014:	18ffffc4 	addi	r3,r3,-1
 100b018:	280d883a 	mov	r6,r5
 100b01c:	d880040d 	sth	r2,16(sp)
 100b020:	d9400104 	addi	r5,sp,4
 100b024:	00bfffc4 	movi	r2,-1
 100b028:	d8c00615 	stw	r3,24(sp)
 100b02c:	d8c00315 	stw	r3,12(sp)
 100b030:	da400515 	stw	r9,20(sp)
 100b034:	d880048d 	sth	r2,18(sp)
 100b038:	da400115 	stw	r9,4(sp)
 100b03c:	1003c7c0 	call	1003c7c <___vfprintf_internal_r>
 100b040:	d8c00117 	ldw	r3,4(sp)
 100b044:	18000005 	stb	zero,0(r3)
 100b048:	dfc01817 	ldw	ra,96(sp)
 100b04c:	dec01b04 	addi	sp,sp,108
 100b050:	f800283a 	ret

0100b054 <_sprintf_r>:
 100b054:	deffe604 	addi	sp,sp,-104
 100b058:	2813883a 	mov	r9,r5
 100b05c:	dfc01815 	stw	ra,96(sp)
 100b060:	d9c01915 	stw	r7,100(sp)
 100b064:	d8801904 	addi	r2,sp,100
 100b068:	d8800015 	stw	r2,0(sp)
 100b06c:	100f883a 	mov	r7,r2
 100b070:	00808204 	movi	r2,520
 100b074:	00e00034 	movhi	r3,32768
 100b078:	18ffffc4 	addi	r3,r3,-1
 100b07c:	d880040d 	sth	r2,16(sp)
 100b080:	d9400104 	addi	r5,sp,4
 100b084:	00bfffc4 	movi	r2,-1
 100b088:	d8c00615 	stw	r3,24(sp)
 100b08c:	d8c00315 	stw	r3,12(sp)
 100b090:	da400515 	stw	r9,20(sp)
 100b094:	d880048d 	sth	r2,18(sp)
 100b098:	da400115 	stw	r9,4(sp)
 100b09c:	1003c7c0 	call	1003c7c <___vfprintf_internal_r>
 100b0a0:	d8c00117 	ldw	r3,4(sp)
 100b0a4:	18000005 	stb	zero,0(r3)
 100b0a8:	dfc01817 	ldw	ra,96(sp)
 100b0ac:	dec01a04 	addi	sp,sp,104
 100b0b0:	f800283a 	ret

0100b0b4 <strcmp>:
 100b0b4:	2144b03a 	or	r2,r4,r5
 100b0b8:	108000cc 	andi	r2,r2,3
 100b0bc:	10001d1e 	bne	r2,zero,100b134 <strcmp+0x80>
 100b0c0:	200f883a 	mov	r7,r4
 100b0c4:	28800017 	ldw	r2,0(r5)
 100b0c8:	21000017 	ldw	r4,0(r4)
 100b0cc:	280d883a 	mov	r6,r5
 100b0d0:	2080161e 	bne	r4,r2,100b12c <strcmp+0x78>
 100b0d4:	023fbff4 	movhi	r8,65279
 100b0d8:	423fbfc4 	addi	r8,r8,-257
 100b0dc:	2207883a 	add	r3,r4,r8
 100b0e0:	01602074 	movhi	r5,32897
 100b0e4:	29602004 	addi	r5,r5,-32640
 100b0e8:	1946703a 	and	r3,r3,r5
 100b0ec:	0104303a 	nor	r2,zero,r4
 100b0f0:	10c4703a 	and	r2,r2,r3
 100b0f4:	10001c1e 	bne	r2,zero,100b168 <strcmp+0xb4>
 100b0f8:	4013883a 	mov	r9,r8
 100b0fc:	2811883a 	mov	r8,r5
 100b100:	00000106 	br	100b108 <strcmp+0x54>
 100b104:	1800181e 	bne	r3,zero,100b168 <strcmp+0xb4>
 100b108:	39c00104 	addi	r7,r7,4
 100b10c:	39000017 	ldw	r4,0(r7)
 100b110:	31800104 	addi	r6,r6,4
 100b114:	31400017 	ldw	r5,0(r6)
 100b118:	2245883a 	add	r2,r4,r9
 100b11c:	1204703a 	and	r2,r2,r8
 100b120:	0106303a 	nor	r3,zero,r4
 100b124:	1886703a 	and	r3,r3,r2
 100b128:	217ff626 	beq	r4,r5,100b104 <strcmp+0x50>
 100b12c:	3809883a 	mov	r4,r7
 100b130:	300b883a 	mov	r5,r6
 100b134:	20c00007 	ldb	r3,0(r4)
 100b138:	1800051e 	bne	r3,zero,100b150 <strcmp+0x9c>
 100b13c:	00000606 	br	100b158 <strcmp+0xa4>
 100b140:	21000044 	addi	r4,r4,1
 100b144:	20c00007 	ldb	r3,0(r4)
 100b148:	29400044 	addi	r5,r5,1
 100b14c:	18000226 	beq	r3,zero,100b158 <strcmp+0xa4>
 100b150:	28800007 	ldb	r2,0(r5)
 100b154:	18bffa26 	beq	r3,r2,100b140 <strcmp+0x8c>
 100b158:	20c00003 	ldbu	r3,0(r4)
 100b15c:	28800003 	ldbu	r2,0(r5)
 100b160:	1885c83a 	sub	r2,r3,r2
 100b164:	f800283a 	ret
 100b168:	0005883a 	mov	r2,zero
 100b16c:	f800283a 	ret

0100b170 <match>:
 100b170:	21800017 	ldw	r6,0(r4)
 100b174:	01c01004 	movi	r7,64
 100b178:	02001684 	movi	r8,90
 100b17c:	28800007 	ldb	r2,0(r5)
 100b180:	29400044 	addi	r5,r5,1
 100b184:	10000826 	beq	r2,zero,100b1a8 <match+0x38>
 100b188:	31800044 	addi	r6,r6,1
 100b18c:	30c00007 	ldb	r3,0(r6)
 100b190:	38c0020e 	bge	r7,r3,100b19c <match+0x2c>
 100b194:	40c00116 	blt	r8,r3,100b19c <match+0x2c>
 100b198:	18c00804 	addi	r3,r3,32
 100b19c:	18bff726 	beq	r3,r2,100b17c <match+0xc>
 100b1a0:	0005883a 	mov	r2,zero
 100b1a4:	f800283a 	ret
 100b1a8:	30800044 	addi	r2,r6,1
 100b1ac:	20800015 	stw	r2,0(r4)
 100b1b0:	00800044 	movi	r2,1
 100b1b4:	f800283a 	ret

0100b1b8 <_strtod_r>:
 100b1b8:	deffd504 	addi	sp,sp,-172
 100b1bc:	df002915 	stw	fp,164(sp)
 100b1c0:	dd402615 	stw	r21,152(sp)
 100b1c4:	dd002515 	stw	r20,148(sp)
 100b1c8:	dfc02a15 	stw	ra,168(sp)
 100b1cc:	ddc02815 	stw	r23,160(sp)
 100b1d0:	dd802715 	stw	r22,156(sp)
 100b1d4:	dcc02415 	stw	r19,144(sp)
 100b1d8:	dc802315 	stw	r18,140(sp)
 100b1dc:	dc402215 	stw	r17,136(sp)
 100b1e0:	dc002115 	stw	r16,132(sp)
 100b1e4:	2829883a 	mov	r20,r5
 100b1e8:	202b883a 	mov	r21,r4
 100b1ec:	d9801d15 	stw	r6,116(sp)
 100b1f0:	d8000915 	stw	zero,36(sp)
 100b1f4:	d8000a15 	stw	zero,40(sp)
 100b1f8:	d9400415 	stw	r5,16(sp)
 100b1fc:	df000904 	addi	fp,sp,36
 100b200:	dc000417 	ldw	r16,16(sp)
 100b204:	00800b44 	movi	r2,45
 100b208:	80c00003 	ldbu	r3,0(r16)
 100b20c:	10c03536 	bltu	r2,r3,100b2e4 <_strtod_r+0x12c>
 100b210:	18c5883a 	add	r2,r3,r3
 100b214:	1085883a 	add	r2,r2,r2
 100b218:	00c04074 	movhi	r3,257
 100b21c:	18ec8b04 	addi	r3,r3,-19924
 100b220:	10c5883a 	add	r2,r2,r3
 100b224:	11000017 	ldw	r4,0(r2)
 100b228:	2000683a 	jmp	r4
 100b22c:	0100b464 	muli	r4,zero,721
 100b230:	0100b2e4 	muli	r4,zero,715
 100b234:	0100b2e4 	muli	r4,zero,715
 100b238:	0100b2e4 	muli	r4,zero,715
 100b23c:	0100b2e4 	muli	r4,zero,715
 100b240:	0100b2e4 	muli	r4,zero,715
 100b244:	0100b2e4 	muli	r4,zero,715
 100b248:	0100b2e4 	muli	r4,zero,715
 100b24c:	0100b2e4 	muli	r4,zero,715
 100b250:	0100b7ac 	andhi	r4,zero,734
 100b254:	0100b7ac 	andhi	r4,zero,734
 100b258:	0100b7ac 	andhi	r4,zero,734
 100b25c:	0100b7ac 	andhi	r4,zero,734
 100b260:	0100b7ac 	andhi	r4,zero,734
 100b264:	0100b2e4 	muli	r4,zero,715
 100b268:	0100b2e4 	muli	r4,zero,715
 100b26c:	0100b2e4 	muli	r4,zero,715
 100b270:	0100b2e4 	muli	r4,zero,715
 100b274:	0100b2e4 	muli	r4,zero,715
 100b278:	0100b2e4 	muli	r4,zero,715
 100b27c:	0100b2e4 	muli	r4,zero,715
 100b280:	0100b2e4 	muli	r4,zero,715
 100b284:	0100b2e4 	muli	r4,zero,715
 100b288:	0100b2e4 	muli	r4,zero,715
 100b28c:	0100b2e4 	muli	r4,zero,715
 100b290:	0100b2e4 	muli	r4,zero,715
 100b294:	0100b2e4 	muli	r4,zero,715
 100b298:	0100b2e4 	muli	r4,zero,715
 100b29c:	0100b2e4 	muli	r4,zero,715
 100b2a0:	0100b2e4 	muli	r4,zero,715
 100b2a4:	0100b2e4 	muli	r4,zero,715
 100b2a8:	0100b2e4 	muli	r4,zero,715
 100b2ac:	0100b7ac 	andhi	r4,zero,734
 100b2b0:	0100b2e4 	muli	r4,zero,715
 100b2b4:	0100b2e4 	muli	r4,zero,715
 100b2b8:	0100b2e4 	muli	r4,zero,715
 100b2bc:	0100b2e4 	muli	r4,zero,715
 100b2c0:	0100b2e4 	muli	r4,zero,715
 100b2c4:	0100b2e4 	muli	r4,zero,715
 100b2c8:	0100b2e4 	muli	r4,zero,715
 100b2cc:	0100b2e4 	muli	r4,zero,715
 100b2d0:	0100b2e4 	muli	r4,zero,715
 100b2d4:	0100b2e4 	muli	r4,zero,715
 100b2d8:	0100b78c 	andi	r4,zero,734
 100b2dc:	0100b2e4 	muli	r4,zero,715
 100b2e0:	0100b7b8 	rdprs	r4,zero,734
 100b2e4:	d8001515 	stw	zero,84(sp)
 100b2e8:	80c00007 	ldb	r3,0(r16)
 100b2ec:	00800c04 	movi	r2,48
 100b2f0:	1880e926 	beq	r3,r2,100b698 <_strtod_r+0x4e0>
 100b2f4:	d8001615 	stw	zero,88(sp)
 100b2f8:	dc001415 	stw	r16,80(sp)
 100b2fc:	84400007 	ldb	r17,0(r16)
 100b300:	00800bc4 	movi	r2,47
 100b304:	1443760e 	bge	r2,r17,100c0e0 <_strtod_r+0xf28>
 100b308:	00800e44 	movi	r2,57
 100b30c:	14437416 	blt	r2,r17,100c0e0 <_strtod_r+0xf28>
 100b310:	8025883a 	mov	r18,r16
 100b314:	0027883a 	mov	r19,zero
 100b318:	d8001215 	stw	zero,72(sp)
 100b31c:	d8001115 	stw	zero,68(sp)
 100b320:	00000f06 	br	100b360 <_strtod_r+0x1a8>
 100b324:	d9001217 	ldw	r4,72(sp)
 100b328:	01400284 	movi	r5,10
 100b32c:	10010a40 	call	10010a4 <__mulsi3>
 100b330:	1445883a 	add	r2,r2,r17
 100b334:	10bff404 	addi	r2,r2,-48
 100b338:	d8801215 	stw	r2,72(sp)
 100b33c:	94000044 	addi	r16,r18,1
 100b340:	dc000415 	stw	r16,16(sp)
 100b344:	84400007 	ldb	r17,0(r16)
 100b348:	00800bc4 	movi	r2,47
 100b34c:	9cc00044 	addi	r19,r19,1
 100b350:	8025883a 	mov	r18,r16
 100b354:	1440130e 	bge	r2,r17,100b3a4 <_strtod_r+0x1ec>
 100b358:	00800e44 	movi	r2,57
 100b35c:	14401116 	blt	r2,r17,100b3a4 <_strtod_r+0x1ec>
 100b360:	00800204 	movi	r2,8
 100b364:	14ffef0e 	bge	r2,r19,100b324 <_strtod_r+0x16c>
 100b368:	008003c4 	movi	r2,15
 100b36c:	14fff316 	blt	r2,r19,100b33c <_strtod_r+0x184>
 100b370:	d9001117 	ldw	r4,68(sp)
 100b374:	01400284 	movi	r5,10
 100b378:	94000044 	addi	r16,r18,1
 100b37c:	10010a40 	call	10010a4 <__mulsi3>
 100b380:	1445883a 	add	r2,r2,r17
 100b384:	10bff404 	addi	r2,r2,-48
 100b388:	d8801115 	stw	r2,68(sp)
 100b38c:	dc000415 	stw	r16,16(sp)
 100b390:	84400007 	ldb	r17,0(r16)
 100b394:	00800bc4 	movi	r2,47
 100b398:	9cc00044 	addi	r19,r19,1
 100b39c:	8025883a 	mov	r18,r16
 100b3a0:	147fed16 	blt	r2,r17,100b358 <_strtod_r+0x1a0>
 100b3a4:	00800b84 	movi	r2,46
 100b3a8:	8880c926 	beq	r17,r2,100b6d0 <_strtod_r+0x518>
 100b3ac:	dcc01815 	stw	r19,96(sp)
 100b3b0:	d8001b15 	stw	zero,108(sp)
 100b3b4:	d8001715 	stw	zero,92(sp)
 100b3b8:	000d883a 	mov	r6,zero
 100b3bc:	00801944 	movi	r2,101
 100b3c0:	88802126 	beq	r17,r2,100b448 <_strtod_r+0x290>
 100b3c4:	00801144 	movi	r2,69
 100b3c8:	88801f26 	beq	r17,r2,100b448 <_strtod_r+0x290>
 100b3cc:	d9001817 	ldw	r4,96(sp)
 100b3d0:	2024c03a 	cmpne	r18,r4,zero
 100b3d4:	0009883a 	mov	r4,zero
 100b3d8:	9000651e 	bne	r18,zero,100b570 <_strtod_r+0x3b8>
 100b3dc:	3000c926 	beq	r6,zero,100b704 <_strtod_r+0x54c>
 100b3e0:	d8801d17 	ldw	r2,116(sp)
 100b3e4:	10000326 	beq	r2,zero,100b3f4 <_strtod_r+0x23c>
 100b3e8:	d8800417 	ldw	r2,16(sp)
 100b3ec:	d8c01d17 	ldw	r3,116(sp)
 100b3f0:	18800015 	stw	r2,0(r3)
 100b3f4:	d9001517 	ldw	r4,84(sp)
 100b3f8:	2005003a 	cmpeq	r2,r4,zero
 100b3fc:	10001c1e 	bne	r2,zero,100b470 <_strtod_r+0x2b8>
 100b400:	e0800017 	ldw	r2,0(fp)
 100b404:	e0c00117 	ldw	r3,4(fp)
 100b408:	1009883a 	mov	r4,r2
 100b40c:	1960003c 	xorhi	r5,r3,32768
 100b410:	2005883a 	mov	r2,r4
 100b414:	2807883a 	mov	r3,r5
 100b418:	dfc02a17 	ldw	ra,168(sp)
 100b41c:	df002917 	ldw	fp,164(sp)
 100b420:	ddc02817 	ldw	r23,160(sp)
 100b424:	dd802717 	ldw	r22,156(sp)
 100b428:	dd402617 	ldw	r21,152(sp)
 100b42c:	dd002517 	ldw	r20,148(sp)
 100b430:	dcc02417 	ldw	r19,144(sp)
 100b434:	dc802317 	ldw	r18,140(sp)
 100b438:	dc402217 	ldw	r17,136(sp)
 100b43c:	dc002117 	ldw	r16,132(sp)
 100b440:	dec02b04 	addi	sp,sp,172
 100b444:	f800283a 	ret
 100b448:	d8801817 	ldw	r2,96(sp)
 100b44c:	1024c03a 	cmpne	r18,r2,zero
 100b450:	90000a1e 	bne	r18,zero,100b47c <_strtod_r+0x2c4>
 100b454:	3000091e 	bne	r6,zero,100b47c <_strtod_r+0x2c4>
 100b458:	d8c01617 	ldw	r3,88(sp)
 100b45c:	1805003a 	cmpeq	r2,r3,zero
 100b460:	10000626 	beq	r2,zero,100b47c <_strtod_r+0x2c4>
 100b464:	d8001515 	stw	zero,84(sp)
 100b468:	dd000415 	stw	r20,16(sp)
 100b46c:	003fdc06 	br	100b3e0 <_strtod_r+0x228>
 100b470:	e1000017 	ldw	r4,0(fp)
 100b474:	e1400117 	ldw	r5,4(fp)
 100b478:	003fe506 	br	100b410 <_strtod_r+0x258>
 100b47c:	dd000417 	ldw	r20,16(sp)
 100b480:	00800ac4 	movi	r2,43
 100b484:	a4000044 	addi	r16,r20,1
 100b488:	dc000415 	stw	r16,16(sp)
 100b48c:	a0c00047 	ldb	r3,1(r20)
 100b490:	8009883a 	mov	r4,r16
 100b494:	1880cb26 	beq	r3,r2,100b7c4 <_strtod_r+0x60c>
 100b498:	00800b44 	movi	r2,45
 100b49c:	18838326 	beq	r3,r2,100c2ac <_strtod_r+0x10f4>
 100b4a0:	1823883a 	mov	r17,r3
 100b4a4:	88fff404 	addi	r3,r17,-48
 100b4a8:	00800244 	movi	r2,9
 100b4ac:	d8001915 	stw	zero,100(sp)
 100b4b0:	10c0cb36 	bltu	r2,r3,100b7e0 <_strtod_r+0x628>
 100b4b4:	00800c04 	movi	r2,48
 100b4b8:	8880061e 	bne	r17,r2,100b4d4 <_strtod_r+0x31c>
 100b4bc:	dc000417 	ldw	r16,16(sp)
 100b4c0:	8805883a 	mov	r2,r17
 100b4c4:	84000044 	addi	r16,r16,1
 100b4c8:	dc000415 	stw	r16,16(sp)
 100b4cc:	84400007 	ldb	r17,0(r16)
 100b4d0:	88bffc26 	beq	r17,r2,100b4c4 <_strtod_r+0x30c>
 100b4d4:	88fff3c4 	addi	r3,r17,-49
 100b4d8:	00800204 	movi	r2,8
 100b4dc:	10ffbd36 	bltu	r2,r3,100b3d4 <_strtod_r+0x21c>
 100b4e0:	dc000417 	ldw	r16,16(sp)
 100b4e4:	893ff404 	addi	r4,r17,-48
 100b4e8:	00c00bc4 	movi	r3,47
 100b4ec:	dc001315 	stw	r16,76(sp)
 100b4f0:	84000044 	addi	r16,r16,1
 100b4f4:	dc000415 	stw	r16,16(sp)
 100b4f8:	84400007 	ldb	r17,0(r16)
 100b4fc:	1c40100e 	bge	r3,r17,100b540 <_strtod_r+0x388>
 100b500:	00800e44 	movi	r2,57
 100b504:	14400e16 	blt	r2,r17,100b540 <_strtod_r+0x388>
 100b508:	182f883a 	mov	r23,r3
 100b50c:	102d883a 	mov	r22,r2
 100b510:	00000106 	br	100b518 <_strtod_r+0x360>
 100b514:	b4400a16 	blt	r22,r17,100b540 <_strtod_r+0x388>
 100b518:	84000044 	addi	r16,r16,1
 100b51c:	01400284 	movi	r5,10
 100b520:	d9802015 	stw	r6,128(sp)
 100b524:	10010a40 	call	10010a4 <__mulsi3>
 100b528:	dc000415 	stw	r16,16(sp)
 100b52c:	8885883a 	add	r2,r17,r2
 100b530:	84400007 	ldb	r17,0(r16)
 100b534:	113ff404 	addi	r4,r2,-48
 100b538:	d9802017 	ldw	r6,128(sp)
 100b53c:	bc7ff516 	blt	r23,r17,100b514 <_strtod_r+0x35c>
 100b540:	d8801317 	ldw	r2,76(sp)
 100b544:	8087c83a 	sub	r3,r16,r2
 100b548:	00800204 	movi	r2,8
 100b54c:	10c2ff16 	blt	r2,r3,100c14c <_strtod_r+0xf94>
 100b550:	009387c4 	movi	r2,19999
 100b554:	1100010e 	bge	r2,r4,100b55c <_strtod_r+0x3a4>
 100b558:	1009883a 	mov	r4,r2
 100b55c:	d8c01917 	ldw	r3,100(sp)
 100b560:	1805003a 	cmpeq	r2,r3,zero
 100b564:	103f9c1e 	bne	r2,zero,100b3d8 <_strtod_r+0x220>
 100b568:	0109c83a 	sub	r4,zero,r4
 100b56c:	903f9b26 	beq	r18,zero,100b3dc <_strtod_r+0x224>
 100b570:	d8801717 	ldw	r2,92(sp)
 100b574:	2089c83a 	sub	r4,r4,r2
 100b578:	d9000f15 	stw	r4,60(sp)
 100b57c:	9800811e 	bne	r19,zero,100b784 <_strtod_r+0x5cc>
 100b580:	dd001817 	ldw	r20,96(sp)
 100b584:	dc801817 	ldw	r18,96(sp)
 100b588:	00800404 	movi	r2,16
 100b58c:	1480010e 	bge	r2,r18,100b594 <_strtod_r+0x3dc>
 100b590:	1025883a 	mov	r18,r2
 100b594:	d9001217 	ldw	r4,72(sp)
 100b598:	10102940 	call	1010294 <__floatunsidf>
 100b59c:	100f883a 	mov	r7,r2
 100b5a0:	e0800015 	stw	r2,0(fp)
 100b5a4:	00800244 	movi	r2,9
 100b5a8:	e0c00115 	stw	r3,4(fp)
 100b5ac:	1480160e 	bge	r2,r18,100b608 <_strtod_r+0x450>
 100b5b0:	900c90fa 	slli	r6,r18,3
 100b5b4:	01004074 	movhi	r4,257
 100b5b8:	210e1604 	addi	r4,r4,14424
 100b5bc:	180b883a 	mov	r5,r3
 100b5c0:	310d883a 	add	r6,r6,r4
 100b5c4:	30ffef17 	ldw	r3,-68(r6)
 100b5c8:	30bfee17 	ldw	r2,-72(r6)
 100b5cc:	3809883a 	mov	r4,r7
 100b5d0:	180f883a 	mov	r7,r3
 100b5d4:	100d883a 	mov	r6,r2
 100b5d8:	100f7040 	call	100f704 <__muldf3>
 100b5dc:	d9001117 	ldw	r4,68(sp)
 100b5e0:	1021883a 	mov	r16,r2
 100b5e4:	1823883a 	mov	r17,r3
 100b5e8:	10102940 	call	1010294 <__floatunsidf>
 100b5ec:	880b883a 	mov	r5,r17
 100b5f0:	180f883a 	mov	r7,r3
 100b5f4:	8009883a 	mov	r4,r16
 100b5f8:	100d883a 	mov	r6,r2
 100b5fc:	100f6900 	call	100f690 <__adddf3>
 100b600:	e0c00115 	stw	r3,4(fp)
 100b604:	e0800015 	stw	r2,0(fp)
 100b608:	d8c01817 	ldw	r3,96(sp)
 100b60c:	010003c4 	movi	r4,15
 100b610:	20c09e16 	blt	r4,r3,100b88c <_strtod_r+0x6d4>
 100b614:	d8800f17 	ldw	r2,60(sp)
 100b618:	103f7126 	beq	r2,zero,100b3e0 <_strtod_r+0x228>
 100b61c:	0083d90e 	bge	zero,r2,100c584 <_strtod_r+0x13cc>
 100b620:	d8c00f17 	ldw	r3,60(sp)
 100b624:	00800584 	movi	r2,22
 100b628:	10c2ca0e 	bge	r2,r3,100c154 <_strtod_r+0xf9c>
 100b62c:	d8801817 	ldw	r2,96(sp)
 100b630:	d8c00f17 	ldw	r3,60(sp)
 100b634:	20a3c83a 	sub	r17,r4,r2
 100b638:	88800584 	addi	r2,r17,22
 100b63c:	10c09316 	blt	r2,r3,100b88c <_strtod_r+0x6d4>
 100b640:	880890fa 	slli	r4,r17,3
 100b644:	04004074 	movhi	r16,257
 100b648:	840e1604 	addi	r16,r16,14424
 100b64c:	e0800017 	ldw	r2,0(fp)
 100b650:	2409883a 	add	r4,r4,r16
 100b654:	22000017 	ldw	r8,0(r4)
 100b658:	22400117 	ldw	r9,4(r4)
 100b65c:	e0c00117 	ldw	r3,4(fp)
 100b660:	1009883a 	mov	r4,r2
 100b664:	480f883a 	mov	r7,r9
 100b668:	180b883a 	mov	r5,r3
 100b66c:	400d883a 	mov	r6,r8
 100b670:	100f7040 	call	100f704 <__muldf3>
 100b674:	d9000f17 	ldw	r4,60(sp)
 100b678:	180b883a 	mov	r5,r3
 100b67c:	2455c83a 	sub	r10,r4,r17
 100b680:	501490fa 	slli	r10,r10,3
 100b684:	1009883a 	mov	r4,r2
 100b688:	5415883a 	add	r10,r10,r16
 100b68c:	52000017 	ldw	r8,0(r10)
 100b690:	52400117 	ldw	r9,4(r10)
 100b694:	0002b906 	br	100c17c <_strtod_r+0xfc4>
 100b698:	80c00047 	ldb	r3,1(r16)
 100b69c:	00801604 	movi	r2,88
 100b6a0:	18805226 	beq	r3,r2,100b7ec <_strtod_r+0x634>
 100b6a4:	00801e04 	movi	r2,120
 100b6a8:	18805026 	beq	r3,r2,100b7ec <_strtod_r+0x634>
 100b6ac:	84000044 	addi	r16,r16,1
 100b6b0:	dc000415 	stw	r16,16(sp)
 100b6b4:	80c00007 	ldb	r3,0(r16)
 100b6b8:	00800c04 	movi	r2,48
 100b6bc:	18bffb26 	beq	r3,r2,100b6ac <_strtod_r+0x4f4>
 100b6c0:	183f4726 	beq	r3,zero,100b3e0 <_strtod_r+0x228>
 100b6c4:	01000044 	movi	r4,1
 100b6c8:	d9001615 	stw	r4,88(sp)
 100b6cc:	003f0a06 	br	100b2f8 <_strtod_r+0x140>
 100b6d0:	84000044 	addi	r16,r16,1
 100b6d4:	dc000415 	stw	r16,16(sp)
 100b6d8:	94400047 	ldb	r17,1(r18)
 100b6dc:	9800ba26 	beq	r19,zero,100b9c8 <_strtod_r+0x810>
 100b6e0:	dcc01815 	stw	r19,96(sp)
 100b6e4:	d8001715 	stw	zero,92(sp)
 100b6e8:	000d883a 	mov	r6,zero
 100b6ec:	8dbff404 	addi	r22,r17,-48
 100b6f0:	00800244 	movi	r2,9
 100b6f4:	15826e2e 	bgeu	r2,r22,100c0b0 <_strtod_r+0xef8>
 100b6f8:	01000044 	movi	r4,1
 100b6fc:	d9001b15 	stw	r4,108(sp)
 100b700:	003f2e06 	br	100b3bc <_strtod_r+0x204>
 100b704:	d8c01617 	ldw	r3,88(sp)
 100b708:	1804c03a 	cmpne	r2,r3,zero
 100b70c:	103f341e 	bne	r2,zero,100b3e0 <_strtod_r+0x228>
 100b710:	d9001b17 	ldw	r4,108(sp)
 100b714:	2004c03a 	cmpne	r2,r4,zero
 100b718:	103f521e 	bne	r2,zero,100b464 <_strtod_r+0x2ac>
 100b71c:	00801384 	movi	r2,78
 100b720:	8883b526 	beq	r17,r2,100c5f8 <_strtod_r+0x1440>
 100b724:	1443b016 	blt	r2,r17,100c5e8 <_strtod_r+0x1430>
 100b728:	00801244 	movi	r2,73
 100b72c:	88bf4d1e 	bne	r17,r2,100b464 <_strtod_r+0x2ac>
 100b730:	dc000404 	addi	r16,sp,16
 100b734:	8009883a 	mov	r4,r16
 100b738:	01404074 	movhi	r5,257
 100b73c:	294e5f04 	addi	r5,r5,14716
 100b740:	100b1700 	call	100b170 <match>
 100b744:	103f4726 	beq	r2,zero,100b464 <_strtod_r+0x2ac>
 100b748:	d8800417 	ldw	r2,16(sp)
 100b74c:	8009883a 	mov	r4,r16
 100b750:	01404074 	movhi	r5,257
 100b754:	294e6004 	addi	r5,r5,14720
 100b758:	143fffc4 	addi	r16,r2,-1
 100b75c:	dc000415 	stw	r16,16(sp)
 100b760:	100b1700 	call	100b170 <match>
 100b764:	1000031e 	bne	r2,zero,100b774 <_strtod_r+0x5bc>
 100b768:	d8800417 	ldw	r2,16(sp)
 100b76c:	14000044 	addi	r16,r2,1
 100b770:	dc000415 	stw	r16,16(sp)
 100b774:	019ffc34 	movhi	r6,32752
 100b778:	e1800115 	stw	r6,4(fp)
 100b77c:	e0000015 	stw	zero,0(fp)
 100b780:	003f1706 	br	100b3e0 <_strtod_r+0x228>
 100b784:	9829883a 	mov	r20,r19
 100b788:	003f7e06 	br	100b584 <_strtod_r+0x3cc>
 100b78c:	d8001515 	stw	zero,84(sp)
 100b790:	84000044 	addi	r16,r16,1
 100b794:	dc000415 	stw	r16,16(sp)
 100b798:	80800007 	ldb	r2,0(r16)
 100b79c:	103ed21e 	bne	r2,zero,100b2e8 <_strtod_r+0x130>
 100b7a0:	d8001515 	stw	zero,84(sp)
 100b7a4:	dd000415 	stw	r20,16(sp)
 100b7a8:	003f0d06 	br	100b3e0 <_strtod_r+0x228>
 100b7ac:	84000044 	addi	r16,r16,1
 100b7b0:	dc000415 	stw	r16,16(sp)
 100b7b4:	003e9206 	br	100b200 <_strtod_r+0x48>
 100b7b8:	00800044 	movi	r2,1
 100b7bc:	d8801515 	stw	r2,84(sp)
 100b7c0:	003ff306 	br	100b790 <_strtod_r+0x5d8>
 100b7c4:	d8001915 	stw	zero,100(sp)
 100b7c8:	84000044 	addi	r16,r16,1
 100b7cc:	dc000415 	stw	r16,16(sp)
 100b7d0:	24400047 	ldb	r17,1(r4)
 100b7d4:	00800244 	movi	r2,9
 100b7d8:	88fff404 	addi	r3,r17,-48
 100b7dc:	10ff352e 	bgeu	r2,r3,100b4b4 <_strtod_r+0x2fc>
 100b7e0:	0009883a 	mov	r4,zero
 100b7e4:	dd000415 	stw	r20,16(sp)
 100b7e8:	003efb06 	br	100b3d8 <_strtod_r+0x220>
 100b7ec:	d8c01517 	ldw	r3,84(sp)
 100b7f0:	04404074 	movhi	r17,257
 100b7f4:	8c50d104 	addi	r17,r17,17220
 100b7f8:	d8800504 	addi	r2,sp,20
 100b7fc:	a809883a 	mov	r4,r21
 100b800:	d9400404 	addi	r5,sp,16
 100b804:	880d883a 	mov	r6,r17
 100b808:	d9c00604 	addi	r7,sp,24
 100b80c:	d8800015 	stw	r2,0(sp)
 100b810:	d8c00115 	stw	r3,4(sp)
 100b814:	100d7740 	call	100d774 <__gethex>
 100b818:	140001cc 	andi	r16,r2,7
 100b81c:	1025883a 	mov	r18,r2
 100b820:	803eef26 	beq	r16,zero,100b3e0 <_strtod_r+0x228>
 100b824:	04c00184 	movi	r19,6
 100b828:	84ff0e26 	beq	r16,r19,100b464 <_strtod_r+0x2ac>
 100b82c:	d9800517 	ldw	r6,20(sp)
 100b830:	30000626 	beq	r6,zero,100b84c <_strtod_r+0x694>
 100b834:	89400017 	ldw	r5,0(r17)
 100b838:	d9000d04 	addi	r4,sp,52
 100b83c:	1009c500 	call	1009c50 <__copybits>
 100b840:	d9400517 	ldw	r5,20(sp)
 100b844:	a809883a 	mov	r4,r21
 100b848:	10097b00 	call	10097b0 <_Bfree>
 100b84c:	d9400617 	ldw	r5,24(sp)
 100b850:	9c025436 	bltu	r19,r16,100c1a4 <_strtod_r+0xfec>
 100b854:	8405883a 	add	r2,r16,r16
 100b858:	1085883a 	add	r2,r2,r2
 100b85c:	00c04074 	movhi	r3,257
 100b860:	18ee1c04 	addi	r3,r3,-18320
 100b864:	10c5883a 	add	r2,r2,r3
 100b868:	11000017 	ldw	r4,0(r2)
 100b86c:	2000683a 	jmp	r4
 100b870:	0100c1e4 	muli	r4,zero,775
 100b874:	0100c1f0 	cmpltui	r4,zero,775
 100b878:	0100c194 	movui	r4,774
 100b87c:	0100c1bc 	xorhi	r4,zero,774
 100b880:	0100c1cc 	andi	r4,zero,775
 100b884:	0100c1f0 	cmpltui	r4,zero,775
 100b888:	0100c1e4 	muli	r4,zero,775
 100b88c:	d9001817 	ldw	r4,96(sp)
 100b890:	d8c00f17 	ldw	r3,60(sp)
 100b894:	2485c83a 	sub	r2,r4,r18
 100b898:	18a1883a 	add	r16,r3,r2
 100b89c:	0402e80e 	bge	zero,r16,100c440 <_strtod_r+0x1288>
 100b8a0:	814003cc 	andi	r5,r16,15
 100b8a4:	28000f26 	beq	r5,zero,100b8e4 <_strtod_r+0x72c>
 100b8a8:	280a90fa 	slli	r5,r5,3
 100b8ac:	01004074 	movhi	r4,257
 100b8b0:	210e1604 	addi	r4,r4,14424
 100b8b4:	e0800017 	ldw	r2,0(fp)
 100b8b8:	290b883a 	add	r5,r5,r4
 100b8bc:	2a000017 	ldw	r8,0(r5)
 100b8c0:	e0c00117 	ldw	r3,4(fp)
 100b8c4:	2a400117 	ldw	r9,4(r5)
 100b8c8:	1009883a 	mov	r4,r2
 100b8cc:	180b883a 	mov	r5,r3
 100b8d0:	480f883a 	mov	r7,r9
 100b8d4:	400d883a 	mov	r6,r8
 100b8d8:	100f7040 	call	100f704 <__muldf3>
 100b8dc:	e0c00115 	stw	r3,4(fp)
 100b8e0:	e0800015 	stw	r2,0(fp)
 100b8e4:	00bffc04 	movi	r2,-16
 100b8e8:	808c703a 	and	r6,r16,r2
 100b8ec:	30006726 	beq	r6,zero,100ba8c <_strtod_r+0x8d4>
 100b8f0:	00804d04 	movi	r2,308
 100b8f4:	11820f16 	blt	r2,r6,100c134 <_strtod_r+0xf7c>
 100b8f8:	3021d13a 	srai	r16,r6,4
 100b8fc:	00800044 	movi	r2,1
 100b900:	14037f0e 	bge	r2,r16,100c700 <_strtod_r+0x1548>
 100b904:	05804074 	movhi	r22,257
 100b908:	b58e4804 	addi	r22,r22,14624
 100b90c:	1027883a 	mov	r19,r2
 100b910:	0025883a 	mov	r18,zero
 100b914:	b023883a 	mov	r17,r22
 100b918:	8080004c 	andi	r2,r16,1
 100b91c:	1005003a 	cmpeq	r2,r2,zero
 100b920:	1000091e 	bne	r2,zero,100b948 <_strtod_r+0x790>
 100b924:	e0800017 	ldw	r2,0(fp)
 100b928:	e0c00117 	ldw	r3,4(fp)
 100b92c:	89800017 	ldw	r6,0(r17)
 100b930:	89c00117 	ldw	r7,4(r17)
 100b934:	180b883a 	mov	r5,r3
 100b938:	1009883a 	mov	r4,r2
 100b93c:	100f7040 	call	100f704 <__muldf3>
 100b940:	e0c00115 	stw	r3,4(fp)
 100b944:	e0800015 	stw	r2,0(fp)
 100b948:	8021d07a 	srai	r16,r16,1
 100b94c:	94800044 	addi	r18,r18,1
 100b950:	8c400204 	addi	r17,r17,8
 100b954:	9c3ff016 	blt	r19,r16,100b918 <_strtod_r+0x760>
 100b958:	900e90fa 	slli	r7,r18,3
 100b95c:	e2000117 	ldw	r8,4(fp)
 100b960:	e1000017 	ldw	r4,0(fp)
 100b964:	3d8f883a 	add	r7,r7,r22
 100b968:	38800017 	ldw	r2,0(r7)
 100b96c:	38c00117 	ldw	r3,4(r7)
 100b970:	01bf2c34 	movhi	r6,64688
 100b974:	418d883a 	add	r6,r8,r6
 100b978:	300b883a 	mov	r5,r6
 100b97c:	180f883a 	mov	r7,r3
 100b980:	100d883a 	mov	r6,r2
 100b984:	100f7040 	call	100f704 <__muldf3>
 100b988:	1009883a 	mov	r4,r2
 100b98c:	180b883a 	mov	r5,r3
 100b990:	199ffc2c 	andhi	r6,r3,32752
 100b994:	009f2834 	movhi	r2,31904
 100b998:	e1000015 	stw	r4,0(fp)
 100b99c:	e1400115 	stw	r5,4(fp)
 100b9a0:	1181e436 	bltu	r2,r6,100c134 <_strtod_r+0xf7c>
 100b9a4:	009f2434 	movhi	r2,31888
 100b9a8:	11833f2e 	bgeu	r2,r6,100c6a8 <_strtod_r+0x14f0>
 100b9ac:	d8001c15 	stw	zero,112(sp)
 100b9b0:	019ffc34 	movhi	r6,32752
 100b9b4:	31bfffc4 	addi	r6,r6,-1
 100b9b8:	01ffffc4 	movi	r7,-1
 100b9bc:	e1800115 	stw	r6,4(fp)
 100b9c0:	e1c00015 	stw	r7,0(fp)
 100b9c4:	00003206 	br	100ba90 <_strtod_r+0x8d8>
 100b9c8:	00800c04 	movi	r2,48
 100b9cc:	8883221e 	bne	r17,r2,100c658 <_strtod_r+0x14a0>
 100b9d0:	8805883a 	mov	r2,r17
 100b9d4:	000d883a 	mov	r6,zero
 100b9d8:	84000044 	addi	r16,r16,1
 100b9dc:	dc000415 	stw	r16,16(sp)
 100b9e0:	84400007 	ldb	r17,0(r16)
 100b9e4:	31800044 	addi	r6,r6,1
 100b9e8:	88bffb26 	beq	r17,r2,100b9d8 <_strtod_r+0x820>
 100b9ec:	88fff3c4 	addi	r3,r17,-49
 100b9f0:	00800204 	movi	r2,8
 100b9f4:	10c1ca36 	bltu	r2,r3,100c120 <_strtod_r+0xf68>
 100b9f8:	d8c00417 	ldw	r3,16(sp)
 100b9fc:	d9801715 	stw	r6,92(sp)
 100ba00:	8dbff404 	addi	r22,r17,-48
 100ba04:	d8c01415 	stw	r3,80(sp)
 100ba08:	1821883a 	mov	r16,r3
 100ba0c:	d8001815 	stw	zero,96(sp)
 100ba10:	01800044 	movi	r6,1
 100ba14:	b0023526 	beq	r22,zero,100c2ec <_strtod_r+0x1134>
 100ba18:	d9001717 	ldw	r4,92(sp)
 100ba1c:	00800044 	movi	r2,1
 100ba20:	2189883a 	add	r4,r4,r6
 100ba24:	d9001715 	stw	r4,92(sp)
 100ba28:	1183390e 	bge	r2,r6,100c710 <_strtod_r+0x1558>
 100ba2c:	dc401817 	ldw	r17,96(sp)
 100ba30:	1025883a 	mov	r18,r2
 100ba34:	05c00204 	movi	r23,8
 100ba38:	00000806 	br	100ba5c <_strtod_r+0x8a4>
 100ba3c:	d9001217 	ldw	r4,72(sp)
 100ba40:	01400284 	movi	r5,10
 100ba44:	d9802015 	stw	r6,128(sp)
 100ba48:	10010a40 	call	10010a4 <__mulsi3>
 100ba4c:	d9802017 	ldw	r6,128(sp)
 100ba50:	d8801215 	stw	r2,72(sp)
 100ba54:	94800044 	addi	r18,r18,1
 100ba58:	91821726 	beq	r18,r6,100c2b8 <_strtod_r+0x1100>
 100ba5c:	8c400044 	addi	r17,r17,1
 100ba60:	88bfffc4 	addi	r2,r17,-1
 100ba64:	b8bff50e 	bge	r23,r2,100ba3c <_strtod_r+0x884>
 100ba68:	00800404 	movi	r2,16
 100ba6c:	147ff916 	blt	r2,r17,100ba54 <_strtod_r+0x89c>
 100ba70:	d9001117 	ldw	r4,68(sp)
 100ba74:	01400284 	movi	r5,10
 100ba78:	d9802015 	stw	r6,128(sp)
 100ba7c:	10010a40 	call	10010a4 <__mulsi3>
 100ba80:	d9802017 	ldw	r6,128(sp)
 100ba84:	d8801115 	stw	r2,68(sp)
 100ba88:	003ff206 	br	100ba54 <_strtod_r+0x89c>
 100ba8c:	d8001c15 	stw	zero,112(sp)
 100ba90:	d8c01217 	ldw	r3,72(sp)
 100ba94:	d9401417 	ldw	r5,80(sp)
 100ba98:	d9c01817 	ldw	r7,96(sp)
 100ba9c:	a809883a 	mov	r4,r21
 100baa0:	a00d883a 	mov	r6,r20
 100baa4:	d8c00015 	stw	r3,0(sp)
 100baa8:	100a71c0 	call	100a71c <__s2b>
 100baac:	11000304 	addi	r4,r2,12
 100bab0:	d8801015 	stw	r2,64(sp)
 100bab4:	d8800f17 	ldw	r2,60(sp)
 100bab8:	d9001f15 	stw	r4,124(sp)
 100babc:	1004803a 	cmplt	r2,r2,zero
 100bac0:	d8801e15 	stw	r2,120(sp)
 100bac4:	d8c01017 	ldw	r3,64(sp)
 100bac8:	a809883a 	mov	r4,r21
 100bacc:	19400117 	ldw	r5,4(r3)
 100bad0:	1009d300 	call	1009d30 <_Balloc>
 100bad4:	d9001017 	ldw	r4,64(sp)
 100bad8:	d9401f17 	ldw	r5,124(sp)
 100badc:	102f883a 	mov	r23,r2
 100bae0:	21800417 	ldw	r6,16(r4)
 100bae4:	11000304 	addi	r4,r2,12
 100bae8:	318d883a 	add	r6,r6,r6
 100baec:	318d883a 	add	r6,r6,r6
 100baf0:	31800204 	addi	r6,r6,8
 100baf4:	10033340 	call	1003334 <memcpy>
 100baf8:	e2000017 	ldw	r8,0(fp)
 100bafc:	e2400117 	ldw	r9,4(fp)
 100bb00:	a809883a 	mov	r4,r21
 100bb04:	400b883a 	mov	r5,r8
 100bb08:	d9c00204 	addi	r7,sp,8
 100bb0c:	d8800304 	addi	r2,sp,12
 100bb10:	480d883a 	mov	r6,r9
 100bb14:	d8800015 	stw	r2,0(sp)
 100bb18:	1009dec0 	call	1009dec <__d2b>
 100bb1c:	a809883a 	mov	r4,r21
 100bb20:	01400044 	movi	r5,1
 100bb24:	d8800515 	stw	r2,20(sp)
 100bb28:	100a4940 	call	100a494 <__i2b>
 100bb2c:	d8c01e17 	ldw	r3,120(sp)
 100bb30:	102d883a 	mov	r22,r2
 100bb34:	1801091e 	bne	r3,zero,100bf5c <_strtod_r+0xda4>
 100bb38:	dd000f17 	ldw	r20,60(sp)
 100bb3c:	000f883a 	mov	r7,zero
 100bb40:	0013883a 	mov	r9,zero
 100bb44:	a011883a 	mov	r8,r20
 100bb48:	d8800217 	ldw	r2,8(sp)
 100bb4c:	10010116 	blt	r2,zero,100bf54 <_strtod_r+0xd9c>
 100bb50:	388f883a 	add	r7,r7,r2
 100bb54:	d8c01c17 	ldw	r3,112(sp)
 100bb58:	d9400317 	ldw	r5,12(sp)
 100bb5c:	10c9c83a 	sub	r4,r2,r3
 100bb60:	2145883a 	add	r2,r4,r5
 100bb64:	10bfffc4 	addi	r2,r2,-1
 100bb68:	00ff0084 	movi	r3,-1022
 100bb6c:	10c09f0e 	bge	r2,r3,100bdec <_strtod_r+0xc34>
 100bb70:	21810cc4 	addi	r6,r4,1075
 100bb74:	d9001c17 	ldw	r4,112(sp)
 100bb78:	4185883a 	add	r2,r8,r6
 100bb7c:	39a1883a 	add	r16,r7,r6
 100bb80:	20a5883a 	add	r18,r4,r2
 100bb84:	3807883a 	mov	r3,r7
 100bb88:	81c0010e 	bge	r16,r7,100bb90 <_strtod_r+0x9d8>
 100bb8c:	8007883a 	mov	r3,r16
 100bb90:	9005883a 	mov	r2,r18
 100bb94:	1c80010e 	bge	r3,r18,100bb9c <_strtod_r+0x9e4>
 100bb98:	1805883a 	mov	r2,r3
 100bb9c:	0080eb0e 	bge	zero,r2,100bf4c <_strtod_r+0xd94>
 100bba0:	38a7c83a 	sub	r19,r7,r2
 100bba4:	80a1c83a 	sub	r16,r16,r2
 100bba8:	90a5c83a 	sub	r18,r18,r2
 100bbac:	02400e0e 	bge	zero,r9,100bbe8 <_strtod_r+0xa30>
 100bbb0:	480d883a 	mov	r6,r9
 100bbb4:	b00b883a 	mov	r5,r22
 100bbb8:	a809883a 	mov	r4,r21
 100bbbc:	100a5fc0 	call	100a5fc <__pow5mult>
 100bbc0:	d9800517 	ldw	r6,20(sp)
 100bbc4:	a809883a 	mov	r4,r21
 100bbc8:	100b883a 	mov	r5,r2
 100bbcc:	102d883a 	mov	r22,r2
 100bbd0:	100a2400 	call	100a240 <__multiply>
 100bbd4:	d9400517 	ldw	r5,20(sp)
 100bbd8:	1023883a 	mov	r17,r2
 100bbdc:	a809883a 	mov	r4,r21
 100bbe0:	10097b00 	call	10097b0 <_Bfree>
 100bbe4:	dc400515 	stw	r17,20(sp)
 100bbe8:	0400050e 	bge	zero,r16,100bc00 <_strtod_r+0xa48>
 100bbec:	d9400517 	ldw	r5,20(sp)
 100bbf0:	800d883a 	mov	r6,r16
 100bbf4:	a809883a 	mov	r4,r21
 100bbf8:	100a0f40 	call	100a0f4 <__lshift>
 100bbfc:	d8800515 	stw	r2,20(sp)
 100bc00:	a000741e 	bne	r20,zero,100bdd4 <_strtod_r+0xc1c>
 100bc04:	0480050e 	bge	zero,r18,100bc1c <_strtod_r+0xa64>
 100bc08:	b80b883a 	mov	r5,r23
 100bc0c:	900d883a 	mov	r6,r18
 100bc10:	a809883a 	mov	r4,r21
 100bc14:	100a0f40 	call	100a0f4 <__lshift>
 100bc18:	102f883a 	mov	r23,r2
 100bc1c:	04c0050e 	bge	zero,r19,100bc34 <_strtod_r+0xa7c>
 100bc20:	b00b883a 	mov	r5,r22
 100bc24:	980d883a 	mov	r6,r19
 100bc28:	a809883a 	mov	r4,r21
 100bc2c:	100a0f40 	call	100a0f4 <__lshift>
 100bc30:	102d883a 	mov	r22,r2
 100bc34:	d9400517 	ldw	r5,20(sp)
 100bc38:	a809883a 	mov	r4,r21
 100bc3c:	b80d883a 	mov	r6,r23
 100bc40:	1009f680 	call	1009f68 <__mdiff>
 100bc44:	1029883a 	mov	r20,r2
 100bc48:	10800317 	ldw	r2,12(r2)
 100bc4c:	a009883a 	mov	r4,r20
 100bc50:	a0000315 	stw	zero,12(r20)
 100bc54:	b00b883a 	mov	r5,r22
 100bc58:	d8801a15 	stw	r2,104(sp)
 100bc5c:	100990c0 	call	100990c <__mcmp>
 100bc60:	1001a616 	blt	r2,zero,100c2fc <_strtod_r+0x1144>
 100bc64:	10016d26 	beq	r2,zero,100c21c <_strtod_r+0x1064>
 100bc68:	a009883a 	mov	r4,r20
 100bc6c:	b00b883a 	mov	r5,r22
 100bc70:	1009b0c0 	call	1009b0c <__ratio>
 100bc74:	0011883a 	mov	r8,zero
 100bc78:	02500034 	movhi	r9,16384
 100bc7c:	480f883a 	mov	r7,r9
 100bc80:	1009883a 	mov	r4,r2
 100bc84:	180b883a 	mov	r5,r3
 100bc88:	400d883a 	mov	r6,r8
 100bc8c:	1021883a 	mov	r16,r2
 100bc90:	1823883a 	mov	r17,r3
 100bc94:	100ffc80 	call	100ffc8 <__ledf2>
 100bc98:	00805716 	blt	zero,r2,100bdf8 <_strtod_r+0xc40>
 100bc9c:	d8801a17 	ldw	r2,104(sp)
 100bca0:	1025003a 	cmpeq	r18,r2,zero
 100bca4:	90008c1e 	bne	r18,zero,100bed8 <_strtod_r+0xd20>
 100bca8:	008ffc34 	movhi	r2,16368
 100bcac:	0021883a 	mov	r16,zero
 100bcb0:	1023883a 	mov	r17,r2
 100bcb4:	d8000715 	stw	zero,28(sp)
 100bcb8:	d8800815 	stw	r2,32(sp)
 100bcbc:	e1c00117 	ldw	r7,4(fp)
 100bcc0:	009ff834 	movhi	r2,32736
 100bcc4:	3cdffc2c 	andhi	r19,r7,32752
 100bcc8:	98805f26 	beq	r19,r2,100be48 <_strtod_r+0xc90>
 100bccc:	d8c01c17 	ldw	r3,112(sp)
 100bcd0:	18001b26 	beq	r3,zero,100bd40 <_strtod_r+0xb88>
 100bcd4:	0081a834 	movhi	r2,1696
 100bcd8:	14c01936 	bltu	r2,r19,100bd40 <_strtod_r+0xb88>
 100bcdc:	00bff034 	movhi	r2,65472
 100bce0:	00d07834 	movhi	r3,16864
 100bce4:	18ffffc4 	addi	r3,r3,-1
 100bce8:	180f883a 	mov	r7,r3
 100bcec:	8009883a 	mov	r4,r16
 100bcf0:	880b883a 	mov	r5,r17
 100bcf4:	100d883a 	mov	r6,r2
 100bcf8:	100ffc80 	call	100ffc8 <__ledf2>
 100bcfc:	00800b16 	blt	zero,r2,100bd2c <_strtod_r+0xb74>
 100bd00:	880b883a 	mov	r5,r17
 100bd04:	8009883a 	mov	r4,r16
 100bd08:	100e3280 	call	100e328 <__fixunsdfsi>
 100bd0c:	1000e31e 	bne	r2,zero,100c09c <_strtod_r+0xee4>
 100bd10:	0021883a 	mov	r16,zero
 100bd14:	044ffc34 	movhi	r17,16368
 100bd18:	9000dd1e 	bne	r18,zero,100c090 <_strtod_r+0xed8>
 100bd1c:	8005883a 	mov	r2,r16
 100bd20:	8807883a 	mov	r3,r17
 100bd24:	d8c00815 	stw	r3,32(sp)
 100bd28:	d8800715 	stw	r2,28(sp)
 100bd2c:	d8800817 	ldw	r2,32(sp)
 100bd30:	00c1ac34 	movhi	r3,1712
 100bd34:	14c5c83a 	sub	r2,r2,r19
 100bd38:	10c5883a 	add	r2,r2,r3
 100bd3c:	d8800815 	stw	r2,32(sp)
 100bd40:	e0800017 	ldw	r2,0(fp)
 100bd44:	e0c00117 	ldw	r3,4(fp)
 100bd48:	1009883a 	mov	r4,r2
 100bd4c:	180b883a 	mov	r5,r3
 100bd50:	100996c0 	call	100996c <__ulp>
 100bd54:	d9800717 	ldw	r6,28(sp)
 100bd58:	d9c00817 	ldw	r7,32(sp)
 100bd5c:	180b883a 	mov	r5,r3
 100bd60:	1009883a 	mov	r4,r2
 100bd64:	100f7040 	call	100f704 <__muldf3>
 100bd68:	e2000017 	ldw	r8,0(fp)
 100bd6c:	e2400117 	ldw	r9,4(fp)
 100bd70:	180b883a 	mov	r5,r3
 100bd74:	1009883a 	mov	r4,r2
 100bd78:	480f883a 	mov	r7,r9
 100bd7c:	400d883a 	mov	r6,r8
 100bd80:	100f6900 	call	100f690 <__adddf3>
 100bd84:	e0c00115 	stw	r3,4(fp)
 100bd88:	e0800015 	stw	r2,0(fp)
 100bd8c:	d9001c17 	ldw	r4,112(sp)
 100bd90:	e4800117 	ldw	r18,4(fp)
 100bd94:	2000021e 	bne	r4,zero,100bda0 <_strtod_r+0xbe8>
 100bd98:	909ffc2c 	andhi	r2,r18,32752
 100bd9c:	98807f26 	beq	r19,r2,100bf9c <_strtod_r+0xde4>
 100bda0:	d9400517 	ldw	r5,20(sp)
 100bda4:	a809883a 	mov	r4,r21
 100bda8:	10097b00 	call	10097b0 <_Bfree>
 100bdac:	a809883a 	mov	r4,r21
 100bdb0:	b80b883a 	mov	r5,r23
 100bdb4:	10097b00 	call	10097b0 <_Bfree>
 100bdb8:	a809883a 	mov	r4,r21
 100bdbc:	b00b883a 	mov	r5,r22
 100bdc0:	10097b00 	call	10097b0 <_Bfree>
 100bdc4:	a809883a 	mov	r4,r21
 100bdc8:	a00b883a 	mov	r5,r20
 100bdcc:	10097b00 	call	10097b0 <_Bfree>
 100bdd0:	003f3c06 	br	100bac4 <_strtod_r+0x90c>
 100bdd4:	b80b883a 	mov	r5,r23
 100bdd8:	a00d883a 	mov	r6,r20
 100bddc:	a809883a 	mov	r4,r21
 100bde0:	100a5fc0 	call	100a5fc <__pow5mult>
 100bde4:	102f883a 	mov	r23,r2
 100bde8:	003f8606 	br	100bc04 <_strtod_r+0xa4c>
 100bdec:	00800d84 	movi	r2,54
 100bdf0:	114dc83a 	sub	r6,r2,r5
 100bdf4:	003f5f06 	br	100bb74 <_strtod_r+0x9bc>
 100bdf8:	0005883a 	mov	r2,zero
 100bdfc:	00cff834 	movhi	r3,16352
 100be00:	8009883a 	mov	r4,r16
 100be04:	880b883a 	mov	r5,r17
 100be08:	180f883a 	mov	r7,r3
 100be0c:	100d883a 	mov	r6,r2
 100be10:	100f7040 	call	100f704 <__muldf3>
 100be14:	1009883a 	mov	r4,r2
 100be18:	d8801a17 	ldw	r2,104(sp)
 100be1c:	2021883a 	mov	r16,r4
 100be20:	1823883a 	mov	r17,r3
 100be24:	1025003a 	cmpeq	r18,r2,zero
 100be28:	9000451e 	bne	r18,zero,100bf40 <_strtod_r+0xd88>
 100be2c:	2005883a 	mov	r2,r4
 100be30:	d8800715 	stw	r2,28(sp)
 100be34:	d8c00815 	stw	r3,32(sp)
 100be38:	e1c00117 	ldw	r7,4(fp)
 100be3c:	009ff834 	movhi	r2,32736
 100be40:	3cdffc2c 	andhi	r19,r7,32752
 100be44:	98bfa11e 	bne	r19,r2,100bccc <_strtod_r+0xb14>
 100be48:	e1000017 	ldw	r4,0(fp)
 100be4c:	01bf2c34 	movhi	r6,64688
 100be50:	398d883a 	add	r6,r7,r6
 100be54:	d9000b15 	stw	r4,44(sp)
 100be58:	d9c00c15 	stw	r7,48(sp)
 100be5c:	300b883a 	mov	r5,r6
 100be60:	e1800115 	stw	r6,4(fp)
 100be64:	100996c0 	call	100996c <__ulp>
 100be68:	d9800717 	ldw	r6,28(sp)
 100be6c:	d9c00817 	ldw	r7,32(sp)
 100be70:	180b883a 	mov	r5,r3
 100be74:	1009883a 	mov	r4,r2
 100be78:	100f7040 	call	100f704 <__muldf3>
 100be7c:	e2000017 	ldw	r8,0(fp)
 100be80:	e2400117 	ldw	r9,4(fp)
 100be84:	180b883a 	mov	r5,r3
 100be88:	1009883a 	mov	r4,r2
 100be8c:	480f883a 	mov	r7,r9
 100be90:	400d883a 	mov	r6,r8
 100be94:	100f6900 	call	100f690 <__adddf3>
 100be98:	1009883a 	mov	r4,r2
 100be9c:	180b883a 	mov	r5,r3
 100bea0:	009f2834 	movhi	r2,31904
 100bea4:	10bfffc4 	addi	r2,r2,-1
 100bea8:	18dffc2c 	andhi	r3,r3,32752
 100beac:	e1000015 	stw	r4,0(fp)
 100beb0:	e1400115 	stw	r5,4(fp)
 100beb4:	10c0722e 	bgeu	r2,r3,100c080 <_strtod_r+0xec8>
 100beb8:	d8800c17 	ldw	r2,48(sp)
 100bebc:	011ffc34 	movhi	r4,32752
 100bec0:	213fffc4 	addi	r4,r4,-1
 100bec4:	11007d26 	beq	r2,r4,100c0bc <_strtod_r+0xf04>
 100bec8:	01ffffc4 	movi	r7,-1
 100becc:	e1000115 	stw	r4,4(fp)
 100bed0:	e1c00015 	stw	r7,0(fp)
 100bed4:	003fb206 	br	100bda0 <_strtod_r+0xbe8>
 100bed8:	e0c00017 	ldw	r3,0(fp)
 100bedc:	1800251e 	bne	r3,zero,100bf74 <_strtod_r+0xdbc>
 100bee0:	e0800117 	ldw	r2,4(fp)
 100bee4:	00c00434 	movhi	r3,16
 100bee8:	18ffffc4 	addi	r3,r3,-1
 100beec:	10c4703a 	and	r2,r2,r3
 100bef0:	1000241e 	bne	r2,zero,100bf84 <_strtod_r+0xdcc>
 100bef4:	0005883a 	mov	r2,zero
 100bef8:	00cffc34 	movhi	r3,16368
 100befc:	180f883a 	mov	r7,r3
 100bf00:	8009883a 	mov	r4,r16
 100bf04:	880b883a 	mov	r5,r17
 100bf08:	100d883a 	mov	r6,r2
 100bf0c:	100ff400 	call	100ff40 <__ltdf2>
 100bf10:	10014616 	blt	r2,zero,100c42c <_strtod_r+0x1274>
 100bf14:	0005883a 	mov	r2,zero
 100bf18:	00cff834 	movhi	r3,16352
 100bf1c:	880b883a 	mov	r5,r17
 100bf20:	8009883a 	mov	r4,r16
 100bf24:	180f883a 	mov	r7,r3
 100bf28:	100d883a 	mov	r6,r2
 100bf2c:	100f7040 	call	100f704 <__muldf3>
 100bf30:	1823883a 	mov	r17,r3
 100bf34:	1021883a 	mov	r16,r2
 100bf38:	18e0003c 	xorhi	r3,r3,32768
 100bf3c:	003fbc06 	br	100be30 <_strtod_r+0xc78>
 100bf40:	2005883a 	mov	r2,r4
 100bf44:	18e0003c 	xorhi	r3,r3,32768
 100bf48:	003fb906 	br	100be30 <_strtod_r+0xc78>
 100bf4c:	3827883a 	mov	r19,r7
 100bf50:	003f1606 	br	100bbac <_strtod_r+0x9f4>
 100bf54:	4091c83a 	sub	r8,r8,r2
 100bf58:	003efe06 	br	100bb54 <_strtod_r+0x99c>
 100bf5c:	d9000f17 	ldw	r4,60(sp)
 100bf60:	0011883a 	mov	r8,zero
 100bf64:	0029883a 	mov	r20,zero
 100bf68:	0113c83a 	sub	r9,zero,r4
 100bf6c:	480f883a 	mov	r7,r9
 100bf70:	003ef506 	br	100bb48 <_strtod_r+0x990>
 100bf74:	00800044 	movi	r2,1
 100bf78:	1880021e 	bne	r3,r2,100bf84 <_strtod_r+0xdcc>
 100bf7c:	e0800117 	ldw	r2,4(fp)
 100bf80:	1000c526 	beq	r2,zero,100c298 <_strtod_r+0x10e0>
 100bf84:	00affc34 	movhi	r2,49136
 100bf88:	0021883a 	mov	r16,zero
 100bf8c:	044ffc34 	movhi	r17,16368
 100bf90:	d8800815 	stw	r2,32(sp)
 100bf94:	d8000715 	stw	zero,28(sp)
 100bf98:	003f4806 	br	100bcbc <_strtod_r+0xb04>
 100bf9c:	880b883a 	mov	r5,r17
 100bfa0:	8009883a 	mov	r4,r16
 100bfa4:	10101480 	call	1010148 <__fixdfsi>
 100bfa8:	1009883a 	mov	r4,r2
 100bfac:	10100500 	call	1010050 <__floatsidf>
 100bfb0:	880b883a 	mov	r5,r17
 100bfb4:	8009883a 	mov	r4,r16
 100bfb8:	100d883a 	mov	r6,r2
 100bfbc:	180f883a 	mov	r7,r3
 100bfc0:	100f6100 	call	100f610 <__subdf3>
 100bfc4:	100b883a 	mov	r5,r2
 100bfc8:	1021883a 	mov	r16,r2
 100bfcc:	d8801a17 	ldw	r2,104(sp)
 100bfd0:	180d883a 	mov	r6,r3
 100bfd4:	1823883a 	mov	r17,r3
 100bfd8:	1000061e 	bne	r2,zero,100bff4 <_strtod_r+0xe3c>
 100bfdc:	e0800017 	ldw	r2,0(fp)
 100bfe0:	1000041e 	bne	r2,zero,100bff4 <_strtod_r+0xe3c>
 100bfe4:	00c00434 	movhi	r3,16
 100bfe8:	18ffffc4 	addi	r3,r3,-1
 100bfec:	90c4703a 	and	r2,r18,r3
 100bff0:	10004026 	beq	r2,zero,100c0f4 <_strtod_r+0xf3c>
 100bff4:	00a52834 	movhi	r2,38048
 100bff8:	108d6544 	addi	r2,r2,13717
 100bffc:	00cff834 	movhi	r3,16352
 100c000:	18ffffc4 	addi	r3,r3,-1
 100c004:	180f883a 	mov	r7,r3
 100c008:	8009883a 	mov	r4,r16
 100c00c:	880b883a 	mov	r5,r17
 100c010:	100d883a 	mov	r6,r2
 100c014:	100ff400 	call	100ff40 <__ltdf2>
 100c018:	10000916 	blt	r2,zero,100c040 <_strtod_r+0xe88>
 100c01c:	008d6c34 	movhi	r2,13744
 100c020:	10b94d44 	addi	r2,r2,-6859
 100c024:	00cff834 	movhi	r3,16352
 100c028:	880b883a 	mov	r5,r17
 100c02c:	180f883a 	mov	r7,r3
 100c030:	8009883a 	mov	r4,r16
 100c034:	100d883a 	mov	r6,r2
 100c038:	100fe300 	call	100fe30 <__gtdf2>
 100c03c:	00bf580e 	bge	zero,r2,100bda0 <_strtod_r+0xbe8>
 100c040:	d9400517 	ldw	r5,20(sp)
 100c044:	a809883a 	mov	r4,r21
 100c048:	10097b00 	call	10097b0 <_Bfree>
 100c04c:	a809883a 	mov	r4,r21
 100c050:	b80b883a 	mov	r5,r23
 100c054:	10097b00 	call	10097b0 <_Bfree>
 100c058:	a809883a 	mov	r4,r21
 100c05c:	b00b883a 	mov	r5,r22
 100c060:	10097b00 	call	10097b0 <_Bfree>
 100c064:	d9401017 	ldw	r5,64(sp)
 100c068:	a809883a 	mov	r4,r21
 100c06c:	10097b00 	call	10097b0 <_Bfree>
 100c070:	a809883a 	mov	r4,r21
 100c074:	a00b883a 	mov	r5,r20
 100c078:	10097b00 	call	10097b0 <_Bfree>
 100c07c:	003cd806 	br	100b3e0 <_strtod_r+0x228>
 100c080:	0080d434 	movhi	r2,848
 100c084:	288d883a 	add	r6,r5,r2
 100c088:	e1800115 	stw	r6,4(fp)
 100c08c:	003f3f06 	br	100bd8c <_strtod_r+0xbd4>
 100c090:	8005883a 	mov	r2,r16
 100c094:	88e0003c 	xorhi	r3,r17,32768
 100c098:	003f2206 	br	100bd24 <_strtod_r+0xb6c>
 100c09c:	1009883a 	mov	r4,r2
 100c0a0:	10102940 	call	1010294 <__floatunsidf>
 100c0a4:	1021883a 	mov	r16,r2
 100c0a8:	1823883a 	mov	r17,r3
 100c0ac:	003f1a06 	br	100bd18 <_strtod_r+0xb60>
 100c0b0:	dc000417 	ldw	r16,16(sp)
 100c0b4:	31800044 	addi	r6,r6,1
 100c0b8:	003e5606 	br	100ba14 <_strtod_r+0x85c>
 100c0bc:	d8c00b17 	ldw	r3,44(sp)
 100c0c0:	00bfffc4 	movi	r2,-1
 100c0c4:	18bf801e 	bne	r3,r2,100bec8 <_strtod_r+0xd10>
 100c0c8:	00c00884 	movi	r3,34
 100c0cc:	a8c00015 	stw	r3,0(r21)
 100c0d0:	009ffc34 	movhi	r2,32752
 100c0d4:	e0800115 	stw	r2,4(fp)
 100c0d8:	e0000015 	stw	zero,0(fp)
 100c0dc:	003fd806 	br	100c040 <_strtod_r+0xe88>
 100c0e0:	8025883a 	mov	r18,r16
 100c0e4:	0027883a 	mov	r19,zero
 100c0e8:	d8001215 	stw	zero,72(sp)
 100c0ec:	d8001115 	stw	zero,68(sp)
 100c0f0:	003cac06 	br	100b3a4 <_strtod_r+0x1ec>
 100c0f4:	00a52834 	movhi	r2,38048
 100c0f8:	108d6544 	addi	r2,r2,13717
 100c0fc:	00cff434 	movhi	r3,16336
 100c100:	18ffffc4 	addi	r3,r3,-1
 100c104:	2809883a 	mov	r4,r5
 100c108:	180f883a 	mov	r7,r3
 100c10c:	300b883a 	mov	r5,r6
 100c110:	100d883a 	mov	r6,r2
 100c114:	100ff400 	call	100ff40 <__ltdf2>
 100c118:	103f210e 	bge	r2,zero,100bda0 <_strtod_r+0xbe8>
 100c11c:	003fc806 	br	100c040 <_strtod_r+0xe88>
 100c120:	00800044 	movi	r2,1
 100c124:	d8001815 	stw	zero,96(sp)
 100c128:	d8801b15 	stw	r2,108(sp)
 100c12c:	d8001715 	stw	zero,92(sp)
 100c130:	003ca206 	br	100b3bc <_strtod_r+0x204>
 100c134:	00800884 	movi	r2,34
 100c138:	a8800015 	stw	r2,0(r21)
 100c13c:	019ffc34 	movhi	r6,32752
 100c140:	e1800115 	stw	r6,4(fp)
 100c144:	e0000015 	stw	zero,0(fp)
 100c148:	003ca506 	br	100b3e0 <_strtod_r+0x228>
 100c14c:	011387c4 	movi	r4,19999
 100c150:	003d0206 	br	100b55c <_strtod_r+0x3a4>
 100c154:	180a90fa 	slli	r5,r3,3
 100c158:	e0800017 	ldw	r2,0(fp)
 100c15c:	e0c00117 	ldw	r3,4(fp)
 100c160:	01004074 	movhi	r4,257
 100c164:	210e1604 	addi	r4,r4,14424
 100c168:	290b883a 	add	r5,r5,r4
 100c16c:	2a000017 	ldw	r8,0(r5)
 100c170:	2a400117 	ldw	r9,4(r5)
 100c174:	1009883a 	mov	r4,r2
 100c178:	180b883a 	mov	r5,r3
 100c17c:	480f883a 	mov	r7,r9
 100c180:	400d883a 	mov	r6,r8
 100c184:	100f7040 	call	100f704 <__muldf3>
 100c188:	e0c00115 	stw	r3,4(fp)
 100c18c:	e0800015 	stw	r2,0(fp)
 100c190:	003c9306 	br	100b3e0 <_strtod_r+0x228>
 100c194:	d8800d17 	ldw	r2,52(sp)
 100c198:	e0800015 	stw	r2,0(fp)
 100c19c:	d8c00e17 	ldw	r3,56(sp)
 100c1a0:	e0c00115 	stw	r3,4(fp)
 100c1a4:	9080020c 	andi	r2,r18,8
 100c1a8:	103c8d26 	beq	r2,zero,100b3e0 <_strtod_r+0x228>
 100c1ac:	e0800117 	ldw	r2,4(fp)
 100c1b0:	10a00034 	orhi	r2,r2,32768
 100c1b4:	e0800115 	stw	r2,4(fp)
 100c1b8:	003c8906 	br	100b3e0 <_strtod_r+0x228>
 100c1bc:	009ffc34 	movhi	r2,32752
 100c1c0:	e0800115 	stw	r2,4(fp)
 100c1c4:	e0000015 	stw	zero,0(fp)
 100c1c8:	003ff606 	br	100c1a4 <_strtod_r+0xfec>
 100c1cc:	00a00034 	movhi	r2,32768
 100c1d0:	10bfffc4 	addi	r2,r2,-1
 100c1d4:	00ffffc4 	movi	r3,-1
 100c1d8:	e0800115 	stw	r2,4(fp)
 100c1dc:	e0c00015 	stw	r3,0(fp)
 100c1e0:	003ff006 	br	100c1a4 <_strtod_r+0xfec>
 100c1e4:	e0000115 	stw	zero,4(fp)
 100c1e8:	e0000015 	stw	zero,0(fp)
 100c1ec:	003fed06 	br	100c1a4 <_strtod_r+0xfec>
 100c1f0:	d8800e17 	ldw	r2,56(sp)
 100c1f4:	29010cc4 	addi	r4,r5,1075
 100c1f8:	00fffc34 	movhi	r3,65520
 100c1fc:	18ffffc4 	addi	r3,r3,-1
 100c200:	2008953a 	slli	r4,r4,20
 100c204:	10c4703a 	and	r2,r2,r3
 100c208:	d8c00d17 	ldw	r3,52(sp)
 100c20c:	1104b03a 	or	r2,r2,r4
 100c210:	e0800115 	stw	r2,4(fp)
 100c214:	e0c00015 	stw	r3,0(fp)
 100c218:	003fe206 	br	100c1a4 <_strtod_r+0xfec>
 100c21c:	d8c01a17 	ldw	r3,104(sp)
 100c220:	1825003a 	cmpeq	r18,r3,zero
 100c224:	9000cf1e 	bne	r18,zero,100c564 <_strtod_r+0x13ac>
 100c228:	e1400117 	ldw	r5,4(fp)
 100c22c:	01000434 	movhi	r4,16
 100c230:	213fffc4 	addi	r4,r4,-1
 100c234:	2904703a 	and	r2,r5,r4
 100c238:	11006826 	beq	r2,r4,100c3dc <_strtod_r+0x1224>
 100c23c:	e1c00017 	ldw	r7,0(fp)
 100c240:	3880004c 	andi	r2,r7,1
 100c244:	1005003a 	cmpeq	r2,r2,zero
 100c248:	1000601e 	bne	r2,zero,100c3cc <_strtod_r+0x1214>
 100c24c:	90010426 	beq	r18,zero,100c660 <_strtod_r+0x14a8>
 100c250:	e4400117 	ldw	r17,4(fp)
 100c254:	3809883a 	mov	r4,r7
 100c258:	3821883a 	mov	r16,r7
 100c25c:	880b883a 	mov	r5,r17
 100c260:	100996c0 	call	100996c <__ulp>
 100c264:	180f883a 	mov	r7,r3
 100c268:	880b883a 	mov	r5,r17
 100c26c:	8009883a 	mov	r4,r16
 100c270:	100d883a 	mov	r6,r2
 100c274:	100f6100 	call	100f610 <__subdf3>
 100c278:	1009883a 	mov	r4,r2
 100c27c:	000d883a 	mov	r6,zero
 100c280:	000f883a 	mov	r7,zero
 100c284:	180b883a 	mov	r5,r3
 100c288:	e0800015 	stw	r2,0(fp)
 100c28c:	e0c00115 	stw	r3,4(fp)
 100c290:	100fda80 	call	100fda8 <__nedf2>
 100c294:	10004d1e 	bne	r2,zero,100c3cc <_strtod_r+0x1214>
 100c298:	00800884 	movi	r2,34
 100c29c:	a8800015 	stw	r2,0(r21)
 100c2a0:	e0000015 	stw	zero,0(fp)
 100c2a4:	e0000115 	stw	zero,4(fp)
 100c2a8:	003f6506 	br	100c040 <_strtod_r+0xe88>
 100c2ac:	00800044 	movi	r2,1
 100c2b0:	d8801915 	stw	r2,100(sp)
 100c2b4:	003d4406 	br	100b7c8 <_strtod_r+0x610>
 100c2b8:	d8c01817 	ldw	r3,96(sp)
 100c2bc:	1985883a 	add	r2,r3,r6
 100c2c0:	11ffffc4 	addi	r7,r2,-1
 100c2c4:	39000044 	addi	r4,r7,1
 100c2c8:	00800204 	movi	r2,8
 100c2cc:	d9001815 	stw	r4,96(sp)
 100c2d0:	11c0d716 	blt	r2,r7,100c630 <_strtod_r+0x1478>
 100c2d4:	d9001217 	ldw	r4,72(sp)
 100c2d8:	01400284 	movi	r5,10
 100c2dc:	10010a40 	call	10010a4 <__mulsi3>
 100c2e0:	1585883a 	add	r2,r2,r22
 100c2e4:	d8801215 	stw	r2,72(sp)
 100c2e8:	000d883a 	mov	r6,zero
 100c2ec:	84000044 	addi	r16,r16,1
 100c2f0:	dc000415 	stw	r16,16(sp)
 100c2f4:	84400007 	ldb	r17,0(r16)
 100c2f8:	003cfc06 	br	100b6ec <_strtod_r+0x534>
 100c2fc:	d8c01a17 	ldw	r3,104(sp)
 100c300:	1800321e 	bne	r3,zero,100c3cc <_strtod_r+0x1214>
 100c304:	e0800017 	ldw	r2,0(fp)
 100c308:	1000b31e 	bne	r2,zero,100c5d8 <_strtod_r+0x1420>
 100c30c:	e0c00117 	ldw	r3,4(fp)
 100c310:	01000434 	movhi	r4,16
 100c314:	213fffc4 	addi	r4,r4,-1
 100c318:	1904703a 	and	r2,r3,r4
 100c31c:	1000e71e 	bne	r2,zero,100c6bc <_strtod_r+0x1504>
 100c320:	18dffc2c 	andhi	r3,r3,32752
 100c324:	0081ac34 	movhi	r2,1712
 100c328:	10c0282e 	bgeu	r2,r3,100c3cc <_strtod_r+0x1214>
 100c32c:	a0800517 	ldw	r2,20(r20)
 100c330:	1000031e 	bne	r2,zero,100c340 <_strtod_r+0x1188>
 100c334:	a0c00417 	ldw	r3,16(r20)
 100c338:	00800044 	movi	r2,1
 100c33c:	10c0a60e 	bge	r2,r3,100c5d8 <_strtod_r+0x1420>
 100c340:	a00b883a 	mov	r5,r20
 100c344:	a809883a 	mov	r4,r21
 100c348:	01800044 	movi	r6,1
 100c34c:	100a0f40 	call	100a0f4 <__lshift>
 100c350:	1009883a 	mov	r4,r2
 100c354:	b00b883a 	mov	r5,r22
 100c358:	1029883a 	mov	r20,r2
 100c35c:	100990c0 	call	100990c <__mcmp>
 100c360:	00809d0e 	bge	zero,r2,100c5d8 <_strtod_r+0x1420>
 100c364:	e1800117 	ldw	r6,4(fp)
 100c368:	d9001c17 	ldw	r4,112(sp)
 100c36c:	2013003a 	cmpeq	r9,r4,zero
 100c370:	4800d61e 	bne	r9,zero,100c6cc <_strtod_r+0x1514>
 100c374:	30dffc2c 	andhi	r3,r6,32752
 100c378:	0081ac34 	movhi	r2,1712
 100c37c:	10c0d336 	bltu	r2,r3,100c6cc <_strtod_r+0x1514>
 100c380:	0080dc34 	movhi	r2,880
 100c384:	10ffc42e 	bgeu	r2,r3,100c298 <_strtod_r+0x10e0>
 100c388:	e0800017 	ldw	r2,0(fp)
 100c38c:	e0c00117 	ldw	r3,4(fp)
 100c390:	020e5434 	movhi	r8,14672
 100c394:	000d883a 	mov	r6,zero
 100c398:	400f883a 	mov	r7,r8
 100c39c:	180b883a 	mov	r5,r3
 100c3a0:	1009883a 	mov	r4,r2
 100c3a4:	da000c15 	stw	r8,48(sp)
 100c3a8:	d8000b15 	stw	zero,44(sp)
 100c3ac:	100f7040 	call	100f704 <__muldf3>
 100c3b0:	e0800015 	stw	r2,0(fp)
 100c3b4:	e0c00115 	stw	r3,4(fp)
 100c3b8:	183f211e 	bne	r3,zero,100c040 <_strtod_r+0xe88>
 100c3bc:	103f201e 	bne	r2,zero,100c040 <_strtod_r+0xe88>
 100c3c0:	00800884 	movi	r2,34
 100c3c4:	a8800015 	stw	r2,0(r21)
 100c3c8:	003f1d06 	br	100c040 <_strtod_r+0xe88>
 100c3cc:	d9001c17 	ldw	r4,112(sp)
 100c3d0:	2013003a 	cmpeq	r9,r4,zero
 100c3d4:	483f1a1e 	bne	r9,zero,100c040 <_strtod_r+0xe88>
 100c3d8:	003feb06 	br	100c388 <_strtod_r+0x11d0>
 100c3dc:	d8801c17 	ldw	r2,112(sp)
 100c3e0:	e1c00017 	ldw	r7,0(fp)
 100c3e4:	1013003a 	cmpeq	r9,r2,zero
 100c3e8:	4800c31e 	bne	r9,zero,100c6f8 <_strtod_r+0x1540>
 100c3ec:	28dffc2c 	andhi	r3,r5,32752
 100c3f0:	0081a834 	movhi	r2,1696
 100c3f4:	10c0c036 	bltu	r2,r3,100c6f8 <_strtod_r+0x1540>
 100c3f8:	1804d53a 	srli	r2,r3,20
 100c3fc:	00c01ac4 	movi	r3,107
 100c400:	013fffc4 	movi	r4,-1
 100c404:	1887c83a 	sub	r3,r3,r2
 100c408:	20c4983a 	sll	r2,r4,r3
 100c40c:	11ff8c1e 	bne	r2,r7,100c240 <_strtod_r+0x1088>
 100c410:	28dffc2c 	andhi	r3,r5,32752
 100c414:	00800434 	movhi	r2,16
 100c418:	188d883a 	add	r6,r3,r2
 100c41c:	e1800115 	stw	r6,4(fp)
 100c420:	e0000015 	stw	zero,0(fp)
 100c424:	483f061e 	bne	r9,zero,100c040 <_strtod_r+0xe88>
 100c428:	003fd706 	br	100c388 <_strtod_r+0x11d0>
 100c42c:	0021883a 	mov	r16,zero
 100c430:	0005883a 	mov	r2,zero
 100c434:	044ff834 	movhi	r17,16352
 100c438:	00eff834 	movhi	r3,49120
 100c43c:	003e7c06 	br	100be30 <_strtod_r+0xc78>
 100c440:	803d9226 	beq	r16,zero,100ba8c <_strtod_r+0x8d4>
 100c444:	0421c83a 	sub	r16,zero,r16
 100c448:	814003cc 	andi	r5,r16,15
 100c44c:	28000f26 	beq	r5,zero,100c48c <_strtod_r+0x12d4>
 100c450:	280a90fa 	slli	r5,r5,3
 100c454:	01004074 	movhi	r4,257
 100c458:	210e1604 	addi	r4,r4,14424
 100c45c:	e0800017 	ldw	r2,0(fp)
 100c460:	290b883a 	add	r5,r5,r4
 100c464:	2a000017 	ldw	r8,0(r5)
 100c468:	e0c00117 	ldw	r3,4(fp)
 100c46c:	2a400117 	ldw	r9,4(r5)
 100c470:	1009883a 	mov	r4,r2
 100c474:	180b883a 	mov	r5,r3
 100c478:	480f883a 	mov	r7,r9
 100c47c:	400d883a 	mov	r6,r8
 100c480:	100fac80 	call	100fac8 <__divdf3>
 100c484:	e0c00115 	stw	r3,4(fp)
 100c488:	e0800015 	stw	r2,0(fp)
 100c48c:	8021d13a 	srai	r16,r16,4
 100c490:	803d7e26 	beq	r16,zero,100ba8c <_strtod_r+0x8d4>
 100c494:	008007c4 	movi	r2,31
 100c498:	14002d16 	blt	r2,r16,100c550 <_strtod_r+0x1398>
 100c49c:	8080040c 	andi	r2,r16,16
 100c4a0:	10009d26 	beq	r2,zero,100c718 <_strtod_r+0x1560>
 100c4a4:	01001a84 	movi	r4,106
 100c4a8:	d9001c15 	stw	r4,112(sp)
 100c4ac:	0400110e 	bge	zero,r16,100c4f4 <_strtod_r+0x133c>
 100c4b0:	04404074 	movhi	r17,257
 100c4b4:	8c4e6304 	addi	r17,r17,14732
 100c4b8:	8080004c 	andi	r2,r16,1
 100c4bc:	1005003a 	cmpeq	r2,r2,zero
 100c4c0:	1000091e 	bne	r2,zero,100c4e8 <_strtod_r+0x1330>
 100c4c4:	e0800017 	ldw	r2,0(fp)
 100c4c8:	e0c00117 	ldw	r3,4(fp)
 100c4cc:	89800017 	ldw	r6,0(r17)
 100c4d0:	89c00117 	ldw	r7,4(r17)
 100c4d4:	180b883a 	mov	r5,r3
 100c4d8:	1009883a 	mov	r4,r2
 100c4dc:	100f7040 	call	100f704 <__muldf3>
 100c4e0:	e0c00115 	stw	r3,4(fp)
 100c4e4:	e0800015 	stw	r2,0(fp)
 100c4e8:	8021d07a 	srai	r16,r16,1
 100c4ec:	8c400204 	addi	r17,r17,8
 100c4f0:	043ff116 	blt	zero,r16,100c4b8 <_strtod_r+0x1300>
 100c4f4:	d8801c17 	ldw	r2,112(sp)
 100c4f8:	10000d26 	beq	r2,zero,100c530 <_strtod_r+0x1378>
 100c4fc:	e1000117 	ldw	r4,4(fp)
 100c500:	00c01ac4 	movi	r3,107
 100c504:	209ffc2c 	andhi	r2,r4,32752
 100c508:	1004d53a 	srli	r2,r2,20
 100c50c:	1887c83a 	sub	r3,r3,r2
 100c510:	00c0070e 	bge	zero,r3,100c530 <_strtod_r+0x1378>
 100c514:	008007c4 	movi	r2,31
 100c518:	10c0940e 	bge	r2,r3,100c76c <_strtod_r+0x15b4>
 100c51c:	00800d04 	movi	r2,52
 100c520:	e0000015 	stw	zero,0(fp)
 100c524:	10c08b0e 	bge	r2,r3,100c754 <_strtod_r+0x159c>
 100c528:	0180dc34 	movhi	r6,880
 100c52c:	e1800115 	stw	r6,4(fp)
 100c530:	e0800017 	ldw	r2,0(fp)
 100c534:	e0c00117 	ldw	r3,4(fp)
 100c538:	000d883a 	mov	r6,zero
 100c53c:	000f883a 	mov	r7,zero
 100c540:	180b883a 	mov	r5,r3
 100c544:	1009883a 	mov	r4,r2
 100c548:	100fda80 	call	100fda8 <__nedf2>
 100c54c:	103d501e 	bne	r2,zero,100ba90 <_strtod_r+0x8d8>
 100c550:	00800884 	movi	r2,34
 100c554:	a8800015 	stw	r2,0(r21)
 100c558:	e0000015 	stw	zero,0(fp)
 100c55c:	e0000115 	stw	zero,4(fp)
 100c560:	003b9f06 	br	100b3e0 <_strtod_r+0x228>
 100c564:	e1800117 	ldw	r6,4(fp)
 100c568:	00c00434 	movhi	r3,16
 100c56c:	18ffffc4 	addi	r3,r3,-1
 100c570:	30c4703a 	and	r2,r6,r3
 100c574:	103f311e 	bne	r2,zero,100c23c <_strtod_r+0x1084>
 100c578:	e1c00017 	ldw	r7,0(fp)
 100c57c:	383f301e 	bne	r7,zero,100c240 <_strtod_r+0x1088>
 100c580:	003f7906 	br	100c368 <_strtod_r+0x11b0>
 100c584:	d8c00f17 	ldw	r3,60(sp)
 100c588:	00bffa84 	movi	r2,-22
 100c58c:	18bcbf16 	blt	r3,r2,100b88c <_strtod_r+0x6d4>
 100c590:	1809883a 	mov	r4,r3
 100c594:	017ffe04 	movi	r5,-8
 100c598:	10010a40 	call	10010a4 <__mulsi3>
 100c59c:	00c04074 	movhi	r3,257
 100c5a0:	18ce1604 	addi	r3,r3,14424
 100c5a4:	10c5883a 	add	r2,r2,r3
 100c5a8:	e2000017 	ldw	r8,0(fp)
 100c5ac:	e2400117 	ldw	r9,4(fp)
 100c5b0:	12800017 	ldw	r10,0(r2)
 100c5b4:	12c00117 	ldw	r11,4(r2)
 100c5b8:	480b883a 	mov	r5,r9
 100c5bc:	4009883a 	mov	r4,r8
 100c5c0:	580f883a 	mov	r7,r11
 100c5c4:	500d883a 	mov	r6,r10
 100c5c8:	100fac80 	call	100fac8 <__divdf3>
 100c5cc:	e0c00115 	stw	r3,4(fp)
 100c5d0:	e0800015 	stw	r2,0(fp)
 100c5d4:	003b8206 	br	100b3e0 <_strtod_r+0x228>
 100c5d8:	d8801c17 	ldw	r2,112(sp)
 100c5dc:	1013003a 	cmpeq	r9,r2,zero
 100c5e0:	483e971e 	bne	r9,zero,100c040 <_strtod_r+0xe88>
 100c5e4:	003f6806 	br	100c388 <_strtod_r+0x11d0>
 100c5e8:	00801a44 	movi	r2,105
 100c5ec:	88bc5026 	beq	r17,r2,100b730 <_strtod_r+0x578>
 100c5f0:	00801b84 	movi	r2,110
 100c5f4:	88bb9b1e 	bne	r17,r2,100b464 <_strtod_r+0x2ac>
 100c5f8:	dc000404 	addi	r16,sp,16
 100c5fc:	8009883a 	mov	r4,r16
 100c600:	01404074 	movhi	r5,257
 100c604:	294e6204 	addi	r5,r5,14728
 100c608:	100b1700 	call	100b170 <match>
 100c60c:	103b9526 	beq	r2,zero,100b464 <_strtod_r+0x2ac>
 100c610:	d8800417 	ldw	r2,16(sp)
 100c614:	00c00a04 	movi	r3,40
 100c618:	11000007 	ldb	r4,0(r2)
 100c61c:	20c04026 	beq	r4,r3,100c720 <_strtod_r+0x1568>
 100c620:	01bffe34 	movhi	r6,65528
 100c624:	e1800115 	stw	r6,4(fp)
 100c628:	e0000015 	stw	zero,0(fp)
 100c62c:	003b6c06 	br	100b3e0 <_strtod_r+0x228>
 100c630:	d8c01817 	ldw	r3,96(sp)
 100c634:	00800404 	movi	r2,16
 100c638:	10c00516 	blt	r2,r3,100c650 <_strtod_r+0x1498>
 100c63c:	d9001117 	ldw	r4,68(sp)
 100c640:	01400284 	movi	r5,10
 100c644:	10010a40 	call	10010a4 <__mulsi3>
 100c648:	1585883a 	add	r2,r2,r22
 100c64c:	d8801115 	stw	r2,68(sp)
 100c650:	000d883a 	mov	r6,zero
 100c654:	003f2506 	br	100c2ec <_strtod_r+0x1134>
 100c658:	000d883a 	mov	r6,zero
 100c65c:	003ce306 	br	100b9ec <_strtod_r+0x834>
 100c660:	e4400117 	ldw	r17,4(fp)
 100c664:	3809883a 	mov	r4,r7
 100c668:	3821883a 	mov	r16,r7
 100c66c:	880b883a 	mov	r5,r17
 100c670:	100996c0 	call	100996c <__ulp>
 100c674:	180f883a 	mov	r7,r3
 100c678:	880b883a 	mov	r5,r17
 100c67c:	8009883a 	mov	r4,r16
 100c680:	100d883a 	mov	r6,r2
 100c684:	100f6900 	call	100f690 <__adddf3>
 100c688:	180b883a 	mov	r5,r3
 100c68c:	d8c01c17 	ldw	r3,112(sp)
 100c690:	1009883a 	mov	r4,r2
 100c694:	e1400115 	stw	r5,4(fp)
 100c698:	1813003a 	cmpeq	r9,r3,zero
 100c69c:	e1000015 	stw	r4,0(fp)
 100c6a0:	483e671e 	bne	r9,zero,100c040 <_strtod_r+0xe88>
 100c6a4:	003f3806 	br	100c388 <_strtod_r+0x11d0>
 100c6a8:	0080d434 	movhi	r2,848
 100c6ac:	188d883a 	add	r6,r3,r2
 100c6b0:	d8001c15 	stw	zero,112(sp)
 100c6b4:	e1800115 	stw	r6,4(fp)
 100c6b8:	003cf506 	br	100ba90 <_strtod_r+0x8d8>
 100c6bc:	d8c01c17 	ldw	r3,112(sp)
 100c6c0:	1813003a 	cmpeq	r9,r3,zero
 100c6c4:	483e5e1e 	bne	r9,zero,100c040 <_strtod_r+0xe88>
 100c6c8:	003f2f06 	br	100c388 <_strtod_r+0x11d0>
 100c6cc:	309ffc2c 	andhi	r2,r6,32752
 100c6d0:	00fffc34 	movhi	r3,65520
 100c6d4:	10c5883a 	add	r2,r2,r3
 100c6d8:	00c00434 	movhi	r3,16
 100c6dc:	18ffffc4 	addi	r3,r3,-1
 100c6e0:	10ccb03a 	or	r6,r2,r3
 100c6e4:	01ffffc4 	movi	r7,-1
 100c6e8:	e1800115 	stw	r6,4(fp)
 100c6ec:	e1c00015 	stw	r7,0(fp)
 100c6f0:	483e531e 	bne	r9,zero,100c040 <_strtod_r+0xe88>
 100c6f4:	003f2406 	br	100c388 <_strtod_r+0x11d0>
 100c6f8:	00bfffc4 	movi	r2,-1
 100c6fc:	003f4306 	br	100c40c <_strtod_r+0x1254>
 100c700:	0025883a 	mov	r18,zero
 100c704:	05804074 	movhi	r22,257
 100c708:	b58e4804 	addi	r22,r22,14624
 100c70c:	003c9206 	br	100b958 <_strtod_r+0x7a0>
 100c710:	d9c01817 	ldw	r7,96(sp)
 100c714:	003eeb06 	br	100c2c4 <_strtod_r+0x110c>
 100c718:	d8001c15 	stw	zero,112(sp)
 100c71c:	003f6306 	br	100c4ac <_strtod_r+0x12f4>
 100c720:	8009883a 	mov	r4,r16
 100c724:	01404074 	movhi	r5,257
 100c728:	2950cc04 	addi	r5,r5,17200
 100c72c:	d9800d04 	addi	r6,sp,52
 100c730:	100dfbc0 	call	100dfbc <__hexnan>
 100c734:	00c00144 	movi	r3,5
 100c738:	10ffb91e 	bne	r2,r3,100c620 <_strtod_r+0x1468>
 100c73c:	d8800e17 	ldw	r2,56(sp)
 100c740:	d9c00d17 	ldw	r7,52(sp)
 100c744:	119ffc34 	orhi	r6,r2,32752
 100c748:	e1800115 	stw	r6,4(fp)
 100c74c:	e1c00015 	stw	r7,0(fp)
 100c750:	003b2306 	br	100b3e0 <_strtod_r+0x228>
 100c754:	18fff804 	addi	r3,r3,-32
 100c758:	00bfffc4 	movi	r2,-1
 100c75c:	10c4983a 	sll	r2,r2,r3
 100c760:	208c703a 	and	r6,r4,r2
 100c764:	e1800115 	stw	r6,4(fp)
 100c768:	003f7106 	br	100c530 <_strtod_r+0x1378>
 100c76c:	00bfffc4 	movi	r2,-1
 100c770:	10c4983a 	sll	r2,r2,r3
 100c774:	e0c00017 	ldw	r3,0(fp)
 100c778:	188e703a 	and	r7,r3,r2
 100c77c:	e1c00015 	stw	r7,0(fp)
 100c780:	003f6b06 	br	100c530 <_strtod_r+0x1378>

0100c784 <strtof>:
 100c784:	defffa04 	addi	sp,sp,-24
 100c788:	dd000415 	stw	r20,16(sp)
 100c78c:	05004074 	movhi	r20,257
 100c790:	a5115504 	addi	r20,r20,17748
 100c794:	2007883a 	mov	r3,r4
 100c798:	a1000017 	ldw	r4,0(r20)
 100c79c:	280d883a 	mov	r6,r5
 100c7a0:	180b883a 	mov	r5,r3
 100c7a4:	dfc00515 	stw	ra,20(sp)
 100c7a8:	dcc00315 	stw	r19,12(sp)
 100c7ac:	dc800215 	stw	r18,8(sp)
 100c7b0:	dc400115 	stw	r17,4(sp)
 100c7b4:	dc000015 	stw	r16,0(sp)
 100c7b8:	100b1b80 	call	100b1b8 <_strtod_r>
 100c7bc:	180b883a 	mov	r5,r3
 100c7c0:	1009883a 	mov	r4,r2
 100c7c4:	1823883a 	mov	r17,r3
 100c7c8:	1021883a 	mov	r16,r2
 100c7cc:	10102200 	call	1010220 <__truncdfsf2>
 100c7d0:	1009883a 	mov	r4,r2
 100c7d4:	000b883a 	mov	r5,zero
 100c7d8:	1025883a 	mov	r18,r2
 100c7dc:	1027883a 	mov	r19,r2
 100c7e0:	100f0980 	call	100f098 <__nesf2>
 100c7e4:	000d883a 	mov	r6,zero
 100c7e8:	000f883a 	mov	r7,zero
 100c7ec:	8009883a 	mov	r4,r16
 100c7f0:	880b883a 	mov	r5,r17
 100c7f4:	10000e1e 	bne	r2,zero,100c830 <strtof+0xac>
 100c7f8:	100fda80 	call	100fda8 <__nedf2>
 100c7fc:	10000c26 	beq	r2,zero,100c830 <strtof+0xac>
 100c800:	a0c00017 	ldw	r3,0(r20)
 100c804:	00800884 	movi	r2,34
 100c808:	18800015 	stw	r2,0(r3)
 100c80c:	9805883a 	mov	r2,r19
 100c810:	dfc00517 	ldw	ra,20(sp)
 100c814:	dd000417 	ldw	r20,16(sp)
 100c818:	dcc00317 	ldw	r19,12(sp)
 100c81c:	dc800217 	ldw	r18,8(sp)
 100c820:	dc400117 	ldw	r17,4(sp)
 100c824:	dc000017 	ldw	r16,0(sp)
 100c828:	dec00604 	addi	sp,sp,24
 100c82c:	f800283a 	ret
 100c830:	9009883a 	mov	r4,r18
 100c834:	015fe034 	movhi	r5,32640
 100c838:	297fffc4 	addi	r5,r5,-1
 100c83c:	100f1100 	call	100f110 <__gtsf2>
 100c840:	00ffffc4 	movi	r3,-1
 100c844:	011ffc34 	movhi	r4,32752
 100c848:	213fffc4 	addi	r4,r4,-1
 100c84c:	200f883a 	mov	r7,r4
 100c850:	180d883a 	mov	r6,r3
 100c854:	8009883a 	mov	r4,r16
 100c858:	880b883a 	mov	r5,r17
 100c85c:	00800f16 	blt	zero,r2,100c89c <strtof+0x118>
 100c860:	9009883a 	mov	r4,r18
 100c864:	017fe034 	movhi	r5,65408
 100c868:	297fffc4 	addi	r5,r5,-1
 100c86c:	100f1880 	call	100f188 <__ltsf2>
 100c870:	023fffc4 	movi	r8,-1
 100c874:	027ffc34 	movhi	r9,65520
 100c878:	4a7fffc4 	addi	r9,r9,-1
 100c87c:	880b883a 	mov	r5,r17
 100c880:	480f883a 	mov	r7,r9
 100c884:	8009883a 	mov	r4,r16
 100c888:	400d883a 	mov	r6,r8
 100c88c:	103fdf0e 	bge	r2,zero,100c80c <strtof+0x88>
 100c890:	100ff400 	call	100ff40 <__ltdf2>
 100c894:	103fda0e 	bge	r2,zero,100c800 <strtof+0x7c>
 100c898:	003fdc06 	br	100c80c <strtof+0x88>
 100c89c:	100fe300 	call	100fe30 <__gtdf2>
 100c8a0:	00bfd70e 	bge	zero,r2,100c800 <strtof+0x7c>
 100c8a4:	003fee06 	br	100c860 <strtof+0xdc>

0100c8a8 <strtod>:
 100c8a8:	01804074 	movhi	r6,257
 100c8ac:	31915504 	addi	r6,r6,17748
 100c8b0:	2007883a 	mov	r3,r4
 100c8b4:	31000017 	ldw	r4,0(r6)
 100c8b8:	280d883a 	mov	r6,r5
 100c8bc:	180b883a 	mov	r5,r3
 100c8c0:	100b1b81 	jmpi	100b1b8 <_strtod_r>

0100c8c4 <_strtol_r>:
 100c8c4:	defff304 	addi	sp,sp,-52
 100c8c8:	00804074 	movhi	r2,257
 100c8cc:	10915904 	addi	r2,r2,17764
 100c8d0:	dd000715 	stw	r20,28(sp)
 100c8d4:	15000017 	ldw	r20,0(r2)
 100c8d8:	ddc00a15 	stw	r23,40(sp)
 100c8dc:	dc800515 	stw	r18,20(sp)
 100c8e0:	dc400415 	stw	r17,16(sp)
 100c8e4:	dfc00c15 	stw	ra,48(sp)
 100c8e8:	df000b15 	stw	fp,44(sp)
 100c8ec:	dd800915 	stw	r22,36(sp)
 100c8f0:	dd400815 	stw	r21,32(sp)
 100c8f4:	dcc00615 	stw	r19,24(sp)
 100c8f8:	dc000315 	stw	r16,12(sp)
 100c8fc:	282f883a 	mov	r23,r5
 100c900:	d9000115 	stw	r4,4(sp)
 100c904:	d9800215 	stw	r6,8(sp)
 100c908:	3825883a 	mov	r18,r7
 100c90c:	2823883a 	mov	r17,r5
 100c910:	8c000007 	ldb	r16,0(r17)
 100c914:	8c400044 	addi	r17,r17,1
 100c918:	a407883a 	add	r3,r20,r16
 100c91c:	18800003 	ldbu	r2,0(r3)
 100c920:	1080020c 	andi	r2,r2,8
 100c924:	103ffa1e 	bne	r2,zero,100c910 <_strtol_r+0x4c>
 100c928:	00800b44 	movi	r2,45
 100c92c:	80805c26 	beq	r16,r2,100caa0 <_strtol_r+0x1dc>
 100c930:	00800ac4 	movi	r2,43
 100c934:	80805726 	beq	r16,r2,100ca94 <_strtol_r+0x1d0>
 100c938:	d8000015 	stw	zero,0(sp)
 100c93c:	9007003a 	cmpeq	r3,r18,zero
 100c940:	1800431e 	bne	r3,zero,100ca50 <_strtol_r+0x18c>
 100c944:	00800404 	movi	r2,16
 100c948:	90804126 	beq	r18,r2,100ca50 <_strtol_r+0x18c>
 100c94c:	902b883a 	mov	r21,r18
 100c950:	d8c00017 	ldw	r3,0(sp)
 100c954:	1838c03a 	cmpne	fp,r3,zero
 100c958:	e0004a1e 	bne	fp,zero,100ca84 <_strtol_r+0x1c0>
 100c95c:	04e00034 	movhi	r19,32768
 100c960:	9cffffc4 	addi	r19,r19,-1
 100c964:	9809883a 	mov	r4,r19
 100c968:	a80b883a 	mov	r5,r21
 100c96c:	100109c0 	call	100109c <__umodsi3>
 100c970:	9809883a 	mov	r4,r19
 100c974:	a80b883a 	mov	r5,r21
 100c978:	102d883a 	mov	r22,r2
 100c97c:	10010940 	call	1001094 <__udivsi3>
 100c980:	1027883a 	mov	r19,r2
 100c984:	a405883a 	add	r2,r20,r16
 100c988:	11400003 	ldbu	r5,0(r2)
 100c98c:	0009883a 	mov	r4,zero
 100c990:	000d883a 	mov	r6,zero
 100c994:	28c0010c 	andi	r3,r5,4
 100c998:	18000f26 	beq	r3,zero,100c9d8 <_strtol_r+0x114>
 100c99c:	843ff404 	addi	r16,r16,-48
 100c9a0:	8480150e 	bge	r16,r18,100c9f8 <_strtol_r+0x134>
 100c9a4:	30003216 	blt	r6,zero,100ca70 <_strtol_r+0x1ac>
 100c9a8:	99003136 	bltu	r19,r4,100ca70 <_strtol_r+0x1ac>
 100c9ac:	24c02f26 	beq	r4,r19,100ca6c <_strtol_r+0x1a8>
 100c9b0:	a80b883a 	mov	r5,r21
 100c9b4:	10010a40 	call	10010a4 <__mulsi3>
 100c9b8:	1409883a 	add	r4,r2,r16
 100c9bc:	01800044 	movi	r6,1
 100c9c0:	8c000007 	ldb	r16,0(r17)
 100c9c4:	8c400044 	addi	r17,r17,1
 100c9c8:	a405883a 	add	r2,r20,r16
 100c9cc:	11400003 	ldbu	r5,0(r2)
 100c9d0:	28c0010c 	andi	r3,r5,4
 100c9d4:	183ff11e 	bne	r3,zero,100c99c <_strtol_r+0xd8>
 100c9d8:	288000cc 	andi	r2,r5,3
 100c9dc:	10000626 	beq	r2,zero,100c9f8 <_strtol_r+0x134>
 100c9e0:	2880004c 	andi	r2,r5,1
 100c9e4:	1005003a 	cmpeq	r2,r2,zero
 100c9e8:	1000231e 	bne	r2,zero,100ca78 <_strtol_r+0x1b4>
 100c9ec:	00800dc4 	movi	r2,55
 100c9f0:	80a1c83a 	sub	r16,r16,r2
 100c9f4:	84bfeb16 	blt	r16,r18,100c9a4 <_strtol_r+0xe0>
 100c9f8:	30002e16 	blt	r6,zero,100cab4 <_strtol_r+0x1f0>
 100c9fc:	e000231e 	bne	fp,zero,100ca8c <_strtol_r+0x1c8>
 100ca00:	2007883a 	mov	r3,r4
 100ca04:	d8800217 	ldw	r2,8(sp)
 100ca08:	10000426 	beq	r2,zero,100ca1c <_strtol_r+0x158>
 100ca0c:	30000126 	beq	r6,zero,100ca14 <_strtol_r+0x150>
 100ca10:	8dffffc4 	addi	r23,r17,-1
 100ca14:	d9000217 	ldw	r4,8(sp)
 100ca18:	25c00015 	stw	r23,0(r4)
 100ca1c:	1805883a 	mov	r2,r3
 100ca20:	dfc00c17 	ldw	ra,48(sp)
 100ca24:	df000b17 	ldw	fp,44(sp)
 100ca28:	ddc00a17 	ldw	r23,40(sp)
 100ca2c:	dd800917 	ldw	r22,36(sp)
 100ca30:	dd400817 	ldw	r21,32(sp)
 100ca34:	dd000717 	ldw	r20,28(sp)
 100ca38:	dcc00617 	ldw	r19,24(sp)
 100ca3c:	dc800517 	ldw	r18,20(sp)
 100ca40:	dc400417 	ldw	r17,16(sp)
 100ca44:	dc000317 	ldw	r16,12(sp)
 100ca48:	dec00d04 	addi	sp,sp,52
 100ca4c:	f800283a 	ret
 100ca50:	00800c04 	movi	r2,48
 100ca54:	80801f26 	beq	r16,r2,100cad4 <_strtol_r+0x210>
 100ca58:	183fbc26 	beq	r3,zero,100c94c <_strtol_r+0x88>
 100ca5c:	00800c04 	movi	r2,48
 100ca60:	80802926 	beq	r16,r2,100cb08 <_strtol_r+0x244>
 100ca64:	04800284 	movi	r18,10
 100ca68:	003fb806 	br	100c94c <_strtol_r+0x88>
 100ca6c:	b43fd00e 	bge	r22,r16,100c9b0 <_strtol_r+0xec>
 100ca70:	01bfffc4 	movi	r6,-1
 100ca74:	003fd206 	br	100c9c0 <_strtol_r+0xfc>
 100ca78:	008015c4 	movi	r2,87
 100ca7c:	80a1c83a 	sub	r16,r16,r2
 100ca80:	003fdc06 	br	100c9f4 <_strtol_r+0x130>
 100ca84:	04e00034 	movhi	r19,32768
 100ca88:	003fb606 	br	100c964 <_strtol_r+0xa0>
 100ca8c:	0107c83a 	sub	r3,zero,r4
 100ca90:	003fdc06 	br	100ca04 <_strtol_r+0x140>
 100ca94:	8c000007 	ldb	r16,0(r17)
 100ca98:	8c400044 	addi	r17,r17,1
 100ca9c:	003fa606 	br	100c938 <_strtol_r+0x74>
 100caa0:	8c000007 	ldb	r16,0(r17)
 100caa4:	00800044 	movi	r2,1
 100caa8:	8c400044 	addi	r17,r17,1
 100caac:	d8800015 	stw	r2,0(sp)
 100cab0:	003fa206 	br	100c93c <_strtol_r+0x78>
 100cab4:	d9000017 	ldw	r4,0(sp)
 100cab8:	2005003a 	cmpeq	r2,r4,zero
 100cabc:	10000f1e 	bne	r2,zero,100cafc <_strtol_r+0x238>
 100cac0:	00e00034 	movhi	r3,32768
 100cac4:	d9000117 	ldw	r4,4(sp)
 100cac8:	00800884 	movi	r2,34
 100cacc:	20800015 	stw	r2,0(r4)
 100cad0:	003fcc06 	br	100ca04 <_strtol_r+0x140>
 100cad4:	89000007 	ldb	r4,0(r17)
 100cad8:	00801e04 	movi	r2,120
 100cadc:	20800226 	beq	r4,r2,100cae8 <_strtol_r+0x224>
 100cae0:	00801604 	movi	r2,88
 100cae4:	20bfdc1e 	bne	r4,r2,100ca58 <_strtol_r+0x194>
 100cae8:	8c000047 	ldb	r16,1(r17)
 100caec:	04800404 	movi	r18,16
 100caf0:	8c400084 	addi	r17,r17,2
 100caf4:	902b883a 	mov	r21,r18
 100caf8:	003f9506 	br	100c950 <_strtol_r+0x8c>
 100cafc:	00e00034 	movhi	r3,32768
 100cb00:	18ffffc4 	addi	r3,r3,-1
 100cb04:	003fef06 	br	100cac4 <_strtol_r+0x200>
 100cb08:	04800204 	movi	r18,8
 100cb0c:	902b883a 	mov	r21,r18
 100cb10:	003f8f06 	br	100c950 <_strtol_r+0x8c>

0100cb14 <strtol>:
 100cb14:	00804074 	movhi	r2,257
 100cb18:	10915504 	addi	r2,r2,17748
 100cb1c:	2013883a 	mov	r9,r4
 100cb20:	11000017 	ldw	r4,0(r2)
 100cb24:	2805883a 	mov	r2,r5
 100cb28:	300f883a 	mov	r7,r6
 100cb2c:	480b883a 	mov	r5,r9
 100cb30:	100d883a 	mov	r6,r2
 100cb34:	100c8c41 	jmpi	100c8c4 <_strtol_r>

0100cb38 <_strtoll_r>:
 100cb38:	defff004 	addi	sp,sp,-64
 100cb3c:	00804074 	movhi	r2,257
 100cb40:	10915904 	addi	r2,r2,17764
 100cb44:	df000e15 	stw	fp,56(sp)
 100cb48:	17000017 	ldw	fp,0(r2)
 100cb4c:	ddc00d15 	stw	r23,52(sp)
 100cb50:	dd000a15 	stw	r20,40(sp)
 100cb54:	dfc00f15 	stw	ra,60(sp)
 100cb58:	dd800c15 	stw	r22,48(sp)
 100cb5c:	dd400b15 	stw	r21,44(sp)
 100cb60:	dcc00915 	stw	r19,36(sp)
 100cb64:	dc800815 	stw	r18,32(sp)
 100cb68:	dc400715 	stw	r17,28(sp)
 100cb6c:	dc000615 	stw	r16,24(sp)
 100cb70:	d9400315 	stw	r5,12(sp)
 100cb74:	d9000215 	stw	r4,8(sp)
 100cb78:	d9800415 	stw	r6,16(sp)
 100cb7c:	382f883a 	mov	r23,r7
 100cb80:	2829883a 	mov	r20,r5
 100cb84:	a4c00007 	ldb	r19,0(r20)
 100cb88:	a5000044 	addi	r20,r20,1
 100cb8c:	e4c7883a 	add	r3,fp,r19
 100cb90:	18800003 	ldbu	r2,0(r3)
 100cb94:	1080020c 	andi	r2,r2,8
 100cb98:	103ffa1e 	bne	r2,zero,100cb84 <_strtoll_r+0x4c>
 100cb9c:	00800b44 	movi	r2,45
 100cba0:	98808826 	beq	r19,r2,100cdc4 <_strtoll_r+0x28c>
 100cba4:	00800ac4 	movi	r2,43
 100cba8:	98808326 	beq	r19,r2,100cdb8 <_strtoll_r+0x280>
 100cbac:	d8000115 	stw	zero,4(sp)
 100cbb0:	b807003a 	cmpeq	r3,r23,zero
 100cbb4:	18005f1e 	bne	r3,zero,100cd34 <_strtoll_r+0x1fc>
 100cbb8:	00800404 	movi	r2,16
 100cbbc:	b8805d26 	beq	r23,r2,100cd34 <_strtoll_r+0x1fc>
 100cbc0:	b82dd7fa 	srai	r22,r23,31
 100cbc4:	b82b883a 	mov	r21,r23
 100cbc8:	d8c00117 	ldw	r3,4(sp)
 100cbcc:	1806c03a 	cmpne	r3,r3,zero
 100cbd0:	d8c00515 	stw	r3,20(sp)
 100cbd4:	1800631e 	bne	r3,zero,100cd64 <_strtoll_r+0x22c>
 100cbd8:	043fffc4 	movi	r16,-1
 100cbdc:	04600034 	movhi	r17,32768
 100cbe0:	8c7fffc4 	addi	r17,r17,-1
 100cbe4:	880b883a 	mov	r5,r17
 100cbe8:	8009883a 	mov	r4,r16
 100cbec:	a80d883a 	mov	r6,r21
 100cbf0:	b00f883a 	mov	r7,r22
 100cbf4:	100ea380 	call	100ea38 <__umoddi3>
 100cbf8:	880b883a 	mov	r5,r17
 100cbfc:	8009883a 	mov	r4,r16
 100cc00:	b00f883a 	mov	r7,r22
 100cc04:	a80d883a 	mov	r6,r21
 100cc08:	d8800015 	stw	r2,0(sp)
 100cc0c:	100e3cc0 	call	100e3cc <__udivdi3>
 100cc10:	1023883a 	mov	r17,r2
 100cc14:	e4c5883a 	add	r2,fp,r19
 100cc18:	11000003 	ldbu	r4,0(r2)
 100cc1c:	1825883a 	mov	r18,r3
 100cc20:	0015883a 	mov	r10,zero
 100cc24:	20c0010c 	andi	r3,r4,4
 100cc28:	0017883a 	mov	r11,zero
 100cc2c:	000f883a 	mov	r7,zero
 100cc30:	18001a26 	beq	r3,zero,100cc9c <_strtoll_r+0x164>
 100cc34:	9c3ff404 	addi	r16,r19,-48
 100cc38:	85c0200e 	bge	r16,r23,100ccbc <_strtoll_r+0x184>
 100cc3c:	38003b16 	blt	r7,zero,100cd2c <_strtoll_r+0x1f4>
 100cc40:	92c03a36 	bltu	r18,r11,100cd2c <_strtoll_r+0x1f4>
 100cc44:	5c803826 	beq	r11,r18,100cd28 <_strtoll_r+0x1f0>
 100cc48:	54404c26 	beq	r10,r17,100cd7c <_strtoll_r+0x244>
 100cc4c:	580b883a 	mov	r5,r11
 100cc50:	5009883a 	mov	r4,r10
 100cc54:	a80d883a 	mov	r6,r21
 100cc58:	b00f883a 	mov	r7,r22
 100cc5c:	100e2040 	call	100e204 <__muldi3>
 100cc60:	8013d7fa 	srai	r9,r16,31
 100cc64:	100d883a 	mov	r6,r2
 100cc68:	1405883a 	add	r2,r2,r16
 100cc6c:	118d803a 	cmpltu	r6,r2,r6
 100cc70:	1a47883a 	add	r3,r3,r9
 100cc74:	30cd883a 	add	r6,r6,r3
 100cc78:	1015883a 	mov	r10,r2
 100cc7c:	3017883a 	mov	r11,r6
 100cc80:	01c00044 	movi	r7,1
 100cc84:	a4c00007 	ldb	r19,0(r20)
 100cc88:	a5000044 	addi	r20,r20,1
 100cc8c:	e4c5883a 	add	r2,fp,r19
 100cc90:	11000003 	ldbu	r4,0(r2)
 100cc94:	20c0010c 	andi	r3,r4,4
 100cc98:	183fe61e 	bne	r3,zero,100cc34 <_strtoll_r+0xfc>
 100cc9c:	208000cc 	andi	r2,r4,3
 100cca0:	10000626 	beq	r2,zero,100ccbc <_strtoll_r+0x184>
 100cca4:	2080004c 	andi	r2,r4,1
 100cca8:	1005003a 	cmpeq	r2,r2,zero
 100ccac:	1000301e 	bne	r2,zero,100cd70 <_strtoll_r+0x238>
 100ccb0:	02000dc4 	movi	r8,55
 100ccb4:	9a21c83a 	sub	r16,r19,r8
 100ccb8:	85ffe016 	blt	r16,r23,100cc3c <_strtoll_r+0x104>
 100ccbc:	38004616 	blt	r7,zero,100cdd8 <_strtoll_r+0x2a0>
 100ccc0:	d8800517 	ldw	r2,20(sp)
 100ccc4:	1000341e 	bne	r2,zero,100cd98 <_strtoll_r+0x260>
 100ccc8:	500b883a 	mov	r5,r10
 100cccc:	580d883a 	mov	r6,r11
 100ccd0:	d8c00417 	ldw	r3,16(sp)
 100ccd4:	18000626 	beq	r3,zero,100ccf0 <_strtoll_r+0x1b8>
 100ccd8:	38000226 	beq	r7,zero,100cce4 <_strtoll_r+0x1ac>
 100ccdc:	a53fffc4 	addi	r20,r20,-1
 100cce0:	dd000315 	stw	r20,12(sp)
 100cce4:	d8c00317 	ldw	r3,12(sp)
 100cce8:	d8800417 	ldw	r2,16(sp)
 100ccec:	10c00015 	stw	r3,0(r2)
 100ccf0:	2805883a 	mov	r2,r5
 100ccf4:	3007883a 	mov	r3,r6
 100ccf8:	dfc00f17 	ldw	ra,60(sp)
 100ccfc:	df000e17 	ldw	fp,56(sp)
 100cd00:	ddc00d17 	ldw	r23,52(sp)
 100cd04:	dd800c17 	ldw	r22,48(sp)
 100cd08:	dd400b17 	ldw	r21,44(sp)
 100cd0c:	dd000a17 	ldw	r20,40(sp)
 100cd10:	dcc00917 	ldw	r19,36(sp)
 100cd14:	dc800817 	ldw	r18,32(sp)
 100cd18:	dc400717 	ldw	r17,28(sp)
 100cd1c:	dc000617 	ldw	r16,24(sp)
 100cd20:	dec01004 	addi	sp,sp,64
 100cd24:	f800283a 	ret
 100cd28:	8abfc72e 	bgeu	r17,r10,100cc48 <_strtoll_r+0x110>
 100cd2c:	01ffffc4 	movi	r7,-1
 100cd30:	003fd406 	br	100cc84 <_strtoll_r+0x14c>
 100cd34:	00800c04 	movi	r2,48
 100cd38:	98803226 	beq	r19,r2,100ce04 <_strtoll_r+0x2cc>
 100cd3c:	183fa026 	beq	r3,zero,100cbc0 <_strtoll_r+0x88>
 100cd40:	00800c04 	movi	r2,48
 100cd44:	98803e26 	beq	r19,r2,100ce40 <_strtoll_r+0x308>
 100cd48:	d8c00117 	ldw	r3,4(sp)
 100cd4c:	05c00284 	movi	r23,10
 100cd50:	b82b883a 	mov	r21,r23
 100cd54:	1806c03a 	cmpne	r3,r3,zero
 100cd58:	002d883a 	mov	r22,zero
 100cd5c:	d8c00515 	stw	r3,20(sp)
 100cd60:	183f9d26 	beq	r3,zero,100cbd8 <_strtoll_r+0xa0>
 100cd64:	0021883a 	mov	r16,zero
 100cd68:	04600034 	movhi	r17,32768
 100cd6c:	003f9d06 	br	100cbe4 <_strtoll_r+0xac>
 100cd70:	020015c4 	movi	r8,87
 100cd74:	9a21c83a 	sub	r16,r19,r8
 100cd78:	003fcf06 	br	100ccb8 <_strtoll_r+0x180>
 100cd7c:	5cbfb31e 	bne	r11,r18,100cc4c <_strtoll_r+0x114>
 100cd80:	d8800017 	ldw	r2,0(sp)
 100cd84:	143fb10e 	bge	r2,r16,100cc4c <_strtoll_r+0x114>
 100cd88:	8815883a 	mov	r10,r17
 100cd8c:	9017883a 	mov	r11,r18
 100cd90:	01ffffc4 	movi	r7,-1
 100cd94:	003fbb06 	br	100cc84 <_strtoll_r+0x14c>
 100cd98:	0009883a 	mov	r4,zero
 100cd9c:	2285c83a 	sub	r2,r4,r10
 100cda0:	2089803a 	cmpltu	r4,r4,r2
 100cda4:	02c7c83a 	sub	r3,zero,r11
 100cda8:	1909c83a 	sub	r4,r3,r4
 100cdac:	100b883a 	mov	r5,r2
 100cdb0:	200d883a 	mov	r6,r4
 100cdb4:	003fc606 	br	100ccd0 <_strtoll_r+0x198>
 100cdb8:	a4c00007 	ldb	r19,0(r20)
 100cdbc:	a5000044 	addi	r20,r20,1
 100cdc0:	003f7a06 	br	100cbac <_strtoll_r+0x74>
 100cdc4:	a4c00007 	ldb	r19,0(r20)
 100cdc8:	00800044 	movi	r2,1
 100cdcc:	a5000044 	addi	r20,r20,1
 100cdd0:	d8800115 	stw	r2,4(sp)
 100cdd4:	003f7606 	br	100cbb0 <_strtoll_r+0x78>
 100cdd8:	d8c00117 	ldw	r3,4(sp)
 100cddc:	1805003a 	cmpeq	r2,r3,zero
 100cde0:	1000131e 	bne	r2,zero,100ce30 <_strtoll_r+0x2f8>
 100cde4:	0005883a 	mov	r2,zero
 100cde8:	00e00034 	movhi	r3,32768
 100cdec:	100b883a 	mov	r5,r2
 100cdf0:	180d883a 	mov	r6,r3
 100cdf4:	d8c00217 	ldw	r3,8(sp)
 100cdf8:	00800884 	movi	r2,34
 100cdfc:	18800015 	stw	r2,0(r3)
 100ce00:	003fb306 	br	100ccd0 <_strtoll_r+0x198>
 100ce04:	a1000007 	ldb	r4,0(r20)
 100ce08:	00801e04 	movi	r2,120
 100ce0c:	20800226 	beq	r4,r2,100ce18 <_strtoll_r+0x2e0>
 100ce10:	00801604 	movi	r2,88
 100ce14:	20bfc91e 	bne	r4,r2,100cd3c <_strtoll_r+0x204>
 100ce18:	a4c00047 	ldb	r19,1(r20)
 100ce1c:	05c00404 	movi	r23,16
 100ce20:	b82b883a 	mov	r21,r23
 100ce24:	a5000084 	addi	r20,r20,2
 100ce28:	002d883a 	mov	r22,zero
 100ce2c:	003f6606 	br	100cbc8 <_strtoll_r+0x90>
 100ce30:	017fffc4 	movi	r5,-1
 100ce34:	01a00034 	movhi	r6,32768
 100ce38:	31bfffc4 	addi	r6,r6,-1
 100ce3c:	003fed06 	br	100cdf4 <_strtoll_r+0x2bc>
 100ce40:	05c00204 	movi	r23,8
 100ce44:	b82b883a 	mov	r21,r23
 100ce48:	002d883a 	mov	r22,zero
 100ce4c:	003f5e06 	br	100cbc8 <_strtoll_r+0x90>

0100ce50 <_strtoul_r>:
 100ce50:	defff404 	addi	sp,sp,-48
 100ce54:	00804074 	movhi	r2,257
 100ce58:	10915904 	addi	r2,r2,17764
 100ce5c:	dd000615 	stw	r20,24(sp)
 100ce60:	15000017 	ldw	r20,0(r2)
 100ce64:	df000a15 	stw	fp,40(sp)
 100ce68:	ddc00915 	stw	r23,36(sp)
 100ce6c:	dc800415 	stw	r18,16(sp)
 100ce70:	dc400315 	stw	r17,12(sp)
 100ce74:	dfc00b15 	stw	ra,44(sp)
 100ce78:	dd800815 	stw	r22,32(sp)
 100ce7c:	dd400715 	stw	r21,28(sp)
 100ce80:	dcc00515 	stw	r19,20(sp)
 100ce84:	dc000215 	stw	r16,8(sp)
 100ce88:	282f883a 	mov	r23,r5
 100ce8c:	d9000115 	stw	r4,4(sp)
 100ce90:	3039883a 	mov	fp,r6
 100ce94:	3825883a 	mov	r18,r7
 100ce98:	2823883a 	mov	r17,r5
 100ce9c:	8c000007 	ldb	r16,0(r17)
 100cea0:	8c400044 	addi	r17,r17,1
 100cea4:	a407883a 	add	r3,r20,r16
 100cea8:	18800003 	ldbu	r2,0(r3)
 100ceac:	1080020c 	andi	r2,r2,8
 100ceb0:	103ffa1e 	bne	r2,zero,100ce9c <_strtoul_r+0x4c>
 100ceb4:	00800b44 	movi	r2,45
 100ceb8:	80805826 	beq	r16,r2,100d01c <_strtoul_r+0x1cc>
 100cebc:	00800ac4 	movi	r2,43
 100cec0:	80805326 	beq	r16,r2,100d010 <_strtoul_r+0x1c0>
 100cec4:	d8000015 	stw	zero,0(sp)
 100cec8:	9007003a 	cmpeq	r3,r18,zero
 100cecc:	18003d1e 	bne	r3,zero,100cfc4 <_strtoul_r+0x174>
 100ced0:	00800404 	movi	r2,16
 100ced4:	90803b26 	beq	r18,r2,100cfc4 <_strtoul_r+0x174>
 100ced8:	013fffc4 	movi	r4,-1
 100cedc:	900b883a 	mov	r5,r18
 100cee0:	10010940 	call	1001094 <__udivsi3>
 100cee4:	013fffc4 	movi	r4,-1
 100cee8:	900b883a 	mov	r5,r18
 100ceec:	1027883a 	mov	r19,r2
 100cef0:	100109c0 	call	100109c <__umodsi3>
 100cef4:	102d883a 	mov	r22,r2
 100cef8:	902b883a 	mov	r21,r18
 100cefc:	a405883a 	add	r2,r20,r16
 100cf00:	11400003 	ldbu	r5,0(r2)
 100cf04:	0009883a 	mov	r4,zero
 100cf08:	000d883a 	mov	r6,zero
 100cf0c:	28c0010c 	andi	r3,r5,4
 100cf10:	18000f26 	beq	r3,zero,100cf50 <_strtoul_r+0x100>
 100cf14:	843ff404 	addi	r16,r16,-48
 100cf18:	8480150e 	bge	r16,r18,100cf70 <_strtoul_r+0x120>
 100cf1c:	30003516 	blt	r6,zero,100cff4 <_strtoul_r+0x1a4>
 100cf20:	99003436 	bltu	r19,r4,100cff4 <_strtoul_r+0x1a4>
 100cf24:	24c03226 	beq	r4,r19,100cff0 <_strtoul_r+0x1a0>
 100cf28:	a80b883a 	mov	r5,r21
 100cf2c:	10010a40 	call	10010a4 <__mulsi3>
 100cf30:	1409883a 	add	r4,r2,r16
 100cf34:	01800044 	movi	r6,1
 100cf38:	8c000007 	ldb	r16,0(r17)
 100cf3c:	8c400044 	addi	r17,r17,1
 100cf40:	a405883a 	add	r2,r20,r16
 100cf44:	11400003 	ldbu	r5,0(r2)
 100cf48:	28c0010c 	andi	r3,r5,4
 100cf4c:	183ff11e 	bne	r3,zero,100cf14 <_strtoul_r+0xc4>
 100cf50:	288000cc 	andi	r2,r5,3
 100cf54:	10000626 	beq	r2,zero,100cf70 <_strtoul_r+0x120>
 100cf58:	2880004c 	andi	r2,r5,1
 100cf5c:	1005003a 	cmpeq	r2,r2,zero
 100cf60:	1000261e 	bne	r2,zero,100cffc <_strtoul_r+0x1ac>
 100cf64:	00800dc4 	movi	r2,55
 100cf68:	80a1c83a 	sub	r16,r16,r2
 100cf6c:	84bfeb16 	blt	r16,r18,100cf1c <_strtoul_r+0xcc>
 100cf70:	3000420e 	bge	r6,zero,100d07c <_strtoul_r+0x22c>
 100cf74:	d8c00117 	ldw	r3,4(sp)
 100cf78:	00800884 	movi	r2,34
 100cf7c:	013fffc4 	movi	r4,-1
 100cf80:	18800015 	stw	r2,0(r3)
 100cf84:	e0000226 	beq	fp,zero,100cf90 <_strtoul_r+0x140>
 100cf88:	30001f1e 	bne	r6,zero,100d008 <_strtoul_r+0x1b8>
 100cf8c:	e5c00015 	stw	r23,0(fp)
 100cf90:	2005883a 	mov	r2,r4
 100cf94:	dfc00b17 	ldw	ra,44(sp)
 100cf98:	df000a17 	ldw	fp,40(sp)
 100cf9c:	ddc00917 	ldw	r23,36(sp)
 100cfa0:	dd800817 	ldw	r22,32(sp)
 100cfa4:	dd400717 	ldw	r21,28(sp)
 100cfa8:	dd000617 	ldw	r20,24(sp)
 100cfac:	dcc00517 	ldw	r19,20(sp)
 100cfb0:	dc800417 	ldw	r18,16(sp)
 100cfb4:	dc400317 	ldw	r17,12(sp)
 100cfb8:	dc000217 	ldw	r16,8(sp)
 100cfbc:	dec00c04 	addi	sp,sp,48
 100cfc0:	f800283a 	ret
 100cfc4:	00800c04 	movi	r2,48
 100cfc8:	80801926 	beq	r16,r2,100d030 <_strtoul_r+0x1e0>
 100cfcc:	183fc226 	beq	r3,zero,100ced8 <_strtoul_r+0x88>
 100cfd0:	00800c04 	movi	r2,48
 100cfd4:	80802326 	beq	r16,r2,100d064 <_strtoul_r+0x214>
 100cfd8:	04800284 	movi	r18,10
 100cfdc:	902b883a 	mov	r21,r18
 100cfe0:	04c666b4 	movhi	r19,6554
 100cfe4:	9ce66644 	addi	r19,r19,-26215
 100cfe8:	05800144 	movi	r22,5
 100cfec:	003fc306 	br	100cefc <_strtoul_r+0xac>
 100cff0:	b43fcd0e 	bge	r22,r16,100cf28 <_strtoul_r+0xd8>
 100cff4:	01bfffc4 	movi	r6,-1
 100cff8:	003fcf06 	br	100cf38 <_strtoul_r+0xe8>
 100cffc:	008015c4 	movi	r2,87
 100d000:	80a1c83a 	sub	r16,r16,r2
 100d004:	003fd906 	br	100cf6c <_strtoul_r+0x11c>
 100d008:	8dffffc4 	addi	r23,r17,-1
 100d00c:	003fdf06 	br	100cf8c <_strtoul_r+0x13c>
 100d010:	8c000007 	ldb	r16,0(r17)
 100d014:	8c400044 	addi	r17,r17,1
 100d018:	003faa06 	br	100cec4 <_strtoul_r+0x74>
 100d01c:	8c000007 	ldb	r16,0(r17)
 100d020:	00800044 	movi	r2,1
 100d024:	8c400044 	addi	r17,r17,1
 100d028:	d8800015 	stw	r2,0(sp)
 100d02c:	003fa606 	br	100cec8 <_strtoul_r+0x78>
 100d030:	89000007 	ldb	r4,0(r17)
 100d034:	00801e04 	movi	r2,120
 100d038:	20800226 	beq	r4,r2,100d044 <_strtoul_r+0x1f4>
 100d03c:	00801604 	movi	r2,88
 100d040:	20bfe21e 	bne	r4,r2,100cfcc <_strtoul_r+0x17c>
 100d044:	8c000047 	ldb	r16,1(r17)
 100d048:	04800404 	movi	r18,16
 100d04c:	8c400084 	addi	r17,r17,2
 100d050:	902b883a 	mov	r21,r18
 100d054:	04c40034 	movhi	r19,4096
 100d058:	9cffffc4 	addi	r19,r19,-1
 100d05c:	058003c4 	movi	r22,15
 100d060:	003fa606 	br	100cefc <_strtoul_r+0xac>
 100d064:	04800204 	movi	r18,8
 100d068:	902b883a 	mov	r21,r18
 100d06c:	04c80034 	movhi	r19,8192
 100d070:	9cffffc4 	addi	r19,r19,-1
 100d074:	058001c4 	movi	r22,7
 100d078:	003fa006 	br	100cefc <_strtoul_r+0xac>
 100d07c:	d8c00017 	ldw	r3,0(sp)
 100d080:	1805003a 	cmpeq	r2,r3,zero
 100d084:	103fbf1e 	bne	r2,zero,100cf84 <_strtoul_r+0x134>
 100d088:	0109c83a 	sub	r4,zero,r4
 100d08c:	003fbd06 	br	100cf84 <_strtoul_r+0x134>

0100d090 <strtoul>:
 100d090:	00804074 	movhi	r2,257
 100d094:	10915504 	addi	r2,r2,17748
 100d098:	2013883a 	mov	r9,r4
 100d09c:	11000017 	ldw	r4,0(r2)
 100d0a0:	2805883a 	mov	r2,r5
 100d0a4:	300f883a 	mov	r7,r6
 100d0a8:	480b883a 	mov	r5,r9
 100d0ac:	100d883a 	mov	r6,r2
 100d0b0:	100ce501 	jmpi	100ce50 <_strtoul_r>

0100d0b4 <_strtoull_r>:
 100d0b4:	defff104 	addi	sp,sp,-60
 100d0b8:	00804074 	movhi	r2,257
 100d0bc:	10915904 	addi	r2,r2,17764
 100d0c0:	df000d15 	stw	fp,52(sp)
 100d0c4:	17000017 	ldw	fp,0(r2)
 100d0c8:	ddc00c15 	stw	r23,48(sp)
 100d0cc:	dcc00815 	stw	r19,32(sp)
 100d0d0:	dfc00e15 	stw	ra,56(sp)
 100d0d4:	dd800b15 	stw	r22,44(sp)
 100d0d8:	dd400a15 	stw	r21,40(sp)
 100d0dc:	dd000915 	stw	r20,36(sp)
 100d0e0:	dc800715 	stw	r18,28(sp)
 100d0e4:	dc400615 	stw	r17,24(sp)
 100d0e8:	dc000515 	stw	r16,20(sp)
 100d0ec:	d9400215 	stw	r5,8(sp)
 100d0f0:	d9000115 	stw	r4,4(sp)
 100d0f4:	d9800315 	stw	r6,12(sp)
 100d0f8:	382f883a 	mov	r23,r7
 100d0fc:	2827883a 	mov	r19,r5
 100d100:	9d000007 	ldb	r20,0(r19)
 100d104:	9cc00044 	addi	r19,r19,1
 100d108:	e507883a 	add	r3,fp,r20
 100d10c:	18800003 	ldbu	r2,0(r3)
 100d110:	1080020c 	andi	r2,r2,8
 100d114:	103ffa1e 	bne	r2,zero,100d100 <_strtoull_r+0x4c>
 100d118:	00800b44 	movi	r2,45
 100d11c:	a0807a26 	beq	r20,r2,100d308 <_strtoull_r+0x254>
 100d120:	00800ac4 	movi	r2,43
 100d124:	a0807526 	beq	r20,r2,100d2fc <_strtoull_r+0x248>
 100d128:	d8000015 	stw	zero,0(sp)
 100d12c:	b807003a 	cmpeq	r3,r23,zero
 100d130:	18005a1e 	bne	r3,zero,100d29c <_strtoull_r+0x1e8>
 100d134:	00800404 	movi	r2,16
 100d138:	b8805826 	beq	r23,r2,100d29c <_strtoull_r+0x1e8>
 100d13c:	b82dd7fa 	srai	r22,r23,31
 100d140:	043fffc4 	movi	r16,-1
 100d144:	8009883a 	mov	r4,r16
 100d148:	800b883a 	mov	r5,r16
 100d14c:	b80d883a 	mov	r6,r23
 100d150:	b00f883a 	mov	r7,r22
 100d154:	100e3cc0 	call	100e3cc <__udivdi3>
 100d158:	8009883a 	mov	r4,r16
 100d15c:	800b883a 	mov	r5,r16
 100d160:	b80d883a 	mov	r6,r23
 100d164:	b00f883a 	mov	r7,r22
 100d168:	1023883a 	mov	r17,r2
 100d16c:	1825883a 	mov	r18,r3
 100d170:	100ea380 	call	100ea38 <__umoddi3>
 100d174:	b82b883a 	mov	r21,r23
 100d178:	1019883a 	mov	r12,r2
 100d17c:	e505883a 	add	r2,fp,r20
 100d180:	11000003 	ldbu	r4,0(r2)
 100d184:	0015883a 	mov	r10,zero
 100d188:	0017883a 	mov	r11,zero
 100d18c:	20c0010c 	andi	r3,r4,4
 100d190:	000d883a 	mov	r6,zero
 100d194:	18001c26 	beq	r3,zero,100d208 <_strtoull_r+0x154>
 100d198:	a43ff404 	addi	r16,r20,-48
 100d19c:	85c0220e 	bge	r16,r23,100d228 <_strtoull_r+0x174>
 100d1a0:	30003c16 	blt	r6,zero,100d294 <_strtoull_r+0x1e0>
 100d1a4:	92c03b36 	bltu	r18,r11,100d294 <_strtoull_r+0x1e0>
 100d1a8:	5c803926 	beq	r11,r18,100d290 <_strtoull_r+0x1dc>
 100d1ac:	54404c26 	beq	r10,r17,100d2e0 <_strtoull_r+0x22c>
 100d1b0:	580b883a 	mov	r5,r11
 100d1b4:	5009883a 	mov	r4,r10
 100d1b8:	a80d883a 	mov	r6,r21
 100d1bc:	b00f883a 	mov	r7,r22
 100d1c0:	db000415 	stw	r12,16(sp)
 100d1c4:	100e2040 	call	100e204 <__muldi3>
 100d1c8:	8013d7fa 	srai	r9,r16,31
 100d1cc:	100d883a 	mov	r6,r2
 100d1d0:	1405883a 	add	r2,r2,r16
 100d1d4:	118d803a 	cmpltu	r6,r2,r6
 100d1d8:	1a47883a 	add	r3,r3,r9
 100d1dc:	db000417 	ldw	r12,16(sp)
 100d1e0:	30cd883a 	add	r6,r6,r3
 100d1e4:	3017883a 	mov	r11,r6
 100d1e8:	1015883a 	mov	r10,r2
 100d1ec:	01800044 	movi	r6,1
 100d1f0:	9d000007 	ldb	r20,0(r19)
 100d1f4:	9cc00044 	addi	r19,r19,1
 100d1f8:	e505883a 	add	r2,fp,r20
 100d1fc:	11000003 	ldbu	r4,0(r2)
 100d200:	20c0010c 	andi	r3,r4,4
 100d204:	183fe41e 	bne	r3,zero,100d198 <_strtoull_r+0xe4>
 100d208:	208000cc 	andi	r2,r4,3
 100d20c:	10000626 	beq	r2,zero,100d228 <_strtoull_r+0x174>
 100d210:	2080004c 	andi	r2,r4,1
 100d214:	1005003a 	cmpeq	r2,r2,zero
 100d218:	10002e1e 	bne	r2,zero,100d2d4 <_strtoull_r+0x220>
 100d21c:	02000dc4 	movi	r8,55
 100d220:	a221c83a 	sub	r16,r20,r8
 100d224:	85ffde16 	blt	r16,r23,100d1a0 <_strtoull_r+0xec>
 100d228:	3000530e 	bge	r6,zero,100d378 <_strtoull_r+0x2c4>
 100d22c:	d8c00117 	ldw	r3,4(sp)
 100d230:	02bfffc4 	movi	r10,-1
 100d234:	00800884 	movi	r2,34
 100d238:	5017883a 	mov	r11,r10
 100d23c:	18800015 	stw	r2,0(r3)
 100d240:	d8800317 	ldw	r2,12(sp)
 100d244:	10000426 	beq	r2,zero,100d258 <_strtoull_r+0x1a4>
 100d248:	3000291e 	bne	r6,zero,100d2f0 <_strtoull_r+0x23c>
 100d24c:	d8800217 	ldw	r2,8(sp)
 100d250:	d8c00317 	ldw	r3,12(sp)
 100d254:	18800015 	stw	r2,0(r3)
 100d258:	5005883a 	mov	r2,r10
 100d25c:	5807883a 	mov	r3,r11
 100d260:	dfc00e17 	ldw	ra,56(sp)
 100d264:	df000d17 	ldw	fp,52(sp)
 100d268:	ddc00c17 	ldw	r23,48(sp)
 100d26c:	dd800b17 	ldw	r22,44(sp)
 100d270:	dd400a17 	ldw	r21,40(sp)
 100d274:	dd000917 	ldw	r20,36(sp)
 100d278:	dcc00817 	ldw	r19,32(sp)
 100d27c:	dc800717 	ldw	r18,28(sp)
 100d280:	dc400617 	ldw	r17,24(sp)
 100d284:	dc000517 	ldw	r16,20(sp)
 100d288:	dec00f04 	addi	sp,sp,60
 100d28c:	f800283a 	ret
 100d290:	8abfc62e 	bgeu	r17,r10,100d1ac <_strtoull_r+0xf8>
 100d294:	01bfffc4 	movi	r6,-1
 100d298:	003fd506 	br	100d1f0 <_strtoull_r+0x13c>
 100d29c:	00800c04 	movi	r2,48
 100d2a0:	a0801e26 	beq	r20,r2,100d31c <_strtoull_r+0x268>
 100d2a4:	183fa526 	beq	r3,zero,100d13c <_strtoull_r+0x88>
 100d2a8:	00800c04 	movi	r2,48
 100d2ac:	a0802a26 	beq	r20,r2,100d358 <_strtoull_r+0x2a4>
 100d2b0:	05c00284 	movi	r23,10
 100d2b4:	b82b883a 	mov	r21,r23
 100d2b8:	046666b4 	movhi	r17,39322
 100d2bc:	8c666644 	addi	r17,r17,-26215
 100d2c0:	002d883a 	mov	r22,zero
 100d2c4:	048666b4 	movhi	r18,6554
 100d2c8:	94a66644 	addi	r18,r18,-26215
 100d2cc:	03000144 	movi	r12,5
 100d2d0:	003faa06 	br	100d17c <_strtoull_r+0xc8>
 100d2d4:	020015c4 	movi	r8,87
 100d2d8:	a221c83a 	sub	r16,r20,r8
 100d2dc:	003fd106 	br	100d224 <_strtoull_r+0x170>
 100d2e0:	5cbfb31e 	bne	r11,r18,100d1b0 <_strtoull_r+0xfc>
 100d2e4:	643fb20e 	bge	r12,r16,100d1b0 <_strtoull_r+0xfc>
 100d2e8:	01bfffc4 	movi	r6,-1
 100d2ec:	003fc006 	br	100d1f0 <_strtoull_r+0x13c>
 100d2f0:	9cffffc4 	addi	r19,r19,-1
 100d2f4:	dcc00215 	stw	r19,8(sp)
 100d2f8:	003fd406 	br	100d24c <_strtoull_r+0x198>
 100d2fc:	9d000007 	ldb	r20,0(r19)
 100d300:	9cc00044 	addi	r19,r19,1
 100d304:	003f8806 	br	100d128 <_strtoull_r+0x74>
 100d308:	9d000007 	ldb	r20,0(r19)
 100d30c:	00800044 	movi	r2,1
 100d310:	9cc00044 	addi	r19,r19,1
 100d314:	d8800015 	stw	r2,0(sp)
 100d318:	003f8406 	br	100d12c <_strtoull_r+0x78>
 100d31c:	99000007 	ldb	r4,0(r19)
 100d320:	00801e04 	movi	r2,120
 100d324:	20800226 	beq	r4,r2,100d330 <_strtoull_r+0x27c>
 100d328:	00801604 	movi	r2,88
 100d32c:	20bfdd1e 	bne	r4,r2,100d2a4 <_strtoull_r+0x1f0>
 100d330:	9d000047 	ldb	r20,1(r19)
 100d334:	05c00404 	movi	r23,16
 100d338:	b82b883a 	mov	r21,r23
 100d33c:	047fffc4 	movi	r17,-1
 100d340:	9cc00084 	addi	r19,r19,2
 100d344:	002d883a 	mov	r22,zero
 100d348:	04840034 	movhi	r18,4096
 100d34c:	94bfffc4 	addi	r18,r18,-1
 100d350:	030003c4 	movi	r12,15
 100d354:	003f8906 	br	100d17c <_strtoull_r+0xc8>
 100d358:	05c00204 	movi	r23,8
 100d35c:	b82b883a 	mov	r21,r23
 100d360:	047fffc4 	movi	r17,-1
 100d364:	002d883a 	mov	r22,zero
 100d368:	04880034 	movhi	r18,8192
 100d36c:	94bfffc4 	addi	r18,r18,-1
 100d370:	030001c4 	movi	r12,7
 100d374:	003f8106 	br	100d17c <_strtoull_r+0xc8>
 100d378:	d8c00017 	ldw	r3,0(sp)
 100d37c:	1805003a 	cmpeq	r2,r3,zero
 100d380:	103faf1e 	bne	r2,zero,100d240 <_strtoull_r+0x18c>
 100d384:	0009883a 	mov	r4,zero
 100d388:	2285c83a 	sub	r2,r4,r10
 100d38c:	02c7c83a 	sub	r3,zero,r11
 100d390:	2089803a 	cmpltu	r4,r4,r2
 100d394:	1909c83a 	sub	r4,r3,r4
 100d398:	1015883a 	mov	r10,r2
 100d39c:	2017883a 	mov	r11,r4
 100d3a0:	003fa706 	br	100d240 <_strtoull_r+0x18c>

0100d3a4 <__submore>:
 100d3a4:	defffa04 	addi	sp,sp,-24
 100d3a8:	28c00c17 	ldw	r3,48(r5)
 100d3ac:	dc800215 	stw	r18,8(sp)
 100d3b0:	2825883a 	mov	r18,r5
 100d3b4:	dc000015 	stw	r16,0(sp)
 100d3b8:	90801004 	addi	r2,r18,64
 100d3bc:	04010004 	movi	r16,1024
 100d3c0:	dfc00515 	stw	ra,20(sp)
 100d3c4:	dd000415 	stw	r20,16(sp)
 100d3c8:	dcc00315 	stw	r19,12(sp)
 100d3cc:	dc400115 	stw	r17,4(sp)
 100d3d0:	800b883a 	mov	r5,r16
 100d3d4:	18801b26 	beq	r3,r2,100d444 <__submore+0xa0>
 100d3d8:	94400d17 	ldw	r17,52(r18)
 100d3dc:	180b883a 	mov	r5,r3
 100d3e0:	8c69883a 	add	r20,r17,r17
 100d3e4:	a00d883a 	mov	r6,r20
 100d3e8:	100a8b40 	call	100a8b4 <_realloc_r>
 100d3ec:	1467883a 	add	r19,r2,r17
 100d3f0:	1021883a 	mov	r16,r2
 100d3f4:	880d883a 	mov	r6,r17
 100d3f8:	9809883a 	mov	r4,r19
 100d3fc:	100b883a 	mov	r5,r2
 100d400:	10000e26 	beq	r2,zero,100d43c <__submore+0x98>
 100d404:	10033340 	call	1003334 <memcpy>
 100d408:	000d883a 	mov	r6,zero
 100d40c:	95000d15 	stw	r20,52(r18)
 100d410:	94c00015 	stw	r19,0(r18)
 100d414:	94000c15 	stw	r16,48(r18)
 100d418:	3005883a 	mov	r2,r6
 100d41c:	dfc00517 	ldw	ra,20(sp)
 100d420:	dd000417 	ldw	r20,16(sp)
 100d424:	dcc00317 	ldw	r19,12(sp)
 100d428:	dc800217 	ldw	r18,8(sp)
 100d42c:	dc400117 	ldw	r17,4(sp)
 100d430:	dc000017 	ldw	r16,0(sp)
 100d434:	dec00604 	addi	sp,sp,24
 100d438:	f800283a 	ret
 100d43c:	01bfffc4 	movi	r6,-1
 100d440:	003ff506 	br	100d418 <__submore+0x74>
 100d444:	1002b100 	call	1002b10 <_malloc_r>
 100d448:	1009883a 	mov	r4,r2
 100d44c:	1140ff44 	addi	r5,r2,1021
 100d450:	000d883a 	mov	r6,zero
 100d454:	103ff926 	beq	r2,zero,100d43c <__submore+0x98>
 100d458:	90801083 	ldbu	r2,66(r18)
 100d45c:	94000d15 	stw	r16,52(r18)
 100d460:	91000c15 	stw	r4,48(r18)
 100d464:	28800085 	stb	r2,2(r5)
 100d468:	90c01043 	ldbu	r3,65(r18)
 100d46c:	28c00045 	stb	r3,1(r5)
 100d470:	90801003 	ldbu	r2,64(r18)
 100d474:	2080ff45 	stb	r2,1021(r4)
 100d478:	91400015 	stw	r5,0(r18)
 100d47c:	003fe606 	br	100d418 <__submore+0x74>

0100d480 <_ungetc_r>:
 100d480:	defffc04 	addi	sp,sp,-16
 100d484:	00bfffc4 	movi	r2,-1
 100d488:	dc400215 	stw	r17,8(sp)
 100d48c:	dc000115 	stw	r16,4(sp)
 100d490:	dfc00315 	stw	ra,12(sp)
 100d494:	2821883a 	mov	r16,r5
 100d498:	2023883a 	mov	r17,r4
 100d49c:	28801826 	beq	r5,r2,100d500 <_ungetc_r+0x80>
 100d4a0:	20000226 	beq	r4,zero,100d4ac <_ungetc_r+0x2c>
 100d4a4:	20800e17 	ldw	r2,56(r4)
 100d4a8:	10001b26 	beq	r2,zero,100d518 <_ungetc_r+0x98>
 100d4ac:	3100030b 	ldhu	r4,12(r6)
 100d4b0:	00bff7c4 	movi	r2,-33
 100d4b4:	2084703a 	and	r2,r4,r2
 100d4b8:	117fffcc 	andi	r5,r2,65535
 100d4bc:	28c0010c 	andi	r3,r5,4
 100d4c0:	1009883a 	mov	r4,r2
 100d4c4:	3080030d 	sth	r2,12(r6)
 100d4c8:	18003526 	beq	r3,zero,100d5a0 <_ungetc_r+0x120>
 100d4cc:	30800c17 	ldw	r2,48(r6)
 100d4d0:	84003fcc 	andi	r16,r16,255
 100d4d4:	10001426 	beq	r2,zero,100d528 <_ungetc_r+0xa8>
 100d4d8:	30c00117 	ldw	r3,4(r6)
 100d4dc:	30800d17 	ldw	r2,52(r6)
 100d4e0:	1880380e 	bge	r3,r2,100d5c4 <_ungetc_r+0x144>
 100d4e4:	30c00017 	ldw	r3,0(r6)
 100d4e8:	19ffffc4 	addi	r7,r3,-1
 100d4ec:	31c00015 	stw	r7,0(r6)
 100d4f0:	1c3fffc5 	stb	r16,-1(r3)
 100d4f4:	30800117 	ldw	r2,4(r6)
 100d4f8:	10800044 	addi	r2,r2,1
 100d4fc:	30800115 	stw	r2,4(r6)
 100d500:	8005883a 	mov	r2,r16
 100d504:	dfc00317 	ldw	ra,12(sp)
 100d508:	dc400217 	ldw	r17,8(sp)
 100d50c:	dc000117 	ldw	r16,4(sp)
 100d510:	dec00404 	addi	sp,sp,16
 100d514:	f800283a 	ret
 100d518:	d9800015 	stw	r6,0(sp)
 100d51c:	10017200 	call	1001720 <__sinit>
 100d520:	d9800017 	ldw	r6,0(sp)
 100d524:	003fe106 	br	100d4ac <_ungetc_r+0x2c>
 100d528:	30800417 	ldw	r2,16(r6)
 100d52c:	10002326 	beq	r2,zero,100d5bc <_ungetc_r+0x13c>
 100d530:	31c00017 	ldw	r7,0(r6)
 100d534:	11c0022e 	bgeu	r2,r7,100d540 <_ungetc_r+0xc0>
 100d538:	38bfffc3 	ldbu	r2,-1(r7)
 100d53c:	80801226 	beq	r16,r2,100d588 <_ungetc_r+0x108>
 100d540:	30c00117 	ldw	r3,4(r6)
 100d544:	00800044 	movi	r2,1
 100d548:	30800115 	stw	r2,4(r6)
 100d54c:	008000c4 	movi	r2,3
 100d550:	31001004 	addi	r4,r6,64
 100d554:	31401084 	addi	r5,r6,66
 100d558:	30800d15 	stw	r2,52(r6)
 100d55c:	8005883a 	mov	r2,r16
 100d560:	30c00f15 	stw	r3,60(r6)
 100d564:	31c00e15 	stw	r7,56(r6)
 100d568:	31000c15 	stw	r4,48(r6)
 100d56c:	31400015 	stw	r5,0(r6)
 100d570:	34001085 	stb	r16,66(r6)
 100d574:	dfc00317 	ldw	ra,12(sp)
 100d578:	dc400217 	ldw	r17,8(sp)
 100d57c:	dc000117 	ldw	r16,4(sp)
 100d580:	dec00404 	addi	sp,sp,16
 100d584:	f800283a 	ret
 100d588:	30800117 	ldw	r2,4(r6)
 100d58c:	39ffffc4 	addi	r7,r7,-1
 100d590:	31c00015 	stw	r7,0(r6)
 100d594:	10800044 	addi	r2,r2,1
 100d598:	30800115 	stw	r2,4(r6)
 100d59c:	003fd806 	br	100d500 <_ungetc_r+0x80>
 100d5a0:	2880040c 	andi	r2,r5,16
 100d5a4:	10000d26 	beq	r2,zero,100d5dc <_ungetc_r+0x15c>
 100d5a8:	2880020c 	andi	r2,r5,8
 100d5ac:	10000d1e 	bne	r2,zero,100d5e4 <_ungetc_r+0x164>
 100d5b0:	20800114 	ori	r2,r4,4
 100d5b4:	3080030d 	sth	r2,12(r6)
 100d5b8:	003fc406 	br	100d4cc <_ungetc_r+0x4c>
 100d5bc:	31c00017 	ldw	r7,0(r6)
 100d5c0:	003fdf06 	br	100d540 <_ungetc_r+0xc0>
 100d5c4:	300b883a 	mov	r5,r6
 100d5c8:	8809883a 	mov	r4,r17
 100d5cc:	d9800015 	stw	r6,0(sp)
 100d5d0:	100d3a40 	call	100d3a4 <__submore>
 100d5d4:	d9800017 	ldw	r6,0(sp)
 100d5d8:	103fc226 	beq	r2,zero,100d4e4 <_ungetc_r+0x64>
 100d5dc:	043fffc4 	movi	r16,-1
 100d5e0:	003fc706 	br	100d500 <_ungetc_r+0x80>
 100d5e4:	300b883a 	mov	r5,r6
 100d5e8:	8809883a 	mov	r4,r17
 100d5ec:	d9800015 	stw	r6,0(sp)
 100d5f0:	100131c0 	call	100131c <_fflush_r>
 100d5f4:	d9800017 	ldw	r6,0(sp)
 100d5f8:	103ff81e 	bne	r2,zero,100d5dc <_ungetc_r+0x15c>
 100d5fc:	3100030b 	ldhu	r4,12(r6)
 100d600:	00bffdc4 	movi	r2,-9
 100d604:	30000215 	stw	zero,8(r6)
 100d608:	2084703a 	and	r2,r4,r2
 100d60c:	1009883a 	mov	r4,r2
 100d610:	3080030d 	sth	r2,12(r6)
 100d614:	30000615 	stw	zero,24(r6)
 100d618:	003fe506 	br	100d5b0 <_ungetc_r+0x130>

0100d61c <ungetc>:
 100d61c:	01804074 	movhi	r6,257
 100d620:	31915504 	addi	r6,r6,17748
 100d624:	2007883a 	mov	r3,r4
 100d628:	31000017 	ldw	r4,0(r6)
 100d62c:	280d883a 	mov	r6,r5
 100d630:	180b883a 	mov	r5,r3
 100d634:	100d4801 	jmpi	100d480 <_ungetc_r>

0100d638 <htinit>:
 100d638:	28800003 	ldbu	r2,0(r5)
 100d63c:	10000626 	beq	r2,zero,100d658 <htinit+0x20>
 100d640:	1105883a 	add	r2,r2,r4
 100d644:	11800005 	stb	r6,0(r2)
 100d648:	28800043 	ldbu	r2,1(r5)
 100d64c:	31800044 	addi	r6,r6,1
 100d650:	29400044 	addi	r5,r5,1
 100d654:	103ffa1e 	bne	r2,zero,100d640 <htinit+0x8>
 100d658:	f800283a 	ret

0100d65c <__hexdig_init>:
 100d65c:	defffd04 	addi	sp,sp,-12
 100d660:	dc400015 	stw	r17,0(sp)
 100d664:	04404074 	movhi	r17,257
 100d668:	8c544204 	addi	r17,r17,20744
 100d66c:	dcc00115 	stw	r19,4(sp)
 100d670:	8809883a 	mov	r4,r17
 100d674:	04c00684 	movi	r19,26
 100d678:	01404074 	movhi	r5,257
 100d67c:	294e6d04 	addi	r5,r5,14772
 100d680:	01800404 	movi	r6,16
 100d684:	dfc00215 	stw	ra,8(sp)
 100d688:	100d6380 	call	100d638 <htinit>
 100d68c:	980d883a 	mov	r6,r19
 100d690:	8809883a 	mov	r4,r17
 100d694:	01404074 	movhi	r5,257
 100d698:	294e7004 	addi	r5,r5,14784
 100d69c:	100d6380 	call	100d638 <htinit>
 100d6a0:	8809883a 	mov	r4,r17
 100d6a4:	980d883a 	mov	r6,r19
 100d6a8:	01404074 	movhi	r5,257
 100d6ac:	294e7204 	addi	r5,r5,14792
 100d6b0:	dfc00217 	ldw	ra,8(sp)
 100d6b4:	dcc00117 	ldw	r19,4(sp)
 100d6b8:	dc400017 	ldw	r17,0(sp)
 100d6bc:	dec00304 	addi	sp,sp,12
 100d6c0:	100d6381 	jmpi	100d638 <htinit>

0100d6c4 <rshift>:
 100d6c4:	2807d17a 	srai	r3,r5,5
 100d6c8:	20800417 	ldw	r2,16(r4)
 100d6cc:	22400504 	addi	r9,r4,20
 100d6d0:	480f883a 	mov	r7,r9
 100d6d4:	1880190e 	bge	r3,r2,100d73c <rshift+0x78>
 100d6d8:	1085883a 	add	r2,r2,r2
 100d6dc:	18c7883a 	add	r3,r3,r3
 100d6e0:	1085883a 	add	r2,r2,r2
 100d6e4:	18c7883a 	add	r3,r3,r3
 100d6e8:	294007cc 	andi	r5,r5,31
 100d6ec:	4891883a 	add	r8,r9,r2
 100d6f0:	48cd883a 	add	r6,r9,r3
 100d6f4:	28001726 	beq	r5,zero,100d754 <rshift+0x90>
 100d6f8:	30c00017 	ldw	r3,0(r6)
 100d6fc:	00800804 	movi	r2,32
 100d700:	31800104 	addi	r6,r6,4
 100d704:	1155c83a 	sub	r10,r2,r5
 100d708:	1946d83a 	srl	r3,r3,r5
 100d70c:	3200092e 	bgeu	r6,r8,100d734 <rshift+0x70>
 100d710:	30800017 	ldw	r2,0(r6)
 100d714:	1284983a 	sll	r2,r2,r10
 100d718:	10c4b03a 	or	r2,r2,r3
 100d71c:	38800015 	stw	r2,0(r7)
 100d720:	30c00017 	ldw	r3,0(r6)
 100d724:	31800104 	addi	r6,r6,4
 100d728:	39c00104 	addi	r7,r7,4
 100d72c:	1946d83a 	srl	r3,r3,r5
 100d730:	323ff736 	bltu	r6,r8,100d710 <rshift+0x4c>
 100d734:	38c00015 	stw	r3,0(r7)
 100d738:	18000c1e 	bne	r3,zero,100d76c <rshift+0xa8>
 100d73c:	3a45c83a 	sub	r2,r7,r9
 100d740:	1005d0ba 	srai	r2,r2,2
 100d744:	20800415 	stw	r2,16(r4)
 100d748:	1000011e 	bne	r2,zero,100d750 <rshift+0x8c>
 100d74c:	20000515 	stw	zero,20(r4)
 100d750:	f800283a 	ret
 100d754:	323ff92e 	bgeu	r6,r8,100d73c <rshift+0x78>
 100d758:	30800017 	ldw	r2,0(r6)
 100d75c:	31800104 	addi	r6,r6,4
 100d760:	38800015 	stw	r2,0(r7)
 100d764:	39c00104 	addi	r7,r7,4
 100d768:	003ffa06 	br	100d754 <rshift+0x90>
 100d76c:	39c00104 	addi	r7,r7,4
 100d770:	003ff206 	br	100d73c <rshift+0x78>

0100d774 <__gethex>:
 100d774:	defff104 	addi	sp,sp,-60
 100d778:	df000d15 	stw	fp,52(sp)
 100d77c:	dcc00815 	stw	r19,32(sp)
 100d780:	dfc00e15 	stw	ra,56(sp)
 100d784:	ddc00c15 	stw	r23,48(sp)
 100d788:	dd800b15 	stw	r22,44(sp)
 100d78c:	dd400a15 	stw	r21,40(sp)
 100d790:	dd000915 	stw	r20,36(sp)
 100d794:	dc800715 	stw	r18,28(sp)
 100d798:	dc400615 	stw	r17,24(sp)
 100d79c:	dc000515 	stw	r16,20(sp)
 100d7a0:	04c04074 	movhi	r19,257
 100d7a4:	9cd44204 	addi	r19,r19,20744
 100d7a8:	98800c03 	ldbu	r2,48(r19)
 100d7ac:	d9000115 	stw	r4,4(sp)
 100d7b0:	2839883a 	mov	fp,r5
 100d7b4:	d9800215 	stw	r6,8(sp)
 100d7b8:	d9c00315 	stw	r7,12(sp)
 100d7bc:	10007526 	beq	r2,zero,100d994 <__gethex+0x220>
 100d7c0:	e1800017 	ldw	r6,0(fp)
 100d7c4:	00800c04 	movi	r2,48
 100d7c8:	31000083 	ldbu	r4,2(r6)
 100d7cc:	30c00084 	addi	r3,r6,2
 100d7d0:	2080761e 	bne	r4,r2,100d9ac <__gethex+0x238>
 100d7d4:	200b883a 	mov	r5,r4
 100d7d8:	3007883a 	mov	r3,r6
 100d7dc:	188000c3 	ldbu	r2,3(r3)
 100d7e0:	18c00044 	addi	r3,r3,1
 100d7e4:	1009883a 	mov	r4,r2
 100d7e8:	117ffc26 	beq	r2,r5,100d7dc <__gethex+0x68>
 100d7ec:	198fc83a 	sub	r7,r3,r6
 100d7f0:	19400084 	addi	r5,r3,2
 100d7f4:	24c5883a 	add	r2,r4,r19
 100d7f8:	10c00003 	ldbu	r3,0(r2)
 100d7fc:	18002e26 	beq	r3,zero,100d8b8 <__gethex+0x144>
 100d800:	29000003 	ldbu	r4,0(r5)
 100d804:	282b883a 	mov	r21,r5
 100d808:	000d883a 	mov	r6,zero
 100d80c:	002d883a 	mov	r22,zero
 100d810:	21003fcc 	andi	r4,r4,255
 100d814:	24c5883a 	add	r2,r4,r19
 100d818:	10c00003 	ldbu	r3,0(r2)
 100d81c:	18000526 	beq	r3,zero,100d834 <__gethex+0xc0>
 100d820:	29400044 	addi	r5,r5,1
 100d824:	29000003 	ldbu	r4,0(r5)
 100d828:	24c5883a 	add	r2,r4,r19
 100d82c:	10c00003 	ldbu	r3,0(r2)
 100d830:	183ffb1e 	bne	r3,zero,100d820 <__gethex+0xac>
 100d834:	00800b84 	movi	r2,46
 100d838:	20805f26 	beq	r4,r2,100d9b8 <__gethex+0x244>
 100d83c:	30008226 	beq	r6,zero,100da48 <__gethex+0x2d4>
 100d840:	2985c83a 	sub	r2,r5,r6
 100d844:	1085883a 	add	r2,r2,r2
 100d848:	1085883a 	add	r2,r2,r2
 100d84c:	0085c83a 	sub	r2,zero,r2
 100d850:	d8800015 	stw	r2,0(sp)
 100d854:	2825883a 	mov	r18,r5
 100d858:	90c00003 	ldbu	r3,0(r18)
 100d85c:	00801404 	movi	r2,80
 100d860:	18801e26 	beq	r3,r2,100d8dc <__gethex+0x168>
 100d864:	00801c04 	movi	r2,112
 100d868:	18801c26 	beq	r3,r2,100d8dc <__gethex+0x168>
 100d86c:	9023883a 	mov	r17,r18
 100d870:	b005003a 	cmpeq	r2,r22,zero
 100d874:	e4400015 	stw	r17,0(fp)
 100d878:	10008d1e 	bne	r2,zero,100dab0 <__gethex+0x33c>
 100d87c:	38004326 	beq	r7,zero,100d98c <__gethex+0x218>
 100d880:	0025883a 	mov	r18,zero
 100d884:	9005883a 	mov	r2,r18
 100d888:	dfc00e17 	ldw	ra,56(sp)
 100d88c:	df000d17 	ldw	fp,52(sp)
 100d890:	ddc00c17 	ldw	r23,48(sp)
 100d894:	dd800b17 	ldw	r22,44(sp)
 100d898:	dd400a17 	ldw	r21,40(sp)
 100d89c:	dd000917 	ldw	r20,36(sp)
 100d8a0:	dcc00817 	ldw	r19,32(sp)
 100d8a4:	dc800717 	ldw	r18,28(sp)
 100d8a8:	dc400617 	ldw	r17,24(sp)
 100d8ac:	dc000517 	ldw	r16,20(sp)
 100d8b0:	dec00f04 	addi	sp,sp,60
 100d8b4:	f800283a 	ret
 100d8b8:	00800b84 	movi	r2,46
 100d8bc:	20805126 	beq	r4,r2,100da04 <__gethex+0x290>
 100d8c0:	2825883a 	mov	r18,r5
 100d8c4:	d8000015 	stw	zero,0(sp)
 100d8c8:	90c00003 	ldbu	r3,0(r18)
 100d8cc:	00801404 	movi	r2,80
 100d8d0:	282b883a 	mov	r21,r5
 100d8d4:	05800044 	movi	r22,1
 100d8d8:	18bfe21e 	bne	r3,r2,100d864 <__gethex+0xf0>
 100d8dc:	90c00043 	ldbu	r3,1(r18)
 100d8e0:	00800ac4 	movi	r2,43
 100d8e4:	91400044 	addi	r5,r18,1
 100d8e8:	18805126 	beq	r3,r2,100da30 <__gethex+0x2bc>
 100d8ec:	00800b44 	movi	r2,45
 100d8f0:	18805326 	beq	r3,r2,100da40 <__gethex+0x2cc>
 100d8f4:	002f883a 	mov	r23,zero
 100d8f8:	1cc5883a 	add	r2,r3,r19
 100d8fc:	10800003 	ldbu	r2,0(r2)
 100d900:	103fda26 	beq	r2,zero,100d86c <__gethex+0xf8>
 100d904:	01800644 	movi	r6,25
 100d908:	30bfd816 	blt	r6,r2,100d86c <__gethex+0xf8>
 100d90c:	28c00043 	ldbu	r3,1(r5)
 100d910:	113ffc04 	addi	r4,r2,-16
 100d914:	00804074 	movhi	r2,257
 100d918:	10944204 	addi	r2,r2,20744
 100d91c:	1887883a 	add	r3,r3,r2
 100d920:	18800003 	ldbu	r2,0(r3)
 100d924:	2c400044 	addi	r17,r5,1
 100d928:	10001126 	beq	r2,zero,100d970 <__gethex+0x1fc>
 100d92c:	1021883a 	mov	r16,r2
 100d930:	30800f16 	blt	r6,r2,100d970 <__gethex+0x1fc>
 100d934:	3029883a 	mov	r20,r6
 100d938:	00000106 	br	100d940 <__gethex+0x1cc>
 100d93c:	a0800c16 	blt	r20,r2,100d970 <__gethex+0x1fc>
 100d940:	8c400044 	addi	r17,r17,1
 100d944:	01400284 	movi	r5,10
 100d948:	d9c00415 	stw	r7,16(sp)
 100d94c:	10010a40 	call	10010a4 <__mulsi3>
 100d950:	88c00003 	ldbu	r3,0(r17)
 100d954:	1405883a 	add	r2,r2,r16
 100d958:	113ffc04 	addi	r4,r2,-16
 100d95c:	1cc7883a 	add	r3,r3,r19
 100d960:	18800003 	ldbu	r2,0(r3)
 100d964:	d9c00417 	ldw	r7,16(sp)
 100d968:	1021883a 	mov	r16,r2
 100d96c:	103ff31e 	bne	r2,zero,100d93c <__gethex+0x1c8>
 100d970:	b805003a 	cmpeq	r2,r23,zero
 100d974:	1000011e 	bne	r2,zero,100d97c <__gethex+0x208>
 100d978:	0109c83a 	sub	r4,zero,r4
 100d97c:	d8800017 	ldw	r2,0(sp)
 100d980:	1105883a 	add	r2,r2,r4
 100d984:	d8800015 	stw	r2,0(sp)
 100d988:	003fb906 	br	100d870 <__gethex+0xfc>
 100d98c:	04800184 	movi	r18,6
 100d990:	003fbc06 	br	100d884 <__gethex+0x110>
 100d994:	100d65c0 	call	100d65c <__hexdig_init>
 100d998:	e1800017 	ldw	r6,0(fp)
 100d99c:	00800c04 	movi	r2,48
 100d9a0:	31000083 	ldbu	r4,2(r6)
 100d9a4:	30c00084 	addi	r3,r6,2
 100d9a8:	20bf8a26 	beq	r4,r2,100d7d4 <__gethex+0x60>
 100d9ac:	180b883a 	mov	r5,r3
 100d9b0:	000f883a 	mov	r7,zero
 100d9b4:	003f8f06 	br	100d7f4 <__gethex+0x80>
 100d9b8:	303fa11e 	bne	r6,zero,100d840 <__gethex+0xcc>
 100d9bc:	29400044 	addi	r5,r5,1
 100d9c0:	28800003 	ldbu	r2,0(r5)
 100d9c4:	14c5883a 	add	r2,r2,r19
 100d9c8:	10c00003 	ldbu	r3,0(r2)
 100d9cc:	1800b526 	beq	r3,zero,100dca4 <__gethex+0x530>
 100d9d0:	2809883a 	mov	r4,r5
 100d9d4:	21000044 	addi	r4,r4,1
 100d9d8:	20800003 	ldbu	r2,0(r4)
 100d9dc:	14c5883a 	add	r2,r2,r19
 100d9e0:	10c00003 	ldbu	r3,0(r2)
 100d9e4:	183ffb1e 	bne	r3,zero,100d9d4 <__gethex+0x260>
 100d9e8:	2145c83a 	sub	r2,r4,r5
 100d9ec:	1085883a 	add	r2,r2,r2
 100d9f0:	1085883a 	add	r2,r2,r2
 100d9f4:	0085c83a 	sub	r2,zero,r2
 100d9f8:	200b883a 	mov	r5,r4
 100d9fc:	d8800015 	stw	r2,0(sp)
 100da00:	003f9406 	br	100d854 <__gethex+0xe0>
 100da04:	29000043 	ldbu	r4,1(r5)
 100da08:	00804074 	movhi	r2,257
 100da0c:	10944204 	addi	r2,r2,20744
 100da10:	2c800044 	addi	r18,r5,1
 100da14:	2085883a 	add	r2,r4,r2
 100da18:	10c00003 	ldbu	r3,0(r2)
 100da1c:	18000d1e 	bne	r3,zero,100da54 <__gethex+0x2e0>
 100da20:	282b883a 	mov	r21,r5
 100da24:	05800044 	movi	r22,1
 100da28:	d8000015 	stw	zero,0(sp)
 100da2c:	003f8a06 	br	100d858 <__gethex+0xe4>
 100da30:	002f883a 	mov	r23,zero
 100da34:	29400044 	addi	r5,r5,1
 100da38:	28c00003 	ldbu	r3,0(r5)
 100da3c:	003fae06 	br	100d8f8 <__gethex+0x184>
 100da40:	05c00044 	movi	r23,1
 100da44:	003ffb06 	br	100da34 <__gethex+0x2c0>
 100da48:	2825883a 	mov	r18,r5
 100da4c:	d8000015 	stw	zero,0(sp)
 100da50:	003f8106 	br	100d858 <__gethex+0xe4>
 100da54:	00800c04 	movi	r2,48
 100da58:	20800e1e 	bne	r4,r2,100da94 <__gethex+0x320>
 100da5c:	2007883a 	mov	r3,r4
 100da60:	900b883a 	mov	r5,r18
 100da64:	29400044 	addi	r5,r5,1
 100da68:	29000003 	ldbu	r4,0(r5)
 100da6c:	20803fcc 	andi	r2,r4,255
 100da70:	10fffc26 	beq	r2,r3,100da64 <__gethex+0x2f0>
 100da74:	14c5883a 	add	r2,r2,r19
 100da78:	10c00003 	ldbu	r3,0(r2)
 100da7c:	1800071e 	bne	r3,zero,100da9c <__gethex+0x328>
 100da80:	01c00044 	movi	r7,1
 100da84:	900d883a 	mov	r6,r18
 100da88:	282b883a 	mov	r21,r5
 100da8c:	382d883a 	mov	r22,r7
 100da90:	003f5f06 	br	100d810 <__gethex+0x9c>
 100da94:	91000003 	ldbu	r4,0(r18)
 100da98:	900b883a 	mov	r5,r18
 100da9c:	900d883a 	mov	r6,r18
 100daa0:	282b883a 	mov	r21,r5
 100daa4:	01c00044 	movi	r7,1
 100daa8:	002d883a 	mov	r22,zero
 100daac:	003f5806 	br	100d810 <__gethex+0x9c>
 100dab0:	9545c83a 	sub	r2,r18,r21
 100dab4:	10bfffc4 	addi	r2,r2,-1
 100dab8:	00c001c4 	movi	r3,7
 100dabc:	1880770e 	bge	r3,r2,100dc9c <__gethex+0x528>
 100dac0:	000b883a 	mov	r5,zero
 100dac4:	1005d07a 	srai	r2,r2,1
 100dac8:	29400044 	addi	r5,r5,1
 100dacc:	18bffd16 	blt	r3,r2,100dac4 <__gethex+0x350>
 100dad0:	d9000117 	ldw	r4,4(sp)
 100dad4:	1009d300 	call	1009d30 <_Balloc>
 100dad8:	1029883a 	mov	r20,r2
 100dadc:	15800504 	addi	r22,r2,20
 100dae0:	ac80562e 	bgeu	r21,r18,100dc3c <__gethex+0x4c8>
 100dae4:	900b883a 	mov	r5,r18
 100dae8:	b011883a 	mov	r8,r22
 100daec:	000f883a 	mov	r7,zero
 100daf0:	0009883a 	mov	r4,zero
 100daf4:	02400b84 	movi	r9,46
 100daf8:	02800804 	movi	r10,32
 100dafc:	297fffc4 	addi	r5,r5,-1
 100db00:	28c00003 	ldbu	r3,0(r5)
 100db04:	1a400826 	beq	r3,r9,100db28 <__gethex+0x3b4>
 100db08:	380d883a 	mov	r6,r7
 100db0c:	3a802a26 	beq	r7,r10,100dbb8 <__gethex+0x444>
 100db10:	39c00104 	addi	r7,r7,4
 100db14:	1cc7883a 	add	r3,r3,r19
 100db18:	18800003 	ldbu	r2,0(r3)
 100db1c:	108003cc 	andi	r2,r2,15
 100db20:	1184983a 	sll	r2,r2,r6
 100db24:	2088b03a 	or	r4,r4,r2
 100db28:	a97ff436 	bltu	r21,r5,100dafc <__gethex+0x388>
 100db2c:	40800104 	addi	r2,r8,4
 100db30:	1585c83a 	sub	r2,r2,r22
 100db34:	1021d0ba 	srai	r16,r2,2
 100db38:	41000015 	stw	r4,0(r8)
 100db3c:	a4000415 	stw	r16,16(r20)
 100db40:	10097d80 	call	10097d8 <__hi0bits>
 100db44:	d9000217 	ldw	r4,8(sp)
 100db48:	8006917a 	slli	r3,r16,5
 100db4c:	24c00017 	ldw	r19,0(r4)
 100db50:	1885c83a 	sub	r2,r3,r2
 100db54:	98801f16 	blt	r19,r2,100dbd4 <__gethex+0x460>
 100db58:	14c00c16 	blt	r2,r19,100db8c <__gethex+0x418>
 100db5c:	002b883a 	mov	r21,zero
 100db60:	d9000217 	ldw	r4,8(sp)
 100db64:	d8c00017 	ldw	r3,0(sp)
 100db68:	20800217 	ldw	r2,8(r4)
 100db6c:	10c0360e 	bge	r2,r3,100dc48 <__gethex+0x4d4>
 100db70:	d9000117 	ldw	r4,4(sp)
 100db74:	a00b883a 	mov	r5,r20
 100db78:	048028c4 	movi	r18,163
 100db7c:	10097b00 	call	10097b0 <_Bfree>
 100db80:	d9000f17 	ldw	r4,60(sp)
 100db84:	20000015 	stw	zero,0(r4)
 100db88:	003f3e06 	br	100d884 <__gethex+0x110>
 100db8c:	d9000117 	ldw	r4,4(sp)
 100db90:	98a1c83a 	sub	r16,r19,r2
 100db94:	a00b883a 	mov	r5,r20
 100db98:	800d883a 	mov	r6,r16
 100db9c:	100a0f40 	call	100a0f4 <__lshift>
 100dba0:	d8c00017 	ldw	r3,0(sp)
 100dba4:	1029883a 	mov	r20,r2
 100dba8:	15800504 	addi	r22,r2,20
 100dbac:	1c07c83a 	sub	r3,r3,r16
 100dbb0:	d8c00015 	stw	r3,0(sp)
 100dbb4:	003fe906 	br	100db5c <__gethex+0x3e8>
 100dbb8:	41000015 	stw	r4,0(r8)
 100dbbc:	28c00003 	ldbu	r3,0(r5)
 100dbc0:	01c00104 	movi	r7,4
 100dbc4:	000d883a 	mov	r6,zero
 100dbc8:	41d1883a 	add	r8,r8,r7
 100dbcc:	0009883a 	mov	r4,zero
 100dbd0:	003fd006 	br	100db14 <__gethex+0x3a0>
 100dbd4:	14e1c83a 	sub	r16,r2,r19
 100dbd8:	a009883a 	mov	r4,r20
 100dbdc:	800b883a 	mov	r5,r16
 100dbe0:	1009ca80 	call	1009ca8 <__any_on>
 100dbe4:	1000081e 	bne	r2,zero,100dc08 <__gethex+0x494>
 100dbe8:	002b883a 	mov	r21,zero
 100dbec:	a009883a 	mov	r4,r20
 100dbf0:	800b883a 	mov	r5,r16
 100dbf4:	100d6c40 	call	100d6c4 <rshift>
 100dbf8:	d8800017 	ldw	r2,0(sp)
 100dbfc:	1405883a 	add	r2,r2,r16
 100dc00:	d8800015 	stw	r2,0(sp)
 100dc04:	003fd606 	br	100db60 <__gethex+0x3ec>
 100dc08:	817fffc4 	addi	r5,r16,-1
 100dc0c:	2805d17a 	srai	r2,r5,5
 100dc10:	290007cc 	andi	r4,r5,31
 100dc14:	01800044 	movi	r6,1
 100dc18:	1085883a 	add	r2,r2,r2
 100dc1c:	1085883a 	add	r2,r2,r2
 100dc20:	1585883a 	add	r2,r2,r22
 100dc24:	3108983a 	sll	r4,r6,r4
 100dc28:	10c00017 	ldw	r3,0(r2)
 100dc2c:	20c8703a 	and	r4,r4,r3
 100dc30:	20001e1e 	bne	r4,zero,100dcac <__gethex+0x538>
 100dc34:	302b883a 	mov	r21,r6
 100dc38:	003fec06 	br	100dbec <__gethex+0x478>
 100dc3c:	b011883a 	mov	r8,r22
 100dc40:	0009883a 	mov	r4,zero
 100dc44:	003fb906 	br	100db2c <__gethex+0x3b8>
 100dc48:	d8800217 	ldw	r2,8(sp)
 100dc4c:	d8c00017 	ldw	r3,0(sp)
 100dc50:	11000117 	ldw	r4,4(r2)
 100dc54:	19001c16 	blt	r3,r4,100dcc8 <__gethex+0x554>
 100dc58:	04800044 	movi	r18,1
 100dc5c:	a8000926 	beq	r21,zero,100dc84 <__gethex+0x510>
 100dc60:	d8c00217 	ldw	r3,8(sp)
 100dc64:	00800084 	movi	r2,2
 100dc68:	19000317 	ldw	r4,12(r3)
 100dc6c:	20809826 	beq	r4,r2,100ded0 <__gethex+0x75c>
 100dc70:	008000c4 	movi	r2,3
 100dc74:	20805b26 	beq	r4,r2,100dde4 <__gethex+0x670>
 100dc78:	00800044 	movi	r2,1
 100dc7c:	20804326 	beq	r4,r2,100dd8c <__gethex+0x618>
 100dc80:	94800414 	ori	r18,r18,16
 100dc84:	d9000f17 	ldw	r4,60(sp)
 100dc88:	d8800017 	ldw	r2,0(sp)
 100dc8c:	d8c00317 	ldw	r3,12(sp)
 100dc90:	25000015 	stw	r20,0(r4)
 100dc94:	18800015 	stw	r2,0(r3)
 100dc98:	003efa06 	br	100d884 <__gethex+0x110>
 100dc9c:	000b883a 	mov	r5,zero
 100dca0:	003f8b06 	br	100dad0 <__gethex+0x35c>
 100dca4:	d8000015 	stw	zero,0(sp)
 100dca8:	003eea06 	br	100d854 <__gethex+0xe0>
 100dcac:	3140180e 	bge	r6,r5,100dd10 <__gethex+0x59c>
 100dcb0:	a009883a 	mov	r4,r20
 100dcb4:	817fff84 	addi	r5,r16,-2
 100dcb8:	1009ca80 	call	1009ca8 <__any_on>
 100dcbc:	10001426 	beq	r2,zero,100dd10 <__gethex+0x59c>
 100dcc0:	054000c4 	movi	r21,3
 100dcc4:	003fc906 	br	100dbec <__gethex+0x478>
 100dcc8:	d8800017 	ldw	r2,0(sp)
 100dccc:	20a3c83a 	sub	r17,r4,r2
 100dcd0:	8cc01116 	blt	r17,r19,100dd18 <__gethex+0x5a4>
 100dcd4:	d8800217 	ldw	r2,8(sp)
 100dcd8:	10c00317 	ldw	r3,12(r2)
 100dcdc:	00800084 	movi	r2,2
 100dce0:	18809426 	beq	r3,r2,100df34 <__gethex+0x7c0>
 100dce4:	008000c4 	movi	r2,3
 100dce8:	18808f26 	beq	r3,r2,100df28 <__gethex+0x7b4>
 100dcec:	00800044 	movi	r2,1
 100dcf0:	18807c26 	beq	r3,r2,100dee4 <__gethex+0x770>
 100dcf4:	d9000117 	ldw	r4,4(sp)
 100dcf8:	a00b883a 	mov	r5,r20
 100dcfc:	04801404 	movi	r18,80
 100dd00:	10097b00 	call	10097b0 <_Bfree>
 100dd04:	d9000f17 	ldw	r4,60(sp)
 100dd08:	20000015 	stw	zero,0(r4)
 100dd0c:	003edd06 	br	100d884 <__gethex+0x110>
 100dd10:	05400084 	movi	r21,2
 100dd14:	003fb506 	br	100dbec <__gethex+0x478>
 100dd18:	8c3fffc4 	addi	r16,r17,-1
 100dd1c:	a8001526 	beq	r21,zero,100dd74 <__gethex+0x600>
 100dd20:	05400044 	movi	r21,1
 100dd24:	8005d17a 	srai	r2,r16,5
 100dd28:	814007cc 	andi	r5,r16,31
 100dd2c:	00c00044 	movi	r3,1
 100dd30:	1085883a 	add	r2,r2,r2
 100dd34:	1085883a 	add	r2,r2,r2
 100dd38:	1585883a 	add	r2,r2,r22
 100dd3c:	1946983a 	sll	r3,r3,r5
 100dd40:	11000017 	ldw	r4,0(r2)
 100dd44:	1906703a 	and	r3,r3,r4
 100dd48:	18000126 	beq	r3,zero,100dd50 <__gethex+0x5dc>
 100dd4c:	ad400094 	ori	r21,r21,2
 100dd50:	880b883a 	mov	r5,r17
 100dd54:	a009883a 	mov	r4,r20
 100dd58:	100d6c40 	call	100d6c4 <rshift>
 100dd5c:	d8800217 	ldw	r2,8(sp)
 100dd60:	9c67c83a 	sub	r19,r19,r17
 100dd64:	04800084 	movi	r18,2
 100dd68:	10800117 	ldw	r2,4(r2)
 100dd6c:	d8800015 	stw	r2,0(sp)
 100dd70:	003fba06 	br	100dc5c <__gethex+0x4e8>
 100dd74:	043feb0e 	bge	zero,r16,100dd24 <__gethex+0x5b0>
 100dd78:	a009883a 	mov	r4,r20
 100dd7c:	800b883a 	mov	r5,r16
 100dd80:	1009ca80 	call	1009ca8 <__any_on>
 100dd84:	102b883a 	mov	r21,r2
 100dd88:	003fe606 	br	100dd24 <__gethex+0x5b0>
 100dd8c:	a880008c 	andi	r2,r21,2
 100dd90:	103fbb26 	beq	r2,zero,100dc80 <__gethex+0x50c>
 100dd94:	b0800017 	ldw	r2,0(r22)
 100dd98:	a884b03a 	or	r2,r21,r2
 100dd9c:	1104703a 	and	r2,r2,r4
 100dda0:	103fb726 	beq	r2,zero,100dc80 <__gethex+0x50c>
 100dda4:	a4000417 	ldw	r16,16(r20)
 100dda8:	b007883a 	mov	r3,r22
 100ddac:	017fffc4 	movi	r5,-1
 100ddb0:	8405883a 	add	r2,r16,r16
 100ddb4:	10ab883a 	add	r21,r2,r2
 100ddb8:	802f883a 	mov	r23,r16
 100ddbc:	b549883a 	add	r4,r22,r21
 100ddc0:	00000306 	br	100ddd0 <__gethex+0x65c>
 100ddc4:	18000015 	stw	zero,0(r3)
 100ddc8:	18c00104 	addi	r3,r3,4
 100ddcc:	1900082e 	bgeu	r3,r4,100ddf0 <__gethex+0x67c>
 100ddd0:	18800017 	ldw	r2,0(r3)
 100ddd4:	117ffb26 	beq	r2,r5,100ddc4 <__gethex+0x650>
 100ddd8:	10800044 	addi	r2,r2,1
 100dddc:	18800015 	stw	r2,0(r3)
 100dde0:	00001e06 	br	100de5c <__gethex+0x6e8>
 100dde4:	d8801017 	ldw	r2,64(sp)
 100dde8:	103fa526 	beq	r2,zero,100dc80 <__gethex+0x50c>
 100ddec:	003fed06 	br	100dda4 <__gethex+0x630>
 100ddf0:	a0800217 	ldw	r2,8(r20)
 100ddf4:	80801216 	blt	r16,r2,100de40 <__gethex+0x6cc>
 100ddf8:	a1400117 	ldw	r5,4(r20)
 100ddfc:	d9000117 	ldw	r4,4(sp)
 100de00:	29400044 	addi	r5,r5,1
 100de04:	1009d300 	call	1009d30 <_Balloc>
 100de08:	a1800417 	ldw	r6,16(r20)
 100de0c:	a1400304 	addi	r5,r20,12
 100de10:	11000304 	addi	r4,r2,12
 100de14:	318d883a 	add	r6,r6,r6
 100de18:	318d883a 	add	r6,r6,r6
 100de1c:	31800204 	addi	r6,r6,8
 100de20:	1023883a 	mov	r17,r2
 100de24:	10033340 	call	1003334 <memcpy>
 100de28:	d9000117 	ldw	r4,4(sp)
 100de2c:	a00b883a 	mov	r5,r20
 100de30:	8d800504 	addi	r22,r17,20
 100de34:	10097b00 	call	10097b0 <_Bfree>
 100de38:	8c000417 	ldw	r16,16(r17)
 100de3c:	8829883a 	mov	r20,r17
 100de40:	8405883a 	add	r2,r16,r16
 100de44:	1085883a 	add	r2,r2,r2
 100de48:	1505883a 	add	r2,r2,r20
 100de4c:	84000044 	addi	r16,r16,1
 100de50:	00c00044 	movi	r3,1
 100de54:	10c00515 	stw	r3,20(r2)
 100de58:	a4000415 	stw	r16,16(r20)
 100de5c:	00800084 	movi	r2,2
 100de60:	90801526 	beq	r18,r2,100deb8 <__gethex+0x744>
 100de64:	bc000a16 	blt	r23,r16,100de90 <__gethex+0x71c>
 100de68:	9c0007cc 	andi	r16,r19,31
 100de6c:	8000021e 	bne	r16,zero,100de78 <__gethex+0x704>
 100de70:	94800814 	ori	r18,r18,32
 100de74:	003f8306 	br	100dc84 <__gethex+0x510>
 100de78:	b545883a 	add	r2,r22,r21
 100de7c:	113fff17 	ldw	r4,-4(r2)
 100de80:	10097d80 	call	10097d8 <__hi0bits>
 100de84:	00c00804 	movi	r3,32
 100de88:	1c07c83a 	sub	r3,r3,r16
 100de8c:	10fff80e 	bge	r2,r3,100de70 <__gethex+0x6fc>
 100de90:	a009883a 	mov	r4,r20
 100de94:	01400044 	movi	r5,1
 100de98:	100d6c40 	call	100d6c4 <rshift>
 100de9c:	d9000217 	ldw	r4,8(sp)
 100dea0:	d8c00017 	ldw	r3,0(sp)
 100dea4:	20800217 	ldw	r2,8(r4)
 100dea8:	18c00044 	addi	r3,r3,1
 100deac:	d8c00015 	stw	r3,0(sp)
 100deb0:	10ff2f16 	blt	r2,r3,100db70 <__gethex+0x3fc>
 100deb4:	003fee06 	br	100de70 <__gethex+0x6fc>
 100deb8:	d8c00217 	ldw	r3,8(sp)
 100debc:	18800017 	ldw	r2,0(r3)
 100dec0:	10bfffc4 	addi	r2,r2,-1
 100dec4:	98801e26 	beq	r19,r2,100df40 <__gethex+0x7cc>
 100dec8:	04800884 	movi	r18,34
 100decc:	003f6d06 	br	100dc84 <__gethex+0x510>
 100ded0:	d9001017 	ldw	r4,64(sp)
 100ded4:	00800044 	movi	r2,1
 100ded8:	1105c83a 	sub	r2,r2,r4
 100dedc:	103f6826 	beq	r2,zero,100dc80 <__gethex+0x50c>
 100dee0:	003fb006 	br	100dda4 <__gethex+0x630>
 100dee4:	9c7f831e 	bne	r19,r17,100dcf4 <__gethex+0x580>
 100dee8:	1cc0060e 	bge	r3,r19,100df04 <__gethex+0x790>
 100deec:	98cbc83a 	sub	r5,r19,r3
 100def0:	a009883a 	mov	r4,r20
 100def4:	1009ca80 	call	1009ca8 <__any_on>
 100def8:	103f7e26 	beq	r2,zero,100dcf4 <__gethex+0x580>
 100defc:	d8c00217 	ldw	r3,8(sp)
 100df00:	19000117 	ldw	r4,4(r3)
 100df04:	d8800317 	ldw	r2,12(sp)
 100df08:	d8c00f17 	ldw	r3,60(sp)
 100df0c:	04000044 	movi	r16,1
 100df10:	11000015 	stw	r4,0(r2)
 100df14:	04801884 	movi	r18,98
 100df18:	b4000015 	stw	r16,0(r22)
 100df1c:	1d000015 	stw	r20,0(r3)
 100df20:	a4000415 	stw	r16,16(r20)
 100df24:	003e5706 	br	100d884 <__gethex+0x110>
 100df28:	d8801017 	ldw	r2,64(sp)
 100df2c:	103f7126 	beq	r2,zero,100dcf4 <__gethex+0x580>
 100df30:	003ff406 	br	100df04 <__gethex+0x790>
 100df34:	d8c01017 	ldw	r3,64(sp)
 100df38:	183ff226 	beq	r3,zero,100df04 <__gethex+0x790>
 100df3c:	003f6d06 	br	100dcf4 <__gethex+0x580>
 100df40:	9805d17a 	srai	r2,r19,5
 100df44:	994007cc 	andi	r5,r19,31
 100df48:	00c00044 	movi	r3,1
 100df4c:	1085883a 	add	r2,r2,r2
 100df50:	1085883a 	add	r2,r2,r2
 100df54:	1585883a 	add	r2,r2,r22
 100df58:	1946983a 	sll	r3,r3,r5
 100df5c:	11000017 	ldw	r4,0(r2)
 100df60:	1906703a 	and	r3,r3,r4
 100df64:	183fd826 	beq	r3,zero,100dec8 <__gethex+0x754>
 100df68:	04800844 	movi	r18,33
 100df6c:	003f4506 	br	100dc84 <__gethex+0x510>

0100df70 <L_shift>:
 100df70:	00800204 	movi	r2,8
 100df74:	1185c83a 	sub	r2,r2,r6
 100df78:	1085883a 	add	r2,r2,r2
 100df7c:	21c00017 	ldw	r7,0(r4)
 100df80:	1093883a 	add	r9,r2,r2
 100df84:	00800804 	movi	r2,32
 100df88:	200d883a 	mov	r6,r4
 100df8c:	1251c83a 	sub	r8,r2,r9
 100df90:	31800104 	addi	r6,r6,4
 100df94:	3805883a 	mov	r2,r7
 100df98:	31c00017 	ldw	r7,0(r6)
 100df9c:	3a08983a 	sll	r4,r7,r8
 100dfa0:	3a46d83a 	srl	r3,r7,r9
 100dfa4:	1104b03a 	or	r2,r2,r4
 100dfa8:	180f883a 	mov	r7,r3
 100dfac:	30bfff15 	stw	r2,-4(r6)
 100dfb0:	30c00015 	stw	r3,0(r6)
 100dfb4:	317ff636 	bltu	r6,r5,100df90 <L_shift+0x20>
 100dfb8:	f800283a 	ret

0100dfbc <__hexnan>:
 100dfbc:	defff404 	addi	sp,sp,-48
 100dfc0:	dd800815 	stw	r22,32(sp)
 100dfc4:	05804074 	movhi	r22,257
 100dfc8:	b5944204 	addi	r22,r22,20744
 100dfcc:	b0800c03 	ldbu	r2,48(r22)
 100dfd0:	dcc00515 	stw	r19,20(sp)
 100dfd4:	dc000215 	stw	r16,8(sp)
 100dfd8:	dfc00b15 	stw	ra,44(sp)
 100dfdc:	df000a15 	stw	fp,40(sp)
 100dfe0:	ddc00915 	stw	r23,36(sp)
 100dfe4:	dd400715 	stw	r21,28(sp)
 100dfe8:	dd000615 	stw	r20,24(sp)
 100dfec:	dc800415 	stw	r18,16(sp)
 100dff0:	dc400315 	stw	r17,12(sp)
 100dff4:	d9000115 	stw	r4,4(sp)
 100dff8:	2821883a 	mov	r16,r5
 100dffc:	3027883a 	mov	r19,r6
 100e000:	10007426 	beq	r2,zero,100e1d4 <__hexnan+0x218>
 100e004:	80c00017 	ldw	r3,0(r16)
 100e008:	1805d17a 	srai	r2,r3,5
 100e00c:	18c007cc 	andi	r3,r3,31
 100e010:	1839003a 	cmpeq	fp,r3,zero
 100e014:	1085883a 	add	r2,r2,r2
 100e018:	1085883a 	add	r2,r2,r2
 100e01c:	d8c00015 	stw	r3,0(sp)
 100e020:	14c5883a 	add	r2,r2,r19
 100e024:	e000011e 	bne	fp,zero,100e02c <__hexnan+0x70>
 100e028:	10800104 	addi	r2,r2,4
 100e02c:	d8c00117 	ldw	r3,4(sp)
 100e030:	153fff04 	addi	r20,r2,-4
 100e034:	a021883a 	mov	r16,r20
 100e038:	1c400017 	ldw	r17,0(r3)
 100e03c:	a02b883a 	mov	r21,r20
 100e040:	0025883a 	mov	r18,zero
 100e044:	002f883a 	mov	r23,zero
 100e048:	000d883a 	mov	r6,zero
 100e04c:	103fff15 	stw	zero,-4(r2)
 100e050:	8c400044 	addi	r17,r17,1
 100e054:	89000003 	ldbu	r4,0(r17)
 100e058:	20000e26 	beq	r4,zero,100e094 <__hexnan+0xd8>
 100e05c:	2585883a 	add	r2,r4,r22
 100e060:	10c00003 	ldbu	r3,0(r2)
 100e064:	18002e1e 	bne	r3,zero,100e120 <__hexnan+0x164>
 100e068:	00800804 	movi	r2,32
 100e06c:	11005536 	bltu	r2,r4,100e1c4 <__hexnan+0x208>
 100e070:	bcbff70e 	bge	r23,r18,100e050 <__hexnan+0x94>
 100e074:	8540022e 	bgeu	r16,r21,100e080 <__hexnan+0xc4>
 100e078:	008001c4 	movi	r2,7
 100e07c:	11803c0e 	bge	r2,r6,100e170 <__hexnan+0x1b4>
 100e080:	9c003536 	bltu	r19,r16,100e158 <__hexnan+0x19c>
 100e084:	8c400044 	addi	r17,r17,1
 100e088:	89000003 	ldbu	r4,0(r17)
 100e08c:	01800204 	movi	r6,8
 100e090:	203ff21e 	bne	r4,zero,100e05c <__hexnan+0xa0>
 100e094:	90004d26 	beq	r18,zero,100e1cc <__hexnan+0x210>
 100e098:	85404336 	bltu	r16,r21,100e1a8 <__hexnan+0x1ec>
 100e09c:	9c00382e 	bgeu	r19,r16,100e180 <__hexnan+0x1c4>
 100e0a0:	9807883a 	mov	r3,r19
 100e0a4:	80800017 	ldw	r2,0(r16)
 100e0a8:	84000104 	addi	r16,r16,4
 100e0ac:	18800015 	stw	r2,0(r3)
 100e0b0:	18c00104 	addi	r3,r3,4
 100e0b4:	a43ffb2e 	bgeu	r20,r16,100e0a4 <__hexnan+0xe8>
 100e0b8:	18000015 	stw	zero,0(r3)
 100e0bc:	18c00104 	addi	r3,r3,4
 100e0c0:	a0fffd2e 	bgeu	r20,r3,100e0b8 <__hexnan+0xfc>
 100e0c4:	a0800017 	ldw	r2,0(r20)
 100e0c8:	1000071e 	bne	r2,zero,100e0e8 <__hexnan+0x12c>
 100e0cc:	9d004326 	beq	r19,r20,100e1dc <__hexnan+0x220>
 100e0d0:	a007883a 	mov	r3,r20
 100e0d4:	00000106 	br	100e0dc <__hexnan+0x120>
 100e0d8:	98c04026 	beq	r19,r3,100e1dc <__hexnan+0x220>
 100e0dc:	18ffff04 	addi	r3,r3,-4
 100e0e0:	18800017 	ldw	r2,0(r3)
 100e0e4:	103ffc26 	beq	r2,zero,100e0d8 <__hexnan+0x11c>
 100e0e8:	00c00144 	movi	r3,5
 100e0ec:	1805883a 	mov	r2,r3
 100e0f0:	dfc00b17 	ldw	ra,44(sp)
 100e0f4:	df000a17 	ldw	fp,40(sp)
 100e0f8:	ddc00917 	ldw	r23,36(sp)
 100e0fc:	dd800817 	ldw	r22,32(sp)
 100e100:	dd400717 	ldw	r21,28(sp)
 100e104:	dd000617 	ldw	r20,24(sp)
 100e108:	dcc00517 	ldw	r19,20(sp)
 100e10c:	dc800417 	ldw	r18,16(sp)
 100e110:	dc400317 	ldw	r17,12(sp)
 100e114:	dc000217 	ldw	r16,8(sp)
 100e118:	dec00c04 	addi	sp,sp,48
 100e11c:	f800283a 	ret
 100e120:	31800044 	addi	r6,r6,1
 100e124:	00800204 	movi	r2,8
 100e128:	94800044 	addi	r18,r18,1
 100e12c:	1180040e 	bge	r2,r6,100e140 <__hexnan+0x184>
 100e130:	9c3fc72e 	bgeu	r19,r16,100e050 <__hexnan+0x94>
 100e134:	843fff04 	addi	r16,r16,-4
 100e138:	80000015 	stw	zero,0(r16)
 100e13c:	01800044 	movi	r6,1
 100e140:	80800017 	ldw	r2,0(r16)
 100e144:	18c003cc 	andi	r3,r3,15
 100e148:	1004913a 	slli	r2,r2,4
 100e14c:	10c4b03a 	or	r2,r2,r3
 100e150:	80800015 	stw	r2,0(r16)
 100e154:	003fbe06 	br	100e050 <__hexnan+0x94>
 100e158:	843fff04 	addi	r16,r16,-4
 100e15c:	802b883a 	mov	r21,r16
 100e160:	902f883a 	mov	r23,r18
 100e164:	000d883a 	mov	r6,zero
 100e168:	80000015 	stw	zero,0(r16)
 100e16c:	003fb806 	br	100e050 <__hexnan+0x94>
 100e170:	8009883a 	mov	r4,r16
 100e174:	a80b883a 	mov	r5,r21
 100e178:	100df700 	call	100df70 <L_shift>
 100e17c:	003fc006 	br	100e080 <__hexnan+0xc4>
 100e180:	e03fd01e 	bne	fp,zero,100e0c4 <__hexnan+0x108>
 100e184:	d8c00017 	ldw	r3,0(sp)
 100e188:	00800804 	movi	r2,32
 100e18c:	10c5c83a 	sub	r2,r2,r3
 100e190:	00ffffc4 	movi	r3,-1
 100e194:	1886d83a 	srl	r3,r3,r2
 100e198:	a0800017 	ldw	r2,0(r20)
 100e19c:	10c4703a 	and	r2,r2,r3
 100e1a0:	a0800015 	stw	r2,0(r20)
 100e1a4:	003fc806 	br	100e0c8 <__hexnan+0x10c>
 100e1a8:	008001c4 	movi	r2,7
 100e1ac:	11bfbb16 	blt	r2,r6,100e09c <__hexnan+0xe0>
 100e1b0:	a80b883a 	mov	r5,r21
 100e1b4:	8009883a 	mov	r4,r16
 100e1b8:	100df700 	call	100df70 <L_shift>
 100e1bc:	9c3ff02e 	bgeu	r19,r16,100e180 <__hexnan+0x1c4>
 100e1c0:	003fb706 	br	100e0a0 <__hexnan+0xe4>
 100e1c4:	00800a44 	movi	r2,41
 100e1c8:	20800826 	beq	r4,r2,100e1ec <__hexnan+0x230>
 100e1cc:	00c00104 	movi	r3,4
 100e1d0:	003fc606 	br	100e0ec <__hexnan+0x130>
 100e1d4:	100d65c0 	call	100d65c <__hexdig_init>
 100e1d8:	003f8a06 	br	100e004 <__hexnan+0x48>
 100e1dc:	00800044 	movi	r2,1
 100e1e0:	00c00144 	movi	r3,5
 100e1e4:	98800015 	stw	r2,0(r19)
 100e1e8:	003fc006 	br	100e0ec <__hexnan+0x130>
 100e1ec:	903ff726 	beq	r18,zero,100e1cc <__hexnan+0x210>
 100e1f0:	d8c00117 	ldw	r3,4(sp)
 100e1f4:	88800044 	addi	r2,r17,1
 100e1f8:	18800015 	stw	r2,0(r3)
 100e1fc:	857fa72e 	bgeu	r16,r21,100e09c <__hexnan+0xe0>
 100e200:	003fe906 	br	100e1a8 <__hexnan+0x1ec>

0100e204 <__muldi3>:
 100e204:	defff204 	addi	sp,sp,-56
 100e208:	df000c15 	stw	fp,48(sp)
 100e20c:	3038d43a 	srli	fp,r6,16
 100e210:	dd000815 	stw	r20,32(sp)
 100e214:	dc400515 	stw	r17,20(sp)
 100e218:	2028d43a 	srli	r20,r4,16
 100e21c:	247fffcc 	andi	r17,r4,65535
 100e220:	dc000415 	stw	r16,16(sp)
 100e224:	343fffcc 	andi	r16,r6,65535
 100e228:	dcc00715 	stw	r19,28(sp)
 100e22c:	d9000015 	stw	r4,0(sp)
 100e230:	2827883a 	mov	r19,r5
 100e234:	8809883a 	mov	r4,r17
 100e238:	d9400115 	stw	r5,4(sp)
 100e23c:	800b883a 	mov	r5,r16
 100e240:	d9800215 	stw	r6,8(sp)
 100e244:	dfc00d15 	stw	ra,52(sp)
 100e248:	d9c00315 	stw	r7,12(sp)
 100e24c:	dd800a15 	stw	r22,40(sp)
 100e250:	dd400915 	stw	r21,36(sp)
 100e254:	302d883a 	mov	r22,r6
 100e258:	ddc00b15 	stw	r23,44(sp)
 100e25c:	dc800615 	stw	r18,24(sp)
 100e260:	10010a40 	call	10010a4 <__mulsi3>
 100e264:	8809883a 	mov	r4,r17
 100e268:	e00b883a 	mov	r5,fp
 100e26c:	102b883a 	mov	r21,r2
 100e270:	10010a40 	call	10010a4 <__mulsi3>
 100e274:	800b883a 	mov	r5,r16
 100e278:	a009883a 	mov	r4,r20
 100e27c:	1023883a 	mov	r17,r2
 100e280:	10010a40 	call	10010a4 <__mulsi3>
 100e284:	a009883a 	mov	r4,r20
 100e288:	e00b883a 	mov	r5,fp
 100e28c:	1021883a 	mov	r16,r2
 100e290:	10010a40 	call	10010a4 <__mulsi3>
 100e294:	a8ffffcc 	andi	r3,r21,65535
 100e298:	a82ad43a 	srli	r21,r21,16
 100e29c:	8c23883a 	add	r17,r17,r16
 100e2a0:	1011883a 	mov	r8,r2
 100e2a4:	ac6b883a 	add	r21,r21,r17
 100e2a8:	a804943a 	slli	r2,r21,16
 100e2ac:	b009883a 	mov	r4,r22
 100e2b0:	980b883a 	mov	r5,r19
 100e2b4:	10c7883a 	add	r3,r2,r3
 100e2b8:	a812d43a 	srli	r9,r21,16
 100e2bc:	180d883a 	mov	r6,r3
 100e2c0:	ac00022e 	bgeu	r21,r16,100e2cc <__muldi3+0xc8>
 100e2c4:	00800074 	movhi	r2,1
 100e2c8:	4091883a 	add	r8,r8,r2
 100e2cc:	4267883a 	add	r19,r8,r9
 100e2d0:	302d883a 	mov	r22,r6
 100e2d4:	10010a40 	call	10010a4 <__mulsi3>
 100e2d8:	d9400317 	ldw	r5,12(sp)
 100e2dc:	d9000017 	ldw	r4,0(sp)
 100e2e0:	1023883a 	mov	r17,r2
 100e2e4:	10010a40 	call	10010a4 <__mulsi3>
 100e2e8:	14cb883a 	add	r5,r2,r19
 100e2ec:	894b883a 	add	r5,r17,r5
 100e2f0:	b005883a 	mov	r2,r22
 100e2f4:	2807883a 	mov	r3,r5
 100e2f8:	dfc00d17 	ldw	ra,52(sp)
 100e2fc:	df000c17 	ldw	fp,48(sp)
 100e300:	ddc00b17 	ldw	r23,44(sp)
 100e304:	dd800a17 	ldw	r22,40(sp)
 100e308:	dd400917 	ldw	r21,36(sp)
 100e30c:	dd000817 	ldw	r20,32(sp)
 100e310:	dcc00717 	ldw	r19,28(sp)
 100e314:	dc800617 	ldw	r18,24(sp)
 100e318:	dc400517 	ldw	r17,20(sp)
 100e31c:	dc000417 	ldw	r16,16(sp)
 100e320:	dec00e04 	addi	sp,sp,56
 100e324:	f800283a 	ret

0100e328 <__fixunsdfsi>:
 100e328:	defffb04 	addi	sp,sp,-20
 100e32c:	dc400115 	stw	r17,4(sp)
 100e330:	dc000015 	stw	r16,0(sp)
 100e334:	04507834 	movhi	r17,16864
 100e338:	0021883a 	mov	r16,zero
 100e33c:	800d883a 	mov	r6,r16
 100e340:	880f883a 	mov	r7,r17
 100e344:	dcc00315 	stw	r19,12(sp)
 100e348:	dc800215 	stw	r18,8(sp)
 100e34c:	2827883a 	mov	r19,r5
 100e350:	2025883a 	mov	r18,r4
 100e354:	dfc00415 	stw	ra,16(sp)
 100e358:	100feb80 	call	100feb8 <__gedf2>
 100e35c:	000d883a 	mov	r6,zero
 100e360:	880f883a 	mov	r7,r17
 100e364:	980b883a 	mov	r5,r19
 100e368:	9009883a 	mov	r4,r18
 100e36c:	10000d16 	blt	r2,zero,100e3a4 <__fixunsdfsi+0x7c>
 100e370:	100f6100 	call	100f610 <__subdf3>
 100e374:	180b883a 	mov	r5,r3
 100e378:	1009883a 	mov	r4,r2
 100e37c:	10101480 	call	1010148 <__fixdfsi>
 100e380:	00e00034 	movhi	r3,32768
 100e384:	10c5883a 	add	r2,r2,r3
 100e388:	dfc00417 	ldw	ra,16(sp)
 100e38c:	dcc00317 	ldw	r19,12(sp)
 100e390:	dc800217 	ldw	r18,8(sp)
 100e394:	dc400117 	ldw	r17,4(sp)
 100e398:	dc000017 	ldw	r16,0(sp)
 100e39c:	dec00504 	addi	sp,sp,20
 100e3a0:	f800283a 	ret
 100e3a4:	980b883a 	mov	r5,r19
 100e3a8:	9009883a 	mov	r4,r18
 100e3ac:	10101480 	call	1010148 <__fixdfsi>
 100e3b0:	dfc00417 	ldw	ra,16(sp)
 100e3b4:	dcc00317 	ldw	r19,12(sp)
 100e3b8:	dc800217 	ldw	r18,8(sp)
 100e3bc:	dc400117 	ldw	r17,4(sp)
 100e3c0:	dc000017 	ldw	r16,0(sp)
 100e3c4:	dec00504 	addi	sp,sp,20
 100e3c8:	f800283a 	ret

0100e3cc <__udivdi3>:
 100e3cc:	defff104 	addi	sp,sp,-60
 100e3d0:	0015883a 	mov	r10,zero
 100e3d4:	2005883a 	mov	r2,r4
 100e3d8:	3011883a 	mov	r8,r6
 100e3dc:	df000d15 	stw	fp,52(sp)
 100e3e0:	dd400a15 	stw	r21,40(sp)
 100e3e4:	dcc00815 	stw	r19,32(sp)
 100e3e8:	dfc00e15 	stw	ra,56(sp)
 100e3ec:	ddc00c15 	stw	r23,48(sp)
 100e3f0:	dd800b15 	stw	r22,44(sp)
 100e3f4:	dd000915 	stw	r20,36(sp)
 100e3f8:	dc800715 	stw	r18,28(sp)
 100e3fc:	dc400615 	stw	r17,24(sp)
 100e400:	dc000515 	stw	r16,20(sp)
 100e404:	da800315 	stw	r10,12(sp)
 100e408:	4027883a 	mov	r19,r8
 100e40c:	1039883a 	mov	fp,r2
 100e410:	282b883a 	mov	r21,r5
 100e414:	da800415 	stw	r10,16(sp)
 100e418:	3800401e 	bne	r7,zero,100e51c <__udivdi3+0x150>
 100e41c:	2a006536 	bltu	r5,r8,100e5b4 <__udivdi3+0x1e8>
 100e420:	4000b526 	beq	r8,zero,100e6f8 <__udivdi3+0x32c>
 100e424:	00bfffd4 	movui	r2,65535
 100e428:	14c0ad36 	bltu	r2,r19,100e6e0 <__udivdi3+0x314>
 100e42c:	00803fc4 	movi	r2,255
 100e430:	14c15e36 	bltu	r2,r19,100e9ac <__udivdi3+0x5e0>
 100e434:	000b883a 	mov	r5,zero
 100e438:	0005883a 	mov	r2,zero
 100e43c:	9884d83a 	srl	r2,r19,r2
 100e440:	01004074 	movhi	r4,257
 100e444:	210e7904 	addi	r4,r4,14820
 100e448:	01800804 	movi	r6,32
 100e44c:	1105883a 	add	r2,r2,r4
 100e450:	10c00003 	ldbu	r3,0(r2)
 100e454:	28c7883a 	add	r3,r5,r3
 100e458:	30e9c83a 	sub	r20,r6,r3
 100e45c:	a0010a1e 	bne	r20,zero,100e888 <__udivdi3+0x4bc>
 100e460:	982ed43a 	srli	r23,r19,16
 100e464:	acebc83a 	sub	r21,r21,r19
 100e468:	9dbfffcc 	andi	r22,r19,65535
 100e46c:	05000044 	movi	r20,1
 100e470:	a809883a 	mov	r4,r21
 100e474:	b80b883a 	mov	r5,r23
 100e478:	10010940 	call	1001094 <__udivsi3>
 100e47c:	100b883a 	mov	r5,r2
 100e480:	b009883a 	mov	r4,r22
 100e484:	1021883a 	mov	r16,r2
 100e488:	10010a40 	call	10010a4 <__mulsi3>
 100e48c:	a809883a 	mov	r4,r21
 100e490:	b80b883a 	mov	r5,r23
 100e494:	1023883a 	mov	r17,r2
 100e498:	100109c0 	call	100109c <__umodsi3>
 100e49c:	1004943a 	slli	r2,r2,16
 100e4a0:	e006d43a 	srli	r3,fp,16
 100e4a4:	10c4b03a 	or	r2,r2,r3
 100e4a8:	1440042e 	bgeu	r2,r17,100e4bc <__udivdi3+0xf0>
 100e4ac:	14c5883a 	add	r2,r2,r19
 100e4b0:	843fffc4 	addi	r16,r16,-1
 100e4b4:	14c00136 	bltu	r2,r19,100e4bc <__udivdi3+0xf0>
 100e4b8:	14415c36 	bltu	r2,r17,100ea2c <__udivdi3+0x660>
 100e4bc:	1463c83a 	sub	r17,r2,r17
 100e4c0:	8809883a 	mov	r4,r17
 100e4c4:	b80b883a 	mov	r5,r23
 100e4c8:	10010940 	call	1001094 <__udivsi3>
 100e4cc:	100b883a 	mov	r5,r2
 100e4d0:	b009883a 	mov	r4,r22
 100e4d4:	102b883a 	mov	r21,r2
 100e4d8:	10010a40 	call	10010a4 <__mulsi3>
 100e4dc:	8809883a 	mov	r4,r17
 100e4e0:	b80b883a 	mov	r5,r23
 100e4e4:	1025883a 	mov	r18,r2
 100e4e8:	100109c0 	call	100109c <__umodsi3>
 100e4ec:	1004943a 	slli	r2,r2,16
 100e4f0:	e0ffffcc 	andi	r3,fp,65535
 100e4f4:	10c4b03a 	or	r2,r2,r3
 100e4f8:	1480042e 	bgeu	r2,r18,100e50c <__udivdi3+0x140>
 100e4fc:	9885883a 	add	r2,r19,r2
 100e500:	ad7fffc4 	addi	r21,r21,-1
 100e504:	14c00136 	bltu	r2,r19,100e50c <__udivdi3+0x140>
 100e508:	14813c36 	bltu	r2,r18,100e9fc <__udivdi3+0x630>
 100e50c:	8004943a 	slli	r2,r16,16
 100e510:	a009883a 	mov	r4,r20
 100e514:	a884b03a 	or	r2,r21,r2
 100e518:	00001506 	br	100e570 <__udivdi3+0x1a4>
 100e51c:	380d883a 	mov	r6,r7
 100e520:	29c06c36 	bltu	r5,r7,100e6d4 <__udivdi3+0x308>
 100e524:	00bfffd4 	movui	r2,65535
 100e528:	11c06436 	bltu	r2,r7,100e6bc <__udivdi3+0x2f0>
 100e52c:	00803fc4 	movi	r2,255
 100e530:	11c11836 	bltu	r2,r7,100e994 <__udivdi3+0x5c8>
 100e534:	000b883a 	mov	r5,zero
 100e538:	0005883a 	mov	r2,zero
 100e53c:	3084d83a 	srl	r2,r6,r2
 100e540:	01004074 	movhi	r4,257
 100e544:	210e7904 	addi	r4,r4,14820
 100e548:	01c00804 	movi	r7,32
 100e54c:	1105883a 	add	r2,r2,r4
 100e550:	10c00003 	ldbu	r3,0(r2)
 100e554:	28c7883a 	add	r3,r5,r3
 100e558:	38edc83a 	sub	r22,r7,r3
 100e55c:	b000731e 	bne	r22,zero,100e72c <__udivdi3+0x360>
 100e560:	35400136 	bltu	r6,r21,100e568 <__udivdi3+0x19c>
 100e564:	e4c05b36 	bltu	fp,r19,100e6d4 <__udivdi3+0x308>
 100e568:	00800044 	movi	r2,1
 100e56c:	0009883a 	mov	r4,zero
 100e570:	d8800315 	stw	r2,12(sp)
 100e574:	d9400317 	ldw	r5,12(sp)
 100e578:	2007883a 	mov	r3,r4
 100e57c:	d9000415 	stw	r4,16(sp)
 100e580:	2805883a 	mov	r2,r5
 100e584:	dfc00e17 	ldw	ra,56(sp)
 100e588:	df000d17 	ldw	fp,52(sp)
 100e58c:	ddc00c17 	ldw	r23,48(sp)
 100e590:	dd800b17 	ldw	r22,44(sp)
 100e594:	dd400a17 	ldw	r21,40(sp)
 100e598:	dd000917 	ldw	r20,36(sp)
 100e59c:	dcc00817 	ldw	r19,32(sp)
 100e5a0:	dc800717 	ldw	r18,28(sp)
 100e5a4:	dc400617 	ldw	r17,24(sp)
 100e5a8:	dc000517 	ldw	r16,20(sp)
 100e5ac:	dec00f04 	addi	sp,sp,60
 100e5b0:	f800283a 	ret
 100e5b4:	00bfffd4 	movui	r2,65535
 100e5b8:	12005636 	bltu	r2,r8,100e714 <__udivdi3+0x348>
 100e5bc:	00803fc4 	movi	r2,255
 100e5c0:	12010036 	bltu	r2,r8,100e9c4 <__udivdi3+0x5f8>
 100e5c4:	000b883a 	mov	r5,zero
 100e5c8:	0005883a 	mov	r2,zero
 100e5cc:	9884d83a 	srl	r2,r19,r2
 100e5d0:	01004074 	movhi	r4,257
 100e5d4:	210e7904 	addi	r4,r4,14820
 100e5d8:	01800804 	movi	r6,32
 100e5dc:	1105883a 	add	r2,r2,r4
 100e5e0:	10c00003 	ldbu	r3,0(r2)
 100e5e4:	28c7883a 	add	r3,r5,r3
 100e5e8:	30cbc83a 	sub	r5,r6,r3
 100e5ec:	28000626 	beq	r5,zero,100e608 <__udivdi3+0x23c>
 100e5f0:	3145c83a 	sub	r2,r6,r5
 100e5f4:	e084d83a 	srl	r2,fp,r2
 100e5f8:	a946983a 	sll	r3,r21,r5
 100e5fc:	e178983a 	sll	fp,fp,r5
 100e600:	9966983a 	sll	r19,r19,r5
 100e604:	18aab03a 	or	r21,r3,r2
 100e608:	982ed43a 	srli	r23,r19,16
 100e60c:	a809883a 	mov	r4,r21
 100e610:	9cbfffcc 	andi	r18,r19,65535
 100e614:	b80b883a 	mov	r5,r23
 100e618:	10010940 	call	1001094 <__udivsi3>
 100e61c:	100b883a 	mov	r5,r2
 100e620:	9009883a 	mov	r4,r18
 100e624:	1021883a 	mov	r16,r2
 100e628:	10010a40 	call	10010a4 <__mulsi3>
 100e62c:	a809883a 	mov	r4,r21
 100e630:	b80b883a 	mov	r5,r23
 100e634:	1023883a 	mov	r17,r2
 100e638:	100109c0 	call	100109c <__umodsi3>
 100e63c:	1004943a 	slli	r2,r2,16
 100e640:	e006d43a 	srli	r3,fp,16
 100e644:	10c4b03a 	or	r2,r2,r3
 100e648:	1440042e 	bgeu	r2,r17,100e65c <__udivdi3+0x290>
 100e64c:	14c5883a 	add	r2,r2,r19
 100e650:	843fffc4 	addi	r16,r16,-1
 100e654:	14c00136 	bltu	r2,r19,100e65c <__udivdi3+0x290>
 100e658:	1440ea36 	bltu	r2,r17,100ea04 <__udivdi3+0x638>
 100e65c:	1463c83a 	sub	r17,r2,r17
 100e660:	8809883a 	mov	r4,r17
 100e664:	b80b883a 	mov	r5,r23
 100e668:	10010940 	call	1001094 <__udivsi3>
 100e66c:	100b883a 	mov	r5,r2
 100e670:	9009883a 	mov	r4,r18
 100e674:	102b883a 	mov	r21,r2
 100e678:	10010a40 	call	10010a4 <__mulsi3>
 100e67c:	8809883a 	mov	r4,r17
 100e680:	b80b883a 	mov	r5,r23
 100e684:	1025883a 	mov	r18,r2
 100e688:	100109c0 	call	100109c <__umodsi3>
 100e68c:	1004943a 	slli	r2,r2,16
 100e690:	e0ffffcc 	andi	r3,fp,65535
 100e694:	10c4b03a 	or	r2,r2,r3
 100e698:	1480042e 	bgeu	r2,r18,100e6ac <__udivdi3+0x2e0>
 100e69c:	9885883a 	add	r2,r19,r2
 100e6a0:	ad7fffc4 	addi	r21,r21,-1
 100e6a4:	14c00136 	bltu	r2,r19,100e6ac <__udivdi3+0x2e0>
 100e6a8:	1480d936 	bltu	r2,r18,100ea10 <__udivdi3+0x644>
 100e6ac:	8004943a 	slli	r2,r16,16
 100e6b0:	0009883a 	mov	r4,zero
 100e6b4:	a884b03a 	or	r2,r21,r2
 100e6b8:	003fad06 	br	100e570 <__udivdi3+0x1a4>
 100e6bc:	00804034 	movhi	r2,256
 100e6c0:	10bfffc4 	addi	r2,r2,-1
 100e6c4:	11c0b636 	bltu	r2,r7,100e9a0 <__udivdi3+0x5d4>
 100e6c8:	01400404 	movi	r5,16
 100e6cc:	2805883a 	mov	r2,r5
 100e6d0:	003f9a06 	br	100e53c <__udivdi3+0x170>
 100e6d4:	0005883a 	mov	r2,zero
 100e6d8:	0009883a 	mov	r4,zero
 100e6dc:	003fa406 	br	100e570 <__udivdi3+0x1a4>
 100e6e0:	00804034 	movhi	r2,256
 100e6e4:	10bfffc4 	addi	r2,r2,-1
 100e6e8:	14c0b336 	bltu	r2,r19,100e9b8 <__udivdi3+0x5ec>
 100e6ec:	01400404 	movi	r5,16
 100e6f0:	2805883a 	mov	r2,r5
 100e6f4:	003f5106 	br	100e43c <__udivdi3+0x70>
 100e6f8:	01000044 	movi	r4,1
 100e6fc:	000b883a 	mov	r5,zero
 100e700:	10010940 	call	1001094 <__udivsi3>
 100e704:	1027883a 	mov	r19,r2
 100e708:	00bfffd4 	movui	r2,65535
 100e70c:	14fff436 	bltu	r2,r19,100e6e0 <__udivdi3+0x314>
 100e710:	003f4606 	br	100e42c <__udivdi3+0x60>
 100e714:	00804034 	movhi	r2,256
 100e718:	10bfffc4 	addi	r2,r2,-1
 100e71c:	1200ac36 	bltu	r2,r8,100e9d0 <__udivdi3+0x604>
 100e720:	01400404 	movi	r5,16
 100e724:	2805883a 	mov	r2,r5
 100e728:	003fa806 	br	100e5cc <__udivdi3+0x200>
 100e72c:	3d85c83a 	sub	r2,r7,r22
 100e730:	3588983a 	sll	r4,r6,r22
 100e734:	9886d83a 	srl	r3,r19,r2
 100e738:	a8a2d83a 	srl	r17,r21,r2
 100e73c:	e084d83a 	srl	r2,fp,r2
 100e740:	20eeb03a 	or	r23,r4,r3
 100e744:	b824d43a 	srli	r18,r23,16
 100e748:	ad86983a 	sll	r3,r21,r22
 100e74c:	8809883a 	mov	r4,r17
 100e750:	900b883a 	mov	r5,r18
 100e754:	1886b03a 	or	r3,r3,r2
 100e758:	d8c00115 	stw	r3,4(sp)
 100e75c:	bc3fffcc 	andi	r16,r23,65535
 100e760:	10010940 	call	1001094 <__udivsi3>
 100e764:	100b883a 	mov	r5,r2
 100e768:	8009883a 	mov	r4,r16
 100e76c:	1029883a 	mov	r20,r2
 100e770:	10010a40 	call	10010a4 <__mulsi3>
 100e774:	900b883a 	mov	r5,r18
 100e778:	8809883a 	mov	r4,r17
 100e77c:	102b883a 	mov	r21,r2
 100e780:	100109c0 	call	100109c <__umodsi3>
 100e784:	d9400117 	ldw	r5,4(sp)
 100e788:	1004943a 	slli	r2,r2,16
 100e78c:	9da6983a 	sll	r19,r19,r22
 100e790:	2806d43a 	srli	r3,r5,16
 100e794:	10c4b03a 	or	r2,r2,r3
 100e798:	1540032e 	bgeu	r2,r21,100e7a8 <__udivdi3+0x3dc>
 100e79c:	15c5883a 	add	r2,r2,r23
 100e7a0:	a53fffc4 	addi	r20,r20,-1
 100e7a4:	15c0912e 	bgeu	r2,r23,100e9ec <__udivdi3+0x620>
 100e7a8:	1563c83a 	sub	r17,r2,r21
 100e7ac:	8809883a 	mov	r4,r17
 100e7b0:	900b883a 	mov	r5,r18
 100e7b4:	10010940 	call	1001094 <__udivsi3>
 100e7b8:	100b883a 	mov	r5,r2
 100e7bc:	8009883a 	mov	r4,r16
 100e7c0:	102b883a 	mov	r21,r2
 100e7c4:	10010a40 	call	10010a4 <__mulsi3>
 100e7c8:	8809883a 	mov	r4,r17
 100e7cc:	900b883a 	mov	r5,r18
 100e7d0:	1021883a 	mov	r16,r2
 100e7d4:	100109c0 	call	100109c <__umodsi3>
 100e7d8:	da800117 	ldw	r10,4(sp)
 100e7dc:	1004943a 	slli	r2,r2,16
 100e7e0:	50ffffcc 	andi	r3,r10,65535
 100e7e4:	10c6b03a 	or	r3,r2,r3
 100e7e8:	1c00032e 	bgeu	r3,r16,100e7f8 <__udivdi3+0x42c>
 100e7ec:	1dc7883a 	add	r3,r3,r23
 100e7f0:	ad7fffc4 	addi	r21,r21,-1
 100e7f4:	1dc0792e 	bgeu	r3,r23,100e9dc <__udivdi3+0x610>
 100e7f8:	a004943a 	slli	r2,r20,16
 100e7fc:	982ed43a 	srli	r23,r19,16
 100e800:	9cffffcc 	andi	r19,r19,65535
 100e804:	a8a4b03a 	or	r18,r21,r2
 100e808:	947fffcc 	andi	r17,r18,65535
 100e80c:	902ad43a 	srli	r21,r18,16
 100e810:	8809883a 	mov	r4,r17
 100e814:	980b883a 	mov	r5,r19
 100e818:	1c21c83a 	sub	r16,r3,r16
 100e81c:	10010a40 	call	10010a4 <__mulsi3>
 100e820:	8809883a 	mov	r4,r17
 100e824:	b80b883a 	mov	r5,r23
 100e828:	1029883a 	mov	r20,r2
 100e82c:	10010a40 	call	10010a4 <__mulsi3>
 100e830:	980b883a 	mov	r5,r19
 100e834:	a809883a 	mov	r4,r21
 100e838:	1023883a 	mov	r17,r2
 100e83c:	10010a40 	call	10010a4 <__mulsi3>
 100e840:	a809883a 	mov	r4,r21
 100e844:	b80b883a 	mov	r5,r23
 100e848:	1027883a 	mov	r19,r2
 100e84c:	10010a40 	call	10010a4 <__mulsi3>
 100e850:	1009883a 	mov	r4,r2
 100e854:	a004d43a 	srli	r2,r20,16
 100e858:	8ce3883a 	add	r17,r17,r19
 100e85c:	1447883a 	add	r3,r2,r17
 100e860:	1cc0022e 	bgeu	r3,r19,100e86c <__udivdi3+0x4a0>
 100e864:	00800074 	movhi	r2,1
 100e868:	2089883a 	add	r4,r4,r2
 100e86c:	1804d43a 	srli	r2,r3,16
 100e870:	2085883a 	add	r2,r4,r2
 100e874:	80804436 	bltu	r16,r2,100e988 <__udivdi3+0x5bc>
 100e878:	80803e26 	beq	r16,r2,100e974 <__udivdi3+0x5a8>
 100e87c:	9005883a 	mov	r2,r18
 100e880:	0009883a 	mov	r4,zero
 100e884:	003f3a06 	br	100e570 <__udivdi3+0x1a4>
 100e888:	9d26983a 	sll	r19,r19,r20
 100e88c:	3505c83a 	sub	r2,r6,r20
 100e890:	a8a2d83a 	srl	r17,r21,r2
 100e894:	982ed43a 	srli	r23,r19,16
 100e898:	e084d83a 	srl	r2,fp,r2
 100e89c:	ad06983a 	sll	r3,r21,r20
 100e8a0:	8809883a 	mov	r4,r17
 100e8a4:	b80b883a 	mov	r5,r23
 100e8a8:	1886b03a 	or	r3,r3,r2
 100e8ac:	d8c00015 	stw	r3,0(sp)
 100e8b0:	9dbfffcc 	andi	r22,r19,65535
 100e8b4:	10010940 	call	1001094 <__udivsi3>
 100e8b8:	100b883a 	mov	r5,r2
 100e8bc:	b009883a 	mov	r4,r22
 100e8c0:	d8800215 	stw	r2,8(sp)
 100e8c4:	10010a40 	call	10010a4 <__mulsi3>
 100e8c8:	8809883a 	mov	r4,r17
 100e8cc:	b80b883a 	mov	r5,r23
 100e8d0:	102b883a 	mov	r21,r2
 100e8d4:	100109c0 	call	100109c <__umodsi3>
 100e8d8:	d9000017 	ldw	r4,0(sp)
 100e8dc:	1004943a 	slli	r2,r2,16
 100e8e0:	2006d43a 	srli	r3,r4,16
 100e8e4:	10c4b03a 	or	r2,r2,r3
 100e8e8:	1540052e 	bgeu	r2,r21,100e900 <__udivdi3+0x534>
 100e8ec:	d9400217 	ldw	r5,8(sp)
 100e8f0:	14c5883a 	add	r2,r2,r19
 100e8f4:	297fffc4 	addi	r5,r5,-1
 100e8f8:	d9400215 	stw	r5,8(sp)
 100e8fc:	14c0462e 	bgeu	r2,r19,100ea18 <__udivdi3+0x64c>
 100e900:	1563c83a 	sub	r17,r2,r21
 100e904:	8809883a 	mov	r4,r17
 100e908:	b80b883a 	mov	r5,r23
 100e90c:	10010940 	call	1001094 <__udivsi3>
 100e910:	100b883a 	mov	r5,r2
 100e914:	b009883a 	mov	r4,r22
 100e918:	1025883a 	mov	r18,r2
 100e91c:	10010a40 	call	10010a4 <__mulsi3>
 100e920:	8809883a 	mov	r4,r17
 100e924:	b80b883a 	mov	r5,r23
 100e928:	1021883a 	mov	r16,r2
 100e92c:	100109c0 	call	100109c <__umodsi3>
 100e930:	da800017 	ldw	r10,0(sp)
 100e934:	1004943a 	slli	r2,r2,16
 100e938:	50ffffcc 	andi	r3,r10,65535
 100e93c:	10c6b03a 	or	r3,r2,r3
 100e940:	1c00062e 	bgeu	r3,r16,100e95c <__udivdi3+0x590>
 100e944:	1cc7883a 	add	r3,r3,r19
 100e948:	94bfffc4 	addi	r18,r18,-1
 100e94c:	1cc00336 	bltu	r3,r19,100e95c <__udivdi3+0x590>
 100e950:	1c00022e 	bgeu	r3,r16,100e95c <__udivdi3+0x590>
 100e954:	94bfffc4 	addi	r18,r18,-1
 100e958:	1cc7883a 	add	r3,r3,r19
 100e95c:	d9000217 	ldw	r4,8(sp)
 100e960:	e538983a 	sll	fp,fp,r20
 100e964:	1c2bc83a 	sub	r21,r3,r16
 100e968:	2004943a 	slli	r2,r4,16
 100e96c:	90a8b03a 	or	r20,r18,r2
 100e970:	003ebf06 	br	100e470 <__udivdi3+0xa4>
 100e974:	1804943a 	slli	r2,r3,16
 100e978:	e588983a 	sll	r4,fp,r22
 100e97c:	a0ffffcc 	andi	r3,r20,65535
 100e980:	10c5883a 	add	r2,r2,r3
 100e984:	20bfbd2e 	bgeu	r4,r2,100e87c <__udivdi3+0x4b0>
 100e988:	90bfffc4 	addi	r2,r18,-1
 100e98c:	0009883a 	mov	r4,zero
 100e990:	003ef706 	br	100e570 <__udivdi3+0x1a4>
 100e994:	01400204 	movi	r5,8
 100e998:	2805883a 	mov	r2,r5
 100e99c:	003ee706 	br	100e53c <__udivdi3+0x170>
 100e9a0:	01400604 	movi	r5,24
 100e9a4:	2805883a 	mov	r2,r5
 100e9a8:	003ee406 	br	100e53c <__udivdi3+0x170>
 100e9ac:	01400204 	movi	r5,8
 100e9b0:	2805883a 	mov	r2,r5
 100e9b4:	003ea106 	br	100e43c <__udivdi3+0x70>
 100e9b8:	01400604 	movi	r5,24
 100e9bc:	2805883a 	mov	r2,r5
 100e9c0:	003e9e06 	br	100e43c <__udivdi3+0x70>
 100e9c4:	01400204 	movi	r5,8
 100e9c8:	2805883a 	mov	r2,r5
 100e9cc:	003eff06 	br	100e5cc <__udivdi3+0x200>
 100e9d0:	01400604 	movi	r5,24
 100e9d4:	2805883a 	mov	r2,r5
 100e9d8:	003efc06 	br	100e5cc <__udivdi3+0x200>
 100e9dc:	1c3f862e 	bgeu	r3,r16,100e7f8 <__udivdi3+0x42c>
 100e9e0:	1dc7883a 	add	r3,r3,r23
 100e9e4:	ad7fffc4 	addi	r21,r21,-1
 100e9e8:	003f8306 	br	100e7f8 <__udivdi3+0x42c>
 100e9ec:	157f6e2e 	bgeu	r2,r21,100e7a8 <__udivdi3+0x3dc>
 100e9f0:	a53fffc4 	addi	r20,r20,-1
 100e9f4:	15c5883a 	add	r2,r2,r23
 100e9f8:	003f6b06 	br	100e7a8 <__udivdi3+0x3dc>
 100e9fc:	ad7fffc4 	addi	r21,r21,-1
 100ea00:	003ec206 	br	100e50c <__udivdi3+0x140>
 100ea04:	843fffc4 	addi	r16,r16,-1
 100ea08:	14c5883a 	add	r2,r2,r19
 100ea0c:	003f1306 	br	100e65c <__udivdi3+0x290>
 100ea10:	ad7fffc4 	addi	r21,r21,-1
 100ea14:	003f2506 	br	100e6ac <__udivdi3+0x2e0>
 100ea18:	157fb92e 	bgeu	r2,r21,100e900 <__udivdi3+0x534>
 100ea1c:	297fffc4 	addi	r5,r5,-1
 100ea20:	14c5883a 	add	r2,r2,r19
 100ea24:	d9400215 	stw	r5,8(sp)
 100ea28:	003fb506 	br	100e900 <__udivdi3+0x534>
 100ea2c:	843fffc4 	addi	r16,r16,-1
 100ea30:	14c5883a 	add	r2,r2,r19
 100ea34:	003ea106 	br	100e4bc <__udivdi3+0xf0>

0100ea38 <__umoddi3>:
 100ea38:	defff004 	addi	sp,sp,-64
 100ea3c:	3011883a 	mov	r8,r6
 100ea40:	000d883a 	mov	r6,zero
 100ea44:	dd400b15 	stw	r21,44(sp)
 100ea48:	dcc00915 	stw	r19,36(sp)
 100ea4c:	dc000615 	stw	r16,24(sp)
 100ea50:	dfc00f15 	stw	ra,60(sp)
 100ea54:	df000e15 	stw	fp,56(sp)
 100ea58:	ddc00d15 	stw	r23,52(sp)
 100ea5c:	dd800c15 	stw	r22,48(sp)
 100ea60:	dd000a15 	stw	r20,40(sp)
 100ea64:	dc800815 	stw	r18,32(sp)
 100ea68:	dc400715 	stw	r17,28(sp)
 100ea6c:	2817883a 	mov	r11,r5
 100ea70:	d9800415 	stw	r6,16(sp)
 100ea74:	4027883a 	mov	r19,r8
 100ea78:	d9800515 	stw	r6,20(sp)
 100ea7c:	2021883a 	mov	r16,r4
 100ea80:	282b883a 	mov	r21,r5
 100ea84:	38002c1e 	bne	r7,zero,100eb38 <__umoddi3+0x100>
 100ea88:	2a005636 	bltu	r5,r8,100ebe4 <__umoddi3+0x1ac>
 100ea8c:	40009a26 	beq	r8,zero,100ecf8 <__umoddi3+0x2c0>
 100ea90:	00bfffd4 	movui	r2,65535
 100ea94:	14c09236 	bltu	r2,r19,100ece0 <__umoddi3+0x2a8>
 100ea98:	00803fc4 	movi	r2,255
 100ea9c:	14c15c36 	bltu	r2,r19,100f010 <__umoddi3+0x5d8>
 100eaa0:	000b883a 	mov	r5,zero
 100eaa4:	0005883a 	mov	r2,zero
 100eaa8:	9884d83a 	srl	r2,r19,r2
 100eaac:	01004074 	movhi	r4,257
 100eab0:	210e7904 	addi	r4,r4,14820
 100eab4:	01800804 	movi	r6,32
 100eab8:	1105883a 	add	r2,r2,r4
 100eabc:	10c00003 	ldbu	r3,0(r2)
 100eac0:	28c7883a 	add	r3,r5,r3
 100eac4:	30e5c83a 	sub	r18,r6,r3
 100eac8:	9000a41e 	bne	r18,zero,100ed5c <__umoddi3+0x324>
 100eacc:	982ed43a 	srli	r23,r19,16
 100ead0:	acebc83a 	sub	r21,r21,r19
 100ead4:	9d3fffcc 	andi	r20,r19,65535
 100ead8:	002d883a 	mov	r22,zero
 100eadc:	a809883a 	mov	r4,r21
 100eae0:	b80b883a 	mov	r5,r23
 100eae4:	10010940 	call	1001094 <__udivsi3>
 100eae8:	100b883a 	mov	r5,r2
 100eaec:	a009883a 	mov	r4,r20
 100eaf0:	10010a40 	call	10010a4 <__mulsi3>
 100eaf4:	a809883a 	mov	r4,r21
 100eaf8:	b80b883a 	mov	r5,r23
 100eafc:	1023883a 	mov	r17,r2
 100eb00:	100109c0 	call	100109c <__umodsi3>
 100eb04:	1004943a 	slli	r2,r2,16
 100eb08:	8006d43a 	srli	r3,r16,16
 100eb0c:	10c4b03a 	or	r2,r2,r3
 100eb10:	1440032e 	bgeu	r2,r17,100eb20 <__umoddi3+0xe8>
 100eb14:	14c5883a 	add	r2,r2,r19
 100eb18:	14c00136 	bltu	r2,r19,100eb20 <__umoddi3+0xe8>
 100eb1c:	14415836 	bltu	r2,r17,100f080 <__umoddi3+0x648>
 100eb20:	1463c83a 	sub	r17,r2,r17
 100eb24:	8809883a 	mov	r4,r17
 100eb28:	b80b883a 	mov	r5,r23
 100eb2c:	10010940 	call	1001094 <__udivsi3>
 100eb30:	a009883a 	mov	r4,r20
 100eb34:	00005306 	br	100ec84 <__umoddi3+0x24c>
 100eb38:	380d883a 	mov	r6,r7
 100eb3c:	29c0132e 	bgeu	r5,r7,100eb8c <__umoddi3+0x154>
 100eb40:	d9000415 	stw	r4,16(sp)
 100eb44:	d9400515 	stw	r5,20(sp)
 100eb48:	d9400417 	ldw	r5,16(sp)
 100eb4c:	5813883a 	mov	r9,r11
 100eb50:	2811883a 	mov	r8,r5
 100eb54:	4005883a 	mov	r2,r8
 100eb58:	4807883a 	mov	r3,r9
 100eb5c:	dfc00f17 	ldw	ra,60(sp)
 100eb60:	df000e17 	ldw	fp,56(sp)
 100eb64:	ddc00d17 	ldw	r23,52(sp)
 100eb68:	dd800c17 	ldw	r22,48(sp)
 100eb6c:	dd400b17 	ldw	r21,44(sp)
 100eb70:	dd000a17 	ldw	r20,40(sp)
 100eb74:	dcc00917 	ldw	r19,36(sp)
 100eb78:	dc800817 	ldw	r18,32(sp)
 100eb7c:	dc400717 	ldw	r17,28(sp)
 100eb80:	dc000617 	ldw	r16,24(sp)
 100eb84:	dec01004 	addi	sp,sp,64
 100eb88:	f800283a 	ret
 100eb8c:	00bfffd4 	movui	r2,65535
 100eb90:	11c06636 	bltu	r2,r7,100ed2c <__umoddi3+0x2f4>
 100eb94:	00803fc4 	movi	r2,255
 100eb98:	11c12036 	bltu	r2,r7,100f01c <__umoddi3+0x5e4>
 100eb9c:	000b883a 	mov	r5,zero
 100eba0:	0005883a 	mov	r2,zero
 100eba4:	3084d83a 	srl	r2,r6,r2
 100eba8:	01004074 	movhi	r4,257
 100ebac:	210e7904 	addi	r4,r4,14820
 100ebb0:	01c00804 	movi	r7,32
 100ebb4:	1105883a 	add	r2,r2,r4
 100ebb8:	10c00003 	ldbu	r3,0(r2)
 100ebbc:	28c7883a 	add	r3,r5,r3
 100ebc0:	38e5c83a 	sub	r18,r7,r3
 100ebc4:	9000941e 	bne	r18,zero,100ee18 <__umoddi3+0x3e0>
 100ebc8:	35405e36 	bltu	r6,r21,100ed44 <__umoddi3+0x30c>
 100ebcc:	84c05d2e 	bgeu	r16,r19,100ed44 <__umoddi3+0x30c>
 100ebd0:	8011883a 	mov	r8,r16
 100ebd4:	a813883a 	mov	r9,r21
 100ebd8:	dc000415 	stw	r16,16(sp)
 100ebdc:	dd400515 	stw	r21,20(sp)
 100ebe0:	003fdc06 	br	100eb54 <__umoddi3+0x11c>
 100ebe4:	00bfffd4 	movui	r2,65535
 100ebe8:	12004a36 	bltu	r2,r8,100ed14 <__umoddi3+0x2dc>
 100ebec:	00803fc4 	movi	r2,255
 100ebf0:	12010d36 	bltu	r2,r8,100f028 <__umoddi3+0x5f0>
 100ebf4:	000b883a 	mov	r5,zero
 100ebf8:	0005883a 	mov	r2,zero
 100ebfc:	9884d83a 	srl	r2,r19,r2
 100ec00:	01004074 	movhi	r4,257
 100ec04:	210e7904 	addi	r4,r4,14820
 100ec08:	01800804 	movi	r6,32
 100ec0c:	1105883a 	add	r2,r2,r4
 100ec10:	10c00003 	ldbu	r3,0(r2)
 100ec14:	28c7883a 	add	r3,r5,r3
 100ec18:	30c7c83a 	sub	r3,r6,r3
 100ec1c:	1800dc1e 	bne	r3,zero,100ef90 <__umoddi3+0x558>
 100ec20:	002d883a 	mov	r22,zero
 100ec24:	982ed43a 	srli	r23,r19,16
 100ec28:	a809883a 	mov	r4,r21
 100ec2c:	9cbfffcc 	andi	r18,r19,65535
 100ec30:	b80b883a 	mov	r5,r23
 100ec34:	10010940 	call	1001094 <__udivsi3>
 100ec38:	100b883a 	mov	r5,r2
 100ec3c:	9009883a 	mov	r4,r18
 100ec40:	10010a40 	call	10010a4 <__mulsi3>
 100ec44:	a809883a 	mov	r4,r21
 100ec48:	b80b883a 	mov	r5,r23
 100ec4c:	1023883a 	mov	r17,r2
 100ec50:	100109c0 	call	100109c <__umodsi3>
 100ec54:	1004943a 	slli	r2,r2,16
 100ec58:	8006d43a 	srli	r3,r16,16
 100ec5c:	10c4b03a 	or	r2,r2,r3
 100ec60:	1440032e 	bgeu	r2,r17,100ec70 <__umoddi3+0x238>
 100ec64:	14c5883a 	add	r2,r2,r19
 100ec68:	14c00136 	bltu	r2,r19,100ec70 <__umoddi3+0x238>
 100ec6c:	14410236 	bltu	r2,r17,100f078 <__umoddi3+0x640>
 100ec70:	1463c83a 	sub	r17,r2,r17
 100ec74:	8809883a 	mov	r4,r17
 100ec78:	b80b883a 	mov	r5,r23
 100ec7c:	10010940 	call	1001094 <__udivsi3>
 100ec80:	9009883a 	mov	r4,r18
 100ec84:	100b883a 	mov	r5,r2
 100ec88:	10010a40 	call	10010a4 <__mulsi3>
 100ec8c:	8809883a 	mov	r4,r17
 100ec90:	b80b883a 	mov	r5,r23
 100ec94:	102b883a 	mov	r21,r2
 100ec98:	100109c0 	call	100109c <__umodsi3>
 100ec9c:	1004943a 	slli	r2,r2,16
 100eca0:	80ffffcc 	andi	r3,r16,65535
 100eca4:	10c4b03a 	or	r2,r2,r3
 100eca8:	1540042e 	bgeu	r2,r21,100ecbc <__umoddi3+0x284>
 100ecac:	14c5883a 	add	r2,r2,r19
 100ecb0:	14c00236 	bltu	r2,r19,100ecbc <__umoddi3+0x284>
 100ecb4:	1540012e 	bgeu	r2,r21,100ecbc <__umoddi3+0x284>
 100ecb8:	14c5883a 	add	r2,r2,r19
 100ecbc:	1545c83a 	sub	r2,r2,r21
 100ecc0:	1584d83a 	srl	r2,r2,r22
 100ecc4:	0013883a 	mov	r9,zero
 100ecc8:	d8800415 	stw	r2,16(sp)
 100eccc:	d8c00417 	ldw	r3,16(sp)
 100ecd0:	0005883a 	mov	r2,zero
 100ecd4:	d8800515 	stw	r2,20(sp)
 100ecd8:	1811883a 	mov	r8,r3
 100ecdc:	003f9d06 	br	100eb54 <__umoddi3+0x11c>
 100ece0:	00804034 	movhi	r2,256
 100ece4:	10bfffc4 	addi	r2,r2,-1
 100ece8:	14c0c636 	bltu	r2,r19,100f004 <__umoddi3+0x5cc>
 100ecec:	01400404 	movi	r5,16
 100ecf0:	2805883a 	mov	r2,r5
 100ecf4:	003f6c06 	br	100eaa8 <__umoddi3+0x70>
 100ecf8:	01000044 	movi	r4,1
 100ecfc:	000b883a 	mov	r5,zero
 100ed00:	10010940 	call	1001094 <__udivsi3>
 100ed04:	1027883a 	mov	r19,r2
 100ed08:	00bfffd4 	movui	r2,65535
 100ed0c:	14fff436 	bltu	r2,r19,100ece0 <__umoddi3+0x2a8>
 100ed10:	003f6106 	br	100ea98 <__umoddi3+0x60>
 100ed14:	00804034 	movhi	r2,256
 100ed18:	10bfffc4 	addi	r2,r2,-1
 100ed1c:	1200c536 	bltu	r2,r8,100f034 <__umoddi3+0x5fc>
 100ed20:	01400404 	movi	r5,16
 100ed24:	2805883a 	mov	r2,r5
 100ed28:	003fb406 	br	100ebfc <__umoddi3+0x1c4>
 100ed2c:	00804034 	movhi	r2,256
 100ed30:	10bfffc4 	addi	r2,r2,-1
 100ed34:	11c0c236 	bltu	r2,r7,100f040 <__umoddi3+0x608>
 100ed38:	01400404 	movi	r5,16
 100ed3c:	2805883a 	mov	r2,r5
 100ed40:	003f9806 	br	100eba4 <__umoddi3+0x16c>
 100ed44:	84c9c83a 	sub	r4,r16,r19
 100ed48:	8105803a 	cmpltu	r2,r16,r4
 100ed4c:	a987c83a 	sub	r3,r21,r6
 100ed50:	18abc83a 	sub	r21,r3,r2
 100ed54:	2021883a 	mov	r16,r4
 100ed58:	003f9d06 	br	100ebd0 <__umoddi3+0x198>
 100ed5c:	9ca6983a 	sll	r19,r19,r18
 100ed60:	3485c83a 	sub	r2,r6,r18
 100ed64:	a8a2d83a 	srl	r17,r21,r2
 100ed68:	982ed43a 	srli	r23,r19,16
 100ed6c:	ac86983a 	sll	r3,r21,r18
 100ed70:	8084d83a 	srl	r2,r16,r2
 100ed74:	8809883a 	mov	r4,r17
 100ed78:	b80b883a 	mov	r5,r23
 100ed7c:	18b8b03a 	or	fp,r3,r2
 100ed80:	9d3fffcc 	andi	r20,r19,65535
 100ed84:	10010940 	call	1001094 <__udivsi3>
 100ed88:	100b883a 	mov	r5,r2
 100ed8c:	a009883a 	mov	r4,r20
 100ed90:	10010a40 	call	10010a4 <__mulsi3>
 100ed94:	8809883a 	mov	r4,r17
 100ed98:	b80b883a 	mov	r5,r23
 100ed9c:	102b883a 	mov	r21,r2
 100eda0:	100109c0 	call	100109c <__umodsi3>
 100eda4:	1004943a 	slli	r2,r2,16
 100eda8:	e006d43a 	srli	r3,fp,16
 100edac:	902d883a 	mov	r22,r18
 100edb0:	10c4b03a 	or	r2,r2,r3
 100edb4:	1540022e 	bgeu	r2,r21,100edc0 <__umoddi3+0x388>
 100edb8:	14c5883a 	add	r2,r2,r19
 100edbc:	14c0ab2e 	bgeu	r2,r19,100f06c <__umoddi3+0x634>
 100edc0:	1563c83a 	sub	r17,r2,r21
 100edc4:	8809883a 	mov	r4,r17
 100edc8:	b80b883a 	mov	r5,r23
 100edcc:	10010940 	call	1001094 <__udivsi3>
 100edd0:	100b883a 	mov	r5,r2
 100edd4:	a009883a 	mov	r4,r20
 100edd8:	10010a40 	call	10010a4 <__mulsi3>
 100eddc:	8809883a 	mov	r4,r17
 100ede0:	b80b883a 	mov	r5,r23
 100ede4:	102b883a 	mov	r21,r2
 100ede8:	100109c0 	call	100109c <__umodsi3>
 100edec:	1004943a 	slli	r2,r2,16
 100edf0:	e0ffffcc 	andi	r3,fp,65535
 100edf4:	10c4b03a 	or	r2,r2,r3
 100edf8:	1540042e 	bgeu	r2,r21,100ee0c <__umoddi3+0x3d4>
 100edfc:	14c5883a 	add	r2,r2,r19
 100ee00:	14c00236 	bltu	r2,r19,100ee0c <__umoddi3+0x3d4>
 100ee04:	1540012e 	bgeu	r2,r21,100ee0c <__umoddi3+0x3d4>
 100ee08:	14c5883a 	add	r2,r2,r19
 100ee0c:	84a0983a 	sll	r16,r16,r18
 100ee10:	156bc83a 	sub	r21,r2,r21
 100ee14:	003f3106 	br	100eadc <__umoddi3+0xa4>
 100ee18:	3c8fc83a 	sub	r7,r7,r18
 100ee1c:	3486983a 	sll	r3,r6,r18
 100ee20:	99c4d83a 	srl	r2,r19,r7
 100ee24:	a9e2d83a 	srl	r17,r21,r7
 100ee28:	ac8c983a 	sll	r6,r21,r18
 100ee2c:	18acb03a 	or	r22,r3,r2
 100ee30:	b02ed43a 	srli	r23,r22,16
 100ee34:	81c4d83a 	srl	r2,r16,r7
 100ee38:	8809883a 	mov	r4,r17
 100ee3c:	b80b883a 	mov	r5,r23
 100ee40:	308cb03a 	or	r6,r6,r2
 100ee44:	d9c00315 	stw	r7,12(sp)
 100ee48:	d9800215 	stw	r6,8(sp)
 100ee4c:	b53fffcc 	andi	r20,r22,65535
 100ee50:	10010940 	call	1001094 <__udivsi3>
 100ee54:	100b883a 	mov	r5,r2
 100ee58:	a009883a 	mov	r4,r20
 100ee5c:	1039883a 	mov	fp,r2
 100ee60:	10010a40 	call	10010a4 <__mulsi3>
 100ee64:	8809883a 	mov	r4,r17
 100ee68:	b80b883a 	mov	r5,r23
 100ee6c:	102b883a 	mov	r21,r2
 100ee70:	100109c0 	call	100109c <__umodsi3>
 100ee74:	d9000217 	ldw	r4,8(sp)
 100ee78:	1004943a 	slli	r2,r2,16
 100ee7c:	9ca6983a 	sll	r19,r19,r18
 100ee80:	2006d43a 	srli	r3,r4,16
 100ee84:	84a0983a 	sll	r16,r16,r18
 100ee88:	dcc00015 	stw	r19,0(sp)
 100ee8c:	10c4b03a 	or	r2,r2,r3
 100ee90:	dc000115 	stw	r16,4(sp)
 100ee94:	1540032e 	bgeu	r2,r21,100eea4 <__umoddi3+0x46c>
 100ee98:	1585883a 	add	r2,r2,r22
 100ee9c:	e73fffc4 	addi	fp,fp,-1
 100eea0:	15806e2e 	bgeu	r2,r22,100f05c <__umoddi3+0x624>
 100eea4:	1563c83a 	sub	r17,r2,r21
 100eea8:	8809883a 	mov	r4,r17
 100eeac:	b80b883a 	mov	r5,r23
 100eeb0:	10010940 	call	1001094 <__udivsi3>
 100eeb4:	100b883a 	mov	r5,r2
 100eeb8:	a009883a 	mov	r4,r20
 100eebc:	1021883a 	mov	r16,r2
 100eec0:	10010a40 	call	10010a4 <__mulsi3>
 100eec4:	b80b883a 	mov	r5,r23
 100eec8:	8809883a 	mov	r4,r17
 100eecc:	1029883a 	mov	r20,r2
 100eed0:	100109c0 	call	100109c <__umodsi3>
 100eed4:	d9400217 	ldw	r5,8(sp)
 100eed8:	1004943a 	slli	r2,r2,16
 100eedc:	28ffffcc 	andi	r3,r5,65535
 100eee0:	10c4b03a 	or	r2,r2,r3
 100eee4:	1500032e 	bgeu	r2,r20,100eef4 <__umoddi3+0x4bc>
 100eee8:	1585883a 	add	r2,r2,r22
 100eeec:	843fffc4 	addi	r16,r16,-1
 100eef0:	1580562e 	bgeu	r2,r22,100f04c <__umoddi3+0x614>
 100eef4:	d9800017 	ldw	r6,0(sp)
 100eef8:	e022943a 	slli	r17,fp,16
 100eefc:	302ed43a 	srli	r23,r6,16
 100ef00:	8462b03a 	or	r17,r16,r17
 100ef04:	34ffffcc 	andi	r19,r6,65535
 100ef08:	882ad43a 	srli	r21,r17,16
 100ef0c:	8c7fffcc 	andi	r17,r17,65535
 100ef10:	8809883a 	mov	r4,r17
 100ef14:	980b883a 	mov	r5,r19
 100ef18:	1521c83a 	sub	r16,r2,r20
 100ef1c:	10010a40 	call	10010a4 <__mulsi3>
 100ef20:	8809883a 	mov	r4,r17
 100ef24:	b80b883a 	mov	r5,r23
 100ef28:	1029883a 	mov	r20,r2
 100ef2c:	10010a40 	call	10010a4 <__mulsi3>
 100ef30:	980b883a 	mov	r5,r19
 100ef34:	a809883a 	mov	r4,r21
 100ef38:	1023883a 	mov	r17,r2
 100ef3c:	10010a40 	call	10010a4 <__mulsi3>
 100ef40:	a809883a 	mov	r4,r21
 100ef44:	b80b883a 	mov	r5,r23
 100ef48:	1027883a 	mov	r19,r2
 100ef4c:	10010a40 	call	10010a4 <__mulsi3>
 100ef50:	100b883a 	mov	r5,r2
 100ef54:	a004d43a 	srli	r2,r20,16
 100ef58:	8ce3883a 	add	r17,r17,r19
 100ef5c:	1449883a 	add	r4,r2,r17
 100ef60:	24c0022e 	bgeu	r4,r19,100ef6c <__umoddi3+0x534>
 100ef64:	00800074 	movhi	r2,1
 100ef68:	288b883a 	add	r5,r5,r2
 100ef6c:	2004d43a 	srli	r2,r4,16
 100ef70:	2008943a 	slli	r4,r4,16
 100ef74:	a0ffffcc 	andi	r3,r20,65535
 100ef78:	288d883a 	add	r6,r5,r2
 100ef7c:	20c9883a 	add	r4,r4,r3
 100ef80:	81800b36 	bltu	r16,r6,100efb0 <__umoddi3+0x578>
 100ef84:	81804026 	beq	r16,r6,100f088 <__umoddi3+0x650>
 100ef88:	818dc83a 	sub	r6,r16,r6
 100ef8c:	00000f06 	br	100efcc <__umoddi3+0x594>
 100ef90:	30c5c83a 	sub	r2,r6,r3
 100ef94:	182d883a 	mov	r22,r3
 100ef98:	8084d83a 	srl	r2,r16,r2
 100ef9c:	a8c6983a 	sll	r3,r21,r3
 100efa0:	9da6983a 	sll	r19,r19,r22
 100efa4:	85a0983a 	sll	r16,r16,r22
 100efa8:	18aab03a 	or	r21,r3,r2
 100efac:	003f1d06 	br	100ec24 <__umoddi3+0x1ec>
 100efb0:	d8c00017 	ldw	r3,0(sp)
 100efb4:	20c5c83a 	sub	r2,r4,r3
 100efb8:	2089803a 	cmpltu	r4,r4,r2
 100efbc:	3587c83a 	sub	r3,r6,r22
 100efc0:	1907c83a 	sub	r3,r3,r4
 100efc4:	80cdc83a 	sub	r6,r16,r3
 100efc8:	1009883a 	mov	r4,r2
 100efcc:	d9400117 	ldw	r5,4(sp)
 100efd0:	2905c83a 	sub	r2,r5,r4
 100efd4:	2887803a 	cmpltu	r3,r5,r2
 100efd8:	30c7c83a 	sub	r3,r6,r3
 100efdc:	d9800317 	ldw	r6,12(sp)
 100efe0:	1484d83a 	srl	r2,r2,r18
 100efe4:	1988983a 	sll	r4,r3,r6
 100efe8:	1c86d83a 	srl	r3,r3,r18
 100efec:	2088b03a 	or	r4,r4,r2
 100eff0:	2011883a 	mov	r8,r4
 100eff4:	1813883a 	mov	r9,r3
 100eff8:	d9000415 	stw	r4,16(sp)
 100effc:	d8c00515 	stw	r3,20(sp)
 100f000:	003ed406 	br	100eb54 <__umoddi3+0x11c>
 100f004:	01400604 	movi	r5,24
 100f008:	2805883a 	mov	r2,r5
 100f00c:	003ea606 	br	100eaa8 <__umoddi3+0x70>
 100f010:	01400204 	movi	r5,8
 100f014:	2805883a 	mov	r2,r5
 100f018:	003ea306 	br	100eaa8 <__umoddi3+0x70>
 100f01c:	01400204 	movi	r5,8
 100f020:	2805883a 	mov	r2,r5
 100f024:	003edf06 	br	100eba4 <__umoddi3+0x16c>
 100f028:	01400204 	movi	r5,8
 100f02c:	2805883a 	mov	r2,r5
 100f030:	003ef206 	br	100ebfc <__umoddi3+0x1c4>
 100f034:	01400604 	movi	r5,24
 100f038:	2805883a 	mov	r2,r5
 100f03c:	003eef06 	br	100ebfc <__umoddi3+0x1c4>
 100f040:	01400604 	movi	r5,24
 100f044:	2805883a 	mov	r2,r5
 100f048:	003ed606 	br	100eba4 <__umoddi3+0x16c>
 100f04c:	153fa92e 	bgeu	r2,r20,100eef4 <__umoddi3+0x4bc>
 100f050:	843fffc4 	addi	r16,r16,-1
 100f054:	1585883a 	add	r2,r2,r22
 100f058:	003fa606 	br	100eef4 <__umoddi3+0x4bc>
 100f05c:	157f912e 	bgeu	r2,r21,100eea4 <__umoddi3+0x46c>
 100f060:	e73fffc4 	addi	fp,fp,-1
 100f064:	1585883a 	add	r2,r2,r22
 100f068:	003f8e06 	br	100eea4 <__umoddi3+0x46c>
 100f06c:	157f542e 	bgeu	r2,r21,100edc0 <__umoddi3+0x388>
 100f070:	14c5883a 	add	r2,r2,r19
 100f074:	003f5206 	br	100edc0 <__umoddi3+0x388>
 100f078:	14c5883a 	add	r2,r2,r19
 100f07c:	003efc06 	br	100ec70 <__umoddi3+0x238>
 100f080:	14c5883a 	add	r2,r2,r19
 100f084:	003ea606 	br	100eb20 <__umoddi3+0xe8>
 100f088:	d8800117 	ldw	r2,4(sp)
 100f08c:	113fc836 	bltu	r2,r4,100efb0 <__umoddi3+0x578>
 100f090:	000d883a 	mov	r6,zero
 100f094:	003fcd06 	br	100efcc <__umoddi3+0x594>

0100f098 <__nesf2>:
 100f098:	defff304 	addi	sp,sp,-52
 100f09c:	dc400b15 	stw	r17,44(sp)
 100f0a0:	dc400204 	addi	r17,sp,8
 100f0a4:	dc000a15 	stw	r16,40(sp)
 100f0a8:	d9000015 	stw	r4,0(sp)
 100f0ac:	d9400115 	stw	r5,4(sp)
 100f0b0:	d809883a 	mov	r4,sp
 100f0b4:	880b883a 	mov	r5,r17
 100f0b8:	dc000604 	addi	r16,sp,24
 100f0bc:	dfc00c15 	stw	ra,48(sp)
 100f0c0:	10104a80 	call	10104a8 <__unpack_f>
 100f0c4:	d9000104 	addi	r4,sp,4
 100f0c8:	800b883a 	mov	r5,r16
 100f0cc:	10104a80 	call	10104a8 <__unpack_f>
 100f0d0:	d8800217 	ldw	r2,8(sp)
 100f0d4:	00c00044 	movi	r3,1
 100f0d8:	180d883a 	mov	r6,r3
 100f0dc:	1880062e 	bgeu	r3,r2,100f0f8 <__nesf2+0x60>
 100f0e0:	d8800617 	ldw	r2,24(sp)
 100f0e4:	8809883a 	mov	r4,r17
 100f0e8:	800b883a 	mov	r5,r16
 100f0ec:	1880022e 	bgeu	r3,r2,100f0f8 <__nesf2+0x60>
 100f0f0:	10105700 	call	1010570 <__fpcmp_parts_f>
 100f0f4:	100d883a 	mov	r6,r2
 100f0f8:	3005883a 	mov	r2,r6
 100f0fc:	dfc00c17 	ldw	ra,48(sp)
 100f100:	dc400b17 	ldw	r17,44(sp)
 100f104:	dc000a17 	ldw	r16,40(sp)
 100f108:	dec00d04 	addi	sp,sp,52
 100f10c:	f800283a 	ret

0100f110 <__gtsf2>:
 100f110:	defff304 	addi	sp,sp,-52
 100f114:	dc400b15 	stw	r17,44(sp)
 100f118:	dc400204 	addi	r17,sp,8
 100f11c:	dc000a15 	stw	r16,40(sp)
 100f120:	d9000015 	stw	r4,0(sp)
 100f124:	d9400115 	stw	r5,4(sp)
 100f128:	d809883a 	mov	r4,sp
 100f12c:	880b883a 	mov	r5,r17
 100f130:	dc000604 	addi	r16,sp,24
 100f134:	dfc00c15 	stw	ra,48(sp)
 100f138:	10104a80 	call	10104a8 <__unpack_f>
 100f13c:	d9000104 	addi	r4,sp,4
 100f140:	800b883a 	mov	r5,r16
 100f144:	10104a80 	call	10104a8 <__unpack_f>
 100f148:	d8800217 	ldw	r2,8(sp)
 100f14c:	00c00044 	movi	r3,1
 100f150:	01bfffc4 	movi	r6,-1
 100f154:	1880062e 	bgeu	r3,r2,100f170 <__gtsf2+0x60>
 100f158:	d8800617 	ldw	r2,24(sp)
 100f15c:	8809883a 	mov	r4,r17
 100f160:	800b883a 	mov	r5,r16
 100f164:	1880022e 	bgeu	r3,r2,100f170 <__gtsf2+0x60>
 100f168:	10105700 	call	1010570 <__fpcmp_parts_f>
 100f16c:	100d883a 	mov	r6,r2
 100f170:	3005883a 	mov	r2,r6
 100f174:	dfc00c17 	ldw	ra,48(sp)
 100f178:	dc400b17 	ldw	r17,44(sp)
 100f17c:	dc000a17 	ldw	r16,40(sp)
 100f180:	dec00d04 	addi	sp,sp,52
 100f184:	f800283a 	ret

0100f188 <__ltsf2>:
 100f188:	defff304 	addi	sp,sp,-52
 100f18c:	dc400b15 	stw	r17,44(sp)
 100f190:	dc400204 	addi	r17,sp,8
 100f194:	dc000a15 	stw	r16,40(sp)
 100f198:	d9000015 	stw	r4,0(sp)
 100f19c:	d9400115 	stw	r5,4(sp)
 100f1a0:	d809883a 	mov	r4,sp
 100f1a4:	880b883a 	mov	r5,r17
 100f1a8:	dc000604 	addi	r16,sp,24
 100f1ac:	dfc00c15 	stw	ra,48(sp)
 100f1b0:	10104a80 	call	10104a8 <__unpack_f>
 100f1b4:	d9000104 	addi	r4,sp,4
 100f1b8:	800b883a 	mov	r5,r16
 100f1bc:	10104a80 	call	10104a8 <__unpack_f>
 100f1c0:	d8800217 	ldw	r2,8(sp)
 100f1c4:	00c00044 	movi	r3,1
 100f1c8:	180d883a 	mov	r6,r3
 100f1cc:	1880062e 	bgeu	r3,r2,100f1e8 <__ltsf2+0x60>
 100f1d0:	d8800617 	ldw	r2,24(sp)
 100f1d4:	8809883a 	mov	r4,r17
 100f1d8:	800b883a 	mov	r5,r16
 100f1dc:	1880022e 	bgeu	r3,r2,100f1e8 <__ltsf2+0x60>
 100f1e0:	10105700 	call	1010570 <__fpcmp_parts_f>
 100f1e4:	100d883a 	mov	r6,r2
 100f1e8:	3005883a 	mov	r2,r6
 100f1ec:	dfc00c17 	ldw	ra,48(sp)
 100f1f0:	dc400b17 	ldw	r17,44(sp)
 100f1f4:	dc000a17 	ldw	r16,40(sp)
 100f1f8:	dec00d04 	addi	sp,sp,52
 100f1fc:	f800283a 	ret

0100f200 <_fpadd_parts>:
 100f200:	defff804 	addi	sp,sp,-32
 100f204:	dcc00315 	stw	r19,12(sp)
 100f208:	2027883a 	mov	r19,r4
 100f20c:	21000017 	ldw	r4,0(r4)
 100f210:	00c00044 	movi	r3,1
 100f214:	dd400515 	stw	r21,20(sp)
 100f218:	dd000415 	stw	r20,16(sp)
 100f21c:	ddc00715 	stw	r23,28(sp)
 100f220:	dd800615 	stw	r22,24(sp)
 100f224:	dc800215 	stw	r18,8(sp)
 100f228:	dc400115 	stw	r17,4(sp)
 100f22c:	dc000015 	stw	r16,0(sp)
 100f230:	282b883a 	mov	r21,r5
 100f234:	3029883a 	mov	r20,r6
 100f238:	1900632e 	bgeu	r3,r4,100f3c8 <_fpadd_parts+0x1c8>
 100f23c:	28800017 	ldw	r2,0(r5)
 100f240:	1880812e 	bgeu	r3,r2,100f448 <_fpadd_parts+0x248>
 100f244:	00c00104 	movi	r3,4
 100f248:	20c0dc26 	beq	r4,r3,100f5bc <_fpadd_parts+0x3bc>
 100f24c:	10c07e26 	beq	r2,r3,100f448 <_fpadd_parts+0x248>
 100f250:	00c00084 	movi	r3,2
 100f254:	10c06726 	beq	r2,r3,100f3f4 <_fpadd_parts+0x1f4>
 100f258:	20c07b26 	beq	r4,r3,100f448 <_fpadd_parts+0x248>
 100f25c:	9dc00217 	ldw	r23,8(r19)
 100f260:	28c00217 	ldw	r3,8(r5)
 100f264:	9c400317 	ldw	r17,12(r19)
 100f268:	2bc00317 	ldw	r15,12(r5)
 100f26c:	b8cdc83a 	sub	r6,r23,r3
 100f270:	9c800417 	ldw	r18,16(r19)
 100f274:	2c000417 	ldw	r16,16(r5)
 100f278:	3009883a 	mov	r4,r6
 100f27c:	30009716 	blt	r6,zero,100f4dc <_fpadd_parts+0x2dc>
 100f280:	00800fc4 	movi	r2,63
 100f284:	11806b16 	blt	r2,r6,100f434 <_fpadd_parts+0x234>
 100f288:	0100a40e 	bge	zero,r4,100f51c <_fpadd_parts+0x31c>
 100f28c:	35bff804 	addi	r22,r6,-32
 100f290:	b000bc16 	blt	r22,zero,100f584 <_fpadd_parts+0x384>
 100f294:	8596d83a 	srl	r11,r16,r22
 100f298:	0019883a 	mov	r12,zero
 100f29c:	0013883a 	mov	r9,zero
 100f2a0:	01000044 	movi	r4,1
 100f2a4:	0015883a 	mov	r10,zero
 100f2a8:	b000be16 	blt	r22,zero,100f5a4 <_fpadd_parts+0x3a4>
 100f2ac:	2590983a 	sll	r8,r4,r22
 100f2b0:	000f883a 	mov	r7,zero
 100f2b4:	00bfffc4 	movi	r2,-1
 100f2b8:	3889883a 	add	r4,r7,r2
 100f2bc:	408b883a 	add	r5,r8,r2
 100f2c0:	21cd803a 	cmpltu	r6,r4,r7
 100f2c4:	314b883a 	add	r5,r6,r5
 100f2c8:	7904703a 	and	r2,r15,r4
 100f2cc:	8146703a 	and	r3,r16,r5
 100f2d0:	10c4b03a 	or	r2,r2,r3
 100f2d4:	10000226 	beq	r2,zero,100f2e0 <_fpadd_parts+0xe0>
 100f2d8:	02400044 	movi	r9,1
 100f2dc:	0015883a 	mov	r10,zero
 100f2e0:	5a5eb03a 	or	r15,r11,r9
 100f2e4:	62a0b03a 	or	r16,r12,r10
 100f2e8:	99400117 	ldw	r5,4(r19)
 100f2ec:	a8800117 	ldw	r2,4(r21)
 100f2f0:	28806e26 	beq	r5,r2,100f4ac <_fpadd_parts+0x2ac>
 100f2f4:	28006626 	beq	r5,zero,100f490 <_fpadd_parts+0x290>
 100f2f8:	7c45c83a 	sub	r2,r15,r17
 100f2fc:	7889803a 	cmpltu	r4,r15,r2
 100f300:	8487c83a 	sub	r3,r16,r18
 100f304:	1909c83a 	sub	r4,r3,r4
 100f308:	100d883a 	mov	r6,r2
 100f30c:	200f883a 	mov	r7,r4
 100f310:	38007716 	blt	r7,zero,100f4f0 <_fpadd_parts+0x2f0>
 100f314:	a5c00215 	stw	r23,8(r20)
 100f318:	a1c00415 	stw	r7,16(r20)
 100f31c:	a0000115 	stw	zero,4(r20)
 100f320:	a1800315 	stw	r6,12(r20)
 100f324:	a2000317 	ldw	r8,12(r20)
 100f328:	a2400417 	ldw	r9,16(r20)
 100f32c:	00bfffc4 	movi	r2,-1
 100f330:	408b883a 	add	r5,r8,r2
 100f334:	2a09803a 	cmpltu	r4,r5,r8
 100f338:	488d883a 	add	r6,r9,r2
 100f33c:	01c40034 	movhi	r7,4096
 100f340:	39ffffc4 	addi	r7,r7,-1
 100f344:	218d883a 	add	r6,r4,r6
 100f348:	39801736 	bltu	r7,r6,100f3a8 <_fpadd_parts+0x1a8>
 100f34c:	31c06526 	beq	r6,r7,100f4e4 <_fpadd_parts+0x2e4>
 100f350:	a3000217 	ldw	r12,8(r20)
 100f354:	4209883a 	add	r4,r8,r8
 100f358:	00bfffc4 	movi	r2,-1
 100f35c:	220f803a 	cmpltu	r7,r4,r8
 100f360:	4a4b883a 	add	r5,r9,r9
 100f364:	394f883a 	add	r7,r7,r5
 100f368:	2095883a 	add	r10,r4,r2
 100f36c:	3897883a 	add	r11,r7,r2
 100f370:	510d803a 	cmpltu	r6,r10,r4
 100f374:	6099883a 	add	r12,r12,r2
 100f378:	32d7883a 	add	r11,r6,r11
 100f37c:	00840034 	movhi	r2,4096
 100f380:	10bfffc4 	addi	r2,r2,-1
 100f384:	2011883a 	mov	r8,r4
 100f388:	3813883a 	mov	r9,r7
 100f38c:	a1000315 	stw	r4,12(r20)
 100f390:	a1c00415 	stw	r7,16(r20)
 100f394:	a3000215 	stw	r12,8(r20)
 100f398:	12c00336 	bltu	r2,r11,100f3a8 <_fpadd_parts+0x1a8>
 100f39c:	58bfed1e 	bne	r11,r2,100f354 <_fpadd_parts+0x154>
 100f3a0:	00bfff84 	movi	r2,-2
 100f3a4:	12bfeb2e 	bgeu	r2,r10,100f354 <_fpadd_parts+0x154>
 100f3a8:	a2800417 	ldw	r10,16(r20)
 100f3ac:	008000c4 	movi	r2,3
 100f3b0:	00c80034 	movhi	r3,8192
 100f3b4:	18ffffc4 	addi	r3,r3,-1
 100f3b8:	a2400317 	ldw	r9,12(r20)
 100f3bc:	a0800015 	stw	r2,0(r20)
 100f3c0:	1a802336 	bltu	r3,r10,100f450 <_fpadd_parts+0x250>
 100f3c4:	a027883a 	mov	r19,r20
 100f3c8:	9805883a 	mov	r2,r19
 100f3cc:	ddc00717 	ldw	r23,28(sp)
 100f3d0:	dd800617 	ldw	r22,24(sp)
 100f3d4:	dd400517 	ldw	r21,20(sp)
 100f3d8:	dd000417 	ldw	r20,16(sp)
 100f3dc:	dcc00317 	ldw	r19,12(sp)
 100f3e0:	dc800217 	ldw	r18,8(sp)
 100f3e4:	dc400117 	ldw	r17,4(sp)
 100f3e8:	dc000017 	ldw	r16,0(sp)
 100f3ec:	dec00804 	addi	sp,sp,32
 100f3f0:	f800283a 	ret
 100f3f4:	20fff41e 	bne	r4,r3,100f3c8 <_fpadd_parts+0x1c8>
 100f3f8:	31000015 	stw	r4,0(r6)
 100f3fc:	98800117 	ldw	r2,4(r19)
 100f400:	30800115 	stw	r2,4(r6)
 100f404:	98c00217 	ldw	r3,8(r19)
 100f408:	30c00215 	stw	r3,8(r6)
 100f40c:	98800317 	ldw	r2,12(r19)
 100f410:	30800315 	stw	r2,12(r6)
 100f414:	98c00417 	ldw	r3,16(r19)
 100f418:	30c00415 	stw	r3,16(r6)
 100f41c:	98800117 	ldw	r2,4(r19)
 100f420:	28c00117 	ldw	r3,4(r5)
 100f424:	3027883a 	mov	r19,r6
 100f428:	10c4703a 	and	r2,r2,r3
 100f42c:	30800115 	stw	r2,4(r6)
 100f430:	003fe506 	br	100f3c8 <_fpadd_parts+0x1c8>
 100f434:	1dc02616 	blt	r3,r23,100f4d0 <_fpadd_parts+0x2d0>
 100f438:	0023883a 	mov	r17,zero
 100f43c:	182f883a 	mov	r23,r3
 100f440:	0025883a 	mov	r18,zero
 100f444:	003fa806 	br	100f2e8 <_fpadd_parts+0xe8>
 100f448:	a827883a 	mov	r19,r21
 100f44c:	003fde06 	br	100f3c8 <_fpadd_parts+0x1c8>
 100f450:	01800044 	movi	r6,1
 100f454:	500497fa 	slli	r2,r10,31
 100f458:	4808d07a 	srli	r4,r9,1
 100f45c:	518ad83a 	srl	r5,r10,r6
 100f460:	a2000217 	ldw	r8,8(r20)
 100f464:	1108b03a 	or	r4,r2,r4
 100f468:	0007883a 	mov	r3,zero
 100f46c:	4984703a 	and	r2,r9,r6
 100f470:	208cb03a 	or	r6,r4,r2
 100f474:	28ceb03a 	or	r7,r5,r3
 100f478:	42000044 	addi	r8,r8,1
 100f47c:	a027883a 	mov	r19,r20
 100f480:	a1c00415 	stw	r7,16(r20)
 100f484:	a2000215 	stw	r8,8(r20)
 100f488:	a1800315 	stw	r6,12(r20)
 100f48c:	003fce06 	br	100f3c8 <_fpadd_parts+0x1c8>
 100f490:	8bc5c83a 	sub	r2,r17,r15
 100f494:	8889803a 	cmpltu	r4,r17,r2
 100f498:	9407c83a 	sub	r3,r18,r16
 100f49c:	1909c83a 	sub	r4,r3,r4
 100f4a0:	100d883a 	mov	r6,r2
 100f4a4:	200f883a 	mov	r7,r4
 100f4a8:	003f9906 	br	100f310 <_fpadd_parts+0x110>
 100f4ac:	7c45883a 	add	r2,r15,r17
 100f4b0:	13c9803a 	cmpltu	r4,r2,r15
 100f4b4:	8487883a 	add	r3,r16,r18
 100f4b8:	20c9883a 	add	r4,r4,r3
 100f4bc:	a1400115 	stw	r5,4(r20)
 100f4c0:	a5c00215 	stw	r23,8(r20)
 100f4c4:	a0800315 	stw	r2,12(r20)
 100f4c8:	a1000415 	stw	r4,16(r20)
 100f4cc:	003fb606 	br	100f3a8 <_fpadd_parts+0x1a8>
 100f4d0:	001f883a 	mov	r15,zero
 100f4d4:	0021883a 	mov	r16,zero
 100f4d8:	003f8306 	br	100f2e8 <_fpadd_parts+0xe8>
 100f4dc:	018dc83a 	sub	r6,zero,r6
 100f4e0:	003f6706 	br	100f280 <_fpadd_parts+0x80>
 100f4e4:	00bfff84 	movi	r2,-2
 100f4e8:	117faf36 	bltu	r2,r5,100f3a8 <_fpadd_parts+0x1a8>
 100f4ec:	003f9806 	br	100f350 <_fpadd_parts+0x150>
 100f4f0:	0005883a 	mov	r2,zero
 100f4f4:	1189c83a 	sub	r4,r2,r6
 100f4f8:	1105803a 	cmpltu	r2,r2,r4
 100f4fc:	01cbc83a 	sub	r5,zero,r7
 100f500:	2885c83a 	sub	r2,r5,r2
 100f504:	01800044 	movi	r6,1
 100f508:	a1800115 	stw	r6,4(r20)
 100f50c:	a5c00215 	stw	r23,8(r20)
 100f510:	a1000315 	stw	r4,12(r20)
 100f514:	a0800415 	stw	r2,16(r20)
 100f518:	003f8206 	br	100f324 <_fpadd_parts+0x124>
 100f51c:	203f7226 	beq	r4,zero,100f2e8 <_fpadd_parts+0xe8>
 100f520:	35bff804 	addi	r22,r6,-32
 100f524:	b9af883a 	add	r23,r23,r6
 100f528:	b0003116 	blt	r22,zero,100f5f0 <_fpadd_parts+0x3f0>
 100f52c:	959ad83a 	srl	r13,r18,r22
 100f530:	001d883a 	mov	r14,zero
 100f534:	000f883a 	mov	r7,zero
 100f538:	01000044 	movi	r4,1
 100f53c:	0011883a 	mov	r8,zero
 100f540:	b0002516 	blt	r22,zero,100f5d8 <_fpadd_parts+0x3d8>
 100f544:	2594983a 	sll	r10,r4,r22
 100f548:	0013883a 	mov	r9,zero
 100f54c:	00bfffc4 	movi	r2,-1
 100f550:	4889883a 	add	r4,r9,r2
 100f554:	508b883a 	add	r5,r10,r2
 100f558:	224d803a 	cmpltu	r6,r4,r9
 100f55c:	314b883a 	add	r5,r6,r5
 100f560:	8904703a 	and	r2,r17,r4
 100f564:	9146703a 	and	r3,r18,r5
 100f568:	10c4b03a 	or	r2,r2,r3
 100f56c:	10000226 	beq	r2,zero,100f578 <_fpadd_parts+0x378>
 100f570:	01c00044 	movi	r7,1
 100f574:	0011883a 	mov	r8,zero
 100f578:	69e2b03a 	or	r17,r13,r7
 100f57c:	7224b03a 	or	r18,r14,r8
 100f580:	003f5906 	br	100f2e8 <_fpadd_parts+0xe8>
 100f584:	8407883a 	add	r3,r16,r16
 100f588:	008007c4 	movi	r2,31
 100f58c:	1185c83a 	sub	r2,r2,r6
 100f590:	1886983a 	sll	r3,r3,r2
 100f594:	7996d83a 	srl	r11,r15,r6
 100f598:	8198d83a 	srl	r12,r16,r6
 100f59c:	1ad6b03a 	or	r11,r3,r11
 100f5a0:	003f3e06 	br	100f29c <_fpadd_parts+0x9c>
 100f5a4:	2006d07a 	srli	r3,r4,1
 100f5a8:	008007c4 	movi	r2,31
 100f5ac:	1185c83a 	sub	r2,r2,r6
 100f5b0:	1890d83a 	srl	r8,r3,r2
 100f5b4:	218e983a 	sll	r7,r4,r6
 100f5b8:	003f3e06 	br	100f2b4 <_fpadd_parts+0xb4>
 100f5bc:	113f821e 	bne	r2,r4,100f3c8 <_fpadd_parts+0x1c8>
 100f5c0:	28c00117 	ldw	r3,4(r5)
 100f5c4:	98800117 	ldw	r2,4(r19)
 100f5c8:	10ff7f26 	beq	r2,r3,100f3c8 <_fpadd_parts+0x1c8>
 100f5cc:	04c04074 	movhi	r19,257
 100f5d0:	9cce7404 	addi	r19,r19,14800
 100f5d4:	003f7c06 	br	100f3c8 <_fpadd_parts+0x1c8>
 100f5d8:	2006d07a 	srli	r3,r4,1
 100f5dc:	008007c4 	movi	r2,31
 100f5e0:	1185c83a 	sub	r2,r2,r6
 100f5e4:	1894d83a 	srl	r10,r3,r2
 100f5e8:	2192983a 	sll	r9,r4,r6
 100f5ec:	003fd706 	br	100f54c <_fpadd_parts+0x34c>
 100f5f0:	9487883a 	add	r3,r18,r18
 100f5f4:	008007c4 	movi	r2,31
 100f5f8:	1185c83a 	sub	r2,r2,r6
 100f5fc:	1886983a 	sll	r3,r3,r2
 100f600:	899ad83a 	srl	r13,r17,r6
 100f604:	919cd83a 	srl	r14,r18,r6
 100f608:	1b5ab03a 	or	r13,r3,r13
 100f60c:	003fc906 	br	100f534 <_fpadd_parts+0x334>

0100f610 <__subdf3>:
 100f610:	deffea04 	addi	sp,sp,-88
 100f614:	dcc01415 	stw	r19,80(sp)
 100f618:	dcc00404 	addi	r19,sp,16
 100f61c:	2011883a 	mov	r8,r4
 100f620:	2813883a 	mov	r9,r5
 100f624:	dc401315 	stw	r17,76(sp)
 100f628:	d809883a 	mov	r4,sp
 100f62c:	980b883a 	mov	r5,r19
 100f630:	dc400904 	addi	r17,sp,36
 100f634:	dfc01515 	stw	ra,84(sp)
 100f638:	da400115 	stw	r9,4(sp)
 100f63c:	d9c00315 	stw	r7,12(sp)
 100f640:	da000015 	stw	r8,0(sp)
 100f644:	d9800215 	stw	r6,8(sp)
 100f648:	10109580 	call	1010958 <__unpack_d>
 100f64c:	d9000204 	addi	r4,sp,8
 100f650:	880b883a 	mov	r5,r17
 100f654:	10109580 	call	1010958 <__unpack_d>
 100f658:	d8800a17 	ldw	r2,40(sp)
 100f65c:	880b883a 	mov	r5,r17
 100f660:	9809883a 	mov	r4,r19
 100f664:	d9800e04 	addi	r6,sp,56
 100f668:	1080005c 	xori	r2,r2,1
 100f66c:	d8800a15 	stw	r2,40(sp)
 100f670:	100f2000 	call	100f200 <_fpadd_parts>
 100f674:	1009883a 	mov	r4,r2
 100f678:	10106440 	call	1010644 <__pack_d>
 100f67c:	dfc01517 	ldw	ra,84(sp)
 100f680:	dcc01417 	ldw	r19,80(sp)
 100f684:	dc401317 	ldw	r17,76(sp)
 100f688:	dec01604 	addi	sp,sp,88
 100f68c:	f800283a 	ret

0100f690 <__adddf3>:
 100f690:	deffea04 	addi	sp,sp,-88
 100f694:	dcc01415 	stw	r19,80(sp)
 100f698:	dcc00404 	addi	r19,sp,16
 100f69c:	2011883a 	mov	r8,r4
 100f6a0:	2813883a 	mov	r9,r5
 100f6a4:	dc401315 	stw	r17,76(sp)
 100f6a8:	d809883a 	mov	r4,sp
 100f6ac:	980b883a 	mov	r5,r19
 100f6b0:	dc400904 	addi	r17,sp,36
 100f6b4:	dfc01515 	stw	ra,84(sp)
 100f6b8:	da400115 	stw	r9,4(sp)
 100f6bc:	d9c00315 	stw	r7,12(sp)
 100f6c0:	da000015 	stw	r8,0(sp)
 100f6c4:	d9800215 	stw	r6,8(sp)
 100f6c8:	10109580 	call	1010958 <__unpack_d>
 100f6cc:	d9000204 	addi	r4,sp,8
 100f6d0:	880b883a 	mov	r5,r17
 100f6d4:	10109580 	call	1010958 <__unpack_d>
 100f6d8:	d9800e04 	addi	r6,sp,56
 100f6dc:	9809883a 	mov	r4,r19
 100f6e0:	880b883a 	mov	r5,r17
 100f6e4:	100f2000 	call	100f200 <_fpadd_parts>
 100f6e8:	1009883a 	mov	r4,r2
 100f6ec:	10106440 	call	1010644 <__pack_d>
 100f6f0:	dfc01517 	ldw	ra,84(sp)
 100f6f4:	dcc01417 	ldw	r19,80(sp)
 100f6f8:	dc401317 	ldw	r17,76(sp)
 100f6fc:	dec01604 	addi	sp,sp,88
 100f700:	f800283a 	ret

0100f704 <__muldf3>:
 100f704:	deffe004 	addi	sp,sp,-128
 100f708:	dc401815 	stw	r17,96(sp)
 100f70c:	dc400404 	addi	r17,sp,16
 100f710:	2011883a 	mov	r8,r4
 100f714:	2813883a 	mov	r9,r5
 100f718:	dc001715 	stw	r16,92(sp)
 100f71c:	d809883a 	mov	r4,sp
 100f720:	880b883a 	mov	r5,r17
 100f724:	dc000904 	addi	r16,sp,36
 100f728:	dfc01f15 	stw	ra,124(sp)
 100f72c:	da400115 	stw	r9,4(sp)
 100f730:	d9c00315 	stw	r7,12(sp)
 100f734:	da000015 	stw	r8,0(sp)
 100f738:	d9800215 	stw	r6,8(sp)
 100f73c:	ddc01e15 	stw	r23,120(sp)
 100f740:	dd801d15 	stw	r22,116(sp)
 100f744:	dd401c15 	stw	r21,112(sp)
 100f748:	dd001b15 	stw	r20,108(sp)
 100f74c:	dcc01a15 	stw	r19,104(sp)
 100f750:	dc801915 	stw	r18,100(sp)
 100f754:	10109580 	call	1010958 <__unpack_d>
 100f758:	d9000204 	addi	r4,sp,8
 100f75c:	800b883a 	mov	r5,r16
 100f760:	10109580 	call	1010958 <__unpack_d>
 100f764:	d9000417 	ldw	r4,16(sp)
 100f768:	00800044 	movi	r2,1
 100f76c:	1100102e 	bgeu	r2,r4,100f7b0 <__muldf3+0xac>
 100f770:	d8c00917 	ldw	r3,36(sp)
 100f774:	10c0062e 	bgeu	r2,r3,100f790 <__muldf3+0x8c>
 100f778:	00800104 	movi	r2,4
 100f77c:	20800a26 	beq	r4,r2,100f7a8 <__muldf3+0xa4>
 100f780:	1880cc26 	beq	r3,r2,100fab4 <__muldf3+0x3b0>
 100f784:	00800084 	movi	r2,2
 100f788:	20800926 	beq	r4,r2,100f7b0 <__muldf3+0xac>
 100f78c:	1880191e 	bne	r3,r2,100f7f4 <__muldf3+0xf0>
 100f790:	d8c00a17 	ldw	r3,40(sp)
 100f794:	d8800517 	ldw	r2,20(sp)
 100f798:	8009883a 	mov	r4,r16
 100f79c:	10c4c03a 	cmpne	r2,r2,r3
 100f7a0:	d8800a15 	stw	r2,40(sp)
 100f7a4:	00000706 	br	100f7c4 <__muldf3+0xc0>
 100f7a8:	00800084 	movi	r2,2
 100f7ac:	1880c326 	beq	r3,r2,100fabc <__muldf3+0x3b8>
 100f7b0:	d8800517 	ldw	r2,20(sp)
 100f7b4:	d8c00a17 	ldw	r3,40(sp)
 100f7b8:	8809883a 	mov	r4,r17
 100f7bc:	10c4c03a 	cmpne	r2,r2,r3
 100f7c0:	d8800515 	stw	r2,20(sp)
 100f7c4:	10106440 	call	1010644 <__pack_d>
 100f7c8:	dfc01f17 	ldw	ra,124(sp)
 100f7cc:	ddc01e17 	ldw	r23,120(sp)
 100f7d0:	dd801d17 	ldw	r22,116(sp)
 100f7d4:	dd401c17 	ldw	r21,112(sp)
 100f7d8:	dd001b17 	ldw	r20,108(sp)
 100f7dc:	dcc01a17 	ldw	r19,104(sp)
 100f7e0:	dc801917 	ldw	r18,100(sp)
 100f7e4:	dc401817 	ldw	r17,96(sp)
 100f7e8:	dc001717 	ldw	r16,92(sp)
 100f7ec:	dec02004 	addi	sp,sp,128
 100f7f0:	f800283a 	ret
 100f7f4:	dd800717 	ldw	r22,28(sp)
 100f7f8:	dc800c17 	ldw	r18,48(sp)
 100f7fc:	002b883a 	mov	r21,zero
 100f800:	0023883a 	mov	r17,zero
 100f804:	a80b883a 	mov	r5,r21
 100f808:	b00d883a 	mov	r6,r22
 100f80c:	880f883a 	mov	r7,r17
 100f810:	ddc00817 	ldw	r23,32(sp)
 100f814:	dcc00d17 	ldw	r19,52(sp)
 100f818:	9009883a 	mov	r4,r18
 100f81c:	100e2040 	call	100e204 <__muldi3>
 100f820:	001b883a 	mov	r13,zero
 100f824:	680f883a 	mov	r7,r13
 100f828:	b009883a 	mov	r4,r22
 100f82c:	000b883a 	mov	r5,zero
 100f830:	980d883a 	mov	r6,r19
 100f834:	b82d883a 	mov	r22,r23
 100f838:	002f883a 	mov	r23,zero
 100f83c:	db401615 	stw	r13,88(sp)
 100f840:	d8801315 	stw	r2,76(sp)
 100f844:	d8c01415 	stw	r3,80(sp)
 100f848:	dcc01515 	stw	r19,84(sp)
 100f84c:	100e2040 	call	100e204 <__muldi3>
 100f850:	b00d883a 	mov	r6,r22
 100f854:	000b883a 	mov	r5,zero
 100f858:	9009883a 	mov	r4,r18
 100f85c:	b80f883a 	mov	r7,r23
 100f860:	1021883a 	mov	r16,r2
 100f864:	1823883a 	mov	r17,r3
 100f868:	100e2040 	call	100e204 <__muldi3>
 100f86c:	8085883a 	add	r2,r16,r2
 100f870:	140d803a 	cmpltu	r6,r2,r16
 100f874:	88c7883a 	add	r3,r17,r3
 100f878:	30cd883a 	add	r6,r6,r3
 100f87c:	1029883a 	mov	r20,r2
 100f880:	302b883a 	mov	r21,r6
 100f884:	da801317 	ldw	r10,76(sp)
 100f888:	dac01417 	ldw	r11,80(sp)
 100f88c:	db001517 	ldw	r12,84(sp)
 100f890:	db401617 	ldw	r13,88(sp)
 100f894:	3440612e 	bgeu	r6,r17,100fa1c <__muldf3+0x318>
 100f898:	0009883a 	mov	r4,zero
 100f89c:	5105883a 	add	r2,r10,r4
 100f8a0:	128d803a 	cmpltu	r6,r2,r10
 100f8a4:	5d07883a 	add	r3,r11,r20
 100f8a8:	30cd883a 	add	r6,r6,r3
 100f8ac:	0021883a 	mov	r16,zero
 100f8b0:	04400044 	movi	r17,1
 100f8b4:	1025883a 	mov	r18,r2
 100f8b8:	3027883a 	mov	r19,r6
 100f8bc:	32c06236 	bltu	r6,r11,100fa48 <__muldf3+0x344>
 100f8c0:	59807a26 	beq	r11,r6,100faac <__muldf3+0x3a8>
 100f8c4:	680b883a 	mov	r5,r13
 100f8c8:	b80f883a 	mov	r7,r23
 100f8cc:	6009883a 	mov	r4,r12
 100f8d0:	b00d883a 	mov	r6,r22
 100f8d4:	100e2040 	call	100e204 <__muldi3>
 100f8d8:	1009883a 	mov	r4,r2
 100f8dc:	000f883a 	mov	r7,zero
 100f8e0:	1545883a 	add	r2,r2,r21
 100f8e4:	1111803a 	cmpltu	r8,r2,r4
 100f8e8:	19c7883a 	add	r3,r3,r7
 100f8ec:	40c7883a 	add	r3,r8,r3
 100f8f0:	88cb883a 	add	r5,r17,r3
 100f8f4:	d8c00617 	ldw	r3,24(sp)
 100f8f8:	8089883a 	add	r4,r16,r2
 100f8fc:	d8800b17 	ldw	r2,44(sp)
 100f900:	18c00104 	addi	r3,r3,4
 100f904:	240d803a 	cmpltu	r6,r4,r16
 100f908:	10c7883a 	add	r3,r2,r3
 100f90c:	2013883a 	mov	r9,r4
 100f910:	d8800a17 	ldw	r2,40(sp)
 100f914:	d9000517 	ldw	r4,20(sp)
 100f918:	314d883a 	add	r6,r6,r5
 100f91c:	3015883a 	mov	r10,r6
 100f920:	2088c03a 	cmpne	r4,r4,r2
 100f924:	00880034 	movhi	r2,8192
 100f928:	10bfffc4 	addi	r2,r2,-1
 100f92c:	d9000f15 	stw	r4,60(sp)
 100f930:	d8c01015 	stw	r3,64(sp)
 100f934:	1180162e 	bgeu	r2,r6,100f990 <__muldf3+0x28c>
 100f938:	1811883a 	mov	r8,r3
 100f93c:	101f883a 	mov	r15,r2
 100f940:	980497fa 	slli	r2,r19,31
 100f944:	9016d07a 	srli	r11,r18,1
 100f948:	500697fa 	slli	r3,r10,31
 100f94c:	480cd07a 	srli	r6,r9,1
 100f950:	500ed07a 	srli	r7,r10,1
 100f954:	12d6b03a 	or	r11,r2,r11
 100f958:	00800044 	movi	r2,1
 100f95c:	198cb03a 	or	r6,r3,r6
 100f960:	4888703a 	and	r4,r9,r2
 100f964:	9818d07a 	srli	r12,r19,1
 100f968:	001b883a 	mov	r13,zero
 100f96c:	03a00034 	movhi	r14,32768
 100f970:	3013883a 	mov	r9,r6
 100f974:	3815883a 	mov	r10,r7
 100f978:	4091883a 	add	r8,r8,r2
 100f97c:	20000226 	beq	r4,zero,100f988 <__muldf3+0x284>
 100f980:	5b64b03a 	or	r18,r11,r13
 100f984:	63a6b03a 	or	r19,r12,r14
 100f988:	7abfed36 	bltu	r15,r10,100f940 <__muldf3+0x23c>
 100f98c:	da001015 	stw	r8,64(sp)
 100f990:	00840034 	movhi	r2,4096
 100f994:	10bfffc4 	addi	r2,r2,-1
 100f998:	12801436 	bltu	r2,r10,100f9ec <__muldf3+0x2e8>
 100f99c:	da001017 	ldw	r8,64(sp)
 100f9a0:	101f883a 	mov	r15,r2
 100f9a4:	4a45883a 	add	r2,r9,r9
 100f9a8:	124d803a 	cmpltu	r6,r2,r9
 100f9ac:	5287883a 	add	r3,r10,r10
 100f9b0:	9497883a 	add	r11,r18,r18
 100f9b4:	5c8f803a 	cmpltu	r7,r11,r18
 100f9b8:	9cd9883a 	add	r12,r19,r19
 100f9bc:	01000044 	movi	r4,1
 100f9c0:	30cd883a 	add	r6,r6,r3
 100f9c4:	3b0f883a 	add	r7,r7,r12
 100f9c8:	423fffc4 	addi	r8,r8,-1
 100f9cc:	1013883a 	mov	r9,r2
 100f9d0:	3015883a 	mov	r10,r6
 100f9d4:	111ab03a 	or	r13,r2,r4
 100f9d8:	98003016 	blt	r19,zero,100fa9c <__muldf3+0x398>
 100f9dc:	5825883a 	mov	r18,r11
 100f9e0:	3827883a 	mov	r19,r7
 100f9e4:	7abfef2e 	bgeu	r15,r10,100f9a4 <__muldf3+0x2a0>
 100f9e8:	da001015 	stw	r8,64(sp)
 100f9ec:	00803fc4 	movi	r2,255
 100f9f0:	488e703a 	and	r7,r9,r2
 100f9f4:	00802004 	movi	r2,128
 100f9f8:	0007883a 	mov	r3,zero
 100f9fc:	0011883a 	mov	r8,zero
 100fa00:	38801826 	beq	r7,r2,100fa64 <__muldf3+0x360>
 100fa04:	008000c4 	movi	r2,3
 100fa08:	d9000e04 	addi	r4,sp,56
 100fa0c:	da801215 	stw	r10,72(sp)
 100fa10:	d8800e15 	stw	r2,56(sp)
 100fa14:	da401115 	stw	r9,68(sp)
 100fa18:	003f6a06 	br	100f7c4 <__muldf3+0xc0>
 100fa1c:	89802126 	beq	r17,r6,100faa4 <__muldf3+0x3a0>
 100fa20:	0009883a 	mov	r4,zero
 100fa24:	5105883a 	add	r2,r10,r4
 100fa28:	128d803a 	cmpltu	r6,r2,r10
 100fa2c:	5d07883a 	add	r3,r11,r20
 100fa30:	30cd883a 	add	r6,r6,r3
 100fa34:	0021883a 	mov	r16,zero
 100fa38:	0023883a 	mov	r17,zero
 100fa3c:	1025883a 	mov	r18,r2
 100fa40:	3027883a 	mov	r19,r6
 100fa44:	32ff9e2e 	bgeu	r6,r11,100f8c0 <__muldf3+0x1bc>
 100fa48:	00800044 	movi	r2,1
 100fa4c:	8089883a 	add	r4,r16,r2
 100fa50:	240d803a 	cmpltu	r6,r4,r16
 100fa54:	344d883a 	add	r6,r6,r17
 100fa58:	2021883a 	mov	r16,r4
 100fa5c:	3023883a 	mov	r17,r6
 100fa60:	003f9806 	br	100f8c4 <__muldf3+0x1c0>
 100fa64:	403fe71e 	bne	r8,zero,100fa04 <__muldf3+0x300>
 100fa68:	01004004 	movi	r4,256
 100fa6c:	4904703a 	and	r2,r9,r4
 100fa70:	10c4b03a 	or	r2,r2,r3
 100fa74:	103fe31e 	bne	r2,zero,100fa04 <__muldf3+0x300>
 100fa78:	94c4b03a 	or	r2,r18,r19
 100fa7c:	103fe126 	beq	r2,zero,100fa04 <__muldf3+0x300>
 100fa80:	49c5883a 	add	r2,r9,r7
 100fa84:	1251803a 	cmpltu	r8,r2,r9
 100fa88:	4291883a 	add	r8,r8,r10
 100fa8c:	013fc004 	movi	r4,-256
 100fa90:	1112703a 	and	r9,r2,r4
 100fa94:	4015883a 	mov	r10,r8
 100fa98:	003fda06 	br	100fa04 <__muldf3+0x300>
 100fa9c:	6813883a 	mov	r9,r13
 100faa0:	003fce06 	br	100f9dc <__muldf3+0x2d8>
 100faa4:	143f7c36 	bltu	r2,r16,100f898 <__muldf3+0x194>
 100faa8:	003fdd06 	br	100fa20 <__muldf3+0x31c>
 100faac:	12bf852e 	bgeu	r2,r10,100f8c4 <__muldf3+0x1c0>
 100fab0:	003fe506 	br	100fa48 <__muldf3+0x344>
 100fab4:	00800084 	movi	r2,2
 100fab8:	20bf351e 	bne	r4,r2,100f790 <__muldf3+0x8c>
 100fabc:	01004074 	movhi	r4,257
 100fac0:	210e7404 	addi	r4,r4,14800
 100fac4:	003f3f06 	br	100f7c4 <__muldf3+0xc0>

0100fac8 <__divdf3>:
 100fac8:	deffed04 	addi	sp,sp,-76
 100facc:	dcc01115 	stw	r19,68(sp)
 100fad0:	dcc00404 	addi	r19,sp,16
 100fad4:	2011883a 	mov	r8,r4
 100fad8:	2813883a 	mov	r9,r5
 100fadc:	dc000e15 	stw	r16,56(sp)
 100fae0:	d809883a 	mov	r4,sp
 100fae4:	980b883a 	mov	r5,r19
 100fae8:	dc000904 	addi	r16,sp,36
 100faec:	dfc01215 	stw	ra,72(sp)
 100faf0:	da400115 	stw	r9,4(sp)
 100faf4:	d9c00315 	stw	r7,12(sp)
 100faf8:	da000015 	stw	r8,0(sp)
 100fafc:	d9800215 	stw	r6,8(sp)
 100fb00:	dc801015 	stw	r18,64(sp)
 100fb04:	dc400f15 	stw	r17,60(sp)
 100fb08:	10109580 	call	1010958 <__unpack_d>
 100fb0c:	d9000204 	addi	r4,sp,8
 100fb10:	800b883a 	mov	r5,r16
 100fb14:	10109580 	call	1010958 <__unpack_d>
 100fb18:	d9000417 	ldw	r4,16(sp)
 100fb1c:	00800044 	movi	r2,1
 100fb20:	11000b2e 	bgeu	r2,r4,100fb50 <__divdf3+0x88>
 100fb24:	d9400917 	ldw	r5,36(sp)
 100fb28:	1140762e 	bgeu	r2,r5,100fd04 <__divdf3+0x23c>
 100fb2c:	d8800517 	ldw	r2,20(sp)
 100fb30:	d8c00a17 	ldw	r3,40(sp)
 100fb34:	01800104 	movi	r6,4
 100fb38:	10c4f03a 	xor	r2,r2,r3
 100fb3c:	d8800515 	stw	r2,20(sp)
 100fb40:	21800226 	beq	r4,r6,100fb4c <__divdf3+0x84>
 100fb44:	00800084 	movi	r2,2
 100fb48:	2080141e 	bne	r4,r2,100fb9c <__divdf3+0xd4>
 100fb4c:	29000926 	beq	r5,r4,100fb74 <__divdf3+0xac>
 100fb50:	9809883a 	mov	r4,r19
 100fb54:	10106440 	call	1010644 <__pack_d>
 100fb58:	dfc01217 	ldw	ra,72(sp)
 100fb5c:	dcc01117 	ldw	r19,68(sp)
 100fb60:	dc801017 	ldw	r18,64(sp)
 100fb64:	dc400f17 	ldw	r17,60(sp)
 100fb68:	dc000e17 	ldw	r16,56(sp)
 100fb6c:	dec01304 	addi	sp,sp,76
 100fb70:	f800283a 	ret
 100fb74:	01004074 	movhi	r4,257
 100fb78:	210e7404 	addi	r4,r4,14800
 100fb7c:	10106440 	call	1010644 <__pack_d>
 100fb80:	dfc01217 	ldw	ra,72(sp)
 100fb84:	dcc01117 	ldw	r19,68(sp)
 100fb88:	dc801017 	ldw	r18,64(sp)
 100fb8c:	dc400f17 	ldw	r17,60(sp)
 100fb90:	dc000e17 	ldw	r16,56(sp)
 100fb94:	dec01304 	addi	sp,sp,76
 100fb98:	f800283a 	ret
 100fb9c:	29805b26 	beq	r5,r6,100fd0c <__divdf3+0x244>
 100fba0:	28802d26 	beq	r5,r2,100fc58 <__divdf3+0x190>
 100fba4:	d8c00617 	ldw	r3,24(sp)
 100fba8:	d8800b17 	ldw	r2,44(sp)
 100fbac:	d9c00817 	ldw	r7,32(sp)
 100fbb0:	dc400d17 	ldw	r17,52(sp)
 100fbb4:	188bc83a 	sub	r5,r3,r2
 100fbb8:	d9800717 	ldw	r6,28(sp)
 100fbbc:	dc000c17 	ldw	r16,48(sp)
 100fbc0:	d9400615 	stw	r5,24(sp)
 100fbc4:	3c403836 	bltu	r7,r17,100fca8 <__divdf3+0x1e0>
 100fbc8:	89c03626 	beq	r17,r7,100fca4 <__divdf3+0x1dc>
 100fbcc:	0015883a 	mov	r10,zero
 100fbd0:	001d883a 	mov	r14,zero
 100fbd4:	02c40034 	movhi	r11,4096
 100fbd8:	001f883a 	mov	r15,zero
 100fbdc:	003f883a 	mov	ra,zero
 100fbe0:	04800f44 	movi	r18,61
 100fbe4:	00000f06 	br	100fc24 <__divdf3+0x15c>
 100fbe8:	601d883a 	mov	r14,r12
 100fbec:	681f883a 	mov	r15,r13
 100fbf0:	400d883a 	mov	r6,r8
 100fbf4:	100f883a 	mov	r7,r2
 100fbf8:	3191883a 	add	r8,r6,r6
 100fbfc:	5808d07a 	srli	r4,r11,1
 100fc00:	4185803a 	cmpltu	r2,r8,r6
 100fc04:	39d3883a 	add	r9,r7,r7
 100fc08:	28c6b03a 	or	r3,r5,r3
 100fc0c:	1245883a 	add	r2,r2,r9
 100fc10:	1815883a 	mov	r10,r3
 100fc14:	2017883a 	mov	r11,r4
 100fc18:	400d883a 	mov	r6,r8
 100fc1c:	100f883a 	mov	r7,r2
 100fc20:	fc801726 	beq	ra,r18,100fc80 <__divdf3+0x1b8>
 100fc24:	580a97fa 	slli	r5,r11,31
 100fc28:	5006d07a 	srli	r3,r10,1
 100fc2c:	ffc00044 	addi	ra,ra,1
 100fc30:	3c7ff136 	bltu	r7,r17,100fbf8 <__divdf3+0x130>
 100fc34:	3411c83a 	sub	r8,r6,r16
 100fc38:	3205803a 	cmpltu	r2,r6,r8
 100fc3c:	3c53c83a 	sub	r9,r7,r17
 100fc40:	7298b03a 	or	r12,r14,r10
 100fc44:	7adab03a 	or	r13,r15,r11
 100fc48:	4885c83a 	sub	r2,r9,r2
 100fc4c:	89ffe61e 	bne	r17,r7,100fbe8 <__divdf3+0x120>
 100fc50:	343fe936 	bltu	r6,r16,100fbf8 <__divdf3+0x130>
 100fc54:	003fe406 	br	100fbe8 <__divdf3+0x120>
 100fc58:	9809883a 	mov	r4,r19
 100fc5c:	d9800415 	stw	r6,16(sp)
 100fc60:	10106440 	call	1010644 <__pack_d>
 100fc64:	dfc01217 	ldw	ra,72(sp)
 100fc68:	dcc01117 	ldw	r19,68(sp)
 100fc6c:	dc801017 	ldw	r18,64(sp)
 100fc70:	dc400f17 	ldw	r17,60(sp)
 100fc74:	dc000e17 	ldw	r16,56(sp)
 100fc78:	dec01304 	addi	sp,sp,76
 100fc7c:	f800283a 	ret
 100fc80:	00803fc4 	movi	r2,255
 100fc84:	7090703a 	and	r8,r14,r2
 100fc88:	00802004 	movi	r2,128
 100fc8c:	0007883a 	mov	r3,zero
 100fc90:	0013883a 	mov	r9,zero
 100fc94:	40800d26 	beq	r8,r2,100fccc <__divdf3+0x204>
 100fc98:	dbc00815 	stw	r15,32(sp)
 100fc9c:	db800715 	stw	r14,28(sp)
 100fca0:	003fab06 	br	100fb50 <__divdf3+0x88>
 100fca4:	343fc92e 	bgeu	r6,r16,100fbcc <__divdf3+0x104>
 100fca8:	3185883a 	add	r2,r6,r6
 100fcac:	1189803a 	cmpltu	r4,r2,r6
 100fcb0:	39c7883a 	add	r3,r7,r7
 100fcb4:	20c9883a 	add	r4,r4,r3
 100fcb8:	297fffc4 	addi	r5,r5,-1
 100fcbc:	100d883a 	mov	r6,r2
 100fcc0:	200f883a 	mov	r7,r4
 100fcc4:	d9400615 	stw	r5,24(sp)
 100fcc8:	003fc006 	br	100fbcc <__divdf3+0x104>
 100fccc:	483ff21e 	bne	r9,zero,100fc98 <__divdf3+0x1d0>
 100fcd0:	01004004 	movi	r4,256
 100fcd4:	7104703a 	and	r2,r14,r4
 100fcd8:	10c4b03a 	or	r2,r2,r3
 100fcdc:	103fee1e 	bne	r2,zero,100fc98 <__divdf3+0x1d0>
 100fce0:	31c4b03a 	or	r2,r6,r7
 100fce4:	103fec26 	beq	r2,zero,100fc98 <__divdf3+0x1d0>
 100fce8:	7205883a 	add	r2,r14,r8
 100fcec:	1391803a 	cmpltu	r8,r2,r14
 100fcf0:	43d1883a 	add	r8,r8,r15
 100fcf4:	013fc004 	movi	r4,-256
 100fcf8:	111c703a 	and	r14,r2,r4
 100fcfc:	401f883a 	mov	r15,r8
 100fd00:	003fe506 	br	100fc98 <__divdf3+0x1d0>
 100fd04:	8009883a 	mov	r4,r16
 100fd08:	003f9206 	br	100fb54 <__divdf3+0x8c>
 100fd0c:	9809883a 	mov	r4,r19
 100fd10:	d8000715 	stw	zero,28(sp)
 100fd14:	d8000815 	stw	zero,32(sp)
 100fd18:	d8000615 	stw	zero,24(sp)
 100fd1c:	003f8d06 	br	100fb54 <__divdf3+0x8c>

0100fd20 <__eqdf2>:
 100fd20:	deffef04 	addi	sp,sp,-68
 100fd24:	dc400f15 	stw	r17,60(sp)
 100fd28:	dc400404 	addi	r17,sp,16
 100fd2c:	2005883a 	mov	r2,r4
 100fd30:	2807883a 	mov	r3,r5
 100fd34:	dc000e15 	stw	r16,56(sp)
 100fd38:	d809883a 	mov	r4,sp
 100fd3c:	880b883a 	mov	r5,r17
 100fd40:	dc000904 	addi	r16,sp,36
 100fd44:	d8c00115 	stw	r3,4(sp)
 100fd48:	d8800015 	stw	r2,0(sp)
 100fd4c:	d9800215 	stw	r6,8(sp)
 100fd50:	dfc01015 	stw	ra,64(sp)
 100fd54:	d9c00315 	stw	r7,12(sp)
 100fd58:	10109580 	call	1010958 <__unpack_d>
 100fd5c:	d9000204 	addi	r4,sp,8
 100fd60:	800b883a 	mov	r5,r16
 100fd64:	10109580 	call	1010958 <__unpack_d>
 100fd68:	d8800417 	ldw	r2,16(sp)
 100fd6c:	00c00044 	movi	r3,1
 100fd70:	180d883a 	mov	r6,r3
 100fd74:	1880062e 	bgeu	r3,r2,100fd90 <__eqdf2+0x70>
 100fd78:	d8800917 	ldw	r2,36(sp)
 100fd7c:	8809883a 	mov	r4,r17
 100fd80:	800b883a 	mov	r5,r16
 100fd84:	1880022e 	bgeu	r3,r2,100fd90 <__eqdf2+0x70>
 100fd88:	1010a900 	call	1010a90 <__fpcmp_parts_d>
 100fd8c:	100d883a 	mov	r6,r2
 100fd90:	3005883a 	mov	r2,r6
 100fd94:	dfc01017 	ldw	ra,64(sp)
 100fd98:	dc400f17 	ldw	r17,60(sp)
 100fd9c:	dc000e17 	ldw	r16,56(sp)
 100fda0:	dec01104 	addi	sp,sp,68
 100fda4:	f800283a 	ret

0100fda8 <__nedf2>:
 100fda8:	deffef04 	addi	sp,sp,-68
 100fdac:	dc400f15 	stw	r17,60(sp)
 100fdb0:	dc400404 	addi	r17,sp,16
 100fdb4:	2005883a 	mov	r2,r4
 100fdb8:	2807883a 	mov	r3,r5
 100fdbc:	dc000e15 	stw	r16,56(sp)
 100fdc0:	d809883a 	mov	r4,sp
 100fdc4:	880b883a 	mov	r5,r17
 100fdc8:	dc000904 	addi	r16,sp,36
 100fdcc:	d8c00115 	stw	r3,4(sp)
 100fdd0:	d8800015 	stw	r2,0(sp)
 100fdd4:	d9800215 	stw	r6,8(sp)
 100fdd8:	dfc01015 	stw	ra,64(sp)
 100fddc:	d9c00315 	stw	r7,12(sp)
 100fde0:	10109580 	call	1010958 <__unpack_d>
 100fde4:	d9000204 	addi	r4,sp,8
 100fde8:	800b883a 	mov	r5,r16
 100fdec:	10109580 	call	1010958 <__unpack_d>
 100fdf0:	d8800417 	ldw	r2,16(sp)
 100fdf4:	00c00044 	movi	r3,1
 100fdf8:	180d883a 	mov	r6,r3
 100fdfc:	1880062e 	bgeu	r3,r2,100fe18 <__nedf2+0x70>
 100fe00:	d8800917 	ldw	r2,36(sp)
 100fe04:	8809883a 	mov	r4,r17
 100fe08:	800b883a 	mov	r5,r16
 100fe0c:	1880022e 	bgeu	r3,r2,100fe18 <__nedf2+0x70>
 100fe10:	1010a900 	call	1010a90 <__fpcmp_parts_d>
 100fe14:	100d883a 	mov	r6,r2
 100fe18:	3005883a 	mov	r2,r6
 100fe1c:	dfc01017 	ldw	ra,64(sp)
 100fe20:	dc400f17 	ldw	r17,60(sp)
 100fe24:	dc000e17 	ldw	r16,56(sp)
 100fe28:	dec01104 	addi	sp,sp,68
 100fe2c:	f800283a 	ret

0100fe30 <__gtdf2>:
 100fe30:	deffef04 	addi	sp,sp,-68
 100fe34:	dc400f15 	stw	r17,60(sp)
 100fe38:	dc400404 	addi	r17,sp,16
 100fe3c:	2005883a 	mov	r2,r4
 100fe40:	2807883a 	mov	r3,r5
 100fe44:	dc000e15 	stw	r16,56(sp)
 100fe48:	d809883a 	mov	r4,sp
 100fe4c:	880b883a 	mov	r5,r17
 100fe50:	dc000904 	addi	r16,sp,36
 100fe54:	d8c00115 	stw	r3,4(sp)
 100fe58:	d8800015 	stw	r2,0(sp)
 100fe5c:	d9800215 	stw	r6,8(sp)
 100fe60:	dfc01015 	stw	ra,64(sp)
 100fe64:	d9c00315 	stw	r7,12(sp)
 100fe68:	10109580 	call	1010958 <__unpack_d>
 100fe6c:	d9000204 	addi	r4,sp,8
 100fe70:	800b883a 	mov	r5,r16
 100fe74:	10109580 	call	1010958 <__unpack_d>
 100fe78:	d8800417 	ldw	r2,16(sp)
 100fe7c:	00c00044 	movi	r3,1
 100fe80:	01bfffc4 	movi	r6,-1
 100fe84:	1880062e 	bgeu	r3,r2,100fea0 <__gtdf2+0x70>
 100fe88:	d8800917 	ldw	r2,36(sp)
 100fe8c:	8809883a 	mov	r4,r17
 100fe90:	800b883a 	mov	r5,r16
 100fe94:	1880022e 	bgeu	r3,r2,100fea0 <__gtdf2+0x70>
 100fe98:	1010a900 	call	1010a90 <__fpcmp_parts_d>
 100fe9c:	100d883a 	mov	r6,r2
 100fea0:	3005883a 	mov	r2,r6
 100fea4:	dfc01017 	ldw	ra,64(sp)
 100fea8:	dc400f17 	ldw	r17,60(sp)
 100feac:	dc000e17 	ldw	r16,56(sp)
 100feb0:	dec01104 	addi	sp,sp,68
 100feb4:	f800283a 	ret

0100feb8 <__gedf2>:
 100feb8:	deffef04 	addi	sp,sp,-68
 100febc:	dc400f15 	stw	r17,60(sp)
 100fec0:	dc400404 	addi	r17,sp,16
 100fec4:	2005883a 	mov	r2,r4
 100fec8:	2807883a 	mov	r3,r5
 100fecc:	dc000e15 	stw	r16,56(sp)
 100fed0:	d809883a 	mov	r4,sp
 100fed4:	880b883a 	mov	r5,r17
 100fed8:	dc000904 	addi	r16,sp,36
 100fedc:	d8c00115 	stw	r3,4(sp)
 100fee0:	d8800015 	stw	r2,0(sp)
 100fee4:	d9800215 	stw	r6,8(sp)
 100fee8:	dfc01015 	stw	ra,64(sp)
 100feec:	d9c00315 	stw	r7,12(sp)
 100fef0:	10109580 	call	1010958 <__unpack_d>
 100fef4:	d9000204 	addi	r4,sp,8
 100fef8:	800b883a 	mov	r5,r16
 100fefc:	10109580 	call	1010958 <__unpack_d>
 100ff00:	d8800417 	ldw	r2,16(sp)
 100ff04:	00c00044 	movi	r3,1
 100ff08:	01bfffc4 	movi	r6,-1
 100ff0c:	1880062e 	bgeu	r3,r2,100ff28 <__gedf2+0x70>
 100ff10:	d8800917 	ldw	r2,36(sp)
 100ff14:	8809883a 	mov	r4,r17
 100ff18:	800b883a 	mov	r5,r16
 100ff1c:	1880022e 	bgeu	r3,r2,100ff28 <__gedf2+0x70>
 100ff20:	1010a900 	call	1010a90 <__fpcmp_parts_d>
 100ff24:	100d883a 	mov	r6,r2
 100ff28:	3005883a 	mov	r2,r6
 100ff2c:	dfc01017 	ldw	ra,64(sp)
 100ff30:	dc400f17 	ldw	r17,60(sp)
 100ff34:	dc000e17 	ldw	r16,56(sp)
 100ff38:	dec01104 	addi	sp,sp,68
 100ff3c:	f800283a 	ret

0100ff40 <__ltdf2>:
 100ff40:	deffef04 	addi	sp,sp,-68
 100ff44:	dc400f15 	stw	r17,60(sp)
 100ff48:	dc400404 	addi	r17,sp,16
 100ff4c:	2005883a 	mov	r2,r4
 100ff50:	2807883a 	mov	r3,r5
 100ff54:	dc000e15 	stw	r16,56(sp)
 100ff58:	d809883a 	mov	r4,sp
 100ff5c:	880b883a 	mov	r5,r17
 100ff60:	dc000904 	addi	r16,sp,36
 100ff64:	d8c00115 	stw	r3,4(sp)
 100ff68:	d8800015 	stw	r2,0(sp)
 100ff6c:	d9800215 	stw	r6,8(sp)
 100ff70:	dfc01015 	stw	ra,64(sp)
 100ff74:	d9c00315 	stw	r7,12(sp)
 100ff78:	10109580 	call	1010958 <__unpack_d>
 100ff7c:	d9000204 	addi	r4,sp,8
 100ff80:	800b883a 	mov	r5,r16
 100ff84:	10109580 	call	1010958 <__unpack_d>
 100ff88:	d8800417 	ldw	r2,16(sp)
 100ff8c:	00c00044 	movi	r3,1
 100ff90:	180d883a 	mov	r6,r3
 100ff94:	1880062e 	bgeu	r3,r2,100ffb0 <__ltdf2+0x70>
 100ff98:	d8800917 	ldw	r2,36(sp)
 100ff9c:	8809883a 	mov	r4,r17
 100ffa0:	800b883a 	mov	r5,r16
 100ffa4:	1880022e 	bgeu	r3,r2,100ffb0 <__ltdf2+0x70>
 100ffa8:	1010a900 	call	1010a90 <__fpcmp_parts_d>
 100ffac:	100d883a 	mov	r6,r2
 100ffb0:	3005883a 	mov	r2,r6
 100ffb4:	dfc01017 	ldw	ra,64(sp)
 100ffb8:	dc400f17 	ldw	r17,60(sp)
 100ffbc:	dc000e17 	ldw	r16,56(sp)
 100ffc0:	dec01104 	addi	sp,sp,68
 100ffc4:	f800283a 	ret

0100ffc8 <__ledf2>:
 100ffc8:	deffef04 	addi	sp,sp,-68
 100ffcc:	dc400f15 	stw	r17,60(sp)
 100ffd0:	dc400404 	addi	r17,sp,16
 100ffd4:	2005883a 	mov	r2,r4
 100ffd8:	2807883a 	mov	r3,r5
 100ffdc:	dc000e15 	stw	r16,56(sp)
 100ffe0:	d809883a 	mov	r4,sp
 100ffe4:	880b883a 	mov	r5,r17
 100ffe8:	dc000904 	addi	r16,sp,36
 100ffec:	d8c00115 	stw	r3,4(sp)
 100fff0:	d8800015 	stw	r2,0(sp)
 100fff4:	d9800215 	stw	r6,8(sp)
 100fff8:	dfc01015 	stw	ra,64(sp)
 100fffc:	d9c00315 	stw	r7,12(sp)
 1010000:	10109580 	call	1010958 <__unpack_d>
 1010004:	d9000204 	addi	r4,sp,8
 1010008:	800b883a 	mov	r5,r16
 101000c:	10109580 	call	1010958 <__unpack_d>
 1010010:	d8800417 	ldw	r2,16(sp)
 1010014:	00c00044 	movi	r3,1
 1010018:	180d883a 	mov	r6,r3
 101001c:	1880062e 	bgeu	r3,r2,1010038 <__ledf2+0x70>
 1010020:	d8800917 	ldw	r2,36(sp)
 1010024:	8809883a 	mov	r4,r17
 1010028:	800b883a 	mov	r5,r16
 101002c:	1880022e 	bgeu	r3,r2,1010038 <__ledf2+0x70>
 1010030:	1010a900 	call	1010a90 <__fpcmp_parts_d>
 1010034:	100d883a 	mov	r6,r2
 1010038:	3005883a 	mov	r2,r6
 101003c:	dfc01017 	ldw	ra,64(sp)
 1010040:	dc400f17 	ldw	r17,60(sp)
 1010044:	dc000e17 	ldw	r16,56(sp)
 1010048:	dec01104 	addi	sp,sp,68
 101004c:	f800283a 	ret

01010050 <__floatsidf>:
 1010050:	2006d7fa 	srli	r3,r4,31
 1010054:	defff604 	addi	sp,sp,-40
 1010058:	008000c4 	movi	r2,3
 101005c:	dfc00915 	stw	ra,36(sp)
 1010060:	dcc00815 	stw	r19,32(sp)
 1010064:	dc800715 	stw	r18,28(sp)
 1010068:	dc400615 	stw	r17,24(sp)
 101006c:	dc000515 	stw	r16,20(sp)
 1010070:	d8800015 	stw	r2,0(sp)
 1010074:	d8c00115 	stw	r3,4(sp)
 1010078:	20000f1e 	bne	r4,zero,10100b8 <__floatsidf+0x68>
 101007c:	00800084 	movi	r2,2
 1010080:	d8800015 	stw	r2,0(sp)
 1010084:	d809883a 	mov	r4,sp
 1010088:	10106440 	call	1010644 <__pack_d>
 101008c:	1009883a 	mov	r4,r2
 1010090:	180b883a 	mov	r5,r3
 1010094:	2005883a 	mov	r2,r4
 1010098:	2807883a 	mov	r3,r5
 101009c:	dfc00917 	ldw	ra,36(sp)
 10100a0:	dcc00817 	ldw	r19,32(sp)
 10100a4:	dc800717 	ldw	r18,28(sp)
 10100a8:	dc400617 	ldw	r17,24(sp)
 10100ac:	dc000517 	ldw	r16,20(sp)
 10100b0:	dec00a04 	addi	sp,sp,40
 10100b4:	f800283a 	ret
 10100b8:	00800f04 	movi	r2,60
 10100bc:	1807003a 	cmpeq	r3,r3,zero
 10100c0:	d8800215 	stw	r2,8(sp)
 10100c4:	18001126 	beq	r3,zero,101010c <__floatsidf+0xbc>
 10100c8:	0027883a 	mov	r19,zero
 10100cc:	2025883a 	mov	r18,r4
 10100d0:	d9000315 	stw	r4,12(sp)
 10100d4:	dcc00415 	stw	r19,16(sp)
 10100d8:	10104280 	call	1010428 <__clzsi2>
 10100dc:	11000744 	addi	r4,r2,29
 10100e0:	013fe80e 	bge	zero,r4,1010084 <__floatsidf+0x34>
 10100e4:	10bfff44 	addi	r2,r2,-3
 10100e8:	10000c16 	blt	r2,zero,101011c <__floatsidf+0xcc>
 10100ec:	90a2983a 	sll	r17,r18,r2
 10100f0:	0021883a 	mov	r16,zero
 10100f4:	d8800217 	ldw	r2,8(sp)
 10100f8:	dc400415 	stw	r17,16(sp)
 10100fc:	dc000315 	stw	r16,12(sp)
 1010100:	1105c83a 	sub	r2,r2,r4
 1010104:	d8800215 	stw	r2,8(sp)
 1010108:	003fde06 	br	1010084 <__floatsidf+0x34>
 101010c:	00a00034 	movhi	r2,32768
 1010110:	20800a26 	beq	r4,r2,101013c <__floatsidf+0xec>
 1010114:	0109c83a 	sub	r4,zero,r4
 1010118:	003feb06 	br	10100c8 <__floatsidf+0x78>
 101011c:	9006d07a 	srli	r3,r18,1
 1010120:	008007c4 	movi	r2,31
 1010124:	1105c83a 	sub	r2,r2,r4
 1010128:	1886d83a 	srl	r3,r3,r2
 101012c:	9922983a 	sll	r17,r19,r4
 1010130:	9120983a 	sll	r16,r18,r4
 1010134:	1c62b03a 	or	r17,r3,r17
 1010138:	003fee06 	br	10100f4 <__floatsidf+0xa4>
 101013c:	0009883a 	mov	r4,zero
 1010140:	01707834 	movhi	r5,49632
 1010144:	003fd306 	br	1010094 <__floatsidf+0x44>

01010148 <__fixdfsi>:
 1010148:	defff804 	addi	sp,sp,-32
 101014c:	2005883a 	mov	r2,r4
 1010150:	2807883a 	mov	r3,r5
 1010154:	d809883a 	mov	r4,sp
 1010158:	d9400204 	addi	r5,sp,8
 101015c:	d8c00115 	stw	r3,4(sp)
 1010160:	d8800015 	stw	r2,0(sp)
 1010164:	dfc00715 	stw	ra,28(sp)
 1010168:	10109580 	call	1010958 <__unpack_d>
 101016c:	d8c00217 	ldw	r3,8(sp)
 1010170:	00800084 	movi	r2,2
 1010174:	1880051e 	bne	r3,r2,101018c <__fixdfsi+0x44>
 1010178:	0007883a 	mov	r3,zero
 101017c:	1805883a 	mov	r2,r3
 1010180:	dfc00717 	ldw	ra,28(sp)
 1010184:	dec00804 	addi	sp,sp,32
 1010188:	f800283a 	ret
 101018c:	00800044 	movi	r2,1
 1010190:	10fff92e 	bgeu	r2,r3,1010178 <__fixdfsi+0x30>
 1010194:	00800104 	movi	r2,4
 1010198:	18800426 	beq	r3,r2,10101ac <__fixdfsi+0x64>
 101019c:	d8c00417 	ldw	r3,16(sp)
 10101a0:	183ff516 	blt	r3,zero,1010178 <__fixdfsi+0x30>
 10101a4:	00800784 	movi	r2,30
 10101a8:	10c0080e 	bge	r2,r3,10101cc <__fixdfsi+0x84>
 10101ac:	d8800317 	ldw	r2,12(sp)
 10101b0:	1000121e 	bne	r2,zero,10101fc <__fixdfsi+0xb4>
 10101b4:	00e00034 	movhi	r3,32768
 10101b8:	18ffffc4 	addi	r3,r3,-1
 10101bc:	1805883a 	mov	r2,r3
 10101c0:	dfc00717 	ldw	ra,28(sp)
 10101c4:	dec00804 	addi	sp,sp,32
 10101c8:	f800283a 	ret
 10101cc:	00800f04 	movi	r2,60
 10101d0:	10d1c83a 	sub	r8,r2,r3
 10101d4:	40bff804 	addi	r2,r8,-32
 10101d8:	d9800517 	ldw	r6,20(sp)
 10101dc:	d9c00617 	ldw	r7,24(sp)
 10101e0:	10000816 	blt	r2,zero,1010204 <__fixdfsi+0xbc>
 10101e4:	3888d83a 	srl	r4,r7,r2
 10101e8:	d8800317 	ldw	r2,12(sp)
 10101ec:	2007883a 	mov	r3,r4
 10101f0:	103fe226 	beq	r2,zero,101017c <__fixdfsi+0x34>
 10101f4:	0107c83a 	sub	r3,zero,r4
 10101f8:	003fe006 	br	101017c <__fixdfsi+0x34>
 10101fc:	00e00034 	movhi	r3,32768
 1010200:	003fde06 	br	101017c <__fixdfsi+0x34>
 1010204:	39c7883a 	add	r3,r7,r7
 1010208:	008007c4 	movi	r2,31
 101020c:	1205c83a 	sub	r2,r2,r8
 1010210:	1886983a 	sll	r3,r3,r2
 1010214:	3208d83a 	srl	r4,r6,r8
 1010218:	1908b03a 	or	r4,r3,r4
 101021c:	003ff206 	br	10101e8 <__fixdfsi+0xa0>

01010220 <__truncdfsf2>:
 1010220:	defff804 	addi	sp,sp,-32
 1010224:	2005883a 	mov	r2,r4
 1010228:	2807883a 	mov	r3,r5
 101022c:	d809883a 	mov	r4,sp
 1010230:	d9400204 	addi	r5,sp,8
 1010234:	d8c00115 	stw	r3,4(sp)
 1010238:	d8800015 	stw	r2,0(sp)
 101023c:	dfc00715 	stw	ra,28(sp)
 1010240:	10109580 	call	1010958 <__unpack_d>
 1010244:	d9c00517 	ldw	r7,20(sp)
 1010248:	da000617 	ldw	r8,24(sp)
 101024c:	02d00034 	movhi	r11,16384
 1010250:	5affffc4 	addi	r11,r11,-1
 1010254:	3812d7ba 	srli	r9,r7,30
 1010258:	401a90ba 	slli	r13,r8,2
 101025c:	3ac4703a 	and	r2,r7,r11
 1010260:	0007883a 	mov	r3,zero
 1010264:	6a52b03a 	or	r9,r13,r9
 1010268:	10c4b03a 	or	r2,r2,r3
 101026c:	d9000217 	ldw	r4,8(sp)
 1010270:	d9400317 	ldw	r5,12(sp)
 1010274:	d9800417 	ldw	r6,16(sp)
 1010278:	480f883a 	mov	r7,r9
 101027c:	10000126 	beq	r2,zero,1010284 <__truncdfsf2+0x64>
 1010280:	49c00054 	ori	r7,r9,1
 1010284:	10106180 	call	1010618 <__make_fp>
 1010288:	dfc00717 	ldw	ra,28(sp)
 101028c:	dec00804 	addi	sp,sp,32
 1010290:	f800283a 	ret

01010294 <__floatunsidf>:
 1010294:	defff204 	addi	sp,sp,-56
 1010298:	dfc00d15 	stw	ra,52(sp)
 101029c:	ddc00c15 	stw	r23,48(sp)
 10102a0:	dd800b15 	stw	r22,44(sp)
 10102a4:	dd400a15 	stw	r21,40(sp)
 10102a8:	dd000915 	stw	r20,36(sp)
 10102ac:	dcc00815 	stw	r19,32(sp)
 10102b0:	dc800715 	stw	r18,28(sp)
 10102b4:	dc400615 	stw	r17,24(sp)
 10102b8:	dc000515 	stw	r16,20(sp)
 10102bc:	d8000115 	stw	zero,4(sp)
 10102c0:	20000f1e 	bne	r4,zero,1010300 <__floatunsidf+0x6c>
 10102c4:	00800084 	movi	r2,2
 10102c8:	d8800015 	stw	r2,0(sp)
 10102cc:	d809883a 	mov	r4,sp
 10102d0:	10106440 	call	1010644 <__pack_d>
 10102d4:	dfc00d17 	ldw	ra,52(sp)
 10102d8:	ddc00c17 	ldw	r23,48(sp)
 10102dc:	dd800b17 	ldw	r22,44(sp)
 10102e0:	dd400a17 	ldw	r21,40(sp)
 10102e4:	dd000917 	ldw	r20,36(sp)
 10102e8:	dcc00817 	ldw	r19,32(sp)
 10102ec:	dc800717 	ldw	r18,28(sp)
 10102f0:	dc400617 	ldw	r17,24(sp)
 10102f4:	dc000517 	ldw	r16,20(sp)
 10102f8:	dec00e04 	addi	sp,sp,56
 10102fc:	f800283a 	ret
 1010300:	008000c4 	movi	r2,3
 1010304:	00c00f04 	movi	r3,60
 1010308:	002f883a 	mov	r23,zero
 101030c:	202d883a 	mov	r22,r4
 1010310:	d8800015 	stw	r2,0(sp)
 1010314:	d8c00215 	stw	r3,8(sp)
 1010318:	d9000315 	stw	r4,12(sp)
 101031c:	ddc00415 	stw	r23,16(sp)
 1010320:	10104280 	call	1010428 <__clzsi2>
 1010324:	12400744 	addi	r9,r2,29
 1010328:	48000b16 	blt	r9,zero,1010358 <__floatunsidf+0xc4>
 101032c:	483fe726 	beq	r9,zero,10102cc <__floatunsidf+0x38>
 1010330:	10bfff44 	addi	r2,r2,-3
 1010334:	10002e16 	blt	r2,zero,10103f0 <__floatunsidf+0x15c>
 1010338:	b0a2983a 	sll	r17,r22,r2
 101033c:	0021883a 	mov	r16,zero
 1010340:	d8800217 	ldw	r2,8(sp)
 1010344:	dc400415 	stw	r17,16(sp)
 1010348:	dc000315 	stw	r16,12(sp)
 101034c:	1245c83a 	sub	r2,r2,r9
 1010350:	d8800215 	stw	r2,8(sp)
 1010354:	003fdd06 	br	10102cc <__floatunsidf+0x38>
 1010358:	0255c83a 	sub	r10,zero,r9
 101035c:	51bff804 	addi	r6,r10,-32
 1010360:	30001b16 	blt	r6,zero,10103d0 <__floatunsidf+0x13c>
 1010364:	b9a8d83a 	srl	r20,r23,r6
 1010368:	002b883a 	mov	r21,zero
 101036c:	000f883a 	mov	r7,zero
 1010370:	01000044 	movi	r4,1
 1010374:	0011883a 	mov	r8,zero
 1010378:	30002516 	blt	r6,zero,1010410 <__floatunsidf+0x17c>
 101037c:	21a6983a 	sll	r19,r4,r6
 1010380:	0025883a 	mov	r18,zero
 1010384:	00bfffc4 	movi	r2,-1
 1010388:	9089883a 	add	r4,r18,r2
 101038c:	988b883a 	add	r5,r19,r2
 1010390:	248d803a 	cmpltu	r6,r4,r18
 1010394:	314b883a 	add	r5,r6,r5
 1010398:	b104703a 	and	r2,r22,r4
 101039c:	b946703a 	and	r3,r23,r5
 10103a0:	10c4b03a 	or	r2,r2,r3
 10103a4:	10000226 	beq	r2,zero,10103b0 <__floatunsidf+0x11c>
 10103a8:	01c00044 	movi	r7,1
 10103ac:	0011883a 	mov	r8,zero
 10103b0:	d9000217 	ldw	r4,8(sp)
 10103b4:	a1c4b03a 	or	r2,r20,r7
 10103b8:	aa06b03a 	or	r3,r21,r8
 10103bc:	2249c83a 	sub	r4,r4,r9
 10103c0:	d8c00415 	stw	r3,16(sp)
 10103c4:	d9000215 	stw	r4,8(sp)
 10103c8:	d8800315 	stw	r2,12(sp)
 10103cc:	003fbf06 	br	10102cc <__floatunsidf+0x38>
 10103d0:	bdc7883a 	add	r3,r23,r23
 10103d4:	008007c4 	movi	r2,31
 10103d8:	1285c83a 	sub	r2,r2,r10
 10103dc:	1886983a 	sll	r3,r3,r2
 10103e0:	b2a8d83a 	srl	r20,r22,r10
 10103e4:	baaad83a 	srl	r21,r23,r10
 10103e8:	1d28b03a 	or	r20,r3,r20
 10103ec:	003fdf06 	br	101036c <__floatunsidf+0xd8>
 10103f0:	b006d07a 	srli	r3,r22,1
 10103f4:	008007c4 	movi	r2,31
 10103f8:	1245c83a 	sub	r2,r2,r9
 10103fc:	1886d83a 	srl	r3,r3,r2
 1010400:	ba62983a 	sll	r17,r23,r9
 1010404:	b260983a 	sll	r16,r22,r9
 1010408:	1c62b03a 	or	r17,r3,r17
 101040c:	003fcc06 	br	1010340 <__floatunsidf+0xac>
 1010410:	2006d07a 	srli	r3,r4,1
 1010414:	008007c4 	movi	r2,31
 1010418:	1285c83a 	sub	r2,r2,r10
 101041c:	18a6d83a 	srl	r19,r3,r2
 1010420:	22a4983a 	sll	r18,r4,r10
 1010424:	003fd706 	br	1010384 <__floatunsidf+0xf0>

01010428 <__clzsi2>:
 1010428:	00bfffd4 	movui	r2,65535
 101042c:	11000e36 	bltu	r2,r4,1010468 <__clzsi2+0x40>
 1010430:	00803fc4 	movi	r2,255
 1010434:	01400204 	movi	r5,8
 1010438:	0007883a 	mov	r3,zero
 101043c:	11001036 	bltu	r2,r4,1010480 <__clzsi2+0x58>
 1010440:	000b883a 	mov	r5,zero
 1010444:	20c6d83a 	srl	r3,r4,r3
 1010448:	00804074 	movhi	r2,257
 101044c:	108e7904 	addi	r2,r2,14820
 1010450:	1887883a 	add	r3,r3,r2
 1010454:	18800003 	ldbu	r2,0(r3)
 1010458:	00c00804 	movi	r3,32
 101045c:	2885883a 	add	r2,r5,r2
 1010460:	1885c83a 	sub	r2,r3,r2
 1010464:	f800283a 	ret
 1010468:	01400404 	movi	r5,16
 101046c:	00804034 	movhi	r2,256
 1010470:	10bfffc4 	addi	r2,r2,-1
 1010474:	2807883a 	mov	r3,r5
 1010478:	113ff22e 	bgeu	r2,r4,1010444 <__clzsi2+0x1c>
 101047c:	01400604 	movi	r5,24
 1010480:	2807883a 	mov	r3,r5
 1010484:	20c6d83a 	srl	r3,r4,r3
 1010488:	00804074 	movhi	r2,257
 101048c:	108e7904 	addi	r2,r2,14820
 1010490:	1887883a 	add	r3,r3,r2
 1010494:	18800003 	ldbu	r2,0(r3)
 1010498:	00c00804 	movi	r3,32
 101049c:	2885883a 	add	r2,r5,r2
 10104a0:	1885c83a 	sub	r2,r3,r2
 10104a4:	f800283a 	ret

010104a8 <__unpack_f>:
 10104a8:	21800017 	ldw	r6,0(r4)
 10104ac:	00c02034 	movhi	r3,128
 10104b0:	18ffffc4 	addi	r3,r3,-1
 10104b4:	3004d5fa 	srli	r2,r6,23
 10104b8:	3008d7fa 	srli	r4,r6,31
 10104bc:	30ce703a 	and	r7,r6,r3
 10104c0:	10c03fcc 	andi	r3,r2,255
 10104c4:	29000115 	stw	r4,4(r5)
 10104c8:	1800131e 	bne	r3,zero,1010518 <__unpack_f+0x70>
 10104cc:	38000f26 	beq	r7,zero,101050c <__unpack_f+0x64>
 10104d0:	380691fa 	slli	r3,r7,7
 10104d4:	01bfe084 	movi	r6,-126
 10104d8:	008000c4 	movi	r2,3
 10104dc:	01100034 	movhi	r4,16384
 10104e0:	213fffc4 	addi	r4,r4,-1
 10104e4:	28800015 	stw	r2,0(r5)
 10104e8:	29800215 	stw	r6,8(r5)
 10104ec:	20c00536 	bltu	r4,r3,1010504 <__unpack_f+0x5c>
 10104f0:	3005883a 	mov	r2,r6
 10104f4:	18c7883a 	add	r3,r3,r3
 10104f8:	10bfffc4 	addi	r2,r2,-1
 10104fc:	20fffd2e 	bgeu	r4,r3,10104f4 <__unpack_f+0x4c>
 1010500:	28800215 	stw	r2,8(r5)
 1010504:	28c00315 	stw	r3,12(r5)
 1010508:	f800283a 	ret
 101050c:	00800084 	movi	r2,2
 1010510:	28800015 	stw	r2,0(r5)
 1010514:	f800283a 	ret
 1010518:	00803fc4 	movi	r2,255
 101051c:	18800826 	beq	r3,r2,1010540 <__unpack_f+0x98>
 1010520:	380491fa 	slli	r2,r7,7
 1010524:	18ffe044 	addi	r3,r3,-127
 1010528:	28c00215 	stw	r3,8(r5)
 101052c:	10900034 	orhi	r2,r2,16384
 1010530:	28800315 	stw	r2,12(r5)
 1010534:	008000c4 	movi	r2,3
 1010538:	28800015 	stw	r2,0(r5)
 101053c:	f800283a 	ret
 1010540:	3800031e 	bne	r7,zero,1010550 <__unpack_f+0xa8>
 1010544:	00800104 	movi	r2,4
 1010548:	28800015 	stw	r2,0(r5)
 101054c:	f800283a 	ret
 1010550:	3080042c 	andhi	r2,r6,16
 1010554:	10000426 	beq	r2,zero,1010568 <__unpack_f+0xc0>
 1010558:	00800044 	movi	r2,1
 101055c:	28800015 	stw	r2,0(r5)
 1010560:	29c00315 	stw	r7,12(r5)
 1010564:	f800283a 	ret
 1010568:	28000015 	stw	zero,0(r5)
 101056c:	003ffc06 	br	1010560 <__unpack_f+0xb8>

01010570 <__fpcmp_parts_f>:
 1010570:	21800017 	ldw	r6,0(r4)
 1010574:	00c00044 	movi	r3,1
 1010578:	19800a2e 	bgeu	r3,r6,10105a4 <__fpcmp_parts_f+0x34>
 101057c:	28800017 	ldw	r2,0(r5)
 1010580:	1880082e 	bgeu	r3,r2,10105a4 <__fpcmp_parts_f+0x34>
 1010584:	00c00104 	movi	r3,4
 1010588:	30c01e26 	beq	r6,r3,1010604 <__fpcmp_parts_f+0x94>
 101058c:	10c01a26 	beq	r2,r3,10105f8 <__fpcmp_parts_f+0x88>
 1010590:	00c00084 	movi	r3,2
 1010594:	30c00526 	beq	r6,r3,10105ac <__fpcmp_parts_f+0x3c>
 1010598:	10c0071e 	bne	r2,r3,10105b8 <__fpcmp_parts_f+0x48>
 101059c:	20800117 	ldw	r2,4(r4)
 10105a0:	1000091e 	bne	r2,zero,10105c8 <__fpcmp_parts_f+0x58>
 10105a4:	00800044 	movi	r2,1
 10105a8:	f800283a 	ret
 10105ac:	10c0121e 	bne	r2,r3,10105f8 <__fpcmp_parts_f+0x88>
 10105b0:	0005883a 	mov	r2,zero
 10105b4:	f800283a 	ret
 10105b8:	20c00117 	ldw	r3,4(r4)
 10105bc:	28800117 	ldw	r2,4(r5)
 10105c0:	18800326 	beq	r3,r2,10105d0 <__fpcmp_parts_f+0x60>
 10105c4:	183ff726 	beq	r3,zero,10105a4 <__fpcmp_parts_f+0x34>
 10105c8:	00bfffc4 	movi	r2,-1
 10105cc:	f800283a 	ret
 10105d0:	21800217 	ldw	r6,8(r4)
 10105d4:	28800217 	ldw	r2,8(r5)
 10105d8:	11bffa16 	blt	r2,r6,10105c4 <__fpcmp_parts_f+0x54>
 10105dc:	30800416 	blt	r6,r2,10105f0 <__fpcmp_parts_f+0x80>
 10105e0:	21000317 	ldw	r4,12(r4)
 10105e4:	29400317 	ldw	r5,12(r5)
 10105e8:	293ff636 	bltu	r5,r4,10105c4 <__fpcmp_parts_f+0x54>
 10105ec:	217ff02e 	bgeu	r4,r5,10105b0 <__fpcmp_parts_f+0x40>
 10105f0:	183fec1e 	bne	r3,zero,10105a4 <__fpcmp_parts_f+0x34>
 10105f4:	003ff406 	br	10105c8 <__fpcmp_parts_f+0x58>
 10105f8:	28800117 	ldw	r2,4(r5)
 10105fc:	103fe91e 	bne	r2,zero,10105a4 <__fpcmp_parts_f+0x34>
 1010600:	003ff106 	br	10105c8 <__fpcmp_parts_f+0x58>
 1010604:	11bfe51e 	bne	r2,r6,101059c <__fpcmp_parts_f+0x2c>
 1010608:	28c00117 	ldw	r3,4(r5)
 101060c:	20800117 	ldw	r2,4(r4)
 1010610:	1885c83a 	sub	r2,r3,r2
 1010614:	f800283a 	ret

01010618 <__make_fp>:
 1010618:	defffb04 	addi	sp,sp,-20
 101061c:	d9000015 	stw	r4,0(sp)
 1010620:	d809883a 	mov	r4,sp
 1010624:	dfc00415 	stw	ra,16(sp)
 1010628:	d9400115 	stw	r5,4(sp)
 101062c:	d9800215 	stw	r6,8(sp)
 1010630:	d9c00315 	stw	r7,12(sp)
 1010634:	1010b580 	call	1010b58 <__pack_f>
 1010638:	dfc00417 	ldw	ra,16(sp)
 101063c:	dec00504 	addi	sp,sp,20
 1010640:	f800283a 	ret

01010644 <__pack_d>:
 1010644:	20c00017 	ldw	r3,0(r4)
 1010648:	defffd04 	addi	sp,sp,-12
 101064c:	dc000015 	stw	r16,0(sp)
 1010650:	dc800215 	stw	r18,8(sp)
 1010654:	dc400115 	stw	r17,4(sp)
 1010658:	00800044 	movi	r2,1
 101065c:	22000317 	ldw	r8,12(r4)
 1010660:	001f883a 	mov	r15,zero
 1010664:	22400417 	ldw	r9,16(r4)
 1010668:	24000117 	ldw	r16,4(r4)
 101066c:	10c0552e 	bgeu	r2,r3,10107c4 <__pack_d+0x180>
 1010670:	00800104 	movi	r2,4
 1010674:	18804f26 	beq	r3,r2,10107b4 <__pack_d+0x170>
 1010678:	00800084 	movi	r2,2
 101067c:	18800226 	beq	r3,r2,1010688 <__pack_d+0x44>
 1010680:	4244b03a 	or	r2,r8,r9
 1010684:	10001a1e 	bne	r2,zero,10106f0 <__pack_d+0xac>
 1010688:	000d883a 	mov	r6,zero
 101068c:	000f883a 	mov	r7,zero
 1010690:	0011883a 	mov	r8,zero
 1010694:	00800434 	movhi	r2,16
 1010698:	10bfffc4 	addi	r2,r2,-1
 101069c:	301d883a 	mov	r14,r6
 10106a0:	3884703a 	and	r2,r7,r2
 10106a4:	400a953a 	slli	r5,r8,20
 10106a8:	79bffc2c 	andhi	r6,r15,65520
 10106ac:	308cb03a 	or	r6,r6,r2
 10106b0:	00e00434 	movhi	r3,32784
 10106b4:	18ffffc4 	addi	r3,r3,-1
 10106b8:	800497fa 	slli	r2,r16,31
 10106bc:	30c6703a 	and	r3,r6,r3
 10106c0:	1946b03a 	or	r3,r3,r5
 10106c4:	01600034 	movhi	r5,32768
 10106c8:	297fffc4 	addi	r5,r5,-1
 10106cc:	194a703a 	and	r5,r3,r5
 10106d0:	288ab03a 	or	r5,r5,r2
 10106d4:	2807883a 	mov	r3,r5
 10106d8:	7005883a 	mov	r2,r14
 10106dc:	dc800217 	ldw	r18,8(sp)
 10106e0:	dc400117 	ldw	r17,4(sp)
 10106e4:	dc000017 	ldw	r16,0(sp)
 10106e8:	dec00304 	addi	sp,sp,12
 10106ec:	f800283a 	ret
 10106f0:	21000217 	ldw	r4,8(r4)
 10106f4:	00bf0084 	movi	r2,-1022
 10106f8:	20803f16 	blt	r4,r2,10107f8 <__pack_d+0x1b4>
 10106fc:	0080ffc4 	movi	r2,1023
 1010700:	11002c16 	blt	r2,r4,10107b4 <__pack_d+0x170>
 1010704:	00803fc4 	movi	r2,255
 1010708:	408c703a 	and	r6,r8,r2
 101070c:	00802004 	movi	r2,128
 1010710:	0007883a 	mov	r3,zero
 1010714:	000f883a 	mov	r7,zero
 1010718:	2280ffc4 	addi	r10,r4,1023
 101071c:	30801e26 	beq	r6,r2,1010798 <__pack_d+0x154>
 1010720:	00801fc4 	movi	r2,127
 1010724:	4089883a 	add	r4,r8,r2
 1010728:	220d803a 	cmpltu	r6,r4,r8
 101072c:	324d883a 	add	r6,r6,r9
 1010730:	2011883a 	mov	r8,r4
 1010734:	3013883a 	mov	r9,r6
 1010738:	00880034 	movhi	r2,8192
 101073c:	10bfffc4 	addi	r2,r2,-1
 1010740:	12400d36 	bltu	r2,r9,1010778 <__pack_d+0x134>
 1010744:	4804963a 	slli	r2,r9,24
 1010748:	400cd23a 	srli	r6,r8,8
 101074c:	480ed23a 	srli	r7,r9,8
 1010750:	013fffc4 	movi	r4,-1
 1010754:	118cb03a 	or	r6,r2,r6
 1010758:	01400434 	movhi	r5,16
 101075c:	297fffc4 	addi	r5,r5,-1
 1010760:	3104703a 	and	r2,r6,r4
 1010764:	3946703a 	and	r3,r7,r5
 1010768:	5201ffcc 	andi	r8,r10,2047
 101076c:	100d883a 	mov	r6,r2
 1010770:	180f883a 	mov	r7,r3
 1010774:	003fc706 	br	1010694 <__pack_d+0x50>
 1010778:	480897fa 	slli	r4,r9,31
 101077c:	4004d07a 	srli	r2,r8,1
 1010780:	4806d07a 	srli	r3,r9,1
 1010784:	52800044 	addi	r10,r10,1
 1010788:	2084b03a 	or	r2,r4,r2
 101078c:	1011883a 	mov	r8,r2
 1010790:	1813883a 	mov	r9,r3
 1010794:	003feb06 	br	1010744 <__pack_d+0x100>
 1010798:	383fe11e 	bne	r7,zero,1010720 <__pack_d+0xdc>
 101079c:	01004004 	movi	r4,256
 10107a0:	4104703a 	and	r2,r8,r4
 10107a4:	10c4b03a 	or	r2,r2,r3
 10107a8:	103fe326 	beq	r2,zero,1010738 <__pack_d+0xf4>
 10107ac:	3005883a 	mov	r2,r6
 10107b0:	003fdc06 	br	1010724 <__pack_d+0xe0>
 10107b4:	000d883a 	mov	r6,zero
 10107b8:	000f883a 	mov	r7,zero
 10107bc:	0201ffc4 	movi	r8,2047
 10107c0:	003fb406 	br	1010694 <__pack_d+0x50>
 10107c4:	0005883a 	mov	r2,zero
 10107c8:	00c00234 	movhi	r3,8
 10107cc:	408cb03a 	or	r6,r8,r2
 10107d0:	48ceb03a 	or	r7,r9,r3
 10107d4:	013fffc4 	movi	r4,-1
 10107d8:	01400434 	movhi	r5,16
 10107dc:	297fffc4 	addi	r5,r5,-1
 10107e0:	3104703a 	and	r2,r6,r4
 10107e4:	3946703a 	and	r3,r7,r5
 10107e8:	100d883a 	mov	r6,r2
 10107ec:	180f883a 	mov	r7,r3
 10107f0:	0201ffc4 	movi	r8,2047
 10107f4:	003fa706 	br	1010694 <__pack_d+0x50>
 10107f8:	1109c83a 	sub	r4,r2,r4
 10107fc:	00800e04 	movi	r2,56
 1010800:	11004316 	blt	r2,r4,1010910 <__pack_d+0x2cc>
 1010804:	21fff804 	addi	r7,r4,-32
 1010808:	38004516 	blt	r7,zero,1010920 <__pack_d+0x2dc>
 101080c:	49d8d83a 	srl	r12,r9,r7
 1010810:	001b883a 	mov	r13,zero
 1010814:	0023883a 	mov	r17,zero
 1010818:	01400044 	movi	r5,1
 101081c:	0025883a 	mov	r18,zero
 1010820:	38004716 	blt	r7,zero,1010940 <__pack_d+0x2fc>
 1010824:	29d6983a 	sll	r11,r5,r7
 1010828:	0015883a 	mov	r10,zero
 101082c:	00bfffc4 	movi	r2,-1
 1010830:	5089883a 	add	r4,r10,r2
 1010834:	588b883a 	add	r5,r11,r2
 1010838:	228d803a 	cmpltu	r6,r4,r10
 101083c:	314b883a 	add	r5,r6,r5
 1010840:	4104703a 	and	r2,r8,r4
 1010844:	4946703a 	and	r3,r9,r5
 1010848:	10c4b03a 	or	r2,r2,r3
 101084c:	10000226 	beq	r2,zero,1010858 <__pack_d+0x214>
 1010850:	04400044 	movi	r17,1
 1010854:	0025883a 	mov	r18,zero
 1010858:	00803fc4 	movi	r2,255
 101085c:	644eb03a 	or	r7,r12,r17
 1010860:	3892703a 	and	r9,r7,r2
 1010864:	00802004 	movi	r2,128
 1010868:	6c90b03a 	or	r8,r13,r18
 101086c:	0015883a 	mov	r10,zero
 1010870:	48801626 	beq	r9,r2,10108cc <__pack_d+0x288>
 1010874:	01001fc4 	movi	r4,127
 1010878:	3905883a 	add	r2,r7,r4
 101087c:	11cd803a 	cmpltu	r6,r2,r7
 1010880:	320d883a 	add	r6,r6,r8
 1010884:	100f883a 	mov	r7,r2
 1010888:	00840034 	movhi	r2,4096
 101088c:	10bfffc4 	addi	r2,r2,-1
 1010890:	3011883a 	mov	r8,r6
 1010894:	0007883a 	mov	r3,zero
 1010898:	11801b36 	bltu	r2,r6,1010908 <__pack_d+0x2c4>
 101089c:	4004963a 	slli	r2,r8,24
 10108a0:	3808d23a 	srli	r4,r7,8
 10108a4:	400ad23a 	srli	r5,r8,8
 10108a8:	1813883a 	mov	r9,r3
 10108ac:	1108b03a 	or	r4,r2,r4
 10108b0:	00bfffc4 	movi	r2,-1
 10108b4:	00c00434 	movhi	r3,16
 10108b8:	18ffffc4 	addi	r3,r3,-1
 10108bc:	208c703a 	and	r6,r4,r2
 10108c0:	28ce703a 	and	r7,r5,r3
 10108c4:	4a01ffcc 	andi	r8,r9,2047
 10108c8:	003f7206 	br	1010694 <__pack_d+0x50>
 10108cc:	503fe91e 	bne	r10,zero,1010874 <__pack_d+0x230>
 10108d0:	01004004 	movi	r4,256
 10108d4:	3904703a 	and	r2,r7,r4
 10108d8:	0007883a 	mov	r3,zero
 10108dc:	10c4b03a 	or	r2,r2,r3
 10108e0:	10000626 	beq	r2,zero,10108fc <__pack_d+0x2b8>
 10108e4:	3a45883a 	add	r2,r7,r9
 10108e8:	11cd803a 	cmpltu	r6,r2,r7
 10108ec:	320d883a 	add	r6,r6,r8
 10108f0:	100f883a 	mov	r7,r2
 10108f4:	3011883a 	mov	r8,r6
 10108f8:	0007883a 	mov	r3,zero
 10108fc:	00840034 	movhi	r2,4096
 1010900:	10bfffc4 	addi	r2,r2,-1
 1010904:	123fe52e 	bgeu	r2,r8,101089c <__pack_d+0x258>
 1010908:	00c00044 	movi	r3,1
 101090c:	003fe306 	br	101089c <__pack_d+0x258>
 1010910:	0009883a 	mov	r4,zero
 1010914:	0013883a 	mov	r9,zero
 1010918:	000b883a 	mov	r5,zero
 101091c:	003fe406 	br	10108b0 <__pack_d+0x26c>
 1010920:	4a47883a 	add	r3,r9,r9
 1010924:	008007c4 	movi	r2,31
 1010928:	1105c83a 	sub	r2,r2,r4
 101092c:	1886983a 	sll	r3,r3,r2
 1010930:	4118d83a 	srl	r12,r8,r4
 1010934:	491ad83a 	srl	r13,r9,r4
 1010938:	1b18b03a 	or	r12,r3,r12
 101093c:	003fb506 	br	1010814 <__pack_d+0x1d0>
 1010940:	2806d07a 	srli	r3,r5,1
 1010944:	008007c4 	movi	r2,31
 1010948:	1105c83a 	sub	r2,r2,r4
 101094c:	1896d83a 	srl	r11,r3,r2
 1010950:	2914983a 	sll	r10,r5,r4
 1010954:	003fb506 	br	101082c <__pack_d+0x1e8>

01010958 <__unpack_d>:
 1010958:	20c00117 	ldw	r3,4(r4)
 101095c:	22400017 	ldw	r9,0(r4)
 1010960:	00800434 	movhi	r2,16
 1010964:	10bfffc4 	addi	r2,r2,-1
 1010968:	1808d53a 	srli	r4,r3,20
 101096c:	180cd7fa 	srli	r6,r3,31
 1010970:	1894703a 	and	r10,r3,r2
 1010974:	2201ffcc 	andi	r8,r4,2047
 1010978:	281b883a 	mov	r13,r5
 101097c:	4817883a 	mov	r11,r9
 1010980:	29800115 	stw	r6,4(r5)
 1010984:	5019883a 	mov	r12,r10
 1010988:	40001e1e 	bne	r8,zero,1010a04 <__unpack_d+0xac>
 101098c:	4a84b03a 	or	r2,r9,r10
 1010990:	10001926 	beq	r2,zero,10109f8 <__unpack_d+0xa0>
 1010994:	4804d63a 	srli	r2,r9,24
 1010998:	500c923a 	slli	r6,r10,8
 101099c:	013f0084 	movi	r4,-1022
 10109a0:	00c40034 	movhi	r3,4096
 10109a4:	18ffffc4 	addi	r3,r3,-1
 10109a8:	118cb03a 	or	r6,r2,r6
 10109ac:	008000c4 	movi	r2,3
 10109b0:	480a923a 	slli	r5,r9,8
 10109b4:	68800015 	stw	r2,0(r13)
 10109b8:	69000215 	stw	r4,8(r13)
 10109bc:	19800b36 	bltu	r3,r6,10109ec <__unpack_d+0x94>
 10109c0:	200f883a 	mov	r7,r4
 10109c4:	1811883a 	mov	r8,r3
 10109c8:	2945883a 	add	r2,r5,r5
 10109cc:	1149803a 	cmpltu	r4,r2,r5
 10109d0:	3187883a 	add	r3,r6,r6
 10109d4:	20c9883a 	add	r4,r4,r3
 10109d8:	100b883a 	mov	r5,r2
 10109dc:	200d883a 	mov	r6,r4
 10109e0:	39ffffc4 	addi	r7,r7,-1
 10109e4:	413ff82e 	bgeu	r8,r4,10109c8 <__unpack_d+0x70>
 10109e8:	69c00215 	stw	r7,8(r13)
 10109ec:	69800415 	stw	r6,16(r13)
 10109f0:	69400315 	stw	r5,12(r13)
 10109f4:	f800283a 	ret
 10109f8:	00800084 	movi	r2,2
 10109fc:	28800015 	stw	r2,0(r5)
 1010a00:	f800283a 	ret
 1010a04:	0081ffc4 	movi	r2,2047
 1010a08:	40800f26 	beq	r8,r2,1010a48 <__unpack_d+0xf0>
 1010a0c:	480cd63a 	srli	r6,r9,24
 1010a10:	5006923a 	slli	r3,r10,8
 1010a14:	4804923a 	slli	r2,r9,8
 1010a18:	0009883a 	mov	r4,zero
 1010a1c:	30c6b03a 	or	r3,r6,r3
 1010a20:	01440034 	movhi	r5,4096
 1010a24:	110cb03a 	or	r6,r2,r4
 1010a28:	423f0044 	addi	r8,r8,-1023
 1010a2c:	194eb03a 	or	r7,r3,r5
 1010a30:	008000c4 	movi	r2,3
 1010a34:	69c00415 	stw	r7,16(r13)
 1010a38:	6a000215 	stw	r8,8(r13)
 1010a3c:	68800015 	stw	r2,0(r13)
 1010a40:	69800315 	stw	r6,12(r13)
 1010a44:	f800283a 	ret
 1010a48:	4a84b03a 	or	r2,r9,r10
 1010a4c:	1000031e 	bne	r2,zero,1010a5c <__unpack_d+0x104>
 1010a50:	00800104 	movi	r2,4
 1010a54:	28800015 	stw	r2,0(r5)
 1010a58:	f800283a 	ret
 1010a5c:	0009883a 	mov	r4,zero
 1010a60:	01400234 	movhi	r5,8
 1010a64:	4904703a 	and	r2,r9,r4
 1010a68:	5146703a 	and	r3,r10,r5
 1010a6c:	10c4b03a 	or	r2,r2,r3
 1010a70:	10000526 	beq	r2,zero,1010a88 <__unpack_d+0x130>
 1010a74:	00800044 	movi	r2,1
 1010a78:	68800015 	stw	r2,0(r13)
 1010a7c:	6b000415 	stw	r12,16(r13)
 1010a80:	6ac00315 	stw	r11,12(r13)
 1010a84:	f800283a 	ret
 1010a88:	68000015 	stw	zero,0(r13)
 1010a8c:	003ffb06 	br	1010a7c <__unpack_d+0x124>

01010a90 <__fpcmp_parts_d>:
 1010a90:	21800017 	ldw	r6,0(r4)
 1010a94:	00c00044 	movi	r3,1
 1010a98:	19800a2e 	bgeu	r3,r6,1010ac4 <__fpcmp_parts_d+0x34>
 1010a9c:	28800017 	ldw	r2,0(r5)
 1010aa0:	1880082e 	bgeu	r3,r2,1010ac4 <__fpcmp_parts_d+0x34>
 1010aa4:	00c00104 	movi	r3,4
 1010aa8:	30c02626 	beq	r6,r3,1010b44 <__fpcmp_parts_d+0xb4>
 1010aac:	10c02226 	beq	r2,r3,1010b38 <__fpcmp_parts_d+0xa8>
 1010ab0:	00c00084 	movi	r3,2
 1010ab4:	30c00526 	beq	r6,r3,1010acc <__fpcmp_parts_d+0x3c>
 1010ab8:	10c0071e 	bne	r2,r3,1010ad8 <__fpcmp_parts_d+0x48>
 1010abc:	20800117 	ldw	r2,4(r4)
 1010ac0:	1000091e 	bne	r2,zero,1010ae8 <__fpcmp_parts_d+0x58>
 1010ac4:	00800044 	movi	r2,1
 1010ac8:	f800283a 	ret
 1010acc:	10c01a1e 	bne	r2,r3,1010b38 <__fpcmp_parts_d+0xa8>
 1010ad0:	0005883a 	mov	r2,zero
 1010ad4:	f800283a 	ret
 1010ad8:	22000117 	ldw	r8,4(r4)
 1010adc:	28800117 	ldw	r2,4(r5)
 1010ae0:	40800326 	beq	r8,r2,1010af0 <__fpcmp_parts_d+0x60>
 1010ae4:	403ff726 	beq	r8,zero,1010ac4 <__fpcmp_parts_d+0x34>
 1010ae8:	00bfffc4 	movi	r2,-1
 1010aec:	f800283a 	ret
 1010af0:	20c00217 	ldw	r3,8(r4)
 1010af4:	28800217 	ldw	r2,8(r5)
 1010af8:	10fffa16 	blt	r2,r3,1010ae4 <__fpcmp_parts_d+0x54>
 1010afc:	18800916 	blt	r3,r2,1010b24 <__fpcmp_parts_d+0x94>
 1010b00:	21c00417 	ldw	r7,16(r4)
 1010b04:	28c00417 	ldw	r3,16(r5)
 1010b08:	21800317 	ldw	r6,12(r4)
 1010b0c:	28800317 	ldw	r2,12(r5)
 1010b10:	19fff436 	bltu	r3,r7,1010ae4 <__fpcmp_parts_d+0x54>
 1010b14:	38c00526 	beq	r7,r3,1010b2c <__fpcmp_parts_d+0x9c>
 1010b18:	38c00236 	bltu	r7,r3,1010b24 <__fpcmp_parts_d+0x94>
 1010b1c:	19ffec1e 	bne	r3,r7,1010ad0 <__fpcmp_parts_d+0x40>
 1010b20:	30bfeb2e 	bgeu	r6,r2,1010ad0 <__fpcmp_parts_d+0x40>
 1010b24:	403fe71e 	bne	r8,zero,1010ac4 <__fpcmp_parts_d+0x34>
 1010b28:	003fef06 	br	1010ae8 <__fpcmp_parts_d+0x58>
 1010b2c:	11bffa2e 	bgeu	r2,r6,1010b18 <__fpcmp_parts_d+0x88>
 1010b30:	403fe426 	beq	r8,zero,1010ac4 <__fpcmp_parts_d+0x34>
 1010b34:	003fec06 	br	1010ae8 <__fpcmp_parts_d+0x58>
 1010b38:	28800117 	ldw	r2,4(r5)
 1010b3c:	103fe11e 	bne	r2,zero,1010ac4 <__fpcmp_parts_d+0x34>
 1010b40:	003fe906 	br	1010ae8 <__fpcmp_parts_d+0x58>
 1010b44:	11bfdd1e 	bne	r2,r6,1010abc <__fpcmp_parts_d+0x2c>
 1010b48:	28c00117 	ldw	r3,4(r5)
 1010b4c:	20800117 	ldw	r2,4(r4)
 1010b50:	1885c83a 	sub	r2,r3,r2
 1010b54:	f800283a 	ret

01010b58 <__pack_f>:
 1010b58:	20c00017 	ldw	r3,0(r4)
 1010b5c:	01c00044 	movi	r7,1
 1010b60:	21800317 	ldw	r6,12(r4)
 1010b64:	21400117 	ldw	r5,4(r4)
 1010b68:	38c02d2e 	bgeu	r7,r3,1010c20 <__pack_f+0xc8>
 1010b6c:	00800104 	movi	r2,4
 1010b70:	18802826 	beq	r3,r2,1010c14 <__pack_f+0xbc>
 1010b74:	00800084 	movi	r2,2
 1010b78:	18800126 	beq	r3,r2,1010b80 <__pack_f+0x28>
 1010b7c:	3000101e 	bne	r6,zero,1010bc0 <__pack_f+0x68>
 1010b80:	000d883a 	mov	r6,zero
 1010b84:	0007883a 	mov	r3,zero
 1010b88:	19003fcc 	andi	r4,r3,255
 1010b8c:	200895fa 	slli	r4,r4,23
 1010b90:	00c02034 	movhi	r3,128
 1010b94:	18ffffc4 	addi	r3,r3,-1
 1010b98:	30c6703a 	and	r3,r6,r3
 1010b9c:	10a0002c 	andhi	r2,r2,32768
 1010ba0:	10c4b03a 	or	r2,r2,r3
 1010ba4:	280a97fa 	slli	r5,r5,31
 1010ba8:	1104b03a 	or	r2,r2,r4
 1010bac:	00e00034 	movhi	r3,32768
 1010bb0:	18ffffc4 	addi	r3,r3,-1
 1010bb4:	10c4703a 	and	r2,r2,r3
 1010bb8:	1144b03a 	or	r2,r2,r5
 1010bbc:	f800283a 	ret
 1010bc0:	21000217 	ldw	r4,8(r4)
 1010bc4:	00bfe084 	movi	r2,-126
 1010bc8:	20801b16 	blt	r4,r2,1010c38 <__pack_f+0xe0>
 1010bcc:	00801fc4 	movi	r2,127
 1010bd0:	11001016 	blt	r2,r4,1010c14 <__pack_f+0xbc>
 1010bd4:	308e703a 	and	r7,r6,r2
 1010bd8:	2087883a 	add	r3,r4,r2
 1010bdc:	00801004 	movi	r2,64
 1010be0:	38800526 	beq	r7,r2,1010bf8 <__pack_f+0xa0>
 1010be4:	31800fc4 	addi	r6,r6,63
 1010be8:	30000716 	blt	r6,zero,1010c08 <__pack_f+0xb0>
 1010bec:	300490ba 	slli	r2,r6,2
 1010bf0:	100cd27a 	srli	r6,r2,9
 1010bf4:	003fe406 	br	1010b88 <__pack_f+0x30>
 1010bf8:	3080200c 	andi	r2,r6,128
 1010bfc:	103ffa26 	beq	r2,zero,1010be8 <__pack_f+0x90>
 1010c00:	31cd883a 	add	r6,r6,r7
 1010c04:	003ff806 	br	1010be8 <__pack_f+0x90>
 1010c08:	300cd07a 	srli	r6,r6,1
 1010c0c:	18c00044 	addi	r3,r3,1
 1010c10:	003ff606 	br	1010bec <__pack_f+0x94>
 1010c14:	000d883a 	mov	r6,zero
 1010c18:	00ffffc4 	movi	r3,-1
 1010c1c:	003fda06 	br	1010b88 <__pack_f+0x30>
 1010c20:	31800434 	orhi	r6,r6,16
 1010c24:	00802034 	movhi	r2,128
 1010c28:	10bfffc4 	addi	r2,r2,-1
 1010c2c:	308c703a 	and	r6,r6,r2
 1010c30:	00ffffc4 	movi	r3,-1
 1010c34:	003fd406 	br	1010b88 <__pack_f+0x30>
 1010c38:	1109c83a 	sub	r4,r2,r4
 1010c3c:	00800644 	movi	r2,25
 1010c40:	11001216 	blt	r2,r4,1010c8c <__pack_f+0x134>
 1010c44:	3904983a 	sll	r2,r7,r4
 1010c48:	3106d83a 	srl	r3,r6,r4
 1010c4c:	10bfffc4 	addi	r2,r2,-1
 1010c50:	3084703a 	and	r2,r6,r2
 1010c54:	1004c03a 	cmpne	r2,r2,zero
 1010c58:	1886b03a 	or	r3,r3,r2
 1010c5c:	19001fcc 	andi	r4,r3,127
 1010c60:	00801004 	movi	r2,64
 1010c64:	20800c26 	beq	r4,r2,1010c98 <__pack_f+0x140>
 1010c68:	18c00fc4 	addi	r3,r3,63
 1010c6c:	00900034 	movhi	r2,16384
 1010c70:	10bfffc4 	addi	r2,r2,-1
 1010c74:	180cd1fa 	srli	r6,r3,7
 1010c78:	10c7803a 	cmpltu	r3,r2,r3
 1010c7c:	00802034 	movhi	r2,128
 1010c80:	10bfffc4 	addi	r2,r2,-1
 1010c84:	308c703a 	and	r6,r6,r2
 1010c88:	003fbf06 	br	1010b88 <__pack_f+0x30>
 1010c8c:	0007883a 	mov	r3,zero
 1010c90:	000d883a 	mov	r6,zero
 1010c94:	003ff906 	br	1010c7c <__pack_f+0x124>
 1010c98:	1880200c 	andi	r2,r3,128
 1010c9c:	10000126 	beq	r2,zero,1010ca4 <__pack_f+0x14c>
 1010ca0:	1907883a 	add	r3,r3,r4
 1010ca4:	180cd1fa 	srli	r6,r3,7
 1010ca8:	00900034 	movhi	r2,16384
 1010cac:	10bfffc4 	addi	r2,r2,-1
 1010cb0:	10c7803a 	cmpltu	r3,r2,r3
 1010cb4:	003ff106 	br	1010c7c <__pack_f+0x124>

01010cb8 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 1010cb8:	defff804 	addi	sp,sp,-32
 1010cbc:	dfc00715 	stw	ra,28(sp)
 1010cc0:	df000615 	stw	fp,24(sp)
 1010cc4:	df000604 	addi	fp,sp,24
 1010cc8:	e13ffc15 	stw	r4,-16(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 1010ccc:	e0bffc17 	ldw	r2,-16(fp)
 1010cd0:	1004803a 	cmplt	r2,r2,zero
 1010cd4:	1000091e 	bne	r2,zero,1010cfc <close+0x44>
 1010cd8:	e13ffc17 	ldw	r4,-16(fp)
 1010cdc:	01400304 	movi	r5,12
 1010ce0:	10010a40 	call	10010a4 <__mulsi3>
 1010ce4:	1007883a 	mov	r3,r2
 1010ce8:	00804074 	movhi	r2,257
 1010cec:	1090e004 	addi	r2,r2,17280
 1010cf0:	1887883a 	add	r3,r3,r2
 1010cf4:	e0ffff15 	stw	r3,-4(fp)
 1010cf8:	00000106 	br	1010d00 <close+0x48>
 1010cfc:	e03fff15 	stw	zero,-4(fp)
 1010d00:	e0bfff17 	ldw	r2,-4(fp)
 1010d04:	e0bffb15 	stw	r2,-20(fp)

  if (fd)
 1010d08:	e0bffb17 	ldw	r2,-20(fp)
 1010d0c:	1005003a 	cmpeq	r2,r2,zero
 1010d10:	10001d1e 	bne	r2,zero,1010d88 <close+0xd0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 1010d14:	e0bffb17 	ldw	r2,-20(fp)
 1010d18:	10800017 	ldw	r2,0(r2)
 1010d1c:	10800417 	ldw	r2,16(r2)
 1010d20:	1005003a 	cmpeq	r2,r2,zero
 1010d24:	1000071e 	bne	r2,zero,1010d44 <close+0x8c>
 1010d28:	e0bffb17 	ldw	r2,-20(fp)
 1010d2c:	10800017 	ldw	r2,0(r2)
 1010d30:	10800417 	ldw	r2,16(r2)
 1010d34:	e13ffb17 	ldw	r4,-20(fp)
 1010d38:	103ee83a 	callr	r2
 1010d3c:	e0bffe15 	stw	r2,-8(fp)
 1010d40:	00000106 	br	1010d48 <close+0x90>
 1010d44:	e03ffe15 	stw	zero,-8(fp)
 1010d48:	e0bffe17 	ldw	r2,-8(fp)
 1010d4c:	e0bffa15 	stw	r2,-24(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 1010d50:	e13ffc17 	ldw	r4,-16(fp)
 1010d54:	10118440 	call	1011844 <alt_release_fd>
    if (rval < 0)
 1010d58:	e0bffa17 	ldw	r2,-24(fp)
 1010d5c:	1004403a 	cmpge	r2,r2,zero
 1010d60:	1000071e 	bne	r2,zero,1010d80 <close+0xc8>
    {
      ALT_ERRNO = -rval;
 1010d64:	1010db80 	call	1010db8 <alt_get_errno>
 1010d68:	e0fffa17 	ldw	r3,-24(fp)
 1010d6c:	00c7c83a 	sub	r3,zero,r3
 1010d70:	10c00015 	stw	r3,0(r2)
      return -1;
 1010d74:	00bfffc4 	movi	r2,-1
 1010d78:	e0bffd15 	stw	r2,-12(fp)
 1010d7c:	00000806 	br	1010da0 <close+0xe8>
    }
    return 0;
 1010d80:	e03ffd15 	stw	zero,-12(fp)
 1010d84:	00000606 	br	1010da0 <close+0xe8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 1010d88:	1010db80 	call	1010db8 <alt_get_errno>
 1010d8c:	1007883a 	mov	r3,r2
 1010d90:	00801444 	movi	r2,81
 1010d94:	18800015 	stw	r2,0(r3)
    return -1;
 1010d98:	00bfffc4 	movi	r2,-1
 1010d9c:	e0bffd15 	stw	r2,-12(fp)
 1010da0:	e0bffd17 	ldw	r2,-12(fp)
  }
}
 1010da4:	e037883a 	mov	sp,fp
 1010da8:	dfc00117 	ldw	ra,4(sp)
 1010dac:	df000017 	ldw	fp,0(sp)
 1010db0:	dec00204 	addi	sp,sp,8
 1010db4:	f800283a 	ret

01010db8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 1010db8:	defffd04 	addi	sp,sp,-12
 1010dbc:	dfc00215 	stw	ra,8(sp)
 1010dc0:	df000115 	stw	fp,4(sp)
 1010dc4:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 1010dc8:	00804074 	movhi	r2,257
 1010dcc:	10916104 	addi	r2,r2,17796
 1010dd0:	10800017 	ldw	r2,0(r2)
 1010dd4:	1005003a 	cmpeq	r2,r2,zero
 1010dd8:	1000061e 	bne	r2,zero,1010df4 <alt_get_errno+0x3c>
 1010ddc:	00804074 	movhi	r2,257
 1010de0:	10916104 	addi	r2,r2,17796
 1010de4:	10800017 	ldw	r2,0(r2)
 1010de8:	103ee83a 	callr	r2
 1010dec:	e0bfff15 	stw	r2,-4(fp)
 1010df0:	00000306 	br	1010e00 <alt_get_errno+0x48>
 1010df4:	00804074 	movhi	r2,257
 1010df8:	10942904 	addi	r2,r2,20644
 1010dfc:	e0bfff15 	stw	r2,-4(fp)
 1010e00:	e0bfff17 	ldw	r2,-4(fp)
}
 1010e04:	e037883a 	mov	sp,fp
 1010e08:	dfc00117 	ldw	ra,4(sp)
 1010e0c:	df000017 	ldw	fp,0(sp)
 1010e10:	dec00204 	addi	sp,sp,8
 1010e14:	f800283a 	ret

01010e18 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 1010e18:	defffc04 	addi	sp,sp,-16
 1010e1c:	df000315 	stw	fp,12(sp)
 1010e20:	df000304 	addi	fp,sp,12
 1010e24:	e13ffd15 	stw	r4,-12(fp)
 1010e28:	e17ffe15 	stw	r5,-8(fp)
 1010e2c:	e1bfff15 	stw	r6,-4(fp)
  return len;
 1010e30:	e0bfff17 	ldw	r2,-4(fp)
}
 1010e34:	e037883a 	mov	sp,fp
 1010e38:	df000017 	ldw	fp,0(sp)
 1010e3c:	dec00104 	addi	sp,sp,4
 1010e40:	f800283a 	ret

01010e44 <alt_sim_halt>:

/*
 * Routine called on exit.
 */
static ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
 1010e44:	defffd04 	addi	sp,sp,-12
 1010e48:	df000215 	stw	fp,8(sp)
 1010e4c:	df000204 	addi	fp,sp,8
 1010e50:	e13fff15 	stw	r4,-4(fp)
  int r2 = exit_code;
 1010e54:	e0bfff17 	ldw	r2,-4(fp)
 1010e58:	e0bffe15 	stw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "D02"(r2), "D03"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 1010e5c:	e0bffe17 	ldw	r2,-8(fp)
 1010e60:	1005003a 	cmpeq	r2,r2,zero
 1010e64:	1000021e 	bne	r2,zero,1010e70 <alt_sim_halt+0x2c>
    ALT_SIM_FAIL();
 1010e68:	002af070 	cmpltui	zero,zero,43969
 1010e6c:	00000106 	br	1010e74 <alt_sim_halt+0x30>
  } else {
    ALT_SIM_PASS();
 1010e70:	002af0b0 	cmpltui	zero,zero,43970
  }
#endif /* DEBUG_STUB */
}
 1010e74:	e037883a 	mov	sp,fp
 1010e78:	df000017 	ldw	fp,0(sp)
 1010e7c:	dec00104 	addi	sp,sp,4
 1010e80:	f800283a 	ret

01010e84 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 1010e84:	defffd04 	addi	sp,sp,-12
 1010e88:	dfc00215 	stw	ra,8(sp)
 1010e8c:	df000115 	stw	fp,4(sp)
 1010e90:	df000104 	addi	fp,sp,4
 1010e94:	e13fff15 	stw	r4,-4(fp)
  ALT_OS_STOP();

  /* Provide notification to the simulator that we've stopped */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_SIM_HALT().\r\n");
  ALT_SIM_HALT(exit_code);
 1010e98:	e13fff17 	ldw	r4,-4(fp)
 1010e9c:	1010e440 	call	1010e44 <alt_sim_halt>

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 1010ea0:	003fff06 	br	1010ea0 <_exit+0x1c>

01010ea4 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 1010ea4:	defff904 	addi	sp,sp,-28
 1010ea8:	dfc00615 	stw	ra,24(sp)
 1010eac:	df000515 	stw	fp,20(sp)
 1010eb0:	df000504 	addi	fp,sp,20
 1010eb4:	e13ffc15 	stw	r4,-16(fp)
 1010eb8:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 1010ebc:	e0bffc17 	ldw	r2,-16(fp)
 1010ec0:	1004803a 	cmplt	r2,r2,zero
 1010ec4:	1000091e 	bne	r2,zero,1010eec <fstat+0x48>
 1010ec8:	e13ffc17 	ldw	r4,-16(fp)
 1010ecc:	01400304 	movi	r5,12
 1010ed0:	10010a40 	call	10010a4 <__mulsi3>
 1010ed4:	1007883a 	mov	r3,r2
 1010ed8:	00804074 	movhi	r2,257
 1010edc:	1090e004 	addi	r2,r2,17280
 1010ee0:	1887883a 	add	r3,r3,r2
 1010ee4:	e0ffff15 	stw	r3,-4(fp)
 1010ee8:	00000106 	br	1010ef0 <fstat+0x4c>
 1010eec:	e03fff15 	stw	zero,-4(fp)
 1010ef0:	e0bfff17 	ldw	r2,-4(fp)
 1010ef4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 1010ef8:	e0bffb17 	ldw	r2,-20(fp)
 1010efc:	1005003a 	cmpeq	r2,r2,zero
 1010f00:	1000121e 	bne	r2,zero,1010f4c <fstat+0xa8>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 1010f04:	e0bffb17 	ldw	r2,-20(fp)
 1010f08:	10800017 	ldw	r2,0(r2)
 1010f0c:	10800817 	ldw	r2,32(r2)
 1010f10:	1005003a 	cmpeq	r2,r2,zero
 1010f14:	1000081e 	bne	r2,zero,1010f38 <fstat+0x94>
    {
      return fd->dev->fstat(fd, st);
 1010f18:	e0bffb17 	ldw	r2,-20(fp)
 1010f1c:	10800017 	ldw	r2,0(r2)
 1010f20:	10800817 	ldw	r2,32(r2)
 1010f24:	e13ffb17 	ldw	r4,-20(fp)
 1010f28:	e17ffd17 	ldw	r5,-12(fp)
 1010f2c:	103ee83a 	callr	r2
 1010f30:	e0bffe15 	stw	r2,-8(fp)
 1010f34:	00000b06 	br	1010f64 <fstat+0xc0>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 1010f38:	e0fffd17 	ldw	r3,-12(fp)
 1010f3c:	00880004 	movi	r2,8192
 1010f40:	18800115 	stw	r2,4(r3)
      return 0;
 1010f44:	e03ffe15 	stw	zero,-8(fp)
 1010f48:	00000606 	br	1010f64 <fstat+0xc0>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 1010f4c:	1010f7c0 	call	1010f7c <alt_get_errno>
 1010f50:	1007883a 	mov	r3,r2
 1010f54:	00801444 	movi	r2,81
 1010f58:	18800015 	stw	r2,0(r3)
    return -1;
 1010f5c:	00bfffc4 	movi	r2,-1
 1010f60:	e0bffe15 	stw	r2,-8(fp)
 1010f64:	e0bffe17 	ldw	r2,-8(fp)
  }
}
 1010f68:	e037883a 	mov	sp,fp
 1010f6c:	dfc00117 	ldw	ra,4(sp)
 1010f70:	df000017 	ldw	fp,0(sp)
 1010f74:	dec00204 	addi	sp,sp,8
 1010f78:	f800283a 	ret

01010f7c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 1010f7c:	defffd04 	addi	sp,sp,-12
 1010f80:	dfc00215 	stw	ra,8(sp)
 1010f84:	df000115 	stw	fp,4(sp)
 1010f88:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 1010f8c:	00804074 	movhi	r2,257
 1010f90:	10916104 	addi	r2,r2,17796
 1010f94:	10800017 	ldw	r2,0(r2)
 1010f98:	1005003a 	cmpeq	r2,r2,zero
 1010f9c:	1000061e 	bne	r2,zero,1010fb8 <alt_get_errno+0x3c>
 1010fa0:	00804074 	movhi	r2,257
 1010fa4:	10916104 	addi	r2,r2,17796
 1010fa8:	10800017 	ldw	r2,0(r2)
 1010fac:	103ee83a 	callr	r2
 1010fb0:	e0bfff15 	stw	r2,-4(fp)
 1010fb4:	00000306 	br	1010fc4 <alt_get_errno+0x48>
 1010fb8:	00804074 	movhi	r2,257
 1010fbc:	10942904 	addi	r2,r2,20644
 1010fc0:	e0bfff15 	stw	r2,-4(fp)
 1010fc4:	e0bfff17 	ldw	r2,-4(fp)
}
 1010fc8:	e037883a 	mov	sp,fp
 1010fcc:	dfc00117 	ldw	ra,4(sp)
 1010fd0:	df000017 	ldw	fp,0(sp)
 1010fd4:	dec00204 	addi	sp,sp,8
 1010fd8:	f800283a 	ret

01010fdc <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 1010fdc:	deffeb04 	addi	sp,sp,-84
 1010fe0:	dfc01415 	stw	ra,80(sp)
 1010fe4:	df001315 	stw	fp,76(sp)
 1010fe8:	df001304 	addi	fp,sp,76
 1010fec:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 1010ff0:	e0bffd17 	ldw	r2,-12(fp)
 1010ff4:	1004803a 	cmplt	r2,r2,zero
 1010ff8:	1000091e 	bne	r2,zero,1011020 <isatty+0x44>
 1010ffc:	e13ffd17 	ldw	r4,-12(fp)
 1011000:	01400304 	movi	r5,12
 1011004:	10010a40 	call	10010a4 <__mulsi3>
 1011008:	1007883a 	mov	r3,r2
 101100c:	00804074 	movhi	r2,257
 1011010:	1090e004 	addi	r2,r2,17280
 1011014:	1887883a 	add	r3,r3,r2
 1011018:	e0ffff15 	stw	r3,-4(fp)
 101101c:	00000106 	br	1011024 <isatty+0x48>
 1011020:	e03fff15 	stw	zero,-4(fp)
 1011024:	e0bfff17 	ldw	r2,-4(fp)
 1011028:	e0bfed15 	stw	r2,-76(fp)
  
  if (fd)
 101102c:	e0bfed17 	ldw	r2,-76(fp)
 1011030:	1005003a 	cmpeq	r2,r2,zero
 1011034:	10000f1e 	bne	r2,zero,1011074 <isatty+0x98>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 1011038:	e0bfed17 	ldw	r2,-76(fp)
 101103c:	10800017 	ldw	r2,0(r2)
 1011040:	10800817 	ldw	r2,32(r2)
 1011044:	1004c03a 	cmpne	r2,r2,zero
 1011048:	1000031e 	bne	r2,zero,1011058 <isatty+0x7c>
    {
      return 1;
 101104c:	00800044 	movi	r2,1
 1011050:	e0bffe15 	stw	r2,-8(fp)
 1011054:	00000c06 	br	1011088 <isatty+0xac>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 1011058:	e17fee04 	addi	r5,fp,-72
 101105c:	e13ffd17 	ldw	r4,-12(fp)
 1011060:	1010ea40 	call	1010ea4 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 1011064:	e0bfef17 	ldw	r2,-68(fp)
 1011068:	10880020 	cmpeqi	r2,r2,8192
 101106c:	e0bffe15 	stw	r2,-8(fp)
 1011070:	00000506 	br	1011088 <isatty+0xac>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 1011074:	10110a00 	call	10110a0 <alt_get_errno>
 1011078:	1007883a 	mov	r3,r2
 101107c:	00801444 	movi	r2,81
 1011080:	18800015 	stw	r2,0(r3)
    return 0;
 1011084:	e03ffe15 	stw	zero,-8(fp)
 1011088:	e0bffe17 	ldw	r2,-8(fp)
  }
}
 101108c:	e037883a 	mov	sp,fp
 1011090:	dfc00117 	ldw	ra,4(sp)
 1011094:	df000017 	ldw	fp,0(sp)
 1011098:	dec00204 	addi	sp,sp,8
 101109c:	f800283a 	ret

010110a0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 10110a0:	defffd04 	addi	sp,sp,-12
 10110a4:	dfc00215 	stw	ra,8(sp)
 10110a8:	df000115 	stw	fp,4(sp)
 10110ac:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 10110b0:	00804074 	movhi	r2,257
 10110b4:	10916104 	addi	r2,r2,17796
 10110b8:	10800017 	ldw	r2,0(r2)
 10110bc:	1005003a 	cmpeq	r2,r2,zero
 10110c0:	1000061e 	bne	r2,zero,10110dc <alt_get_errno+0x3c>
 10110c4:	00804074 	movhi	r2,257
 10110c8:	10916104 	addi	r2,r2,17796
 10110cc:	10800017 	ldw	r2,0(r2)
 10110d0:	103ee83a 	callr	r2
 10110d4:	e0bfff15 	stw	r2,-4(fp)
 10110d8:	00000306 	br	10110e8 <alt_get_errno+0x48>
 10110dc:	00804074 	movhi	r2,257
 10110e0:	10942904 	addi	r2,r2,20644
 10110e4:	e0bfff15 	stw	r2,-4(fp)
 10110e8:	e0bfff17 	ldw	r2,-4(fp)
}
 10110ec:	e037883a 	mov	sp,fp
 10110f0:	dfc00117 	ldw	ra,4(sp)
 10110f4:	df000017 	ldw	fp,0(sp)
 10110f8:	dec00204 	addi	sp,sp,8
 10110fc:	f800283a 	ret

01011100 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 1011100:	defffe04 	addi	sp,sp,-8
 1011104:	dfc00115 	stw	ra,4(sp)
 1011108:	df000015 	stw	fp,0(sp)
 101110c:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 1011110:	01004074 	movhi	r4,257
 1011114:	21117804 	addi	r4,r4,17888
 1011118:	01404074 	movhi	r5,257
 101111c:	294ec704 	addi	r5,r5,15132
 1011120:	01804074 	movhi	r6,257
 1011124:	31917804 	addi	r6,r6,17888
 1011128:	10111800 	call	1011180 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 101112c:	01004034 	movhi	r4,256
 1011130:	21000004 	addi	r4,r4,0
 1011134:	01400034 	movhi	r5,0
 1011138:	29400804 	addi	r5,r5,32
 101113c:	01800034 	movhi	r6,0
 1011140:	31806d04 	addi	r6,r6,436
 1011144:	10111800 	call	1011180 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 1011148:	01004074 	movhi	r4,257
 101114c:	210ca804 	addi	r4,r4,12960
 1011150:	01404074 	movhi	r5,257
 1011154:	294ca804 	addi	r5,r5,12960
 1011158:	01804074 	movhi	r6,257
 101115c:	318ec704 	addi	r6,r6,15132
 1011160:	10111800 	call	1011180 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 1011164:	10127440 	call	1012744 <alt_dcache_flush_all>
  alt_icache_flush_all();
 1011168:	1012b880 	call	1012b88 <alt_icache_flush_all>
}
 101116c:	e037883a 	mov	sp,fp
 1011170:	dfc00117 	ldw	ra,4(sp)
 1011174:	df000017 	ldw	fp,0(sp)
 1011178:	dec00204 	addi	sp,sp,8
 101117c:	f800283a 	ret

01011180 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 1011180:	defffc04 	addi	sp,sp,-16
 1011184:	df000315 	stw	fp,12(sp)
 1011188:	df000304 	addi	fp,sp,12
 101118c:	e13ffd15 	stw	r4,-12(fp)
 1011190:	e17ffe15 	stw	r5,-8(fp)
 1011194:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 1011198:	e0fffe17 	ldw	r3,-8(fp)
 101119c:	e0bffd17 	ldw	r2,-12(fp)
 10111a0:	18800e26 	beq	r3,r2,10111dc <alt_load_section+0x5c>
  {
    while( to != end )
 10111a4:	00000a06 	br	10111d0 <alt_load_section+0x50>
    {
      *to++ = *from++;
 10111a8:	e0bffd17 	ldw	r2,-12(fp)
 10111ac:	10c00017 	ldw	r3,0(r2)
 10111b0:	e0bffe17 	ldw	r2,-8(fp)
 10111b4:	10c00015 	stw	r3,0(r2)
 10111b8:	e0bffe17 	ldw	r2,-8(fp)
 10111bc:	10800104 	addi	r2,r2,4
 10111c0:	e0bffe15 	stw	r2,-8(fp)
 10111c4:	e0bffd17 	ldw	r2,-12(fp)
 10111c8:	10800104 	addi	r2,r2,4
 10111cc:	e0bffd15 	stw	r2,-12(fp)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 10111d0:	e0fffe17 	ldw	r3,-8(fp)
 10111d4:	e0bfff17 	ldw	r2,-4(fp)
 10111d8:	18bff31e 	bne	r3,r2,10111a8 <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
 10111dc:	e037883a 	mov	sp,fp
 10111e0:	df000017 	ldw	fp,0(sp)
 10111e4:	dec00104 	addi	sp,sp,4
 10111e8:	f800283a 	ret

010111ec <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 10111ec:	defff804 	addi	sp,sp,-32
 10111f0:	dfc00715 	stw	ra,28(sp)
 10111f4:	df000615 	stw	fp,24(sp)
 10111f8:	df000604 	addi	fp,sp,24
 10111fc:	e13ffc15 	stw	r4,-16(fp)
 1011200:	e17ffd15 	stw	r5,-12(fp)
 1011204:	e1bffe15 	stw	r6,-8(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 1011208:	e03ffa15 	stw	zero,-24(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 101120c:	e0bffc17 	ldw	r2,-16(fp)
 1011210:	1004803a 	cmplt	r2,r2,zero
 1011214:	1000091e 	bne	r2,zero,101123c <lseek+0x50>
 1011218:	e13ffc17 	ldw	r4,-16(fp)
 101121c:	01400304 	movi	r5,12
 1011220:	10010a40 	call	10010a4 <__mulsi3>
 1011224:	1007883a 	mov	r3,r2
 1011228:	00804074 	movhi	r2,257
 101122c:	1090e004 	addi	r2,r2,17280
 1011230:	1887883a 	add	r3,r3,r2
 1011234:	e0ffff15 	stw	r3,-4(fp)
 1011238:	00000106 	br	1011240 <lseek+0x54>
 101123c:	e03fff15 	stw	zero,-4(fp)
 1011240:	e0bfff17 	ldw	r2,-4(fp)
 1011244:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd) 
 1011248:	e0bffb17 	ldw	r2,-20(fp)
 101124c:	1005003a 	cmpeq	r2,r2,zero
 1011250:	1000111e 	bne	r2,zero,1011298 <lseek+0xac>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 1011254:	e0bffb17 	ldw	r2,-20(fp)
 1011258:	10800017 	ldw	r2,0(r2)
 101125c:	10800717 	ldw	r2,28(r2)
 1011260:	1005003a 	cmpeq	r2,r2,zero
 1011264:	1000091e 	bne	r2,zero,101128c <lseek+0xa0>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 1011268:	e0bffb17 	ldw	r2,-20(fp)
 101126c:	10800017 	ldw	r2,0(r2)
 1011270:	10800717 	ldw	r2,28(r2)
 1011274:	e13ffb17 	ldw	r4,-20(fp)
 1011278:	e17ffd17 	ldw	r5,-12(fp)
 101127c:	e1bffe17 	ldw	r6,-8(fp)
 1011280:	103ee83a 	callr	r2
 1011284:	e0bffa15 	stw	r2,-24(fp)
 1011288:	00000506 	br	10112a0 <lseek+0xb4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 101128c:	00bfde84 	movi	r2,-134
 1011290:	e0bffa15 	stw	r2,-24(fp)
 1011294:	00000206 	br	10112a0 <lseek+0xb4>
    }
  }
  else  
  {
    rc = -EBADFD;
 1011298:	00bfebc4 	movi	r2,-81
 101129c:	e0bffa15 	stw	r2,-24(fp)
  }

  if (rc < 0)
 10112a0:	e0bffa17 	ldw	r2,-24(fp)
 10112a4:	1004403a 	cmpge	r2,r2,zero
 10112a8:	1000071e 	bne	r2,zero,10112c8 <lseek+0xdc>
  {
    ALT_ERRNO = -rc;
 10112ac:	10112e00 	call	10112e0 <alt_get_errno>
 10112b0:	1007883a 	mov	r3,r2
 10112b4:	e0bffa17 	ldw	r2,-24(fp)
 10112b8:	0085c83a 	sub	r2,zero,r2
 10112bc:	18800015 	stw	r2,0(r3)
    rc = -1;
 10112c0:	00bfffc4 	movi	r2,-1
 10112c4:	e0bffa15 	stw	r2,-24(fp)
  }

  return rc;
 10112c8:	e0bffa17 	ldw	r2,-24(fp)
}
 10112cc:	e037883a 	mov	sp,fp
 10112d0:	dfc00117 	ldw	ra,4(sp)
 10112d4:	df000017 	ldw	fp,0(sp)
 10112d8:	dec00204 	addi	sp,sp,8
 10112dc:	f800283a 	ret

010112e0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 10112e0:	defffd04 	addi	sp,sp,-12
 10112e4:	dfc00215 	stw	ra,8(sp)
 10112e8:	df000115 	stw	fp,4(sp)
 10112ec:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 10112f0:	00804074 	movhi	r2,257
 10112f4:	10916104 	addi	r2,r2,17796
 10112f8:	10800017 	ldw	r2,0(r2)
 10112fc:	1005003a 	cmpeq	r2,r2,zero
 1011300:	1000061e 	bne	r2,zero,101131c <alt_get_errno+0x3c>
 1011304:	00804074 	movhi	r2,257
 1011308:	10916104 	addi	r2,r2,17796
 101130c:	10800017 	ldw	r2,0(r2)
 1011310:	103ee83a 	callr	r2
 1011314:	e0bfff15 	stw	r2,-4(fp)
 1011318:	00000306 	br	1011328 <alt_get_errno+0x48>
 101131c:	00804074 	movhi	r2,257
 1011320:	10942904 	addi	r2,r2,20644
 1011324:	e0bfff15 	stw	r2,-4(fp)
 1011328:	e0bfff17 	ldw	r2,-4(fp)
}
 101132c:	e037883a 	mov	sp,fp
 1011330:	dfc00117 	ldw	ra,4(sp)
 1011334:	df000017 	ldw	fp,0(sp)
 1011338:	dec00204 	addi	sp,sp,8
 101133c:	f800283a 	ret

01011340 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 1011340:	defffd04 	addi	sp,sp,-12
 1011344:	dfc00215 	stw	ra,8(sp)
 1011348:	df000115 	stw	fp,4(sp)
 101134c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 1011350:	0009883a 	mov	r4,zero
 1011354:	1011afc0 	call	1011afc <alt_irq_init>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 1011358:	1011b300 	call	1011b30 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 101135c:	01004074 	movhi	r4,257
 1011360:	210ebc04 	addi	r4,r4,15088
 1011364:	01404074 	movhi	r5,257
 1011368:	294ebc04 	addi	r5,r5,15088
 101136c:	01804074 	movhi	r6,257
 1011370:	318ebc04 	addi	r6,r6,15088
 1011374:	1012f5c0 	call	1012f5c <alt_io_redirect>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 1011378:	d122db17 	ldw	r4,-29844(gp)
 101137c:	d162dc17 	ldw	r5,-29840(gp)
 1011380:	d1a2dd17 	ldw	r6,-29836(gp)
 1011384:	1000ed00 	call	1000ed0 <main>
 1011388:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 101138c:	01000044 	movi	r4,1
 1011390:	1010cb80 	call	1010cb8 <close>
  exit (result);
 1011394:	e13fff17 	ldw	r4,-4(fp)
 1011398:	10011c00 	call	10011c0 <exit>

0101139c <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 101139c:	defffe04 	addi	sp,sp,-8
 10113a0:	df000115 	stw	fp,4(sp)
 10113a4:	df000104 	addi	fp,sp,4
 10113a8:	e13fff15 	stw	r4,-4(fp)
}
 10113ac:	e037883a 	mov	sp,fp
 10113b0:	df000017 	ldw	fp,0(sp)
 10113b4:	dec00104 	addi	sp,sp,4
 10113b8:	f800283a 	ret

010113bc <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 10113bc:	defffe04 	addi	sp,sp,-8
 10113c0:	df000115 	stw	fp,4(sp)
 10113c4:	df000104 	addi	fp,sp,4
 10113c8:	e13fff15 	stw	r4,-4(fp)
}
 10113cc:	e037883a 	mov	sp,fp
 10113d0:	df000017 	ldw	fp,0(sp)
 10113d4:	dec00104 	addi	sp,sp,4
 10113d8:	f800283a 	ret

010113dc <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 10113dc:	defffa04 	addi	sp,sp,-24
 10113e0:	dfc00515 	stw	ra,20(sp)
 10113e4:	df000415 	stw	fp,16(sp)
 10113e8:	dc000315 	stw	r16,12(sp)
 10113ec:	df000304 	addi	fp,sp,12
 10113f0:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 10113f4:	e0bffe17 	ldw	r2,-8(fp)
 10113f8:	10800217 	ldw	r2,8(r2)
 10113fc:	10d00034 	orhi	r3,r2,16384
 1011400:	e0bffe17 	ldw	r2,-8(fp)
 1011404:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 1011408:	e03ffd15 	stw	zero,-12(fp)
 101140c:	00002306 	br	101149c <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 1011410:	e13ffd17 	ldw	r4,-12(fp)
 1011414:	04004074 	movhi	r16,257
 1011418:	8410e004 	addi	r16,r16,17280
 101141c:	01400304 	movi	r5,12
 1011420:	10010a40 	call	10010a4 <__mulsi3>
 1011424:	1405883a 	add	r2,r2,r16
 1011428:	10c00017 	ldw	r3,0(r2)
 101142c:	e0bffe17 	ldw	r2,-8(fp)
 1011430:	10800017 	ldw	r2,0(r2)
 1011434:	1880161e 	bne	r3,r2,1011490 <alt_file_locked+0xb4>
 1011438:	e13ffd17 	ldw	r4,-12(fp)
 101143c:	04004074 	movhi	r16,257
 1011440:	8410e004 	addi	r16,r16,17280
 1011444:	01400304 	movi	r5,12
 1011448:	10010a40 	call	10010a4 <__mulsi3>
 101144c:	1405883a 	add	r2,r2,r16
 1011450:	10800204 	addi	r2,r2,8
 1011454:	10800017 	ldw	r2,0(r2)
 1011458:	1004403a 	cmpge	r2,r2,zero
 101145c:	10000c1e 	bne	r2,zero,1011490 <alt_file_locked+0xb4>
 1011460:	e13ffd17 	ldw	r4,-12(fp)
 1011464:	01400304 	movi	r5,12
 1011468:	10010a40 	call	10010a4 <__mulsi3>
 101146c:	1007883a 	mov	r3,r2
 1011470:	00804074 	movhi	r2,257
 1011474:	1090e004 	addi	r2,r2,17280
 1011478:	1887883a 	add	r3,r3,r2
 101147c:	e0bffe17 	ldw	r2,-8(fp)
 1011480:	18800326 	beq	r3,r2,1011490 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 1011484:	00bffcc4 	movi	r2,-13
 1011488:	e0bfff15 	stw	r2,-4(fp)
 101148c:	00000a06 	br	10114b8 <alt_file_locked+0xdc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 1011490:	e0bffd17 	ldw	r2,-12(fp)
 1011494:	10800044 	addi	r2,r2,1
 1011498:	e0bffd15 	stw	r2,-12(fp)
 101149c:	00804074 	movhi	r2,257
 10114a0:	10916004 	addi	r2,r2,17792
 10114a4:	10800017 	ldw	r2,0(r2)
 10114a8:	1007883a 	mov	r3,r2
 10114ac:	e0bffd17 	ldw	r2,-12(fp)
 10114b0:	18bfd72e 	bgeu	r3,r2,1011410 <alt_file_locked+0x34>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 10114b4:	e03fff15 	stw	zero,-4(fp)
 10114b8:	e0bfff17 	ldw	r2,-4(fp)
}
 10114bc:	e037883a 	mov	sp,fp
 10114c0:	dfc00217 	ldw	ra,8(sp)
 10114c4:	df000117 	ldw	fp,4(sp)
 10114c8:	dc000017 	ldw	r16,0(sp)
 10114cc:	dec00304 	addi	sp,sp,12
 10114d0:	f800283a 	ret

010114d4 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 10114d4:	defff404 	addi	sp,sp,-48
 10114d8:	dfc00b15 	stw	ra,44(sp)
 10114dc:	df000a15 	stw	fp,40(sp)
 10114e0:	df000a04 	addi	fp,sp,40
 10114e4:	e13ffb15 	stw	r4,-20(fp)
 10114e8:	e17ffc15 	stw	r5,-16(fp)
 10114ec:	e1bffd15 	stw	r6,-12(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 10114f0:	00bfffc4 	movi	r2,-1
 10114f4:	e0bff815 	stw	r2,-32(fp)
  int status = -ENODEV;
 10114f8:	00bffb44 	movi	r2,-19
 10114fc:	e0bff715 	stw	r2,-36(fp)
  int isafs = 0;
 1011500:	e03ff615 	stw	zero,-40(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 1011504:	e13ffb17 	ldw	r4,-20(fp)
 1011508:	01404074 	movhi	r5,257
 101150c:	29515e04 	addi	r5,r5,17784
 1011510:	10128740 	call	1012874 <alt_find_dev>
 1011514:	e0bffa15 	stw	r2,-24(fp)
 1011518:	e0bffa17 	ldw	r2,-24(fp)
 101151c:	1004c03a 	cmpne	r2,r2,zero
 1011520:	1000051e 	bne	r2,zero,1011538 <open+0x64>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 1011524:	e13ffb17 	ldw	r4,-20(fp)
 1011528:	10129080 	call	1012908 <alt_find_file>
 101152c:	e0bffa15 	stw	r2,-24(fp)
    isafs = 1;
 1011530:	00800044 	movi	r2,1
 1011534:	e0bff615 	stw	r2,-40(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 1011538:	e0bffa17 	ldw	r2,-24(fp)
 101153c:	1005003a 	cmpeq	r2,r2,zero
 1011540:	1000311e 	bne	r2,zero,1011608 <open+0x134>
  {
    if ((index = alt_get_fd (dev)) < 0)
 1011544:	e13ffa17 	ldw	r4,-24(fp)
 1011548:	1012ab80 	call	1012ab8 <alt_get_fd>
 101154c:	e0bff815 	stw	r2,-32(fp)
 1011550:	e0bff817 	ldw	r2,-32(fp)
 1011554:	1004403a 	cmpge	r2,r2,zero
 1011558:	1000031e 	bne	r2,zero,1011568 <open+0x94>
    {
      status = index;
 101155c:	e0bff817 	ldw	r2,-32(fp)
 1011560:	e0bff715 	stw	r2,-36(fp)
 1011564:	00002a06 	br	1011610 <open+0x13c>
    }
    else
    {
      fd = &alt_fd_list[index];
 1011568:	e13ff817 	ldw	r4,-32(fp)
 101156c:	01400304 	movi	r5,12
 1011570:	10010a40 	call	10010a4 <__mulsi3>
 1011574:	1007883a 	mov	r3,r2
 1011578:	00804074 	movhi	r2,257
 101157c:	1090e004 	addi	r2,r2,17280
 1011580:	1885883a 	add	r2,r3,r2
 1011584:	e0bff915 	stw	r2,-28(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 1011588:	e0fffc17 	ldw	r3,-16(fp)
 101158c:	00900034 	movhi	r2,16384
 1011590:	10bfffc4 	addi	r2,r2,-1
 1011594:	1886703a 	and	r3,r3,r2
 1011598:	e0bff917 	ldw	r2,-28(fp)
 101159c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 10115a0:	e0bff617 	ldw	r2,-40(fp)
 10115a4:	1004c03a 	cmpne	r2,r2,zero
 10115a8:	1000061e 	bne	r2,zero,10115c4 <open+0xf0>
 10115ac:	e13ff917 	ldw	r4,-28(fp)
 10115b0:	10113dc0 	call	10113dc <alt_file_locked>
 10115b4:	e0bff715 	stw	r2,-36(fp)
 10115b8:	e0bff717 	ldw	r2,-36(fp)
 10115bc:	1004803a 	cmplt	r2,r2,zero
 10115c0:	1000131e 	bne	r2,zero,1011610 <open+0x13c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 10115c4:	e0bffa17 	ldw	r2,-24(fp)
 10115c8:	10800317 	ldw	r2,12(r2)
 10115cc:	1005003a 	cmpeq	r2,r2,zero
 10115d0:	1000091e 	bne	r2,zero,10115f8 <open+0x124>
 10115d4:	e0bffa17 	ldw	r2,-24(fp)
 10115d8:	10800317 	ldw	r2,12(r2)
 10115dc:	e13ff917 	ldw	r4,-28(fp)
 10115e0:	e17ffb17 	ldw	r5,-20(fp)
 10115e4:	e1bffc17 	ldw	r6,-16(fp)
 10115e8:	e1fffd17 	ldw	r7,-12(fp)
 10115ec:	103ee83a 	callr	r2
 10115f0:	e0bfff15 	stw	r2,-4(fp)
 10115f4:	00000106 	br	10115fc <open+0x128>
 10115f8:	e03fff15 	stw	zero,-4(fp)
 10115fc:	e0bfff17 	ldw	r2,-4(fp)
 1011600:	e0bff715 	stw	r2,-36(fp)
 1011604:	00000206 	br	1011610 <open+0x13c>
      }
    }
  }
  else
  {
    status = -ENODEV;
 1011608:	00bffb44 	movi	r2,-19
 101160c:	e0bff715 	stw	r2,-36(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 1011610:	e0bff717 	ldw	r2,-36(fp)
 1011614:	1004403a 	cmpge	r2,r2,zero
 1011618:	1000091e 	bne	r2,zero,1011640 <open+0x16c>
  {
    alt_release_fd (index);  
 101161c:	e13ff817 	ldw	r4,-32(fp)
 1011620:	10118440 	call	1011844 <alt_release_fd>
    ALT_ERRNO = -status;
 1011624:	10116600 	call	1011660 <alt_get_errno>
 1011628:	e0fff717 	ldw	r3,-36(fp)
 101162c:	00c7c83a 	sub	r3,zero,r3
 1011630:	10c00015 	stw	r3,0(r2)
    return -1;
 1011634:	00bfffc4 	movi	r2,-1
 1011638:	e0bffe15 	stw	r2,-8(fp)
 101163c:	00000206 	br	1011648 <open+0x174>
  }
  
  /* return the reference upon success */

  return index;
 1011640:	e0bff817 	ldw	r2,-32(fp)
 1011644:	e0bffe15 	stw	r2,-8(fp)
 1011648:	e0bffe17 	ldw	r2,-8(fp)
}
 101164c:	e037883a 	mov	sp,fp
 1011650:	dfc00117 	ldw	ra,4(sp)
 1011654:	df000017 	ldw	fp,0(sp)
 1011658:	dec00204 	addi	sp,sp,8
 101165c:	f800283a 	ret

01011660 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 1011660:	defffd04 	addi	sp,sp,-12
 1011664:	dfc00215 	stw	ra,8(sp)
 1011668:	df000115 	stw	fp,4(sp)
 101166c:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 1011670:	00804074 	movhi	r2,257
 1011674:	10916104 	addi	r2,r2,17796
 1011678:	10800017 	ldw	r2,0(r2)
 101167c:	1005003a 	cmpeq	r2,r2,zero
 1011680:	1000061e 	bne	r2,zero,101169c <alt_get_errno+0x3c>
 1011684:	00804074 	movhi	r2,257
 1011688:	10916104 	addi	r2,r2,17796
 101168c:	10800017 	ldw	r2,0(r2)
 1011690:	103ee83a 	callr	r2
 1011694:	e0bfff15 	stw	r2,-4(fp)
 1011698:	00000306 	br	10116a8 <alt_get_errno+0x48>
 101169c:	00804074 	movhi	r2,257
 10116a0:	10942904 	addi	r2,r2,20644
 10116a4:	e0bfff15 	stw	r2,-4(fp)
 10116a8:	e0bfff17 	ldw	r2,-4(fp)
}
 10116ac:	e037883a 	mov	sp,fp
 10116b0:	dfc00117 	ldw	ra,4(sp)
 10116b4:	df000017 	ldw	fp,0(sp)
 10116b8:	dec00204 	addi	sp,sp,8
 10116bc:	f800283a 	ret

010116c0 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 10116c0:	defff704 	addi	sp,sp,-36
 10116c4:	dfc00815 	stw	ra,32(sp)
 10116c8:	df000715 	stw	fp,28(sp)
 10116cc:	df000704 	addi	fp,sp,28
 10116d0:	e13ffb15 	stw	r4,-20(fp)
 10116d4:	e17ffc15 	stw	r5,-16(fp)
 10116d8:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 10116dc:	e0bffb17 	ldw	r2,-20(fp)
 10116e0:	1004803a 	cmplt	r2,r2,zero
 10116e4:	1000091e 	bne	r2,zero,101170c <read+0x4c>
 10116e8:	e13ffb17 	ldw	r4,-20(fp)
 10116ec:	01400304 	movi	r5,12
 10116f0:	10010a40 	call	10010a4 <__mulsi3>
 10116f4:	1007883a 	mov	r3,r2
 10116f8:	00804074 	movhi	r2,257
 10116fc:	1090e004 	addi	r2,r2,17280
 1011700:	1887883a 	add	r3,r3,r2
 1011704:	e0ffff15 	stw	r3,-4(fp)
 1011708:	00000106 	br	1011710 <read+0x50>
 101170c:	e03fff15 	stw	zero,-4(fp)
 1011710:	e0bfff17 	ldw	r2,-4(fp)
 1011714:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
 1011718:	e0bffa17 	ldw	r2,-24(fp)
 101171c:	1005003a 	cmpeq	r2,r2,zero
 1011720:	1000241e 	bne	r2,zero,10117b4 <read+0xf4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 1011724:	e0bffa17 	ldw	r2,-24(fp)
 1011728:	10800217 	ldw	r2,8(r2)
 101172c:	108000cc 	andi	r2,r2,3
 1011730:	10800060 	cmpeqi	r2,r2,1
 1011734:	10001a1e 	bne	r2,zero,10117a0 <read+0xe0>
 1011738:	e0bffa17 	ldw	r2,-24(fp)
 101173c:	10800017 	ldw	r2,0(r2)
 1011740:	10800517 	ldw	r2,20(r2)
 1011744:	1005003a 	cmpeq	r2,r2,zero
 1011748:	1000151e 	bne	r2,zero,10117a0 <read+0xe0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 101174c:	e0bffa17 	ldw	r2,-24(fp)
 1011750:	10800017 	ldw	r2,0(r2)
 1011754:	10800517 	ldw	r2,20(r2)
 1011758:	e17ffc17 	ldw	r5,-16(fp)
 101175c:	e1bffd17 	ldw	r6,-12(fp)
 1011760:	e13ffa17 	ldw	r4,-24(fp)
 1011764:	103ee83a 	callr	r2
 1011768:	e0bff915 	stw	r2,-28(fp)
 101176c:	e0bff917 	ldw	r2,-28(fp)
 1011770:	1004403a 	cmpge	r2,r2,zero
 1011774:	1000071e 	bne	r2,zero,1011794 <read+0xd4>
        {
          ALT_ERRNO = -rval;
 1011778:	10117e40 	call	10117e4 <alt_get_errno>
 101177c:	e0fff917 	ldw	r3,-28(fp)
 1011780:	00c7c83a 	sub	r3,zero,r3
 1011784:	10c00015 	stw	r3,0(r2)
          return -1;
 1011788:	00bfffc4 	movi	r2,-1
 101178c:	e0bffe15 	stw	r2,-8(fp)
 1011790:	00000e06 	br	10117cc <read+0x10c>
        }
        return rval;
 1011794:	e0bff917 	ldw	r2,-28(fp)
 1011798:	e0bffe15 	stw	r2,-8(fp)
 101179c:	00000b06 	br	10117cc <read+0x10c>
      }
      else
      {
        ALT_ERRNO = EACCES;
 10117a0:	10117e40 	call	10117e4 <alt_get_errno>
 10117a4:	1007883a 	mov	r3,r2
 10117a8:	00800344 	movi	r2,13
 10117ac:	18800015 	stw	r2,0(r3)
 10117b0:	00000406 	br	10117c4 <read+0x104>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 10117b4:	10117e40 	call	10117e4 <alt_get_errno>
 10117b8:	1007883a 	mov	r3,r2
 10117bc:	00801444 	movi	r2,81
 10117c0:	18800015 	stw	r2,0(r3)
  }
  return -1;
 10117c4:	00bfffc4 	movi	r2,-1
 10117c8:	e0bffe15 	stw	r2,-8(fp)
 10117cc:	e0bffe17 	ldw	r2,-8(fp)
}
 10117d0:	e037883a 	mov	sp,fp
 10117d4:	dfc00117 	ldw	ra,4(sp)
 10117d8:	df000017 	ldw	fp,0(sp)
 10117dc:	dec00204 	addi	sp,sp,8
 10117e0:	f800283a 	ret

010117e4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 10117e4:	defffd04 	addi	sp,sp,-12
 10117e8:	dfc00215 	stw	ra,8(sp)
 10117ec:	df000115 	stw	fp,4(sp)
 10117f0:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 10117f4:	00804074 	movhi	r2,257
 10117f8:	10916104 	addi	r2,r2,17796
 10117fc:	10800017 	ldw	r2,0(r2)
 1011800:	1005003a 	cmpeq	r2,r2,zero
 1011804:	1000061e 	bne	r2,zero,1011820 <alt_get_errno+0x3c>
 1011808:	00804074 	movhi	r2,257
 101180c:	10916104 	addi	r2,r2,17796
 1011810:	10800017 	ldw	r2,0(r2)
 1011814:	103ee83a 	callr	r2
 1011818:	e0bfff15 	stw	r2,-4(fp)
 101181c:	00000306 	br	101182c <alt_get_errno+0x48>
 1011820:	00804074 	movhi	r2,257
 1011824:	10942904 	addi	r2,r2,20644
 1011828:	e0bfff15 	stw	r2,-4(fp)
 101182c:	e0bfff17 	ldw	r2,-4(fp)
}
 1011830:	e037883a 	mov	sp,fp
 1011834:	dfc00117 	ldw	ra,4(sp)
 1011838:	df000017 	ldw	fp,0(sp)
 101183c:	dec00204 	addi	sp,sp,8
 1011840:	f800283a 	ret

01011844 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 1011844:	defffc04 	addi	sp,sp,-16
 1011848:	dfc00315 	stw	ra,12(sp)
 101184c:	df000215 	stw	fp,8(sp)
 1011850:	dc000115 	stw	r16,4(sp)
 1011854:	df000104 	addi	fp,sp,4
 1011858:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
 101185c:	e0bfff17 	ldw	r2,-4(fp)
 1011860:	108000d0 	cmplti	r2,r2,3
 1011864:	10000f1e 	bne	r2,zero,10118a4 <alt_release_fd+0x60>
  {
    alt_fd_list[fd].fd_flags = 0;
 1011868:	e13fff17 	ldw	r4,-4(fp)
 101186c:	04004074 	movhi	r16,257
 1011870:	8410e004 	addi	r16,r16,17280
 1011874:	01400304 	movi	r5,12
 1011878:	10010a40 	call	10010a4 <__mulsi3>
 101187c:	1405883a 	add	r2,r2,r16
 1011880:	10800204 	addi	r2,r2,8
 1011884:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 1011888:	e13fff17 	ldw	r4,-4(fp)
 101188c:	04004074 	movhi	r16,257
 1011890:	8410e004 	addi	r16,r16,17280
 1011894:	01400304 	movi	r5,12
 1011898:	10010a40 	call	10010a4 <__mulsi3>
 101189c:	1405883a 	add	r2,r2,r16
 10118a0:	10000015 	stw	zero,0(r2)
  }
}
 10118a4:	e037883a 	mov	sp,fp
 10118a8:	dfc00217 	ldw	ra,8(sp)
 10118ac:	df000117 	ldw	fp,4(sp)
 10118b0:	dc000017 	ldw	r16,0(sp)
 10118b4:	dec00304 	addi	sp,sp,12
 10118b8:	f800283a 	ret

010118bc <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 10118bc:	defff804 	addi	sp,sp,-32
 10118c0:	df000715 	stw	fp,28(sp)
 10118c4:	df000704 	addi	fp,sp,28
 10118c8:	e13ffe15 	stw	r4,-8(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 10118cc:	0005303a 	rdctl	r2,status
 10118d0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 10118d4:	e0fffb17 	ldw	r3,-20(fp)
 10118d8:	00bfff84 	movi	r2,-2
 10118dc:	1884703a 	and	r2,r3,r2
 10118e0:	1001703a 	wrctl	status,r2
  
  return context;
 10118e4:	e0bffb17 	ldw	r2,-20(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 10118e8:	e0bffd15 	stw	r2,-12(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 10118ec:	d0a00d17 	ldw	r2,-32716(gp)
 10118f0:	10c000c4 	addi	r3,r2,3
 10118f4:	00bfff04 	movi	r2,-4
 10118f8:	1884703a 	and	r2,r3,r2
 10118fc:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 1011900:	d0e00d17 	ldw	r3,-32716(gp)
 1011904:	e0bffe17 	ldw	r2,-8(fp)
 1011908:	1887883a 	add	r3,r3,r2
 101190c:	00806034 	movhi	r2,384
 1011910:	10800004 	addi	r2,r2,0
 1011914:	10c0072e 	bgeu	r2,r3,1011934 <sbrk+0x78>
 1011918:	e0bffd17 	ldw	r2,-12(fp)
 101191c:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 1011920:	e0bffa17 	ldw	r2,-24(fp)
 1011924:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 1011928:	00bfffc4 	movi	r2,-1
 101192c:	e0bfff15 	stw	r2,-4(fp)
 1011930:	00000c06 	br	1011964 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
 1011934:	d0a00d17 	ldw	r2,-32716(gp)
 1011938:	e0bffc15 	stw	r2,-16(fp)
  heap_end += incr; 
 101193c:	d0e00d17 	ldw	r3,-32716(gp)
 1011940:	e0bffe17 	ldw	r2,-8(fp)
 1011944:	1885883a 	add	r2,r3,r2
 1011948:	d0a00d15 	stw	r2,-32716(gp)
 101194c:	e0bffd17 	ldw	r2,-12(fp)
 1011950:	e0bff915 	stw	r2,-28(fp)
 1011954:	e0bff917 	ldw	r2,-28(fp)
 1011958:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 101195c:	e0bffc17 	ldw	r2,-16(fp)
 1011960:	e0bfff15 	stw	r2,-4(fp)
 1011964:	e0bfff17 	ldw	r2,-4(fp)
} 
 1011968:	e037883a 	mov	sp,fp
 101196c:	df000017 	ldw	fp,0(sp)
 1011970:	dec00104 	addi	sp,sp,4
 1011974:	f800283a 	ret

01011978 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 1011978:	defff704 	addi	sp,sp,-36
 101197c:	dfc00815 	stw	ra,32(sp)
 1011980:	df000715 	stw	fp,28(sp)
 1011984:	df000704 	addi	fp,sp,28
 1011988:	e13ffb15 	stw	r4,-20(fp)
 101198c:	e17ffc15 	stw	r5,-16(fp)
 1011990:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 1011994:	e0bffb17 	ldw	r2,-20(fp)
 1011998:	1004803a 	cmplt	r2,r2,zero
 101199c:	1000091e 	bne	r2,zero,10119c4 <write+0x4c>
 10119a0:	e13ffb17 	ldw	r4,-20(fp)
 10119a4:	01400304 	movi	r5,12
 10119a8:	10010a40 	call	10010a4 <__mulsi3>
 10119ac:	1007883a 	mov	r3,r2
 10119b0:	00804074 	movhi	r2,257
 10119b4:	1090e004 	addi	r2,r2,17280
 10119b8:	1887883a 	add	r3,r3,r2
 10119bc:	e0ffff15 	stw	r3,-4(fp)
 10119c0:	00000106 	br	10119c8 <write+0x50>
 10119c4:	e03fff15 	stw	zero,-4(fp)
 10119c8:	e0bfff17 	ldw	r2,-4(fp)
 10119cc:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
 10119d0:	e0bffa17 	ldw	r2,-24(fp)
 10119d4:	1005003a 	cmpeq	r2,r2,zero
 10119d8:	1000241e 	bne	r2,zero,1011a6c <write+0xf4>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 10119dc:	e0bffa17 	ldw	r2,-24(fp)
 10119e0:	10800217 	ldw	r2,8(r2)
 10119e4:	108000cc 	andi	r2,r2,3
 10119e8:	1005003a 	cmpeq	r2,r2,zero
 10119ec:	10001a1e 	bne	r2,zero,1011a58 <write+0xe0>
 10119f0:	e0bffa17 	ldw	r2,-24(fp)
 10119f4:	10800017 	ldw	r2,0(r2)
 10119f8:	10800617 	ldw	r2,24(r2)
 10119fc:	1005003a 	cmpeq	r2,r2,zero
 1011a00:	1000151e 	bne	r2,zero,1011a58 <write+0xe0>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 1011a04:	e0bffa17 	ldw	r2,-24(fp)
 1011a08:	10800017 	ldw	r2,0(r2)
 1011a0c:	10800617 	ldw	r2,24(r2)
 1011a10:	e17ffc17 	ldw	r5,-16(fp)
 1011a14:	e1bffd17 	ldw	r6,-12(fp)
 1011a18:	e13ffa17 	ldw	r4,-24(fp)
 1011a1c:	103ee83a 	callr	r2
 1011a20:	e0bff915 	stw	r2,-28(fp)
 1011a24:	e0bff917 	ldw	r2,-28(fp)
 1011a28:	1004403a 	cmpge	r2,r2,zero
 1011a2c:	1000071e 	bne	r2,zero,1011a4c <write+0xd4>
      {
        ALT_ERRNO = -rval;
 1011a30:	1011a9c0 	call	1011a9c <alt_get_errno>
 1011a34:	e0fff917 	ldw	r3,-28(fp)
 1011a38:	00c7c83a 	sub	r3,zero,r3
 1011a3c:	10c00015 	stw	r3,0(r2)
        return -1;
 1011a40:	00bfffc4 	movi	r2,-1
 1011a44:	e0bffe15 	stw	r2,-8(fp)
 1011a48:	00000e06 	br	1011a84 <write+0x10c>
      }
      return rval;
 1011a4c:	e0bff917 	ldw	r2,-28(fp)
 1011a50:	e0bffe15 	stw	r2,-8(fp)
 1011a54:	00000b06 	br	1011a84 <write+0x10c>
    }
    else
    {
      ALT_ERRNO = EACCES;
 1011a58:	1011a9c0 	call	1011a9c <alt_get_errno>
 1011a5c:	1007883a 	mov	r3,r2
 1011a60:	00800344 	movi	r2,13
 1011a64:	18800015 	stw	r2,0(r3)
 1011a68:	00000406 	br	1011a7c <write+0x104>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 1011a6c:	1011a9c0 	call	1011a9c <alt_get_errno>
 1011a70:	1007883a 	mov	r3,r2
 1011a74:	00801444 	movi	r2,81
 1011a78:	18800015 	stw	r2,0(r3)
  }
  return -1;
 1011a7c:	00bfffc4 	movi	r2,-1
 1011a80:	e0bffe15 	stw	r2,-8(fp)
 1011a84:	e0bffe17 	ldw	r2,-8(fp)
}
 1011a88:	e037883a 	mov	sp,fp
 1011a8c:	dfc00117 	ldw	ra,4(sp)
 1011a90:	df000017 	ldw	fp,0(sp)
 1011a94:	dec00204 	addi	sp,sp,8
 1011a98:	f800283a 	ret

01011a9c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 1011a9c:	defffd04 	addi	sp,sp,-12
 1011aa0:	dfc00215 	stw	ra,8(sp)
 1011aa4:	df000115 	stw	fp,4(sp)
 1011aa8:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 1011aac:	00804074 	movhi	r2,257
 1011ab0:	10916104 	addi	r2,r2,17796
 1011ab4:	10800017 	ldw	r2,0(r2)
 1011ab8:	1005003a 	cmpeq	r2,r2,zero
 1011abc:	1000061e 	bne	r2,zero,1011ad8 <alt_get_errno+0x3c>
 1011ac0:	00804074 	movhi	r2,257
 1011ac4:	10916104 	addi	r2,r2,17796
 1011ac8:	10800017 	ldw	r2,0(r2)
 1011acc:	103ee83a 	callr	r2
 1011ad0:	e0bfff15 	stw	r2,-4(fp)
 1011ad4:	00000306 	br	1011ae4 <alt_get_errno+0x48>
 1011ad8:	00804074 	movhi	r2,257
 1011adc:	10942904 	addi	r2,r2,20644
 1011ae0:	e0bfff15 	stw	r2,-4(fp)
 1011ae4:	e0bfff17 	ldw	r2,-4(fp)
}
 1011ae8:	e037883a 	mov	sp,fp
 1011aec:	dfc00117 	ldw	ra,4(sp)
 1011af0:	df000017 	ldw	fp,0(sp)
 1011af4:	dec00204 	addi	sp,sp,8
 1011af8:	f800283a 	ret

01011afc <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 1011afc:	defffd04 	addi	sp,sp,-12
 1011b00:	dfc00215 	stw	ra,8(sp)
 1011b04:	df000115 	stw	fp,4(sp)
 1011b08:	df000104 	addi	fp,sp,4
 1011b0c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( CPU, cpu);
 1011b10:	10131780 	call	1013178 <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts ()
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 1011b14:	00800044 	movi	r2,1
 1011b18:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 1011b1c:	e037883a 	mov	sp,fp
 1011b20:	dfc00117 	ldw	ra,4(sp)
 1011b24:	df000017 	ldw	fp,0(sp)
 1011b28:	dec00204 	addi	sp,sp,8
 1011b2c:	f800283a 	ret

01011b30 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 1011b30:	defffe04 	addi	sp,sp,-8
 1011b34:	dfc00115 	stw	ra,4(sp)
 1011b38:	df000015 	stw	fp,0(sp)
 1011b3c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( SYS_CLK_TIMER, sys_clk_timer);
 1011b40:	01241014 	movui	r4,36928
 1011b44:	000b883a 	mov	r5,zero
 1011b48:	01800044 	movi	r6,1
 1011b4c:	01c0fa04 	movi	r7,1000
 1011b50:	1011ea40 	call	1011ea4 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( TIMESTAMP, timestamp);
 1011b54:	00c04074 	movhi	r3,257
 1011b58:	18d43304 	addi	r3,r3,20684
 1011b5c:	00a40014 	movui	r2,36864
 1011b60:	18800015 	stw	r2,0(r3)
 1011b64:	00c04074 	movhi	r3,257
 1011b68:	18d43404 	addi	r3,r3,20688
 1011b6c:	0080bef4 	movhi	r2,763
 1011b70:	10bc2004 	addi	r2,r2,-3968
 1011b74:	18800015 	stw	r2,0(r3)
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
 1011b78:	01004074 	movhi	r4,257
 1011b7c:	21114004 	addi	r4,r4,17664
 1011b80:	1011ba40 	call	1011ba4 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
    ALTERA_HOSTFS_INIT ( ALTERA_HOSTFS, altera_hostfs);
 1011b84:	01004074 	movhi	r4,257
 1011b88:	21114b04 	addi	r4,r4,17708
 1011b8c:	1012a280 	call	1012a28 <alt_fs_reg>
}
 1011b90:	e037883a 	mov	sp,fp
 1011b94:	dfc00117 	ldw	ra,4(sp)
 1011b98:	df000017 	ldw	fp,0(sp)
 1011b9c:	dec00204 	addi	sp,sp,8
 1011ba0:	f800283a 	ret

01011ba4 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 1011ba4:	defffd04 	addi	sp,sp,-12
 1011ba8:	dfc00215 	stw	ra,8(sp)
 1011bac:	df000115 	stw	fp,4(sp)
 1011bb0:	df000104 	addi	fp,sp,4
 1011bb4:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 1011bb8:	e13fff17 	ldw	r4,-4(fp)
 1011bbc:	01404074 	movhi	r5,257
 1011bc0:	29515e04 	addi	r5,r5,17784
 1011bc4:	10127600 	call	1012760 <alt_dev_llist_insert>
}
 1011bc8:	e037883a 	mov	sp,fp
 1011bcc:	dfc00117 	ldw	ra,4(sp)
 1011bd0:	df000017 	ldw	fp,0(sp)
 1011bd4:	dec00204 	addi	sp,sp,8
 1011bd8:	f800283a 	ret

01011bdc <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 1011bdc:	defffa04 	addi	sp,sp,-24
 1011be0:	dfc00515 	stw	ra,20(sp)
 1011be4:	df000415 	stw	fp,16(sp)
 1011be8:	df000404 	addi	fp,sp,16
 1011bec:	e13ffd15 	stw	r4,-12(fp)
 1011bf0:	e17ffe15 	stw	r5,-8(fp)
 1011bf4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 1011bf8:	e0bffd17 	ldw	r2,-12(fp)
 1011bfc:	10800017 	ldw	r2,0(r2)
 1011c00:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 1011c04:	e0bffc17 	ldw	r2,-16(fp)
 1011c08:	11000a04 	addi	r4,r2,40
 1011c0c:	e0bffd17 	ldw	r2,-12(fp)
 1011c10:	11c00217 	ldw	r7,8(r2)
 1011c14:	e17ffe17 	ldw	r5,-8(fp)
 1011c18:	e1bfff17 	ldw	r6,-4(fp)
 1011c1c:	1011c8c0 	call	1011c8c <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 1011c20:	e037883a 	mov	sp,fp
 1011c24:	dfc00117 	ldw	ra,4(sp)
 1011c28:	df000017 	ldw	fp,0(sp)
 1011c2c:	dec00204 	addi	sp,sp,8
 1011c30:	f800283a 	ret

01011c34 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 1011c34:	defffa04 	addi	sp,sp,-24
 1011c38:	dfc00515 	stw	ra,20(sp)
 1011c3c:	df000415 	stw	fp,16(sp)
 1011c40:	df000404 	addi	fp,sp,16
 1011c44:	e13ffd15 	stw	r4,-12(fp)
 1011c48:	e17ffe15 	stw	r5,-8(fp)
 1011c4c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 1011c50:	e0bffd17 	ldw	r2,-12(fp)
 1011c54:	10800017 	ldw	r2,0(r2)
 1011c58:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 1011c5c:	e0bffc17 	ldw	r2,-16(fp)
 1011c60:	11000a04 	addi	r4,r2,40
 1011c64:	e0bffd17 	ldw	r2,-12(fp)
 1011c68:	11c00217 	ldw	r7,8(r2)
 1011c6c:	e17ffe17 	ldw	r5,-8(fp)
 1011c70:	e1bfff17 	ldw	r6,-4(fp)
 1011c74:	1011d900 	call	1011d90 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 1011c78:	e037883a 	mov	sp,fp
 1011c7c:	dfc00117 	ldw	ra,4(sp)
 1011c80:	df000017 	ldw	fp,0(sp)
 1011c84:	dec00204 	addi	sp,sp,8
 1011c88:	f800283a 	ret

01011c8c <altera_avalon_jtag_uart_read>:
 */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char* buffer, int space, int flags)
{
 1011c8c:	defff604 	addi	sp,sp,-40
 1011c90:	df000915 	stw	fp,36(sp)
 1011c94:	df000904 	addi	fp,sp,36
 1011c98:	e13ffb15 	stw	r4,-20(fp)
 1011c9c:	e17ffc15 	stw	r5,-16(fp)
 1011ca0:	e1bffd15 	stw	r6,-12(fp)
 1011ca4:	e1fffe15 	stw	r7,-8(fp)
  unsigned int base = sp->base;
 1011ca8:	e0bffb17 	ldw	r2,-20(fp)
 1011cac:	10800017 	ldw	r2,0(r2)
 1011cb0:	e0bffa15 	stw	r2,-24(fp)

  char * ptr = buffer;
 1011cb4:	e0bffc17 	ldw	r2,-16(fp)
 1011cb8:	e0bff915 	stw	r2,-28(fp)
  char * end = buffer + space;
 1011cbc:	e0bffd17 	ldw	r2,-12(fp)
 1011cc0:	1007883a 	mov	r3,r2
 1011cc4:	e0bffc17 	ldw	r2,-16(fp)
 1011cc8:	10c5883a 	add	r2,r2,r3
 1011ccc:	e0bff815 	stw	r2,-32(fp)

  while (ptr < end)
 1011cd0:	00001606 	br	1011d2c <altera_avalon_jtag_uart_read+0xa0>
  {
    unsigned int data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 1011cd4:	e0bffa17 	ldw	r2,-24(fp)
 1011cd8:	10800037 	ldwio	r2,0(r2)
 1011cdc:	e0bff715 	stw	r2,-36(fp)

    if (data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK)
 1011ce0:	e0bff717 	ldw	r2,-36(fp)
 1011ce4:	10a0000c 	andi	r2,r2,32768
 1011ce8:	1005003a 	cmpeq	r2,r2,zero
 1011cec:	1000081e 	bne	r2,zero,1011d10 <altera_avalon_jtag_uart_read+0x84>
      *ptr++ = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 1011cf0:	e0bff717 	ldw	r2,-36(fp)
 1011cf4:	1007883a 	mov	r3,r2
 1011cf8:	e0bff917 	ldw	r2,-28(fp)
 1011cfc:	10c00005 	stb	r3,0(r2)
 1011d00:	e0bff917 	ldw	r2,-28(fp)
 1011d04:	10800044 	addi	r2,r2,1
 1011d08:	e0bff915 	stw	r2,-28(fp)
 1011d0c:	00000706 	br	1011d2c <altera_avalon_jtag_uart_read+0xa0>
    else if (ptr != buffer)
 1011d10:	e0fff917 	ldw	r3,-28(fp)
 1011d14:	e0bffc17 	ldw	r2,-16(fp)
 1011d18:	1880071e 	bne	r3,r2,1011d38 <altera_avalon_jtag_uart_read+0xac>
      break;
    else if(flags & O_NONBLOCK)
 1011d1c:	e0bffe17 	ldw	r2,-8(fp)
 1011d20:	1090000c 	andi	r2,r2,16384
 1011d24:	1004c03a 	cmpne	r2,r2,zero
 1011d28:	1000031e 	bne	r2,zero,1011d38 <altera_avalon_jtag_uart_read+0xac>
  unsigned int base = sp->base;

  char * ptr = buffer;
  char * end = buffer + space;

  while (ptr < end)
 1011d2c:	e0fff917 	ldw	r3,-28(fp)
 1011d30:	e0bff817 	ldw	r2,-32(fp)
 1011d34:	18bfe736 	bltu	r3,r2,1011cd4 <altera_avalon_jtag_uart_read+0x48>
    else if(flags & O_NONBLOCK)
      break;   
    
  }

  if (ptr != buffer)
 1011d38:	e0fff917 	ldw	r3,-28(fp)
 1011d3c:	e0bffc17 	ldw	r2,-16(fp)
 1011d40:	18800526 	beq	r3,r2,1011d58 <altera_avalon_jtag_uart_read+0xcc>
    return ptr - buffer;
 1011d44:	e0fff917 	ldw	r3,-28(fp)
 1011d48:	e0bffc17 	ldw	r2,-16(fp)
 1011d4c:	1887c83a 	sub	r3,r3,r2
 1011d50:	e0ffff15 	stw	r3,-4(fp)
 1011d54:	00000906 	br	1011d7c <altera_avalon_jtag_uart_read+0xf0>
  else if (flags & O_NONBLOCK)
 1011d58:	e0bffe17 	ldw	r2,-8(fp)
 1011d5c:	1090000c 	andi	r2,r2,16384
 1011d60:	1005003a 	cmpeq	r2,r2,zero
 1011d64:	1000031e 	bne	r2,zero,1011d74 <altera_avalon_jtag_uart_read+0xe8>
    return -EWOULDBLOCK;
 1011d68:	00bffd44 	movi	r2,-11
 1011d6c:	e0bfff15 	stw	r2,-4(fp)
 1011d70:	00000206 	br	1011d7c <altera_avalon_jtag_uart_read+0xf0>
  else
    return -EIO;
 1011d74:	00bffec4 	movi	r2,-5
 1011d78:	e0bfff15 	stw	r2,-4(fp)
 1011d7c:	e0bfff17 	ldw	r2,-4(fp)
}
 1011d80:	e037883a 	mov	sp,fp
 1011d84:	df000017 	ldw	fp,0(sp)
 1011d88:	dec00104 	addi	sp,sp,4
 1011d8c:	f800283a 	ret

01011d90 <altera_avalon_jtag_uart_write>:
 * one FIFOs worth of data.  But you said you didn't want to use interrupts :-)
 */

int altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 1011d90:	defff904 	addi	sp,sp,-28
 1011d94:	df000615 	stw	fp,24(sp)
 1011d98:	df000604 	addi	fp,sp,24
 1011d9c:	e13ffc15 	stw	r4,-16(fp)
 1011da0:	e17ffd15 	stw	r5,-12(fp)
 1011da4:	e1bffe15 	stw	r6,-8(fp)
 1011da8:	e1ffff15 	stw	r7,-4(fp)
  unsigned int base = sp->base;
 1011dac:	e0bffc17 	ldw	r2,-16(fp)
 1011db0:	10800017 	ldw	r2,0(r2)
 1011db4:	e0bffb15 	stw	r2,-20(fp)

  const char * end = ptr + count;
 1011db8:	e0bffe17 	ldw	r2,-8(fp)
 1011dbc:	1007883a 	mov	r3,r2
 1011dc0:	e0bffd17 	ldw	r2,-12(fp)
 1011dc4:	10c5883a 	add	r2,r2,r3
 1011dc8:	e0bffa15 	stw	r2,-24(fp)

  while (ptr < end)
 1011dcc:	00001106 	br	1011e14 <altera_avalon_jtag_uart_write+0x84>
    if ((IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base) & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) != 0)
 1011dd0:	e0bffb17 	ldw	r2,-20(fp)
 1011dd4:	10800104 	addi	r2,r2,4
 1011dd8:	10800037 	ldwio	r2,0(r2)
 1011ddc:	10bfffec 	andhi	r2,r2,65535
 1011de0:	1005003a 	cmpeq	r2,r2,zero
 1011de4:	10000b1e 	bne	r2,zero,1011e14 <altera_avalon_jtag_uart_write+0x84>
      IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, *ptr++);
 1011de8:	e13ffb17 	ldw	r4,-20(fp)
 1011dec:	e0bffd17 	ldw	r2,-12(fp)
 1011df0:	10800003 	ldbu	r2,0(r2)
 1011df4:	10c03fcc 	andi	r3,r2,255
 1011df8:	18c0201c 	xori	r3,r3,128
 1011dfc:	18ffe004 	addi	r3,r3,-128
 1011e00:	e0bffd17 	ldw	r2,-12(fp)
 1011e04:	10800044 	addi	r2,r2,1
 1011e08:	e0bffd15 	stw	r2,-12(fp)
 1011e0c:	2005883a 	mov	r2,r4
 1011e10:	10c00035 	stwio	r3,0(r2)
{
  unsigned int base = sp->base;

  const char * end = ptr + count;

  while (ptr < end)
 1011e14:	e0fffd17 	ldw	r3,-12(fp)
 1011e18:	e0bffa17 	ldw	r2,-24(fp)
 1011e1c:	18bfec36 	bltu	r3,r2,1011dd0 <altera_avalon_jtag_uart_write+0x40>
    if ((IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base) & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) != 0)
      IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, *ptr++);

  return count;
 1011e20:	e0bffe17 	ldw	r2,-8(fp)
}
 1011e24:	e037883a 	mov	sp,fp
 1011e28:	df000017 	ldw	fp,0(sp)
 1011e2c:	dec00104 	addi	sp,sp,4
 1011e30:	f800283a 	ret

01011e34 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
 1011e34:	defffa04 	addi	sp,sp,-24
 1011e38:	dfc00515 	stw	ra,20(sp)
 1011e3c:	df000415 	stw	fp,16(sp)
 1011e40:	df000404 	addi	fp,sp,16
 1011e44:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
 1011e48:	e0bfff17 	ldw	r2,-4(fp)
 1011e4c:	10000035 	stwio	zero,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
 1011e50:	e0bfff17 	ldw	r2,-4(fp)
 1011e54:	10800104 	addi	r2,r2,4
 1011e58:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 1011e5c:	0005303a 	rdctl	r2,status
 1011e60:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 1011e64:	e0fffd17 	ldw	r3,-12(fp)
 1011e68:	00bfff84 	movi	r2,-2
 1011e6c:	1884703a 	and	r2,r3,r2
 1011e70:	1001703a 	wrctl	status,r2
  
  return context;
 1011e74:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
 1011e78:	e0bffe15 	stw	r2,-8(fp)
  alt_tick ();
 1011e7c:	101306c0 	call	101306c <alt_tick>
 1011e80:	e0bffe17 	ldw	r2,-8(fp)
 1011e84:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 1011e88:	e0bffc17 	ldw	r2,-16(fp)
 1011e8c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
 1011e90:	e037883a 	mov	sp,fp
 1011e94:	dfc00117 	ldw	ra,4(sp)
 1011e98:	df000017 	ldw	fp,0(sp)
 1011e9c:	dec00204 	addi	sp,sp,8
 1011ea0:	f800283a 	ret

01011ea4 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
 1011ea4:	defff804 	addi	sp,sp,-32
 1011ea8:	dfc00715 	stw	ra,28(sp)
 1011eac:	df000615 	stw	fp,24(sp)
 1011eb0:	df000604 	addi	fp,sp,24
 1011eb4:	e13ffc15 	stw	r4,-16(fp)
 1011eb8:	e17ffd15 	stw	r5,-12(fp)
 1011ebc:	e1bffe15 	stw	r6,-8(fp)
 1011ec0:	e1ffff15 	stw	r7,-4(fp)
 1011ec4:	e0bfff17 	ldw	r2,-4(fp)
 1011ec8:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
 1011ecc:	00804074 	movhi	r2,257
 1011ed0:	10943604 	addi	r2,r2,20696
 1011ed4:	10800017 	ldw	r2,0(r2)
 1011ed8:	1004c03a 	cmpne	r2,r2,zero
 1011edc:	1000041e 	bne	r2,zero,1011ef0 <alt_avalon_timer_sc_init+0x4c>
  {
    _alt_tick_rate = nticks;
 1011ee0:	00c04074 	movhi	r3,257
 1011ee4:	18d43604 	addi	r3,r3,20696
 1011ee8:	e0bffb17 	ldw	r2,-20(fp)
 1011eec:	18800015 	stw	r2,0(r3)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
 1011ef0:	e0bffc17 	ldw	r2,-16(fp)
 1011ef4:	10800104 	addi	r2,r2,4
 1011ef8:	1007883a 	mov	r3,r2
 1011efc:	008001c4 	movi	r2,7
 1011f00:	18800035 	stwio	r2,0(r3)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
 1011f04:	d8000015 	stw	zero,0(sp)
 1011f08:	e13ffd17 	ldw	r4,-12(fp)
 1011f0c:	e17ffe17 	ldw	r5,-8(fp)
 1011f10:	01804074 	movhi	r6,257
 1011f14:	31878d04 	addi	r6,r6,7732
 1011f18:	e1fffc17 	ldw	r7,-16(fp)
 1011f1c:	1012bb80 	call	1012bb8 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
 1011f20:	e037883a 	mov	sp,fp
 1011f24:	dfc00117 	ldw	ra,4(sp)
 1011f28:	df000017 	ldw	fp,0(sp)
 1011f2c:	dec00204 	addi	sp,sp,8
 1011f30:	f800283a 	ret

01011f34 <alt_timestamp_start>:
 * The return value of this function is 0 upon sucess and -1 if in timestamp
 * device has not been registered. 
 */

int alt_timestamp_start(void)
{
 1011f34:	defffd04 	addi	sp,sp,-12
 1011f38:	df000215 	stw	fp,8(sp)
 1011f3c:	df000204 	addi	fp,sp,8
  void* base = altera_avalon_timer_ts_base;
 1011f40:	00804074 	movhi	r2,257
 1011f44:	10943304 	addi	r2,r2,20684
 1011f48:	10800017 	ldw	r2,0(r2)
 1011f4c:	e0bffe15 	stw	r2,-8(fp)

  if (!altera_avalon_timer_ts_freq)
 1011f50:	00804074 	movhi	r2,257
 1011f54:	10943404 	addi	r2,r2,20688
 1011f58:	10800017 	ldw	r2,0(r2)
 1011f5c:	1004c03a 	cmpne	r2,r2,zero
 1011f60:	1000031e 	bne	r2,zero,1011f70 <alt_timestamp_start+0x3c>
  {
    return -1;
 1011f64:	00bfffc4 	movi	r2,-1
 1011f68:	e0bfff15 	stw	r2,-4(fp)
 1011f6c:	00001f06 	br	1011fec <alt_timestamp_start+0xb8>
  }
  else
  {
    if(ALT_TIMESTAMP_COUNTER_SIZE == 64) {
        IOWR_ALTERA_AVALON_TIMER_CONTROL (base,ALTERA_AVALON_TIMER_CONTROL_STOP_MSK);
 1011f70:	e0bffe17 	ldw	r2,-8(fp)
 1011f74:	10800104 	addi	r2,r2,4
 1011f78:	1007883a 	mov	r3,r2
 1011f7c:	00800204 	movi	r2,8
 1011f80:	18800035 	stwio	r2,0(r3)
        IOWR_ALTERA_AVALON_TIMER_PERIOD_0 (base, 0xFFFF);
 1011f84:	e0bffe17 	ldw	r2,-8(fp)
 1011f88:	10800204 	addi	r2,r2,8
 1011f8c:	1007883a 	mov	r3,r2
 1011f90:	00bfffd4 	movui	r2,65535
 1011f94:	18800035 	stwio	r2,0(r3)
        IOWR_ALTERA_AVALON_TIMER_PERIOD_1 (base, 0xFFFF);;
 1011f98:	e0bffe17 	ldw	r2,-8(fp)
 1011f9c:	10800304 	addi	r2,r2,12
 1011fa0:	1007883a 	mov	r3,r2
 1011fa4:	00bfffd4 	movui	r2,65535
 1011fa8:	18800035 	stwio	r2,0(r3)
        IOWR_ALTERA_AVALON_TIMER_PERIOD_2 (base, 0xFFFF);
 1011fac:	e0bffe17 	ldw	r2,-8(fp)
 1011fb0:	10800404 	addi	r2,r2,16
 1011fb4:	1007883a 	mov	r3,r2
 1011fb8:	00bfffd4 	movui	r2,65535
 1011fbc:	18800035 	stwio	r2,0(r3)
        IOWR_ALTERA_AVALON_TIMER_PERIOD_3 (base, 0xFFFF);
 1011fc0:	e0bffe17 	ldw	r2,-8(fp)
 1011fc4:	10800504 	addi	r2,r2,20
 1011fc8:	1007883a 	mov	r3,r2
 1011fcc:	00bfffd4 	movui	r2,65535
 1011fd0:	18800035 	stwio	r2,0(r3)
        IOWR_ALTERA_AVALON_TIMER_CONTROL (base, ALTERA_AVALON_TIMER_CONTROL_START_MSK);
 1011fd4:	e0bffe17 	ldw	r2,-8(fp)
 1011fd8:	10800104 	addi	r2,r2,4
 1011fdc:	1007883a 	mov	r3,r2
 1011fe0:	00800104 	movi	r2,4
 1011fe4:	18800035 	stwio	r2,0(r3)
        IOWR_ALTERA_AVALON_TIMER_PERIODL (base, 0xFFFF);
        IOWR_ALTERA_AVALON_TIMER_PERIODH (base, 0xFFFF);
        IOWR_ALTERA_AVALON_TIMER_CONTROL (base, ALTERA_AVALON_TIMER_CONTROL_START_MSK); 
    } 
  }
  return 0;
 1011fe8:	e03fff15 	stw	zero,-4(fp)
 1011fec:	e0bfff17 	ldw	r2,-4(fp)
}
 1011ff0:	e037883a 	mov	sp,fp
 1011ff4:	df000017 	ldw	fp,0(sp)
 1011ff8:	dec00104 	addi	sp,sp,4
 1011ffc:	f800283a 	ret

01012000 <alt_timestamp>:
 * The returned timestamp counts up from the last time the period register
 * was reset. 
 */

alt_timestamp_type alt_timestamp(void)
{
 1012000:	defff404 	addi	sp,sp,-48
 1012004:	df000b15 	stw	fp,44(sp)
 1012008:	df000b04 	addi	fp,sp,44

  void* base = altera_avalon_timer_ts_base;
 101200c:	00804074 	movhi	r2,257
 1012010:	10943304 	addi	r2,r2,20684
 1012014:	10800017 	ldw	r2,0(r2)
 1012018:	e0bffd15 	stw	r2,-12(fp)

  if (!altera_avalon_timer_ts_freq)
 101201c:	00804074 	movhi	r2,257
 1012020:	10943404 	addi	r2,r2,20688
 1012024:	10800017 	ldw	r2,0(r2)
 1012028:	1004c03a 	cmpne	r2,r2,zero
 101202c:	1000051e 	bne	r2,zero,1012044 <alt_timestamp+0x44>
  {
	if(ALT_TIMESTAMP_COUNTER_SIZE == 64) {
        return 0xFFFFFFFFFFFFFFFFULL;
 1012030:	00bfffc4 	movi	r2,-1
 1012034:	e0bffe15 	stw	r2,-8(fp)
 1012038:	013fffc4 	movi	r4,-1
 101203c:	e13fff15 	stw	r4,-4(fp)
 1012040:	00004406 	br	1012154 <alt_timestamp+0x154>
    }
  }
  else
  {
    if(ALT_TIMESTAMP_COUNTER_SIZE == 64) {
        IOWR_ALTERA_AVALON_TIMER_SNAP_0 (base, 0);
 1012044:	e0bffd17 	ldw	r2,-12(fp)
 1012048:	10800604 	addi	r2,r2,24
 101204c:	10000035 	stwio	zero,0(r2)
        alt_timestamp_type snap_0 = IORD_ALTERA_AVALON_TIMER_SNAP_0(base) & ALTERA_AVALON_TIMER_SNAP_0_MSK;
 1012050:	e0bffd17 	ldw	r2,-12(fp)
 1012054:	10800604 	addi	r2,r2,24
 1012058:	10800037 	ldwio	r2,0(r2)
 101205c:	1009883a 	mov	r4,r2
 1012060:	2005883a 	mov	r2,r4
 1012064:	0007883a 	mov	r3,zero
 1012068:	113fffcc 	andi	r4,r2,65535
 101206c:	e13ffb15 	stw	r4,-20(fp)
 1012070:	1804703a 	and	r2,r3,zero
 1012074:	e0bffc15 	stw	r2,-16(fp)
        alt_timestamp_type snap_1 = IORD_ALTERA_AVALON_TIMER_SNAP_1(base) & ALTERA_AVALON_TIMER_SNAP_1_MSK;
 1012078:	e0bffd17 	ldw	r2,-12(fp)
 101207c:	10800704 	addi	r2,r2,28
 1012080:	10800037 	ldwio	r2,0(r2)
 1012084:	1009883a 	mov	r4,r2
 1012088:	2005883a 	mov	r2,r4
 101208c:	0007883a 	mov	r3,zero
 1012090:	113fffcc 	andi	r4,r2,65535
 1012094:	e13ff915 	stw	r4,-28(fp)
 1012098:	1804703a 	and	r2,r3,zero
 101209c:	e0bffa15 	stw	r2,-24(fp)
        alt_timestamp_type snap_2 = IORD_ALTERA_AVALON_TIMER_SNAP_2(base) & ALTERA_AVALON_TIMER_SNAP_2_MSK;
 10120a0:	e0bffd17 	ldw	r2,-12(fp)
 10120a4:	10800804 	addi	r2,r2,32
 10120a8:	10800037 	ldwio	r2,0(r2)
 10120ac:	1009883a 	mov	r4,r2
 10120b0:	2005883a 	mov	r2,r4
 10120b4:	0007883a 	mov	r3,zero
 10120b8:	113fffcc 	andi	r4,r2,65535
 10120bc:	e13ff715 	stw	r4,-36(fp)
 10120c0:	1804703a 	and	r2,r3,zero
 10120c4:	e0bff815 	stw	r2,-32(fp)
        alt_timestamp_type snap_3 = IORD_ALTERA_AVALON_TIMER_SNAP_3(base) & ALTERA_AVALON_TIMER_SNAP_3_MSK;
 10120c8:	e0bffd17 	ldw	r2,-12(fp)
 10120cc:	10800904 	addi	r2,r2,36
 10120d0:	10800037 	ldwio	r2,0(r2)
 10120d4:	1009883a 	mov	r4,r2
 10120d8:	2005883a 	mov	r2,r4
 10120dc:	0007883a 	mov	r3,zero
 10120e0:	113fffcc 	andi	r4,r2,65535
 10120e4:	e13ff515 	stw	r4,-44(fp)
 10120e8:	1804703a 	and	r2,r3,zero
 10120ec:	e0bff615 	stw	r2,-40(fp)
        
        return (0xFFFFFFFFFFFFFFFFULL - ( (snap_3 << 48) | (snap_2 << 32) | (snap_1 << 16) | (snap_0) ));
 10120f0:	e0bff517 	ldw	r2,-44(fp)
 10120f4:	100a943a 	slli	r5,r2,16
 10120f8:	0009883a 	mov	r4,zero
 10120fc:	e1bff717 	ldw	r6,-36(fp)
 1012100:	3006983a 	sll	r3,r6,zero
 1012104:	0005883a 	mov	r2,zero
 1012108:	208cb03a 	or	r6,r4,r2
 101210c:	28ceb03a 	or	r7,r5,r3
 1012110:	e0bff917 	ldw	r2,-28(fp)
 1012114:	100ad43a 	srli	r5,r2,16
 1012118:	e13ffa17 	ldw	r4,-24(fp)
 101211c:	e23ff917 	ldw	r8,-28(fp)
 1012120:	2006943a 	slli	r3,r4,16
 1012124:	1946b03a 	or	r3,r3,r5
 1012128:	4004943a 	slli	r2,r8,16
 101212c:	3088b03a 	or	r4,r6,r2
 1012130:	38cab03a 	or	r5,r7,r3
 1012134:	e1bffb17 	ldw	r6,-20(fp)
 1012138:	e1fffc17 	ldw	r7,-16(fp)
 101213c:	2184b03a 	or	r2,r4,r6
 1012140:	29c6b03a 	or	r3,r5,r7
 1012144:	0088303a 	nor	r4,zero,r2
 1012148:	e13ffe15 	stw	r4,-8(fp)
 101214c:	00c4303a 	nor	r2,zero,r3
 1012150:	e0bfff15 	stw	r2,-4(fp)
 1012154:	e0bffe17 	ldw	r2,-8(fp)
 1012158:	1007883a 	mov	r3,r2
 101215c:	e0bfff17 	ldw	r2,-4(fp)
 1012160:	1009883a 	mov	r4,r2
        alt_timestamp_type upper = IORD_ALTERA_AVALON_TIMER_SNAPH(base) & ALTERA_AVALON_TIMER_SNAPH_MSK;
        
        return (0xFFFFFFFF - ((upper << 16) | lower)); 
    }  
  }
}
 1012164:	1805883a 	mov	r2,r3
 1012168:	2007883a 	mov	r3,r4
 101216c:	e037883a 	mov	sp,fp
 1012170:	df000017 	ldw	fp,0(sp)
 1012174:	dec00104 	addi	sp,sp,4
 1012178:	f800283a 	ret

0101217c <alt_timestamp_freq>:
 * Return the number of timestamp ticks per second. This will be 0 if no
 * timestamp device has been registered.
 */

alt_u32 alt_timestamp_freq(void)
{
 101217c:	deffff04 	addi	sp,sp,-4
 1012180:	df000015 	stw	fp,0(sp)
 1012184:	d839883a 	mov	fp,sp
  return altera_avalon_timer_ts_freq;
 1012188:	00804074 	movhi	r2,257
 101218c:	10943404 	addi	r2,r2,20688
 1012190:	10800017 	ldw	r2,0(r2)
}
 1012194:	e037883a 	mov	sp,fp
 1012198:	df000017 	ldw	fp,0(sp)
 101219c:	dec00104 	addi	sp,sp,4
 10121a0:	f800283a 	ret

010121a4 <alt_hostfs_open>:
* alt_hostfs_open
*
* If we can't find anything return -1
*/
int alt_hostfs_open(alt_fd* fd, const char * name, int flags, int mode)
{
 10121a4:	deffee04 	addi	sp,sp,-72
 10121a8:	df001115 	stw	fp,68(sp)
 10121ac:	df001104 	addi	fp,sp,68
 10121b0:	e13ffc15 	stw	r4,-16(fp)
 10121b4:	e17ffd15 	stw	r5,-12(fp)
 10121b8:	e1bffe15 	stw	r6,-8(fp)
 10121bc:	e1ffff15 	stw	r7,-4(fp)
  static const struct HOSTCALL_INFO hcinfo = { 0x0103, "open" };

  alt_hostfs_dev* dev= (alt_hostfs_dev*)fd->dev;
 10121c0:	e0bffc17 	ldw	r2,-16(fp)
 10121c4:	10800017 	ldw	r2,0(r2)
 10121c8:	e0bffb15 	stw	r2,-20(fp)
#endif

  /* Mount point names don't end with a slash, so we must skip over the
   * slash following the mount point name.
  */
  name += inline_strlen(dev->fs_dev.name) + 1;
 10121cc:	e0bffb17 	ldw	r2,-20(fp)
 10121d0:	10800217 	ldw	r2,8(r2)
 10121d4:	e0bff115 	stw	r2,-60(fp)
};

static inline int inline_strlen(const char * string) ALT_ALWAYS_INLINE;
static inline int inline_strlen(const char * string)
{
  const char * ptr = string - 1;
 10121d8:	e0bff117 	ldw	r2,-60(fp)
 10121dc:	10bfffc4 	addi	r2,r2,-1
 10121e0:	e0bff215 	stw	r2,-56(fp)

  while (*++ptr != 0)
 10121e4:	e0bff217 	ldw	r2,-56(fp)
 10121e8:	10800044 	addi	r2,r2,1
 10121ec:	e0bff215 	stw	r2,-56(fp)
 10121f0:	e0bff217 	ldw	r2,-56(fp)
 10121f4:	10800003 	ldbu	r2,0(r2)
 10121f8:	10803fcc 	andi	r2,r2,255
 10121fc:	1080201c 	xori	r2,r2,128
 1012200:	10bfe004 	addi	r2,r2,-128
 1012204:	1004c03a 	cmpne	r2,r2,zero
 1012208:	103ff61e 	bne	r2,zero,10121e4 <alt_hostfs_open+0x40>
    ;

  return ptr - string;
 101220c:	e0fff217 	ldw	r3,-56(fp)
 1012210:	e0bff117 	ldw	r2,-60(fp)
 1012214:	1885c83a 	sub	r2,r3,r2
#endif

  /* Mount point names don't end with a slash, so we must skip over the
   * slash following the mount point name.
  */
  name += inline_strlen(dev->fs_dev.name) + 1;
 1012218:	1007883a 	mov	r3,r2
 101221c:	e0bffd17 	ldw	r2,-12(fp)
 1012220:	1885883a 	add	r2,r3,r2
 1012224:	10800044 	addi	r2,r2,1
 1012228:	e0bffd15 	stw	r2,-12(fp)

  r3 = (int)&hcinfo;
 101222c:	d0a00e04 	addi	r2,gp,-32712
 1012230:	e0bff715 	stw	r2,-36(fp)
  r4 = (int)name;
 1012234:	e0bffd17 	ldw	r2,-12(fp)
 1012238:	e0bff615 	stw	r2,-40(fp)
  r5 = flags;
 101223c:	e0bffe17 	ldw	r2,-8(fp)
 1012240:	e0bff515 	stw	r2,-44(fp)
  r6 = mode;
 1012244:	e0bfff17 	ldw	r2,-4(fp)
 1012248:	e0bff415 	stw	r2,-48(fp)
 101224c:	e0bffd17 	ldw	r2,-12(fp)
 1012250:	e0bfef15 	stw	r2,-68(fp)
};

static inline int inline_strlen(const char * string) ALT_ALWAYS_INLINE;
static inline int inline_strlen(const char * string)
{
  const char * ptr = string - 1;
 1012254:	e0bfef17 	ldw	r2,-68(fp)
 1012258:	10bfffc4 	addi	r2,r2,-1
 101225c:	e0bff015 	stw	r2,-64(fp)

  while (*++ptr != 0)
 1012260:	e0bff017 	ldw	r2,-64(fp)
 1012264:	10800044 	addi	r2,r2,1
 1012268:	e0bff015 	stw	r2,-64(fp)
 101226c:	e0bff017 	ldw	r2,-64(fp)
 1012270:	10800003 	ldbu	r2,0(r2)
 1012274:	10803fcc 	andi	r2,r2,255
 1012278:	1080201c 	xori	r2,r2,128
 101227c:	10bfe004 	addi	r2,r2,-128
 1012280:	1004c03a 	cmpne	r2,r2,zero
 1012284:	103ff61e 	bne	r2,zero,1012260 <alt_hostfs_open+0xbc>
    ;

  return ptr - string;
 1012288:	e0fff017 	ldw	r3,-64(fp)
 101228c:	e0bfef17 	ldw	r2,-68(fp)
 1012290:	1885c83a 	sub	r2,r3,r2

  r3 = (int)&hcinfo;
  r4 = (int)name;
  r5 = flags;
  r6 = mode;
  r7 = inline_strlen(name);
 1012294:	e0bff315 	stw	r2,-52(fp)

  __asm__ volatile("break 1" : "=D02" (r2), "+D03" (r3) : "D04" (r4), "D05" (r5), "D06" (r6), "D07" (r7) : "memory" );
 1012298:	e13ff617 	ldw	r4,-40(fp)
 101229c:	e17ff517 	ldw	r5,-44(fp)
 10122a0:	e1bff417 	ldw	r6,-48(fp)
 10122a4:	e1fff317 	ldw	r7,-52(fp)
 10122a8:	e0fff717 	ldw	r3,-36(fp)
 10122ac:	003da07a 	break	1
 10122b0:	e0bff815 	stw	r2,-32(fp)
 10122b4:	e0fff715 	stw	r3,-36(fp)

  handle = (void *)r2;
 10122b8:	e0bff817 	ldw	r2,-32(fp)
 10122bc:	e0bff915 	stw	r2,-28(fp)
  error = r3;
 10122c0:	e0bff717 	ldw	r2,-36(fp)
 10122c4:	e0bffa15 	stw	r2,-24(fp)

  if (error == 0)
 10122c8:	e0bffa17 	ldw	r2,-24(fp)
 10122cc:	1004c03a 	cmpne	r2,r2,zero
 10122d0:	1000031e 	bne	r2,zero,10122e0 <alt_hostfs_open+0x13c>
    fd->priv = handle;
 10122d4:	e0fff917 	ldw	r3,-28(fp)
 10122d8:	e0bffc17 	ldw	r2,-16(fp)
 10122dc:	10c00115 	stw	r3,4(r2)

  return -error;
 10122e0:	e0bffa17 	ldw	r2,-24(fp)
 10122e4:	0085c83a 	sub	r2,zero,r2
}
 10122e8:	e037883a 	mov	sp,fp
 10122ec:	df000017 	ldw	fp,0(sp)
 10122f0:	dec00104 	addi	sp,sp,4
 10122f4:	f800283a 	ret

010122f8 <alt_hostfs_close>:
* alt_hostfs_close
*
* Read the file
*/
int alt_hostfs_close(alt_fd* fd)
{
 10122f8:	defffb04 	addi	sp,sp,-20
 10122fc:	df000415 	stw	fp,16(sp)
 1012300:	df000404 	addi	fp,sp,16
 1012304:	e13fff15 	stw	r4,-4(fp)
  int error;

  /* Input and output parameters for the hostcall */
  int r3, r4;

  r3 = (int)&hcinfo;
 1012308:	d0a01104 	addi	r2,gp,-32700
 101230c:	e0bffd15 	stw	r2,-12(fp)
  r4 = (int)fd->priv;
 1012310:	e0bfff17 	ldw	r2,-4(fp)
 1012314:	10800117 	ldw	r2,4(r2)
 1012318:	e0bffc15 	stw	r2,-16(fp)

  __asm__ volatile("break 1" : "+D03" (r3) : "D04" (r4) );
 101231c:	e13ffc17 	ldw	r4,-16(fp)
 1012320:	e0fffd17 	ldw	r3,-12(fp)
 1012324:	003da07a 	break	1
 1012328:	e0fffd15 	stw	r3,-12(fp)

  error = r3;
 101232c:	e0bffd17 	ldw	r2,-12(fp)
 1012330:	e0bffe15 	stw	r2,-8(fp)

  return -error;
 1012334:	e0bffe17 	ldw	r2,-8(fp)
 1012338:	0085c83a 	sub	r2,zero,r2
}
 101233c:	e037883a 	mov	sp,fp
 1012340:	df000017 	ldw	fp,0(sp)
 1012344:	dec00104 	addi	sp,sp,4
 1012348:	f800283a 	ret

0101234c <alt_hostfs_read>:
* alt_hostfs_read
*
* Read the file
*/
int alt_hostfs_read(alt_fd* fd, char * ptr, int len)
{
 101234c:	defff404 	addi	sp,sp,-48
 1012350:	df000b15 	stw	fp,44(sp)
 1012354:	df000b04 	addi	fp,sp,44
 1012358:	e13ffc15 	stw	r4,-16(fp)
 101235c:	e17ffd15 	stw	r5,-12(fp)
 1012360:	e1bffe15 	stw	r6,-8(fp)
  int rc;

  /* Input and output parameters for the hostcall */
  int r2, r3, r4, r5, r6;

  r3 = (int)&hcinfo;
 1012364:	d0a01404 	addi	r2,gp,-32688
 1012368:	e0bff815 	stw	r2,-32(fp)
  r4 = (int)fd->priv;
 101236c:	e0bffc17 	ldw	r2,-16(fp)
 1012370:	10800117 	ldw	r2,4(r2)
 1012374:	e0bff715 	stw	r2,-36(fp)
  r5 = (int)ptr;
 1012378:	e0bffd17 	ldw	r2,-12(fp)
 101237c:	e0bff615 	stw	r2,-40(fp)
  r6 = len;
 1012380:	e0bffe17 	ldw	r2,-8(fp)
 1012384:	e0bff515 	stw	r2,-44(fp)

  __asm__ volatile("break 1" : "=D02" (r2), "+D03" (r3) : "D04" (r4), "D05" (r5), "D06" (r6) : "memory" );
 1012388:	e13ff717 	ldw	r4,-36(fp)
 101238c:	e17ff617 	ldw	r5,-40(fp)
 1012390:	e1bff517 	ldw	r6,-44(fp)
 1012394:	e0fff817 	ldw	r3,-32(fp)
 1012398:	003da07a 	break	1
 101239c:	e0bff915 	stw	r2,-28(fp)
 10123a0:	e0fff815 	stw	r3,-32(fp)

  rc = r2;
 10123a4:	e0bff917 	ldw	r2,-28(fp)
 10123a8:	e0bffa15 	stw	r2,-24(fp)
  error = r3;
 10123ac:	e0bff817 	ldw	r2,-32(fp)
 10123b0:	e0bffb15 	stw	r2,-20(fp)

  return (error == 0) ? rc : -error;
 10123b4:	e0bffb17 	ldw	r2,-20(fp)
 10123b8:	1005003a 	cmpeq	r2,r2,zero
 10123bc:	1000041e 	bne	r2,zero,10123d0 <alt_hostfs_read+0x84>
 10123c0:	e0bffb17 	ldw	r2,-20(fp)
 10123c4:	0085c83a 	sub	r2,zero,r2
 10123c8:	e0bfff15 	stw	r2,-4(fp)
 10123cc:	00000206 	br	10123d8 <alt_hostfs_read+0x8c>
 10123d0:	e0bffa17 	ldw	r2,-24(fp)
 10123d4:	e0bfff15 	stw	r2,-4(fp)
 10123d8:	e0bfff17 	ldw	r2,-4(fp)
}
 10123dc:	e037883a 	mov	sp,fp
 10123e0:	df000017 	ldw	fp,0(sp)
 10123e4:	dec00104 	addi	sp,sp,4
 10123e8:	f800283a 	ret

010123ec <alt_hostfs_write>:
* alt_hostfs_write
*
* Read the file
*/
int alt_hostfs_write(alt_fd* fd, const char * ptr, int len)
{
 10123ec:	defff404 	addi	sp,sp,-48
 10123f0:	df000b15 	stw	fp,44(sp)
 10123f4:	df000b04 	addi	fp,sp,44
 10123f8:	e13ffc15 	stw	r4,-16(fp)
 10123fc:	e17ffd15 	stw	r5,-12(fp)
 1012400:	e1bffe15 	stw	r6,-8(fp)
  int rc;

  /* Input and output parameters for the hostcall */
  int r2, r3, r4, r5, r6;

  r3 = (int)&hcinfo;
 1012404:	d0a01704 	addi	r2,gp,-32676
 1012408:	e0bff815 	stw	r2,-32(fp)
  r4 = (int)fd->priv;
 101240c:	e0bffc17 	ldw	r2,-16(fp)
 1012410:	10800117 	ldw	r2,4(r2)
 1012414:	e0bff715 	stw	r2,-36(fp)
  r5 = (int)ptr;
 1012418:	e0bffd17 	ldw	r2,-12(fp)
 101241c:	e0bff615 	stw	r2,-40(fp)
  r6 = len;
 1012420:	e0bffe17 	ldw	r2,-8(fp)
 1012424:	e0bff515 	stw	r2,-44(fp)

  __asm__ volatile("break 1" : "=D02" (r2), "+D03" (r3) : "D04" (r4), "D05" (r5), "D06" (r6) : "memory" );
 1012428:	e13ff717 	ldw	r4,-36(fp)
 101242c:	e17ff617 	ldw	r5,-40(fp)
 1012430:	e1bff517 	ldw	r6,-44(fp)
 1012434:	e0fff817 	ldw	r3,-32(fp)
 1012438:	003da07a 	break	1
 101243c:	e0bff915 	stw	r2,-28(fp)
 1012440:	e0fff815 	stw	r3,-32(fp)

  rc = r2;
 1012444:	e0bff917 	ldw	r2,-28(fp)
 1012448:	e0bffa15 	stw	r2,-24(fp)
  error = r3;
 101244c:	e0bff817 	ldw	r2,-32(fp)
 1012450:	e0bffb15 	stw	r2,-20(fp)

  return (error == 0) ? rc : -error;
 1012454:	e0bffb17 	ldw	r2,-20(fp)
 1012458:	1005003a 	cmpeq	r2,r2,zero
 101245c:	1000041e 	bne	r2,zero,1012470 <alt_hostfs_write+0x84>
 1012460:	e0bffb17 	ldw	r2,-20(fp)
 1012464:	0085c83a 	sub	r2,zero,r2
 1012468:	e0bfff15 	stw	r2,-4(fp)
 101246c:	00000206 	br	1012478 <alt_hostfs_write+0x8c>
 1012470:	e0bffa17 	ldw	r2,-24(fp)
 1012474:	e0bfff15 	stw	r2,-4(fp)
 1012478:	e0bfff17 	ldw	r2,-4(fp)
}
 101247c:	e037883a 	mov	sp,fp
 1012480:	df000017 	ldw	fp,0(sp)
 1012484:	dec00104 	addi	sp,sp,4
 1012488:	f800283a 	ret

0101248c <alt_hostfs_seek>:
* Move around within a file
*
* returns -errno for an error or the offset within the file
*/
int alt_hostfs_seek(alt_fd* fd, int ptr, int dir)
{
 101248c:	defff404 	addi	sp,sp,-48
 1012490:	df000b15 	stw	fp,44(sp)
 1012494:	df000b04 	addi	fp,sp,44
 1012498:	e13ffc15 	stw	r4,-16(fp)
 101249c:	e17ffd15 	stw	r5,-12(fp)
 10124a0:	e1bffe15 	stw	r6,-8(fp)
  int rc;

  /* Input and output parameters for the hostcall */
  int r2, r3, r4, r5, r6;

  r3 = (int)&hcinfo;
 10124a4:	d0a01a04 	addi	r2,gp,-32664
 10124a8:	e0bff815 	stw	r2,-32(fp)
  r4 = (int)fd->priv;
 10124ac:	e0bffc17 	ldw	r2,-16(fp)
 10124b0:	10800117 	ldw	r2,4(r2)
 10124b4:	e0bff715 	stw	r2,-36(fp)
  r5 = ptr;
 10124b8:	e0bffd17 	ldw	r2,-12(fp)
 10124bc:	e0bff615 	stw	r2,-40(fp)
  r6 = dir;
 10124c0:	e0bffe17 	ldw	r2,-8(fp)
 10124c4:	e0bff515 	stw	r2,-44(fp)

  __asm__ volatile("break 1" : "=D02" (r2), "+D03" (r3) : "D04" (r4), "D05" (r5), "D06" (r6) : "memory" );
 10124c8:	e13ff717 	ldw	r4,-36(fp)
 10124cc:	e17ff617 	ldw	r5,-40(fp)
 10124d0:	e1bff517 	ldw	r6,-44(fp)
 10124d4:	e0fff817 	ldw	r3,-32(fp)
 10124d8:	003da07a 	break	1
 10124dc:	e0bff915 	stw	r2,-28(fp)
 10124e0:	e0fff815 	stw	r3,-32(fp)

  rc = r2;
 10124e4:	e0bff917 	ldw	r2,-28(fp)
 10124e8:	e0bffa15 	stw	r2,-24(fp)
  error = r3;
 10124ec:	e0bff817 	ldw	r2,-32(fp)
 10124f0:	e0bffb15 	stw	r2,-20(fp)

  return (error == 0) ? rc : -error;
 10124f4:	e0bffb17 	ldw	r2,-20(fp)
 10124f8:	1005003a 	cmpeq	r2,r2,zero
 10124fc:	1000041e 	bne	r2,zero,1012510 <alt_hostfs_seek+0x84>
 1012500:	e0bffb17 	ldw	r2,-20(fp)
 1012504:	0085c83a 	sub	r2,zero,r2
 1012508:	e0bfff15 	stw	r2,-4(fp)
 101250c:	00000206 	br	1012518 <alt_hostfs_seek+0x8c>
 1012510:	e0bffa17 	ldw	r2,-24(fp)
 1012514:	e0bfff15 	stw	r2,-4(fp)
 1012518:	e0bfff17 	ldw	r2,-4(fp)
}
 101251c:	e037883a 	mov	sp,fp
 1012520:	df000017 	ldw	fp,0(sp)
 1012524:	dec00104 	addi	sp,sp,4
 1012528:	f800283a 	ret

0101252c <alt_hostfs_fstat>:
* at the lower address.
* We need to copy the structure and byte swap it to make it match our local
* layout of struct stat.
*/
int alt_hostfs_fstat(alt_fd* fd, struct stat* st)
{
 101252c:	deffe404 	addi	sp,sp,-112
 1012530:	df001b15 	stw	fp,108(sp)
 1012534:	df001b04 	addi	fp,sp,108
 1012538:	e13ffd15 	stw	r4,-12(fp)
 101253c:	e17ffe15 	stw	r5,-8(fp)
  int rc;

  /* Input and output parameters for the hostcall */
  int r2, r3, r4, r5;

  r3 = (int)&hcinfo;
 1012540:	d0a01d04 	addi	r2,gp,-32652
 1012544:	e0bfe915 	stw	r2,-92(fp)
  r4 = (int)fd->priv;
 1012548:	e0bffd17 	ldw	r2,-12(fp)
 101254c:	10800117 	ldw	r2,4(r2)
 1012550:	e0bfe815 	stw	r2,-96(fp)
  r5 = (int)&hoststat;
 1012554:	e0bfed04 	addi	r2,fp,-76
 1012558:	e0bfe715 	stw	r2,-100(fp)

  __asm__ volatile("break 1" : "=D02" (r2), "+D03" (r3) : "D04" (r4), "D05" (r5) : "memory" );
 101255c:	e13fe817 	ldw	r4,-96(fp)
 1012560:	e17fe717 	ldw	r5,-100(fp)
 1012564:	e0ffe917 	ldw	r3,-92(fp)
 1012568:	003da07a 	break	1
 101256c:	e0bfea15 	stw	r2,-88(fp)
 1012570:	e0ffe915 	stw	r3,-92(fp)

  rc = r2;
 1012574:	e0bfea17 	ldw	r2,-88(fp)
 1012578:	e0bfeb15 	stw	r2,-84(fp)
  error = r3;
 101257c:	e0bfe917 	ldw	r2,-92(fp)
 1012580:	e0bfec15 	stw	r2,-80(fp)

  if (error == 0)
 1012584:	e0bfec17 	ldw	r2,-80(fp)
 1012588:	1004c03a 	cmpne	r2,r2,zero
 101258c:	1000651e 	bne	r2,zero,1012724 <alt_hostfs_fstat+0x1f8>
     * no change is required.  On a little-endian processor we need to swap
     * the bytes in each word.
     */

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
 1012590:	e0bfed04 	addi	r2,fp,-76
 1012594:	e0bfe615 	stw	r2,-104(fp)
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
 1012598:	e0bfe617 	ldw	r2,-104(fp)
 101259c:	10801004 	addi	r2,r2,64
 10125a0:	e0bfe515 	stw	r2,-108(fp)
    for ( ; ptr < end ; ptr++)
 10125a4:	00001806 	br	1012608 <alt_hostfs_fstat+0xdc>
      *ptr = ((*ptr & 0xFF000000) >> 24) |
 10125a8:	e0bfe617 	ldw	r2,-104(fp)
 10125ac:	10800017 	ldw	r2,0(r2)
 10125b0:	10bfc02c 	andhi	r2,r2,65280
 10125b4:	1006d63a 	srli	r3,r2,24
 10125b8:	e0bfe617 	ldw	r2,-104(fp)
 10125bc:	10800017 	ldw	r2,0(r2)
 10125c0:	10803fec 	andhi	r2,r2,255
 10125c4:	1004d23a 	srli	r2,r2,8
 10125c8:	1886b03a 	or	r3,r3,r2
 10125cc:	e0bfe617 	ldw	r2,-104(fp)
 10125d0:	10800017 	ldw	r2,0(r2)
 10125d4:	10bfc00c 	andi	r2,r2,65280
 10125d8:	1004923a 	slli	r2,r2,8
 10125dc:	1886b03a 	or	r3,r3,r2
 10125e0:	e0bfe617 	ldw	r2,-104(fp)
 10125e4:	10800017 	ldw	r2,0(r2)
 10125e8:	10803fcc 	andi	r2,r2,255
 10125ec:	1004963a 	slli	r2,r2,24
 10125f0:	1886b03a 	or	r3,r3,r2
 10125f4:	e0bfe617 	ldw	r2,-104(fp)
 10125f8:	10c00015 	stw	r3,0(r2)
     */

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
 10125fc:	e0bfe617 	ldw	r2,-104(fp)
 1012600:	10800104 	addi	r2,r2,4
 1012604:	e0bfe615 	stw	r2,-104(fp)
 1012608:	e0ffe617 	ldw	r3,-104(fp)
 101260c:	e0bfe517 	ldw	r2,-108(fp)
 1012610:	18bfe536 	bltu	r3,r2,10125a8 <alt_hostfs_fstat+0x7c>
             ((*ptr & 0x0000FF00) << 8)  |
             ((*ptr & 0x000000FF) << 24);
#endif

    /* Zero the unused parts of struct stat */
    ptr = (alt_u32 *)st;
 1012614:	e0bffe17 	ldw	r2,-8(fp)
 1012618:	e0bfe615 	stw	r2,-104(fp)
    end = (alt_u32 *)((char *)ptr + sizeof(struct stat));
 101261c:	e0bfe617 	ldw	r2,-104(fp)
 1012620:	10800f04 	addi	r2,r2,60
 1012624:	e0bfe515 	stw	r2,-108(fp)
    for ( ; ptr < end ; ptr++)
 1012628:	00000506 	br	1012640 <alt_hostfs_fstat+0x114>
      *ptr = 0;
 101262c:	e0bfe617 	ldw	r2,-104(fp)
 1012630:	10000015 	stw	zero,0(r2)
#endif

    /* Zero the unused parts of struct stat */
    ptr = (alt_u32 *)st;
    end = (alt_u32 *)((char *)ptr + sizeof(struct stat));
    for ( ; ptr < end ; ptr++)
 1012634:	e0bfe617 	ldw	r2,-104(fp)
 1012638:	10800104 	addi	r2,r2,4
 101263c:	e0bfe615 	stw	r2,-104(fp)
 1012640:	e0ffe617 	ldw	r3,-104(fp)
 1012644:	e0bfe517 	ldw	r2,-108(fp)
 1012648:	18bff836 	bltu	r3,r2,101262c <alt_hostfs_fstat+0x100>

    /* Copy the data provided by the host into our local copy, for data which
     * is provided as 64bit values by the host we just use the least
     * significant word.
     */
    st->st_dev     = hoststat.fst_dev;
 101264c:	e0bfed17 	ldw	r2,-76(fp)
 1012650:	1007883a 	mov	r3,r2
 1012654:	e0bffe17 	ldw	r2,-8(fp)
 1012658:	10c0000d 	sth	r3,0(r2)
    st->st_ino     = hoststat.fst_ino;
 101265c:	e0bfee17 	ldw	r2,-72(fp)
 1012660:	1007883a 	mov	r3,r2
 1012664:	e0bffe17 	ldw	r2,-8(fp)
 1012668:	10c0008d 	sth	r3,2(r2)
    st->st_mode    = hoststat.fst_mode;
 101266c:	e0ffef17 	ldw	r3,-68(fp)
 1012670:	e0bffe17 	ldw	r2,-8(fp)
 1012674:	10c00115 	stw	r3,4(r2)
    st->st_nlink   = hoststat.fst_nlink;
 1012678:	e0bff017 	ldw	r2,-64(fp)
 101267c:	1007883a 	mov	r3,r2
 1012680:	e0bffe17 	ldw	r2,-8(fp)
 1012684:	10c0020d 	sth	r3,8(r2)
    st->st_uid     = hoststat.fst_uid;
 1012688:	e0bff117 	ldw	r2,-60(fp)
 101268c:	1007883a 	mov	r3,r2
 1012690:	e0bffe17 	ldw	r2,-8(fp)
 1012694:	10c0028d 	sth	r3,10(r2)
    st->st_gid     = hoststat.fst_gid;
 1012698:	e0bff217 	ldw	r2,-56(fp)
 101269c:	1007883a 	mov	r3,r2
 10126a0:	e0bffe17 	ldw	r2,-8(fp)
 10126a4:	10c0030d 	sth	r3,12(r2)
    st->st_rdev    = hoststat.fst_rdev;
 10126a8:	e0bff317 	ldw	r2,-52(fp)
 10126ac:	1007883a 	mov	r3,r2
 10126b0:	e0bffe17 	ldw	r2,-8(fp)
 10126b4:	10c0038d 	sth	r3,14(r2)
    st->st_size    = hoststat.fst_size[1];
 10126b8:	e0bff517 	ldw	r2,-44(fp)
 10126bc:	1007883a 	mov	r3,r2
 10126c0:	e0bffe17 	ldw	r2,-8(fp)
 10126c4:	10c00415 	stw	r3,16(r2)

    st->st_atime   = hoststat.fst_atime;
 10126c8:	e0bffa17 	ldw	r2,-24(fp)
 10126cc:	1007883a 	mov	r3,r2
 10126d0:	e0bffe17 	ldw	r2,-8(fp)
 10126d4:	10c00515 	stw	r3,20(r2)
    st->st_mtime   = hoststat.fst_mtime;
 10126d8:	e0bffb17 	ldw	r2,-20(fp)
 10126dc:	1007883a 	mov	r3,r2
 10126e0:	e0bffe17 	ldw	r2,-8(fp)
 10126e4:	10c00715 	stw	r3,28(r2)
    st->st_ctime   = hoststat.fst_ctime;
 10126e8:	e0bffc17 	ldw	r2,-16(fp)
 10126ec:	1007883a 	mov	r3,r2
 10126f0:	e0bffe17 	ldw	r2,-8(fp)
 10126f4:	10c00915 	stw	r3,36(r2)

    st->st_blksize = hoststat.fst_blksize[1];
 10126f8:	e0bff717 	ldw	r2,-36(fp)
 10126fc:	1007883a 	mov	r3,r2
 1012700:	e0bffe17 	ldw	r2,-8(fp)
 1012704:	10c00b15 	stw	r3,44(r2)
    st->st_blocks  = hoststat.fst_blocks[1];
 1012708:	e0bff917 	ldw	r2,-28(fp)
 101270c:	1007883a 	mov	r3,r2
 1012710:	e0bffe17 	ldw	r2,-8(fp)
 1012714:	10c00c15 	stw	r3,48(r2)

    return rc;
 1012718:	e0bfeb17 	ldw	r2,-84(fp)
 101271c:	e0bfff15 	stw	r2,-4(fp)
 1012720:	00000306 	br	1012730 <alt_hostfs_fstat+0x204>
  }
  else
    return -error;
 1012724:	e0bfec17 	ldw	r2,-80(fp)
 1012728:	0085c83a 	sub	r2,zero,r2
 101272c:	e0bfff15 	stw	r2,-4(fp)
 1012730:	e0bfff17 	ldw	r2,-4(fp)
}
 1012734:	e037883a 	mov	sp,fp
 1012738:	df000017 	ldw	fp,0(sp)
 101273c:	dec00104 	addi	sp,sp,4
 1012740:	f800283a 	ret

01012744 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 1012744:	deffff04 	addi	sp,sp,-4
 1012748:	df000015 	stw	fp,0(sp)
 101274c:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 1012750:	e037883a 	mov	sp,fp
 1012754:	df000017 	ldw	fp,0(sp)
 1012758:	dec00104 	addi	sp,sp,4
 101275c:	f800283a 	ret

01012760 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 1012760:	defff904 	addi	sp,sp,-28
 1012764:	dfc00615 	stw	ra,24(sp)
 1012768:	df000515 	stw	fp,20(sp)
 101276c:	df000504 	addi	fp,sp,20
 1012770:	e13ffd15 	stw	r4,-12(fp)
 1012774:	e17ffe15 	stw	r5,-8(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 1012778:	e0bffd17 	ldw	r2,-12(fp)
 101277c:	1005003a 	cmpeq	r2,r2,zero
 1012780:	1000041e 	bne	r2,zero,1012794 <alt_dev_llist_insert+0x34>
 1012784:	e0bffd17 	ldw	r2,-12(fp)
 1012788:	10800217 	ldw	r2,8(r2)
 101278c:	1004c03a 	cmpne	r2,r2,zero
 1012790:	1000071e 	bne	r2,zero,10127b0 <alt_dev_llist_insert+0x50>
  {
    ALT_ERRNO = EINVAL;
 1012794:	10128140 	call	1012814 <alt_get_errno>
 1012798:	1007883a 	mov	r3,r2
 101279c:	00800584 	movi	r2,22
 10127a0:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 10127a4:	00bffa84 	movi	r2,-22
 10127a8:	e0bfff15 	stw	r2,-4(fp)
 10127ac:	00001306 	br	10127fc <alt_dev_llist_insert+0x9c>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 10127b0:	e0fffd17 	ldw	r3,-12(fp)
 10127b4:	e0bffe17 	ldw	r2,-8(fp)
 10127b8:	e0bffb15 	stw	r2,-20(fp)
 10127bc:	e0fffc15 	stw	r3,-16(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 10127c0:	e0fffc17 	ldw	r3,-16(fp)
 10127c4:	e0bffb17 	ldw	r2,-20(fp)
 10127c8:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
 10127cc:	e0bffb17 	ldw	r2,-20(fp)
 10127d0:	10c00017 	ldw	r3,0(r2)
 10127d4:	e0bffc17 	ldw	r2,-16(fp)
 10127d8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 10127dc:	e0bffb17 	ldw	r2,-20(fp)
 10127e0:	10c00017 	ldw	r3,0(r2)
 10127e4:	e0bffc17 	ldw	r2,-16(fp)
 10127e8:	18800115 	stw	r2,4(r3)
  list->next           = entry;
 10127ec:	e0fffb17 	ldw	r3,-20(fp)
 10127f0:	e0bffc17 	ldw	r2,-16(fp)
 10127f4:	18800015 	stw	r2,0(r3)

  return 0;  
 10127f8:	e03fff15 	stw	zero,-4(fp)
 10127fc:	e0bfff17 	ldw	r2,-4(fp)
}
 1012800:	e037883a 	mov	sp,fp
 1012804:	dfc00117 	ldw	ra,4(sp)
 1012808:	df000017 	ldw	fp,0(sp)
 101280c:	dec00204 	addi	sp,sp,8
 1012810:	f800283a 	ret

01012814 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 1012814:	defffd04 	addi	sp,sp,-12
 1012818:	dfc00215 	stw	ra,8(sp)
 101281c:	df000115 	stw	fp,4(sp)
 1012820:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 1012824:	00804074 	movhi	r2,257
 1012828:	10916104 	addi	r2,r2,17796
 101282c:	10800017 	ldw	r2,0(r2)
 1012830:	1005003a 	cmpeq	r2,r2,zero
 1012834:	1000061e 	bne	r2,zero,1012850 <alt_get_errno+0x3c>
 1012838:	00804074 	movhi	r2,257
 101283c:	10916104 	addi	r2,r2,17796
 1012840:	10800017 	ldw	r2,0(r2)
 1012844:	103ee83a 	callr	r2
 1012848:	e0bfff15 	stw	r2,-4(fp)
 101284c:	00000306 	br	101285c <alt_get_errno+0x48>
 1012850:	00804074 	movhi	r2,257
 1012854:	10942904 	addi	r2,r2,20644
 1012858:	e0bfff15 	stw	r2,-4(fp)
 101285c:	e0bfff17 	ldw	r2,-4(fp)
}
 1012860:	e037883a 	mov	sp,fp
 1012864:	dfc00117 	ldw	ra,4(sp)
 1012868:	df000017 	ldw	fp,0(sp)
 101286c:	dec00204 	addi	sp,sp,8
 1012870:	f800283a 	ret

01012874 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 1012874:	defff904 	addi	sp,sp,-28
 1012878:	dfc00615 	stw	ra,24(sp)
 101287c:	df000515 	stw	fp,20(sp)
 1012880:	df000504 	addi	fp,sp,20
 1012884:	e13ffd15 	stw	r4,-12(fp)
 1012888:	e17ffe15 	stw	r5,-8(fp)
  alt_dev* next = (alt_dev*) llist->next;
 101288c:	e0bffe17 	ldw	r2,-8(fp)
 1012890:	10800017 	ldw	r2,0(r2)
 1012894:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 1012898:	e13ffd17 	ldw	r4,-12(fp)
 101289c:	1003ac00 	call	1003ac0 <strlen>
 10128a0:	10800044 	addi	r2,r2,1
 10128a4:	e0bffb15 	stw	r2,-20(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 10128a8:	00000d06 	br	10128e0 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 10128ac:	e0bffc17 	ldw	r2,-16(fp)
 10128b0:	11000217 	ldw	r4,8(r2)
 10128b4:	e1bffb17 	ldw	r6,-20(fp)
 10128b8:	e17ffd17 	ldw	r5,-12(fp)
 10128bc:	10132280 	call	1013228 <memcmp>
 10128c0:	1004c03a 	cmpne	r2,r2,zero
 10128c4:	1000031e 	bne	r2,zero,10128d4 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 10128c8:	e0bffc17 	ldw	r2,-16(fp)
 10128cc:	e0bfff15 	stw	r2,-4(fp)
 10128d0:	00000706 	br	10128f0 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 10128d4:	e0bffc17 	ldw	r2,-16(fp)
 10128d8:	10800017 	ldw	r2,0(r2)
 10128dc:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 10128e0:	e0fffe17 	ldw	r3,-8(fp)
 10128e4:	e0bffc17 	ldw	r2,-16(fp)
 10128e8:	10fff01e 	bne	r2,r3,10128ac <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 10128ec:	e03fff15 	stw	zero,-4(fp)
 10128f0:	e0bfff17 	ldw	r2,-4(fp)
}
 10128f4:	e037883a 	mov	sp,fp
 10128f8:	dfc00117 	ldw	ra,4(sp)
 10128fc:	df000017 	ldw	fp,0(sp)
 1012900:	dec00204 	addi	sp,sp,8
 1012904:	f800283a 	ret

01012908 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 1012908:	defffa04 	addi	sp,sp,-24
 101290c:	dfc00515 	stw	ra,20(sp)
 1012910:	df000415 	stw	fp,16(sp)
 1012914:	df000404 	addi	fp,sp,16
 1012918:	e13ffe15 	stw	r4,-8(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 101291c:	00804074 	movhi	r2,257
 1012920:	10915c04 	addi	r2,r2,17776
 1012924:	10800017 	ldw	r2,0(r2)
 1012928:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 101292c:	00003306 	br	10129fc <alt_find_file+0xf4>
  {
    len = strlen(next->name);
 1012930:	e0bffd17 	ldw	r2,-12(fp)
 1012934:	11000217 	ldw	r4,8(r2)
 1012938:	1003ac00 	call	1003ac0 <strlen>
 101293c:	e0bffc15 	stw	r2,-16(fp)
    
    if (next->name[len-1] == '/')
 1012940:	e0bffd17 	ldw	r2,-12(fp)
 1012944:	10c00217 	ldw	r3,8(r2)
 1012948:	e0bffc17 	ldw	r2,-16(fp)
 101294c:	1885883a 	add	r2,r3,r2
 1012950:	10bfffc4 	addi	r2,r2,-1
 1012954:	10800003 	ldbu	r2,0(r2)
 1012958:	10803fcc 	andi	r2,r2,255
 101295c:	1080201c 	xori	r2,r2,128
 1012960:	10bfe004 	addi	r2,r2,-128
 1012964:	10800bd8 	cmpnei	r2,r2,47
 1012968:	1000031e 	bne	r2,zero,1012978 <alt_find_file+0x70>
    {
      len -= 1;
 101296c:	e0bffc17 	ldw	r2,-16(fp)
 1012970:	10bfffc4 	addi	r2,r2,-1
 1012974:	e0bffc15 	stw	r2,-16(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 1012978:	e0bffc17 	ldw	r2,-16(fp)
 101297c:	1007883a 	mov	r3,r2
 1012980:	e0bffe17 	ldw	r2,-8(fp)
 1012984:	1885883a 	add	r2,r3,r2
 1012988:	10800003 	ldbu	r2,0(r2)
 101298c:	10803fcc 	andi	r2,r2,255
 1012990:	1080201c 	xori	r2,r2,128
 1012994:	10bfe004 	addi	r2,r2,-128
 1012998:	10800be0 	cmpeqi	r2,r2,47
 101299c:	10000a1e 	bne	r2,zero,10129c8 <alt_find_file+0xc0>
 10129a0:	e0bffc17 	ldw	r2,-16(fp)
 10129a4:	1007883a 	mov	r3,r2
 10129a8:	e0bffe17 	ldw	r2,-8(fp)
 10129ac:	1885883a 	add	r2,r3,r2
 10129b0:	10800003 	ldbu	r2,0(r2)
 10129b4:	10803fcc 	andi	r2,r2,255
 10129b8:	1080201c 	xori	r2,r2,128
 10129bc:	10bfe004 	addi	r2,r2,-128
 10129c0:	1004c03a 	cmpne	r2,r2,zero
 10129c4:	10000a1e 	bne	r2,zero,10129f0 <alt_find_file+0xe8>
 10129c8:	e0bffd17 	ldw	r2,-12(fp)
 10129cc:	11000217 	ldw	r4,8(r2)
 10129d0:	e1bffc17 	ldw	r6,-16(fp)
 10129d4:	e17ffe17 	ldw	r5,-8(fp)
 10129d8:	10132280 	call	1013228 <memcmp>
 10129dc:	1004c03a 	cmpne	r2,r2,zero
 10129e0:	1000031e 	bne	r2,zero,10129f0 <alt_find_file+0xe8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 10129e4:	e0bffd17 	ldw	r2,-12(fp)
 10129e8:	e0bfff15 	stw	r2,-4(fp)
 10129ec:	00000806 	br	1012a10 <alt_find_file+0x108>
    }
    next = (alt_dev*) next->llist.next;
 10129f0:	e0bffd17 	ldw	r2,-12(fp)
 10129f4:	10800017 	ldw	r2,0(r2)
 10129f8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 10129fc:	00c04074 	movhi	r3,257
 1012a00:	18d15c04 	addi	r3,r3,17776
 1012a04:	e0bffd17 	ldw	r2,-12(fp)
 1012a08:	10ffc91e 	bne	r2,r3,1012930 <alt_find_file+0x28>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 1012a0c:	e03fff15 	stw	zero,-4(fp)
 1012a10:	e0bfff17 	ldw	r2,-4(fp)
}
 1012a14:	e037883a 	mov	sp,fp
 1012a18:	dfc00117 	ldw	ra,4(sp)
 1012a1c:	df000017 	ldw	fp,0(sp)
 1012a20:	dec00204 	addi	sp,sp,8
 1012a24:	f800283a 	ret

01012a28 <alt_fs_reg>:
 * A return value of zero indicates success. A negative return value indicates
 * failure. 
 */
 
int alt_fs_reg (alt_dev* dev)
{
 1012a28:	defffb04 	addi	sp,sp,-20
 1012a2c:	df000415 	stw	fp,16(sp)
 1012a30:	df000404 	addi	fp,sp,16
 1012a34:	e13ffe15 	stw	r4,-8(fp)
  /*
   * check that the device has a name.
   */

  if (!dev->name)
 1012a38:	e0bffe17 	ldw	r2,-8(fp)
 1012a3c:	10800217 	ldw	r2,8(r2)
 1012a40:	1004c03a 	cmpne	r2,r2,zero
 1012a44:	1000031e 	bne	r2,zero,1012a54 <alt_fs_reg+0x2c>
  {
    return -ENODEV;
 1012a48:	00bffb44 	movi	r2,-19
 1012a4c:	e0bfff15 	stw	r2,-4(fp)
 1012a50:	00001406 	br	1012aa4 <alt_fs_reg+0x7c>
  
  /*
   * register the file system.
   */

  alt_llist_insert(&alt_fs_list, &dev->llist);
 1012a54:	e0fffe17 	ldw	r3,-8(fp)
 1012a58:	00804074 	movhi	r2,257
 1012a5c:	10915c04 	addi	r2,r2,17776
 1012a60:	e0bffc15 	stw	r2,-16(fp)
 1012a64:	e0fffd15 	stw	r3,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 1012a68:	e0fffd17 	ldw	r3,-12(fp)
 1012a6c:	e0bffc17 	ldw	r2,-16(fp)
 1012a70:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
 1012a74:	e0bffc17 	ldw	r2,-16(fp)
 1012a78:	10c00017 	ldw	r3,0(r2)
 1012a7c:	e0bffd17 	ldw	r2,-12(fp)
 1012a80:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 1012a84:	e0bffc17 	ldw	r2,-16(fp)
 1012a88:	10c00017 	ldw	r3,0(r2)
 1012a8c:	e0bffd17 	ldw	r2,-12(fp)
 1012a90:	18800115 	stw	r2,4(r3)
  list->next           = entry;
 1012a94:	e0fffc17 	ldw	r3,-16(fp)
 1012a98:	e0bffd17 	ldw	r2,-12(fp)
 1012a9c:	18800015 	stw	r2,0(r3)

  return 0;
 1012aa0:	e03fff15 	stw	zero,-4(fp)
 1012aa4:	e0bfff17 	ldw	r2,-4(fp)
} 
 1012aa8:	e037883a 	mov	sp,fp
 1012aac:	df000017 	ldw	fp,0(sp)
 1012ab0:	dec00104 	addi	sp,sp,4
 1012ab4:	f800283a 	ret

01012ab8 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 1012ab8:	defffa04 	addi	sp,sp,-24
 1012abc:	dfc00515 	stw	ra,20(sp)
 1012ac0:	df000415 	stw	fp,16(sp)
 1012ac4:	dc000315 	stw	r16,12(sp)
 1012ac8:	df000304 	addi	fp,sp,12
 1012acc:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
 1012ad0:	00bffa04 	movi	r2,-24
 1012ad4:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 1012ad8:	e03ffe15 	stw	zero,-8(fp)
 1012adc:	00002006 	br	1012b60 <alt_get_fd+0xa8>
  {
    if (!alt_fd_list[i].dev)
 1012ae0:	e13ffe17 	ldw	r4,-8(fp)
 1012ae4:	04004074 	movhi	r16,257
 1012ae8:	8410e004 	addi	r16,r16,17280
 1012aec:	01400304 	movi	r5,12
 1012af0:	10010a40 	call	10010a4 <__mulsi3>
 1012af4:	1405883a 	add	r2,r2,r16
 1012af8:	10800017 	ldw	r2,0(r2)
 1012afc:	1004c03a 	cmpne	r2,r2,zero
 1012b00:	1000141e 	bne	r2,zero,1012b54 <alt_get_fd+0x9c>
    {
      alt_fd_list[i].dev = dev;
 1012b04:	e13ffe17 	ldw	r4,-8(fp)
 1012b08:	04004074 	movhi	r16,257
 1012b0c:	8410e004 	addi	r16,r16,17280
 1012b10:	01400304 	movi	r5,12
 1012b14:	10010a40 	call	10010a4 <__mulsi3>
 1012b18:	1407883a 	add	r3,r2,r16
 1012b1c:	e0bfff17 	ldw	r2,-4(fp)
 1012b20:	18800015 	stw	r2,0(r3)
      if (i > alt_max_fd)
 1012b24:	00804074 	movhi	r2,257
 1012b28:	10916004 	addi	r2,r2,17792
 1012b2c:	10c00017 	ldw	r3,0(r2)
 1012b30:	e0bffe17 	ldw	r2,-8(fp)
 1012b34:	1880040e 	bge	r3,r2,1012b48 <alt_get_fd+0x90>
      {
        alt_max_fd = i;
 1012b38:	00c04074 	movhi	r3,257
 1012b3c:	18d16004 	addi	r3,r3,17792
 1012b40:	e0bffe17 	ldw	r2,-8(fp)
 1012b44:	18800015 	stw	r2,0(r3)
      }
      rc = i;
 1012b48:	e0bffe17 	ldw	r2,-8(fp)
 1012b4c:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
 1012b50:	00000606 	br	1012b6c <alt_get_fd+0xb4>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 1012b54:	e0bffe17 	ldw	r2,-8(fp)
 1012b58:	10800044 	addi	r2,r2,1
 1012b5c:	e0bffe15 	stw	r2,-8(fp)
 1012b60:	e0bffe17 	ldw	r2,-8(fp)
 1012b64:	10800810 	cmplti	r2,r2,32
 1012b68:	103fdd1e 	bne	r2,zero,1012ae0 <alt_get_fd+0x28>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 1012b6c:	e0bffd17 	ldw	r2,-12(fp)
}
 1012b70:	e037883a 	mov	sp,fp
 1012b74:	dfc00217 	ldw	ra,8(sp)
 1012b78:	df000117 	ldw	fp,4(sp)
 1012b7c:	dc000017 	ldw	r16,0(sp)
 1012b80:	dec00304 	addi	sp,sp,12
 1012b84:	f800283a 	ret

01012b88 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 1012b88:	defffe04 	addi	sp,sp,-8
 1012b8c:	dfc00115 	stw	ra,4(sp)
 1012b90:	df000015 	stw	fp,0(sp)
 1012b94:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
 1012b98:	0009883a 	mov	r4,zero
 1012b9c:	01420004 	movi	r5,2048
 1012ba0:	10131980 	call	1013198 <alt_icache_flush>
#endif
}
 1012ba4:	e037883a 	mov	sp,fp
 1012ba8:	dfc00117 	ldw	ra,4(sp)
 1012bac:	df000017 	ldw	fp,0(sp)
 1012bb0:	dec00204 	addi	sp,sp,8
 1012bb4:	f800283a 	ret

01012bb8 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 1012bb8:	defff904 	addi	sp,sp,-28
 1012bbc:	dfc00615 	stw	ra,24(sp)
 1012bc0:	df000515 	stw	fp,20(sp)
 1012bc4:	df000504 	addi	fp,sp,20
 1012bc8:	e13ffc15 	stw	r4,-16(fp)
 1012bcc:	e17ffd15 	stw	r5,-12(fp)
 1012bd0:	e1bffe15 	stw	r6,-8(fp)
 1012bd4:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 1012bd8:	e0800217 	ldw	r2,8(fp)
 1012bdc:	d8800015 	stw	r2,0(sp)
 1012be0:	e13ffc17 	ldw	r4,-16(fp)
 1012be4:	e17ffd17 	ldw	r5,-12(fp)
 1012be8:	e1bffe17 	ldw	r6,-8(fp)
 1012bec:	e1ffff17 	ldw	r7,-4(fp)
 1012bf0:	1012d8c0 	call	1012d8c <alt_iic_isr_register>
}  
 1012bf4:	e037883a 	mov	sp,fp
 1012bf8:	dfc00117 	ldw	ra,4(sp)
 1012bfc:	df000017 	ldw	fp,0(sp)
 1012c00:	dec00204 	addi	sp,sp,8
 1012c04:	f800283a 	ret

01012c08 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 1012c08:	defff904 	addi	sp,sp,-28
 1012c0c:	df000615 	stw	fp,24(sp)
 1012c10:	df000604 	addi	fp,sp,24
 1012c14:	e13ffe15 	stw	r4,-8(fp)
 1012c18:	e17fff15 	stw	r5,-4(fp)
 1012c1c:	e0bfff17 	ldw	r2,-4(fp)
 1012c20:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 1012c24:	0005303a 	rdctl	r2,status
 1012c28:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 1012c2c:	e0fffb17 	ldw	r3,-20(fp)
 1012c30:	00bfff84 	movi	r2,-2
 1012c34:	1884703a 	and	r2,r3,r2
 1012c38:	1001703a 	wrctl	status,r2
  
  return context;
 1012c3c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 1012c40:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
 1012c44:	e0fffc17 	ldw	r3,-16(fp)
 1012c48:	00800044 	movi	r2,1
 1012c4c:	10c4983a 	sll	r2,r2,r3
 1012c50:	1007883a 	mov	r3,r2
 1012c54:	00804074 	movhi	r2,257
 1012c58:	10943504 	addi	r2,r2,20692
 1012c5c:	10800017 	ldw	r2,0(r2)
 1012c60:	1886b03a 	or	r3,r3,r2
 1012c64:	00804074 	movhi	r2,257
 1012c68:	10943504 	addi	r2,r2,20692
 1012c6c:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 1012c70:	00804074 	movhi	r2,257
 1012c74:	10943504 	addi	r2,r2,20692
 1012c78:	10800017 	ldw	r2,0(r2)
 1012c7c:	100170fa 	wrctl	ienable,r2
 1012c80:	e0bffd17 	ldw	r2,-12(fp)
 1012c84:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 1012c88:	e0bffa17 	ldw	r2,-24(fp)
 1012c8c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 1012c90:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
 1012c94:	e037883a 	mov	sp,fp
 1012c98:	df000017 	ldw	fp,0(sp)
 1012c9c:	dec00104 	addi	sp,sp,4
 1012ca0:	f800283a 	ret

01012ca4 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 1012ca4:	defff904 	addi	sp,sp,-28
 1012ca8:	df000615 	stw	fp,24(sp)
 1012cac:	df000604 	addi	fp,sp,24
 1012cb0:	e13ffe15 	stw	r4,-8(fp)
 1012cb4:	e17fff15 	stw	r5,-4(fp)
 1012cb8:	e0bfff17 	ldw	r2,-4(fp)
 1012cbc:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 1012cc0:	0005303a 	rdctl	r2,status
 1012cc4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 1012cc8:	e0fffb17 	ldw	r3,-20(fp)
 1012ccc:	00bfff84 	movi	r2,-2
 1012cd0:	1884703a 	and	r2,r3,r2
 1012cd4:	1001703a 	wrctl	status,r2
  
  return context;
 1012cd8:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 1012cdc:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active &= ~(1 << id);
 1012ce0:	e0fffc17 	ldw	r3,-16(fp)
 1012ce4:	00800044 	movi	r2,1
 1012ce8:	10c4983a 	sll	r2,r2,r3
 1012cec:	0084303a 	nor	r2,zero,r2
 1012cf0:	1007883a 	mov	r3,r2
 1012cf4:	00804074 	movhi	r2,257
 1012cf8:	10943504 	addi	r2,r2,20692
 1012cfc:	10800017 	ldw	r2,0(r2)
 1012d00:	1886703a 	and	r3,r3,r2
 1012d04:	00804074 	movhi	r2,257
 1012d08:	10943504 	addi	r2,r2,20692
 1012d0c:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 1012d10:	00804074 	movhi	r2,257
 1012d14:	10943504 	addi	r2,r2,20692
 1012d18:	10800017 	ldw	r2,0(r2)
 1012d1c:	100170fa 	wrctl	ienable,r2
 1012d20:	e0bffd17 	ldw	r2,-12(fp)
 1012d24:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 1012d28:	e0bffa17 	ldw	r2,-24(fp)
 1012d2c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 1012d30:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
 1012d34:	e037883a 	mov	sp,fp
 1012d38:	df000017 	ldw	fp,0(sp)
 1012d3c:	dec00104 	addi	sp,sp,4
 1012d40:	f800283a 	ret

01012d44 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 1012d44:	defffc04 	addi	sp,sp,-16
 1012d48:	df000315 	stw	fp,12(sp)
 1012d4c:	df000304 	addi	fp,sp,12
 1012d50:	e13ffe15 	stw	r4,-8(fp)
 1012d54:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 1012d58:	000530fa 	rdctl	r2,ienable
 1012d5c:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 1012d60:	e0ffff17 	ldw	r3,-4(fp)
 1012d64:	00800044 	movi	r2,1
 1012d68:	10c4983a 	sll	r2,r2,r3
 1012d6c:	1007883a 	mov	r3,r2
 1012d70:	e0bffd17 	ldw	r2,-12(fp)
 1012d74:	1884703a 	and	r2,r3,r2
 1012d78:	1004c03a 	cmpne	r2,r2,zero
}
 1012d7c:	e037883a 	mov	sp,fp
 1012d80:	df000017 	ldw	fp,0(sp)
 1012d84:	dec00104 	addi	sp,sp,4
 1012d88:	f800283a 	ret

01012d8c <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 1012d8c:	defff404 	addi	sp,sp,-48
 1012d90:	dfc00b15 	stw	ra,44(sp)
 1012d94:	df000a15 	stw	fp,40(sp)
 1012d98:	df000a04 	addi	fp,sp,40
 1012d9c:	e13ffb15 	stw	r4,-20(fp)
 1012da0:	e17ffc15 	stw	r5,-16(fp)
 1012da4:	e1bffd15 	stw	r6,-12(fp)
 1012da8:	e1fffe15 	stw	r7,-8(fp)
  int rc = -EINVAL;  
 1012dac:	00bffa84 	movi	r2,-22
 1012db0:	e0bffa15 	stw	r2,-24(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 1012db4:	e0bffc17 	ldw	r2,-16(fp)
 1012db8:	e0bff915 	stw	r2,-28(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 1012dbc:	e0bff917 	ldw	r2,-28(fp)
 1012dc0:	10800808 	cmpgei	r2,r2,32
 1012dc4:	1000291e 	bne	r2,zero,1012e6c <alt_iic_isr_register+0xe0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 1012dc8:	0005303a 	rdctl	r2,status
 1012dcc:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 1012dd0:	e0fff717 	ldw	r3,-36(fp)
 1012dd4:	00bfff84 	movi	r2,-2
 1012dd8:	1884703a 	and	r2,r3,r2
 1012ddc:	1001703a 	wrctl	status,r2
  
  return context;
 1012de0:	e0bff717 	ldw	r2,-36(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 1012de4:	e0bff815 	stw	r2,-32(fp)

    alt_irq[id].handler = isr;
 1012de8:	e0bff917 	ldw	r2,-28(fp)
 1012dec:	00c04074 	movhi	r3,257
 1012df0:	18d48204 	addi	r3,r3,21000
 1012df4:	100490fa 	slli	r2,r2,3
 1012df8:	10c7883a 	add	r3,r2,r3
 1012dfc:	e0bffd17 	ldw	r2,-12(fp)
 1012e00:	18800015 	stw	r2,0(r3)
    alt_irq[id].context = isr_context;
 1012e04:	e0bff917 	ldw	r2,-28(fp)
 1012e08:	00c04074 	movhi	r3,257
 1012e0c:	18d48204 	addi	r3,r3,21000
 1012e10:	100490fa 	slli	r2,r2,3
 1012e14:	10c5883a 	add	r2,r2,r3
 1012e18:	10c00104 	addi	r3,r2,4
 1012e1c:	e0bffe17 	ldw	r2,-8(fp)
 1012e20:	18800015 	stw	r2,0(r3)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 1012e24:	e0bffd17 	ldw	r2,-12(fp)
 1012e28:	1005003a 	cmpeq	r2,r2,zero
 1012e2c:	1000051e 	bne	r2,zero,1012e44 <alt_iic_isr_register+0xb8>
 1012e30:	e17ff917 	ldw	r5,-28(fp)
 1012e34:	e13ffb17 	ldw	r4,-20(fp)
 1012e38:	1012c080 	call	1012c08 <alt_ic_irq_enable>
 1012e3c:	e0bfff15 	stw	r2,-4(fp)
 1012e40:	00000406 	br	1012e54 <alt_iic_isr_register+0xc8>
 1012e44:	e17ff917 	ldw	r5,-28(fp)
 1012e48:	e13ffb17 	ldw	r4,-20(fp)
 1012e4c:	1012ca40 	call	1012ca4 <alt_ic_irq_disable>
 1012e50:	e0bfff15 	stw	r2,-4(fp)
 1012e54:	e0bfff17 	ldw	r2,-4(fp)
 1012e58:	e0bffa15 	stw	r2,-24(fp)
 1012e5c:	e0bff817 	ldw	r2,-32(fp)
 1012e60:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 1012e64:	e0bff617 	ldw	r2,-40(fp)
 1012e68:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 1012e6c:	e0bffa17 	ldw	r2,-24(fp)
}
 1012e70:	e037883a 	mov	sp,fp
 1012e74:	dfc00117 	ldw	ra,4(sp)
 1012e78:	df000017 	ldw	fp,0(sp)
 1012e7c:	dec00204 	addi	sp,sp,8
 1012e80:	f800283a 	ret

01012e84 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 1012e84:	defff804 	addi	sp,sp,-32
 1012e88:	dfc00715 	stw	ra,28(sp)
 1012e8c:	df000615 	stw	fp,24(sp)
 1012e90:	dc000515 	stw	r16,20(sp)
 1012e94:	df000504 	addi	fp,sp,20
 1012e98:	e13ffc15 	stw	r4,-16(fp)
 1012e9c:	e17ffd15 	stw	r5,-12(fp)
 1012ea0:	e1bffe15 	stw	r6,-8(fp)
 1012ea4:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
 1012ea8:	e13ffd17 	ldw	r4,-12(fp)
 1012eac:	e17ffe17 	ldw	r5,-8(fp)
 1012eb0:	e1bfff17 	ldw	r6,-4(fp)
 1012eb4:	10114d40 	call	10114d4 <open>
 1012eb8:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
 1012ebc:	e0bffb17 	ldw	r2,-20(fp)
 1012ec0:	1004803a 	cmplt	r2,r2,zero
 1012ec4:	10001f1e 	bne	r2,zero,1012f44 <alt_open_fd+0xc0>
  {
    fd->dev      = alt_fd_list[old].dev;
 1012ec8:	e13ffb17 	ldw	r4,-20(fp)
 1012ecc:	04004074 	movhi	r16,257
 1012ed0:	8410e004 	addi	r16,r16,17280
 1012ed4:	01400304 	movi	r5,12
 1012ed8:	10010a40 	call	10010a4 <__mulsi3>
 1012edc:	1405883a 	add	r2,r2,r16
 1012ee0:	10c00017 	ldw	r3,0(r2)
 1012ee4:	e0bffc17 	ldw	r2,-16(fp)
 1012ee8:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 1012eec:	e13ffb17 	ldw	r4,-20(fp)
 1012ef0:	04004074 	movhi	r16,257
 1012ef4:	8410e004 	addi	r16,r16,17280
 1012ef8:	01400304 	movi	r5,12
 1012efc:	10010a40 	call	10010a4 <__mulsi3>
 1012f00:	1405883a 	add	r2,r2,r16
 1012f04:	10800104 	addi	r2,r2,4
 1012f08:	10c00017 	ldw	r3,0(r2)
 1012f0c:	e0bffc17 	ldw	r2,-16(fp)
 1012f10:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 1012f14:	e13ffb17 	ldw	r4,-20(fp)
 1012f18:	04004074 	movhi	r16,257
 1012f1c:	8410e004 	addi	r16,r16,17280
 1012f20:	01400304 	movi	r5,12
 1012f24:	10010a40 	call	10010a4 <__mulsi3>
 1012f28:	1405883a 	add	r2,r2,r16
 1012f2c:	10800204 	addi	r2,r2,8
 1012f30:	10c00017 	ldw	r3,0(r2)
 1012f34:	e0bffc17 	ldw	r2,-16(fp)
 1012f38:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 1012f3c:	e13ffb17 	ldw	r4,-20(fp)
 1012f40:	10118440 	call	1011844 <alt_release_fd>
  }
} 
 1012f44:	e037883a 	mov	sp,fp
 1012f48:	dfc00217 	ldw	ra,8(sp)
 1012f4c:	df000117 	ldw	fp,4(sp)
 1012f50:	dc000017 	ldw	r16,0(sp)
 1012f54:	dec00304 	addi	sp,sp,12
 1012f58:	f800283a 	ret

01012f5c <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 1012f5c:	defffb04 	addi	sp,sp,-20
 1012f60:	dfc00415 	stw	ra,16(sp)
 1012f64:	df000315 	stw	fp,12(sp)
 1012f68:	df000304 	addi	fp,sp,12
 1012f6c:	e13ffd15 	stw	r4,-12(fp)
 1012f70:	e17ffe15 	stw	r5,-8(fp)
 1012f74:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 1012f78:	01004074 	movhi	r4,257
 1012f7c:	2110e304 	addi	r4,r4,17292
 1012f80:	e17ffd17 	ldw	r5,-12(fp)
 1012f84:	01800044 	movi	r6,1
 1012f88:	01c07fc4 	movi	r7,511
 1012f8c:	1012e840 	call	1012e84 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 1012f90:	01004074 	movhi	r4,257
 1012f94:	2110e004 	addi	r4,r4,17280
 1012f98:	e17ffe17 	ldw	r5,-8(fp)
 1012f9c:	000d883a 	mov	r6,zero
 1012fa0:	01c07fc4 	movi	r7,511
 1012fa4:	1012e840 	call	1012e84 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 1012fa8:	01004074 	movhi	r4,257
 1012fac:	2110e604 	addi	r4,r4,17304
 1012fb0:	e17fff17 	ldw	r5,-4(fp)
 1012fb4:	01800044 	movi	r6,1
 1012fb8:	01c07fc4 	movi	r7,511
 1012fbc:	1012e840 	call	1012e84 <alt_open_fd>
}  
 1012fc0:	e037883a 	mov	sp,fp
 1012fc4:	dfc00117 	ldw	ra,4(sp)
 1012fc8:	df000017 	ldw	fp,0(sp)
 1012fcc:	dec00204 	addi	sp,sp,8
 1012fd0:	f800283a 	ret

01012fd4 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 1012fd4:	defffa04 	addi	sp,sp,-24
 1012fd8:	df000515 	stw	fp,20(sp)
 1012fdc:	df000504 	addi	fp,sp,20
 1012fe0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 1012fe4:	0005303a 	rdctl	r2,status
 1012fe8:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 1012fec:	e0fffd17 	ldw	r3,-12(fp)
 1012ff0:	00bfff84 	movi	r2,-2
 1012ff4:	1884703a 	and	r2,r3,r2
 1012ff8:	1001703a 	wrctl	status,r2
  
  return context;
 1012ffc:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 1013000:	e0bffe15 	stw	r2,-8(fp)
  alt_llist_remove (&alarm->llist);
 1013004:	e0bfff17 	ldw	r2,-4(fp)
 1013008:	e0bffc15 	stw	r2,-16(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 101300c:	e0bffc17 	ldw	r2,-16(fp)
 1013010:	10c00017 	ldw	r3,0(r2)
 1013014:	e0bffc17 	ldw	r2,-16(fp)
 1013018:	10800117 	ldw	r2,4(r2)
 101301c:	18800115 	stw	r2,4(r3)
  entry->previous->next = entry->next;
 1013020:	e0bffc17 	ldw	r2,-16(fp)
 1013024:	10c00117 	ldw	r3,4(r2)
 1013028:	e0bffc17 	ldw	r2,-16(fp)
 101302c:	10800017 	ldw	r2,0(r2)
 1013030:	18800015 	stw	r2,0(r3)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 1013034:	e0fffc17 	ldw	r3,-16(fp)
 1013038:	e0bffc17 	ldw	r2,-16(fp)
 101303c:	18800115 	stw	r2,4(r3)
  entry->next     = entry;
 1013040:	e0fffc17 	ldw	r3,-16(fp)
 1013044:	e0bffc17 	ldw	r2,-16(fp)
 1013048:	18800015 	stw	r2,0(r3)
 101304c:	e0bffe17 	ldw	r2,-8(fp)
 1013050:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 1013054:	e0bffb17 	ldw	r2,-20(fp)
 1013058:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 101305c:	e037883a 	mov	sp,fp
 1013060:	df000017 	ldw	fp,0(sp)
 1013064:	dec00104 	addi	sp,sp,4
 1013068:	f800283a 	ret

0101306c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 101306c:	defffb04 	addi	sp,sp,-20
 1013070:	dfc00415 	stw	ra,16(sp)
 1013074:	df000315 	stw	fp,12(sp)
 1013078:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 101307c:	d0a02117 	ldw	r2,-32636(gp)
 1013080:	e0bffe15 	stw	r2,-8(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 1013084:	d0a2e217 	ldw	r2,-29816(gp)
 1013088:	10800044 	addi	r2,r2,1
 101308c:	d0a2e215 	stw	r2,-29816(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 1013090:	00003106 	br	1013158 <alt_tick+0xec>
  {
    next = (alt_alarm*) alarm->llist.next;
 1013094:	e0bffe17 	ldw	r2,-8(fp)
 1013098:	10800017 	ldw	r2,0(r2)
 101309c:	e0bfff15 	stw	r2,-4(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 10130a0:	e0bffe17 	ldw	r2,-8(fp)
 10130a4:	10800403 	ldbu	r2,16(r2)
 10130a8:	10803fcc 	andi	r2,r2,255
 10130ac:	1005003a 	cmpeq	r2,r2,zero
 10130b0:	1000051e 	bne	r2,zero,10130c8 <alt_tick+0x5c>
 10130b4:	d0a2e217 	ldw	r2,-29816(gp)
 10130b8:	1004c03a 	cmpne	r2,r2,zero
 10130bc:	1000021e 	bne	r2,zero,10130c8 <alt_tick+0x5c>
    {
      alarm->rollover = 0;
 10130c0:	e0bffe17 	ldw	r2,-8(fp)
 10130c4:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 10130c8:	e0bffe17 	ldw	r2,-8(fp)
 10130cc:	10c00217 	ldw	r3,8(r2)
 10130d0:	d0a2e217 	ldw	r2,-29816(gp)
 10130d4:	10c01e36 	bltu	r2,r3,1013150 <alt_tick+0xe4>
 10130d8:	e0bffe17 	ldw	r2,-8(fp)
 10130dc:	10800403 	ldbu	r2,16(r2)
 10130e0:	10803fcc 	andi	r2,r2,255
 10130e4:	1004c03a 	cmpne	r2,r2,zero
 10130e8:	1000191e 	bne	r2,zero,1013150 <alt_tick+0xe4>
    {
      next_callback = alarm->callback (alarm->context);
 10130ec:	e0bffe17 	ldw	r2,-8(fp)
 10130f0:	10c00317 	ldw	r3,12(r2)
 10130f4:	e0bffe17 	ldw	r2,-8(fp)
 10130f8:	11000517 	ldw	r4,20(r2)
 10130fc:	183ee83a 	callr	r3
 1013100:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 1013104:	e0bffd17 	ldw	r2,-12(fp)
 1013108:	1004c03a 	cmpne	r2,r2,zero
 101310c:	1000031e 	bne	r2,zero,101311c <alt_tick+0xb0>
      {
        alt_alarm_stop (alarm);
 1013110:	e13ffe17 	ldw	r4,-8(fp)
 1013114:	1012fd40 	call	1012fd4 <alt_alarm_stop>
 1013118:	00000d06 	br	1013150 <alt_tick+0xe4>
      }
      else
      {
        alarm->time += next_callback;
 101311c:	e0bffe17 	ldw	r2,-8(fp)
 1013120:	10c00217 	ldw	r3,8(r2)
 1013124:	e0bffd17 	ldw	r2,-12(fp)
 1013128:	1887883a 	add	r3,r3,r2
 101312c:	e0bffe17 	ldw	r2,-8(fp)
 1013130:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 1013134:	e0bffe17 	ldw	r2,-8(fp)
 1013138:	10c00217 	ldw	r3,8(r2)
 101313c:	d0a2e217 	ldw	r2,-29816(gp)
 1013140:	1880032e 	bgeu	r3,r2,1013150 <alt_tick+0xe4>
        {
          alarm->rollover = 1;
 1013144:	e0fffe17 	ldw	r3,-8(fp)
 1013148:	00800044 	movi	r2,1
 101314c:	18800405 	stb	r2,16(r3)
        }
      }
    }
    alarm = next;
 1013150:	e0bfff17 	ldw	r2,-4(fp)
 1013154:	e0bffe15 	stw	r2,-8(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 1013158:	d0e02104 	addi	r3,gp,-32636
 101315c:	e0bffe17 	ldw	r2,-8(fp)
 1013160:	10ffcc1e 	bne	r2,r3,1013094 <alt_tick+0x28>
  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
}
 1013164:	e037883a 	mov	sp,fp
 1013168:	dfc00117 	ldw	ra,4(sp)
 101316c:	df000017 	ldw	fp,0(sp)
 1013170:	dec00204 	addi	sp,sp,8
 1013174:	f800283a 	ret

01013178 <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
 1013178:	deffff04 	addi	sp,sp,-4
 101317c:	df000015 	stw	fp,0(sp)
 1013180:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 1013184:	000170fa 	wrctl	ienable,zero
}
 1013188:	e037883a 	mov	sp,fp
 101318c:	df000017 	ldw	fp,0(sp)
 1013190:	dec00104 	addi	sp,sp,4
 1013194:	f800283a 	ret

01013198 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
 1013198:	defffb04 	addi	sp,sp,-20
 101319c:	df000415 	stw	fp,16(sp)
 10131a0:	df000404 	addi	fp,sp,16
 10131a4:	e13ffe15 	stw	r4,-8(fp)
 10131a8:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
 10131ac:	e0bfff17 	ldw	r2,-4(fp)
 10131b0:	10820070 	cmpltui	r2,r2,2049
 10131b4:	1000021e 	bne	r2,zero,10131c0 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
 10131b8:	00820004 	movi	r2,2048
 10131bc:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
 10131c0:	e0fffe17 	ldw	r3,-8(fp)
 10131c4:	e0bfff17 	ldw	r2,-4(fp)
 10131c8:	1885883a 	add	r2,r3,r2
 10131cc:	e0bffc15 	stw	r2,-16(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 10131d0:	e0bffe17 	ldw	r2,-8(fp)
 10131d4:	e0bffd15 	stw	r2,-12(fp)
 10131d8:	00000506 	br	10131f0 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
 10131dc:	e0bffd17 	ldw	r2,-12(fp)
 10131e0:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 10131e4:	e0bffd17 	ldw	r2,-12(fp)
 10131e8:	10800804 	addi	r2,r2,32
 10131ec:	e0bffd15 	stw	r2,-12(fp)
 10131f0:	e0fffd17 	ldw	r3,-12(fp)
 10131f4:	e0bffc17 	ldw	r2,-16(fp)
 10131f8:	18bff836 	bltu	r3,r2,10131dc <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
 10131fc:	e0bffe17 	ldw	r2,-8(fp)
 1013200:	108007cc 	andi	r2,r2,31
 1013204:	1005003a 	cmpeq	r2,r2,zero
 1013208:	1000021e 	bne	r2,zero,1013214 <alt_icache_flush+0x7c>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
 101320c:	e0bffd17 	ldw	r2,-12(fp)
 1013210:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
 1013214:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
 1013218:	e037883a 	mov	sp,fp
 101321c:	df000017 	ldw	fp,0(sp)
 1013220:	dec00104 	addi	sp,sp,4
 1013224:	f800283a 	ret

01013228 <memcmp>:
 1013228:	00c000c4 	movi	r3,3
 101322c:	1980032e 	bgeu	r3,r6,101323c <memcmp+0x14>
 1013230:	2144b03a 	or	r2,r4,r5
 1013234:	10c4703a 	and	r2,r2,r3
 1013238:	10000f26 	beq	r2,zero,1013278 <memcmp+0x50>
 101323c:	31ffffc4 	addi	r7,r6,-1
 1013240:	3000061e 	bne	r6,zero,101325c <memcmp+0x34>
 1013244:	00000a06 	br	1013270 <memcmp+0x48>
 1013248:	39ffffc4 	addi	r7,r7,-1
 101324c:	00bfffc4 	movi	r2,-1
 1013250:	21000044 	addi	r4,r4,1
 1013254:	29400044 	addi	r5,r5,1
 1013258:	38800526 	beq	r7,r2,1013270 <memcmp+0x48>
 101325c:	20c00003 	ldbu	r3,0(r4)
 1013260:	28800003 	ldbu	r2,0(r5)
 1013264:	18bff826 	beq	r3,r2,1013248 <memcmp+0x20>
 1013268:	1885c83a 	sub	r2,r3,r2
 101326c:	f800283a 	ret
 1013270:	0005883a 	mov	r2,zero
 1013274:	f800283a 	ret
 1013278:	180f883a 	mov	r7,r3
 101327c:	20c00017 	ldw	r3,0(r4)
 1013280:	28800017 	ldw	r2,0(r5)
 1013284:	18bfed1e 	bne	r3,r2,101323c <memcmp+0x14>
 1013288:	31bfff04 	addi	r6,r6,-4
 101328c:	21000104 	addi	r4,r4,4
 1013290:	29400104 	addi	r5,r5,4
 1013294:	39bff936 	bltu	r7,r6,101327c <memcmp+0x54>
 1013298:	003fe806 	br	101323c <memcmp+0x14>
 101329c:	010074a0 	cmpeqi	r4,zero,466
